<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.iostock.order.dstmn.service.impl.DstmnMapper">
    <!-- 거래명세표 - 매장요청 미확정건, 출고자료 미생성건 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_PO_HQ_STORE_ORDER, TB_PO_HQ_STORE_DISTRIBUTE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 매장요청 미확정건, 출고자료 미생성건을 조회한다.
    -->
    <select id="getReqNoConfirmCnt" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getReqNoConfirmCnt */
        <![CDATA[
        SELECT	tphso.REQ_NO_CONFIRM_CNT, tphsd.OUTSTOCK_NO_CREATE_CNT
        FROM	(	SELECT  COUNT(*) AS REQ_NO_CONFIRM_CNT
                    FROM    TB_MS_STORE tms
                    ,       TB_PO_HQ_STORE_ORDER tphso
                    WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     tphso.STORE_CD      =   tms.STORE_CD
                    AND     REQ_DATE    BETWEEN #{startDate} AND #{endDate}
                    AND     PROC_FG     IN      ('00','10')
                ) tphso
        ,		(	SELECT  COUNT(*) AS OUTSTOCK_NO_CREATE_CNT
                    FROM    (   SELECT  tphso.STORE_CD
                                FROM    TB_PO_HQ_STORE_DISTRIBUTE tphso
                                WHERE   tphso.HQ_OFFICE_CD	=       #{hqOfficeCd}
                                AND     tphso.REQ_DATE      BETWEEN #{startDate} AND #{endDate}
                                AND     tphso.SLIP_FG       =       #{slipFg}
                                AND     tphso.PROC_FG       IN      ('00','10','20')
                                GROUP
                                BY      tphso.STORE_CD
                            )
                ) tphsd
        ]]>
    </select>

    <!-- 거래명세표 - 거래명세표 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_MS_EMPLOYEE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 거래명세표 리스트를 조회한다.
    -->
    <select id="getDstmnList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getDstmnList */
        <![CDATA[
        SELECT   tphso.SLIP_NO, tphso.VENDR_CD, tphso.SLIP_FG, tphso.SLIP_KIND, tphso.PROC_FG, tphso.STORE_CD, tms.STORE_NM
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_AMT*tphso.SLIP_FG AS ORDER_AMT
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_VAT*tphso.SLIP_FG AS ORDER_VAT
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_TOT*tphso.SLIP_FG AS ORDER_TOT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_AMT  *tphso.SLIP_FG AS MGR_AMT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_VAT  *tphso.SLIP_FG AS MGR_VAT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_TOT  *tphso.SLIP_FG AS MGR_TOT
        ,        (CASE WHEN tphso.PROC_FG <  '20' THEN tphso.OUT_DATE                  ELSE NULL END) AS REQ_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_DATE                  ELSE NULL END) AS OUT_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_TOT_QTY*tphso.SLIP_FG ELSE NULL END) AS OUT_TOT_QTY
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_AMT*tphso.SLIP_FG     ELSE NULL END) AS OUT_AMT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_VAT*tphso.SLIP_FG     ELSE NULL END) AS OUT_VAT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_TOT*tphso.SLIP_FG     ELSE NULL END) AS OUT_TOT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_DATE                   ELSE NULL END) AS IN_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_TOT_QTY *tphso.SLIP_FG ELSE NULL END) AS IN_TOT_QTY
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_AMT *tphso.SLIP_FG     ELSE NULL END) AS IN_AMT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_VAT *tphso.SLIP_FG     ELSE NULL END) AS IN_VAT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_TOT *tphso.SLIP_FG     ELSE NULL END) AS IN_TOT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_DT                    ELSE NULL END) AS OUT_DT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN userInfo.EMP_NM                 ELSE NULL END) AS OUT_NM
        ,        tphso.REMARK, tphso.HQ_REMARK, tphso.DLVR_CD
        FROM     TB_PO_HQ_STORE_OUTSTOCK tphso
        ,        TB_MS_STORE tms
        ,        (  SELECT  tme.USER_ID, tme.EMP_NM
                    FROM    TB_MS_STORE tms
                    ,       TB_MS_EMPLOYEE tme
                    WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     tme.STORE_CD        =   tms.STORE_CD
                    UNION
                    SELECT  the.USER_ID, the.EMP_NM
                    FROM    TB_HQ_EMPLOYEE the
                    WHERE   the.HQ_OFFICE_CD    =   #{hqOfficeCd}
                 ) userInfo
        WHERE    tphso.HQ_OFFICE_CD     =       #{hqOfficeCd}
        AND      tphso.OUT_DATE         BETWEEN #{startDate} AND #{endDate}
        AND      tms.STORE_CD           =   tphso.STORE_CD
        AND      userInfo.USER_ID   (+) =   tphso.MOD_ID
        ]]>
        <if test='slipFg != null and slipFg != ""'>
            AND tphso.SLIP_FG = #{slipFg}
        </if>
        <if test='slipKind != null and slipKind != ""'>
            AND tphso.SLIP_KIND = #{slipKind}
        </if>
        <if test='arrProcFg != null and arrProcFg != ""'>
            AND tphso.PROC_FG IN
            <foreach collection="arrProcFg" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test='vendrCd != null and vendrCd != ""'>
            AND tphso.VENDR_CD = #{vendrCd}
        </if>
        <if test='dlvrCd != null and dlvrCd != ""'>
            AND tphso.DLVR_CD = #{dlvrCd}
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD = #{storeCd}
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        ORDER BY tphso.SLIP_NO
    </select>

    <!-- 거래명세표 - 전표상세 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_CM_NMCODE, TB_PO_HQ_DELIVERY_CHARGER
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 전표상세 내역을 조회한다.
    -->
    <select id="getSlipNoInfo" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getSlipNoInfo */
        <![CDATA[
        SELECT  tphso.*
        ,       tms.STORE_NM
        ,       tcn.NMCODE_NM AS SLIP_KIND_NM
        ,       tphdc.DLVR_NM
        FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
        ,       TB_MS_STORE tms
        ,       TB_CM_NMCODE tcn
        ,       TB_PO_HQ_DELIVERY_CHARGER tphdc
        WHERE   tphso.HQ_OFFICE_CD      =   #{hqOfficeCd}
        AND     tphso.SLIP_NO           =   #{slipNo}
        AND     tms.STORE_CD            =   tphso.STORE_CD
        AND     tcn.NMCODE_GRP_CD   (+) =   '114'
        AND     tcn.NMCODE_CD       (+) =   tphso.SLIP_KIND
        AND     tphdc.HQ_OFFICE_CD  (+) =   tphso.HQ_OFFICE_CD
        AND     tphdc.DLVR_CD       (+) =   tphso.DLVR_CD
        ]]>
    </select>

    <!-- 거래명세표 - 거래명세표 DTL 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_CM_NMCODE, TB_PO_HQ_DELIVERY_CHARGER
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 거래명세표 DTL 리스트를 조회한다.
    -->
    <select id="getDstmnDtlList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getDstmnDtlList */
        <![CDATA[
        SELECT   tphsod.SLIP_NO, tphsod.SLIP_FG, tphsod.PROD_CD, thp.PROD_NM, tphsod.SEQ
        ,        tphsod.PO_UNIT_FG, tphsod.PO_UNIT_QTY, thp.PO_UNIT_ALLOW_FG
        ,        DECODE(thp.VAT_FG, '1', 1, 0) AS VAT_FG01
        ,        tphsod.ORDER_SPLY_UPRC                                                               AS ORDER_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.ORDER_UNIT_QTY,0,NULL,tphsod.ORDER_UNIT_QTY*tphsod.SLIP_FG)) AS ORDER_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.ORDER_ETC_QTY ,0,NULL,tphsod.ORDER_ETC_QTY *tphsod.SLIP_FG)) AS ORDER_ETC_QTY
        ,        tphsod.ORDER_AMT *tphsod.SLIP_FG                                                     AS ORDER_AMT
        ,        tphsod.ORDER_VAT *tphsod.SLIP_FG                                                     AS ORDER_VAT
        ,        tphsod.ORDER_TOT *tphsod.SLIP_FG                                                     AS ORDER_TOT
        ,        tphsod.MGR_SPLY_UPRC                                                                 AS MGR_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.MGR_UNIT_QTY,0,NULL,tphsod.MGR_UNIT_QTY*tphsod.SLIP_FG))     AS MGR_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.MGR_ETC_QTY ,0,NULL,tphsod.MGR_ETC_QTY *tphsod.SLIP_FG))     AS MGR_ETC_QTY
        ,        tphsod.MGR_AMT *tphsod.SLIP_FG                                                       AS MGR_AMT
        ,        tphsod.MGR_VAT *tphsod.SLIP_FG                                                       AS MGR_VAT
        ,        tphsod.MGR_TOT *tphsod.SLIP_FG                                                       AS MGR_TOT
        ,        tphsod.OUT_SPLY_UPRC                                                                 AS OUT_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.OUT_UNIT_QTY,0,NULL,tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG))     AS OUT_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.OUT_ETC_QTY ,0,NULL,tphsod.OUT_ETC_QTY *tphsod.SLIP_FG))     AS OUT_ETC_QTY
        ,        TO_NUMBER(DECODE(tphsod.OUT_TOT_QTY ,0,NULL,tphsod.OUT_TOT_QTY *tphsod.SLIP_FG))     AS OUT_TOT_QTY
        ,        tphsod.OUT_AMT *tphsod.SLIP_FG                                                       AS OUT_AMT
        ,        tphsod.OUT_VAT *tphsod.SLIP_FG                                                       AS OUT_VAT
        ,        tphsod.OUT_TOT *tphsod.SLIP_FG                                                       AS OUT_TOT
        ,        tphsod.IN_SPLY_UPRC                                                                  AS IN_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.IN_UNIT_QTY ,0,NULL,tphsod.IN_UNIT_QTY*tphsod.SLIP_FG))      AS IN_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.IN_ETC_QTY  ,0,NULL,tphsod.IN_ETC_QTY *tphsod.SLIP_FG))      AS IN_ETC_QTY
        ,        tphsod.IN_AMT  *tphsod.SLIP_FG                                                       AS IN_AMT
        ,        tphsod.IN_VAT  *tphsod.SLIP_FG                                                       AS IN_VAT
        ,        tphsod.IN_TOT  *tphsod.SLIP_FG                                                       AS IN_TOT
        ,        tphsod.REMARK
        ,        the.ENVST_VAL AS ENVST0011
        ,        thpb.BARCD_CD
        ,        thp.ORGPLCE_CD
        ,        thn.NMCODE_NM AS PO_UNIT_FG_NM
        FROM     TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,        TB_HQ_PRODUCT thp
        ,        TB_HQ_PRODUCT_BARCD thpb
        ,        TB_HQ_ENVST the
        ,        TB_HQ_NMCODE thn
        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
        ]]>
        <if test='arrSlipNo != null and arrSlipNo != ""'>
            AND tphsod.SLIP_NO IN
            <foreach collection="arrSlipNo" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <![CDATA[
        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
        AND      thp.PROD_CD            =   tphsod.PROD_CD
        AND      thpb.HQ_OFFICE_CD  (+) =   tphsod.HQ_OFFICE_CD
        AND      thpb.PROD_CD       (+) =   tphsod.PROD_CD
        AND      the.HQ_OFFICE_CD       =   #{hqOfficeCd}
        AND      the.ENVST_CD           =   '0011'
        AND      thn.HQ_OFFICE_CD    (+)=   thp.HQ_OFFICE_CD
        AND      thn.NMCODE_GRP_CD   (+)=   '097'
        AND      thn.NMCODE_CD       (+)=   thp.PO_UNIT_FG
        ORDER
        BY       tphsod.SLIP_NO, tphsod.PROD_CD, tphsod.SEQ
        ]]>
    </select>

    <!-- 거래명세표 - 출고확정시 자동입고 환경변수 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_PO_HQ_STORE_ORDER, TB_PO_HQ_STORE_DISTRIBUTE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정시 자동입고 환경변수를 조회한다.
    -->
    <select id="getEnv176" parameterType="dstmnVO" resultType="String">
        /* USE : DstmnMapper.getEnv176 */
        <![CDATA[
        SELECT	ENVST_VAL
        FROM    TB_HQ_ENVST
        WHERE   ENVST_CD  = '176'
        ]]>
    </select>

    <!-- 거래명세표 - 세금계산서 공급자 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 세금계산서 공급자 정보를 조회한다.
    -->
    <select id="getSupplierInfo" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getSupplierInfo */
        <![CDATA[
        SELECT  tho.HQ_OFFICE_NM AS SUPPLIER_NM
        ,       tho.OWNER_NM AS SUPPLIER_OWNER_NM
        ,       tho.BIZ_NO AS SUPPLIER_BIZ_NO
        ,       tho.ADDR || ' ' || tho.ADDR_DTL AS SUPPLIER_ADDR
        FROM    TB_HQ_OFFICE tho
        WHERE   tho.HQ_OFFICE_CD    =   #{hqOfficeCd}
        ]]>
    </select>


    <!-- 거래명세표 - 세금계산서 전표 내역 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_PO_HQ_STORE_OUTSTOCK_DTL, TB_MS_PRODUCT, TB_MS_STORE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 세금계산서 전표 내역을 조회한다.
    -->
    <select id="getTaxReportInfoList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getTaxReportInfoList */
        <![CDATA[
        SELECT  tphso.SLIP_NO, tphso.STORE_CD, tphso.OUT_DATE
        ,       tms.STORE_NM AS SUPPLIED_NM
        ,       tms.OWNER_NM AS SUPPLIED_OWNER_NM
        ,       tms.BIZ_NO AS SUPPLIED_BIZ_NO
        ,       tms.ADDR || tms.ADDR_DTL AS SUPPLIED_ADDR
        ,       NVL(SUM(DECODE(tmp.VAT_FG, '0', tphsod.OUT_AMT)),0) AS BASE_AMT0
        ,       NVL(SUM(DECODE(tmp.VAT_FG, '0', tphsod.OUT_VAT)),0) AS BASE_VAT0
        ,       NVL(SUM(DECODE(tmp.VAT_FG, '0', tphsod.OUT_TOT)),0) AS BASE_TOT0
        ,       NVL(SUM(DECODE(tmp.VAT_FG, '1', tphsod.OUT_AMT)),0) AS BASE_AMT1
        ,       NVL(SUM(DECODE(tmp.VAT_FG, '1', tphsod.OUT_VAT)),0) AS BASE_VAT1
        ,       NVL(SUM(DECODE(tmp.VAT_FG, '1', tphsod.OUT_TOT)),0) AS BASE_TOT1
        FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
        ,       TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,       TB_MS_PRODUCT tmp
        ,       TB_MS_STORE tms
        WHERE   tphso.HQ_OFFICE_CD  =   #{hqOfficeCd}
        ]]>
        <if test='arrSlipNo != null and arrSlipNo != ""'>
            AND tphso.SLIP_NO IN
            <foreach collection="arrSlipNo" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <![CDATA[
        AND     tphsod.HQ_OFFICE_CD =   tphso.HQ_OFFICE_CD
        AND     tphsod.SLIP_NO      =   tphso.SLIP_NO
        AND     tmp.STORE_CD        =   tphsod.STORE_CD
        AND     tmp.PROD_CD         =   tphsod.PROD_CD
        AND     tms.STORE_CD        =   tmp.STORE_CD
        GROUP
        BY      tphso.SLIP_NO, tphso.STORE_CD, tphso.OUT_DATE
        ,       tms.STORE_NM
        ,       tms.OWNER_NM
        ,       tms.BIZ_NO
        ,       tms.ADDR || tms.ADDR_DTL
        ORDER BY tphso.SLIP_NO
        ]]>
    </select>


    <!-- 거래명세표 - 거래명세표 전표 내역 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_PO_HQ_STORE_OUTSTOCK_DTL, TB_MS_PRODUCT, TB_MS_STORE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 거래명세표 전표 내역을 조회한다.
    -->
    <select id="getTransReportInfoList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getTransReportInfoList */
        <![CDATA[
        SELECT  tphso.SLIP_NO, tphso.STORE_CD, tphso.OUT_DATE
        ,       tms.STORE_NM AS SUPPLIED_NM
        ,       tms.OWNER_NM AS SUPPLIED_OWNER_NM
        ,       tms.BIZ_NO AS SUPPLIED_BIZ_NO
        ,       tms.ADDR || tms.ADDR_DTL AS SUPPLIED_ADDR
        ,       tphdc.DLVR_NM
        ,       tphso.REMARK
        ,       NVL(SUM(tphsod.OUT_AMT),0) AS TOT_AMT
        ,       NVL(SUM(tphsod.OUT_VAT),0) AS TOT_VAT
        ,       NVL(SUM(tphsod.OUT_TOT),0) AS TOT_TOT
        ,       NVL(SUM(tphsod.OUT_TOT_QTY),0) AS TOT_QTY
        FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
        ,       TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,       TB_MS_PRODUCT tmp
        ,       TB_MS_STORE tms
        ,       TB_PO_HQ_DELIVERY_CHARGER tphdc
        WHERE   tphso.HQ_OFFICE_CD  =   #{hqOfficeCd}
        ]]>
        <if test='arrSlipNo != null and arrSlipNo != ""'>
            AND tphso.SLIP_NO IN
            <foreach collection="arrSlipNo" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <![CDATA[
        AND     tphsod.HQ_OFFICE_CD     =   tphso.HQ_OFFICE_CD
        AND     tphsod.SLIP_NO          =   tphso.SLIP_NO
        AND     tmp.STORE_CD            =   tphsod.STORE_CD
        AND     tmp.PROD_CD             =   tphsod.PROD_CD
        AND     tms.STORE_CD            =   tmp.STORE_CD
        AND     tphdc.HQ_OFFICE_CD  (+) =   tphso.HQ_OFFICE_CD
        AND     tphdc.DLVR_CD       (+) =   tphso.DLVR_CD
        GROUP
        BY      tphso.SLIP_NO, tphso.STORE_CD, tphso.OUT_DATE
        ,       tms.STORE_NM
        ,       tms.OWNER_NM
        ,       tms.BIZ_NO
        ,       tms.ADDR || tms.ADDR_DTL
        ,       tphdc.DLVR_NM
        ,       tphso.REMARK
        ORDER BY tphso.SLIP_NO
        ]]>
    </select>


    <!-- 거래명세표 - 분배지시서(상품) 상품 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL, TB_HQ_PRODUCT, TB_HQ_NMCODE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 분배지시서(상품) 상품 리스트를 조회한다.
    -->
    <select id="getDstbProdReportList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getDstbProdReportList */
        <![CDATA[
        SELECT   tphsod.PROD_CD, thp.PROD_NM
        ,        thn.NMCODE_NM AS PO_UNIT_FG_NM
        ,        SUM(tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG) AS OUT_UNIT_QTY
        ,        SUM(tphsod.OUT_ETC_QTY *tphsod.SLIP_FG) AS OUT_ETC_QTY
        ,        MAX(tphsod.REMARK) AS REMARK
        FROM     TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,        TB_HQ_PRODUCT thp
        ,        TB_HQ_NMCODE thn
        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
        ]]>
        <if test='arrSlipNo != null and arrSlipNo != ""'>
            AND tphsod.SLIP_NO IN
            <foreach collection="arrSlipNo" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <![CDATA[
        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
        AND      thp.PROD_CD            =   tphsod.PROD_CD
        AND      thn.HQ_OFFICE_CD    (+)=   thp.HQ_OFFICE_CD
        AND      thn.NMCODE_GRP_CD   (+)=   '097'
        AND      thn.NMCODE_CD       (+)=   thp.PO_UNIT_FG
        GROUP
        BY       tphsod.PROD_CD, thp.PROD_NM
        ,        thn.NMCODE_NM
        ORDER
        BY       tphsod.PROD_CD
        ]]>
    </select>


    <!-- 거래명세표 - 분배지시서(상품-매장) 상품 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL, TB_HQ_PRODUCT, TB_HQ_NMCODE, TB_MS_STORE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 분배지시서(상품-매장) 상품 리스트를 조회한다.
    -->
    <select id="getDstbProdStoreReportList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getDstbProdStoreReportList */
        <![CDATA[
        SELECT   tphsod.PROD_CD, thp.PROD_NM
        ,        thn.NMCODE_NM AS PO_UNIT_FG_NM
        ,        tphsod.STORE_CD, tms.STORE_NM
        ,        SUM(tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG) AS OUT_UNIT_QTY
        ,        SUM(tphsod.OUT_ETC_QTY *tphsod.SLIP_FG) AS OUT_ETC_QTY
        ,        MAX(tphsod.REMARK) AS REMARK
        FROM     TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,        TB_HQ_PRODUCT thp
        ,        TB_HQ_NMCODE thn
        ,        TB_MS_STORE tms
        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
        ]]>
        <if test='arrSlipNo != null and arrSlipNo != ""'>
            AND tphsod.SLIP_NO IN
            <foreach collection="arrSlipNo" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <![CDATA[
        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
        AND      thp.PROD_CD            =   tphsod.PROD_CD
        AND      thn.HQ_OFFICE_CD    (+)=   thp.HQ_OFFICE_CD
        AND      thn.NMCODE_GRP_CD   (+)=   '097'
        AND      thn.NMCODE_CD       (+)=   thp.PO_UNIT_FG
        AND      tms.STORE_CD           =   tphsod.STORE_CD
        GROUP
        BY       tphsod.PROD_CD, thp.PROD_NM
        ,        thn.NMCODE_NM
        ,        tphsod.STORE_CD, tms.STORE_NM
        ORDER
        BY       tphsod.PROD_CD, tphsod.STORE_CD
        ]]>
    </select>


    <!-- 거래명세표 - 분배지시서(매장-상품) 상품 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL, TB_HQ_PRODUCT, TB_HQ_NMCODE, TB_MS_STORE
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 분배지시서(매장-상품) 상품 리스트를 조회한다.
    -->
    <select id="getDstbStoreProdReportList" parameterType="dstmnVO" resultType="DefaultMap">
        /* USE : DstmnMapper.getDstbProdStoreReportList */
        <![CDATA[
        SELECT   tphsod.STORE_CD, tms.STORE_NM
        ,        tphsod.PROD_CD, thp.PROD_NM
        ,        thn.NMCODE_NM AS PO_UNIT_FG_NM
        ,        SUM(tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG) AS OUT_UNIT_QTY
        ,        SUM(tphsod.OUT_ETC_QTY *tphsod.SLIP_FG) AS OUT_ETC_QTY
        ,        MAX(tphsod.REMARK) AS REMARK
        FROM     TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,        TB_HQ_PRODUCT thp
        ,        TB_HQ_NMCODE thn
        ,        TB_MS_STORE tms
        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
        ]]>
        <if test='arrSlipNo != null and arrSlipNo != ""'>
            AND tphsod.SLIP_NO IN
            <foreach collection="arrSlipNo" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <![CDATA[
        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
        AND      thp.PROD_CD            =   tphsod.PROD_CD
        AND      thn.HQ_OFFICE_CD    (+)=   thp.HQ_OFFICE_CD
        AND      thn.NMCODE_GRP_CD   (+)=   '097'
        AND      thn.NMCODE_CD       (+)=   thp.PO_UNIT_FG
        AND      tms.STORE_CD           =   tphsod.STORE_CD
        GROUP
        BY       tphsod.STORE_CD, tms.STORE_NM
        ,        tphsod.PROD_CD, thp.PROD_NM
        ,        thn.NMCODE_NM
        ORDER
        BY       tphsod.STORE_CD, tphsod.PROD_CD
        ]]>
    </select>


    <!-- 거래명세표 - 출고확정 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정시 DTL의 진행구분을 수정한다.
    -->
    <update id="updateOutstockDtlConfirm" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateOutstockConfirm */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     PROC_FG         = #{updateProcFg},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 거래명세표 - 출고확정 HD 수정-->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정시 HD의 진행구분을 수정한다.
    -->
    <update id="updateOutstockConfirm" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateOutstockConfirm */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     PROC_FG         = #{updateProcFg},
                OUT_DATE        = #{outDate},
                OUT_DT          = #{modDt},
                OUT_ID          = #{modId},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 거래명세표 - 출고확정 자동입고 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정시 자동입고 처리 DTL 수정한다.
    -->
    <update id="updateAutoInstockDtl" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateAutoInstockDtl */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     PROC_FG         = #{updateProcFg},
                IN_SPLY_UPRC    = OUT_SPLY_UPRC,
                IN_UNIT_QTY     = OUT_UNIT_QTY,
                IN_ETC_QTY      = OUT_ETC_QTY,
                IN_TOT_QTY      = OUT_TOT_QTY,
                IN_AMT          = OUT_AMT,
                IN_VAT          = OUT_VAT,
                IN_TOT          = OUT_TOT,
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 거래명세표 - 출고확정 자동입고 HD 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정시 자동입고 처리 HD 수정한다.
    -->
    <update id="updateAutoInstock" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateAutoInstock */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     PROC_FG         = #{updateProcFg},
                IN_DATE         = #{outDate},
                IN_DT           = #{outDt},
                IN_ID           = #{outId},
                IN_UNIT_QTY     = OUT_UNIT_QTY,
                IN_ETC_QTY      = OUT_ETC_QTY,
                IN_TOT_QTY      = OUT_TOT_QTY,
                IN_AMT          = OUT_AMT,
                IN_VAT          = OUT_VAT,
                IN_TOT          = OUT_TOT,
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 거래명세표 - 출고확정 상세 리스트 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정 상세 리스트 DTL을 수정한다.
    -->
    <update id="updateOutstockDtl" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateOutstockDtl */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     OUT_SPLY_UPRC   = #{outSplyUprc},
                OUT_UNIT_QTY    = #{outUnitQty},
                OUT_ETC_QTY     = #{outEtcQty},
                OUT_TOT_QTY     = #{outTotQty},
                OUT_AMT         = #{outAmt},
                OUT_VAT         = #{outVat},
                OUT_TOT         = #{outTot},
                REMARK          = #{remark},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     SEQ           = #{seq}
    </update>

    <!-- 거래명세표 - 출고확정 상세 리스트 HD 수정-->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정 상세 리스트 HD의 집계를 수정한다.
    -->
    <update id="updateOutstockHd" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateOutstockHd */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     (   OUT_UNIT_QTY, OUT_ETC_QTY, OUT_TOT_QTY, OUT_AMT, OUT_VAT, OUT_TOT)
            =   (   SELECT  SUM(OUT_UNIT_QTY), SUM(OUT_ETC_QTY), SUM(OUT_TOT_QTY), SUM(OUT_AMT), SUM(OUT_VAT), SUM(OUT_TOT)
                    FROM    TB_PO_HQ_STORE_OUTSTOCK_DTL
                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     SLIP_NO         =   #{slipNo}
                ),
                REMARK      = #{hdRemark},
                HQ_REMARK   = #{hqRemark},
                DLVR_CD     = #{dlvrCd},
                MOD_DT      = #{modDt},
                MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>

    <!-- 거래명세표 - 출고확정 이후 저장시 HD 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : dstmnVO
        COMMENTS : 거래명세표 - 출고확정 이후 저장시 HD의 비고, 본사비고, 배송기사를 수정한다.
    -->
    <update id="updateOutstockAfterHd" parameterType="dstmnVO">
        /* USE : DstmnMapper.updateOutstockAfterHd */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     REMARK      = #{hdRemark},
                HQ_REMARK   = #{hqRemark},
                DLVR_CD     = #{dlvrCd},
                MOD_DT      = #{modDt},
                MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>
</mapper>
