<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    DayOfWeekMapper.xml
    기간별매출 > 요일별탭
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2019.11.29     최초작성
-->
<mapper namespace="kr.co.solbipos.sale.day.dayOfWeek.service.impl.DayOfWeekMapper">

    <!-- 주간종합탭 - 주간종합조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_HDR_PAY, TB_SL_SALE_DTL
        COMMENTS : [매출]헤더 와 [매출]헤더_결제, [매출]상세
    -->
    <select id="getDayOfWeekTotalList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekTotalList */
        SELECT
        tsshpd.YOIL,
        tsshpd.STORE_CNT,
        tsshpd.TOT_SALE_AMT,
        tsshpd.TOT_DC_AMT,
        tsshpd.REAL_SALE_AMT,
        tsshpd.BILL_CNT,
        tsshpd.BILL_UPRC,
        tsshpd.GA_AMT,
        tsshpd.VAT_AMT,
        tsshpd.TOT_TIP_AMT,
        tsshpd.TOT_ETC_AMT,
        <foreach collection="arrPayCol" item="item" separator="+">
            NVL(tsshpd.PAY${item}, 0)
        </foreach> AS TOT_PAY_AMT,
        <foreach collection="arrPayCol" item="item" separator=",">
            NVL(tsshpd.PAY${item}, 0) AS PAY${item}
        </foreach> ,
        tsshpd.GEN_REAL_SALE_AMT,
        tsshpd.DLVR_REAL_SALE_AMT,
        tsshpd.PACK_REAL_SALE_AMT
        FROM
        (
            SELECT
            HQ_OFFICE_CD,
            YOIL,
            COUNT(DISTINCT STORE_CD) AS STORE_CNT,
            SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
            SUM(TOT_DC_AMT) AS TOT_DC_AMT,
            SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
            COUNT(BILL_NO) AS BILL_CNT,
            ROUND(SUM(REAL_SALE_AMT) / COUNT(BILL_NO)) AS BILL_UPRC,
            SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT,
            SUM(VAT_AMT) AS VAT_AMT,
            SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
            SUM(TOT_ETC_AMT) AS TOT_ETC_AMT,
            <foreach collection="arrPayCol" item="item" separator=",">
                SUM(PAY${item}) AS PAY${item}
            </foreach> ,
            SUM(GEN_REAL_SALE_AMT) AS GEN_REAL_SALE_AMT,
            SUM(DLVR_REAL_SALE_AMT) AS DLVR_REAL_SALE_AMT,
            SUM(PACK_REAL_SALE_AMT) AS PACK_REAL_SALE_AMT
            FROM
            (
                SELECT
                tssh.SALE_DATE,
                TO_CHAR(TO_DATE(tssh.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                tssh.HQ_OFFICE_CD,
                tssh.STORE_CD,
                tssh.TOT_SALE_AMT,
                tssh.TOT_DC_AMT,
                tssh.REAL_SALE_AMT,
                tssh.BILL_NO,
                tssh.VAT_AMT,
                tssh.TOT_TIP_AMT,
                tssh.TOT_ETC_AMT,
                tsshp.PAY_CD,
                tsshp.PAY_AMT,
                tssd.GEN_REAL_SALE_AMT,
                tssd.DLVR_REAL_SALE_AMT,
                tssd.PACK_REAL_SALE_AMT
                FROM TB_SL_SALE_HDR tssh,
                TB_SL_SALE_HDR_PAY tsshp,
                (
                    SELECT
                    HQ_OFFICE_CD,
                    HQ_BRAND_CD,
                    STORE_CD,
                    SALE_DATE,
                    POS_NO,
                    BILL_NO,
                    SUM(CASE WHEN DLVR_PACK_FG = '1' THEN REAL_SALE_AMT ELSE 0 END) AS GEN_REAL_SALE_AMT,
                    SUM(CASE WHEN DLVR_PACK_FG = '2' THEN REAL_SALE_AMT ELSE 0 END) AS DLVR_REAL_SALE_AMT,
                    SUM(CASE WHEN DLVR_PACK_FG = '3' THEN REAL_SALE_AMT ELSE 0 END) AS PACK_REAL_SALE_AMT
                    FROM TB_SL_SALE_DTL
                    GROUP BY HQ_OFFICE_CD, HQ_BRAND_CD, STORE_CD, SALE_DATE, POS_NO, BILL_NO
                ) tssd
                WHERE 1=1
                AND tssh.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test='storeCds != null and storeCds != ""'>
                    AND tssh.STORE_CD IN
                    <foreach collection="storeCdList" item="item" open="("  separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
                AND tssh.HQ_OFFICE_CD = tsshp.HQ_OFFICE_CD
                AND tssh.HQ_BRAND_CD = tsshp.HQ_BRAND_CD
                AND tssh.STORE_CD = tsshp.STORE_CD
                AND tssh.SALE_DATE = tsshp.SALE_DATE
                AND tssh.POS_NO = tsshp.POS_NO
                AND tssh.BILL_NO = tsshp.BILL_NO
                AND tssh.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD
                AND tssh.HQ_BRAND_CD = tssd.HQ_BRAND_CD
                AND tssh.STORE_CD = tssd.STORE_CD
                AND tssh.SALE_DATE = tssd.SALE_DATE
                AND tssh.POS_NO = tssd.POS_NO
                AND tssh.BILL_NO = tssd.BILL_NO
            )
            PIVOT
            (
                SUM(PAY_AMT)
                FOR PAY_CD
                IN (${pivotPayCol})
               /* IN ('01' AS PAY01,
                '02' AS PAY02,
                '03' AS PAY03,
                '04' AS PAY04,
                '05' AS PAY05,
                '06' AS PAY06,
                '07' AS PAY07,
                '08' AS PAY08,
                '09' AS PAY09,
                '10' AS PAY10,
                '11' AS PAY11,
                '12' AS PAY12,
                '13' AS PAY13,
                '14' AS PAY14,
                '15' AS PAY15,
                '16' AS PAY16,
                '17' AS PAY17,
                '18' AS PAY18)*/
            )
            GROUP BY HQ_OFFICE_CD, YOIL
        ) tsshpd
        WHERE 1=1
        ORDER BY tsshpd.YOIL
    </select>

    <!-- 할인구별별탭 - 할인구분별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR_DC
        COMMENTS : [매출]헤더_할인
    -->
    <select id="getDayOfWeekDcList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekDcList */
        SELECT
        YOIL,
        STORE_CNT,
        <foreach collection="arrDcCol" item="item" separator="+">
            NVL(DC${item}, 0)
        </foreach> AS TOT_DC_AMT,
        <foreach collection="arrDcCol" item="item" separator=",">
            NVL(DC${item}, 0) AS DC${item}
        </foreach>
        FROM
        (
            SELECT
            YOIL,
            COUNT(DISTINCT STORE_CD) AS STORE_CNT,
            <foreach collection="arrDcCol" item="item" separator=",">
                SUM(DC${item}) AS DC${item}
            </foreach>
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tsshd.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                tsshd.STORE_CD,
                tsshd.DC_CD,
                tsshd.DC_AMT
                FROM TB_SL_SALE_HDR_DC tsshd
                WHERE 1=1
                AND tsshd.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tsshd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test='storeCds != null and storeCds != ""'>
                    AND tsshd.STORE_CD IN
                    <foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
            )
            PIVOT
            (
                SUM(DC_AMT)
                FOR DC_CD
                IN (${pivotDcCol})
                /* IN ('01' AS DC01,
                '02' AS DC02,
                '03' AS DC03,
                '04' AS DC04,
                '05' AS DC05,
                '06' AS DC06,
                '07' AS DC07,
                '08' AS DC08,
                '09' AS DC09)*/
            )
            GROUP BY YOIL
        )
        ORDER BY YOIL
    </select>

    <!-- 과면세별탭 - 과면세별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR
        COMMENTS : [매출]헤더
    -->
    <select id="getDayOfWeekTaxList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekTaxList */
        SELECT
        YOIL,
        COUNT(DISTINCT STORE_CD) AS STORE_CNT,
        SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
        SUM(TOT_DC_AMT) AS TOT_DC_AMT,
        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
        SUM(TAX_SALE_AMT) AS TAX_SALE_AMT,
        SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT,
        SUM(VAT_AMT) AS VAT_AMT,
        SUM(NO_TAX_SALE_AMT) AS NO_TAX_SALE_AMT,
        SUM(NET_SALE_AMT) AS NET_SALE_AMT
        FROM
        (
            SELECT
            TO_CHAR(TO_DATE(tssh.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
            tssh.STORE_CD,
            tssh.TOT_SALE_AMT,
            tssh.TOT_DC_AMT,
            tssh.REAL_SALE_AMT,
            tssh.TAX_SALE_AMT,
            tssh.VAT_AMT,
            tssh.NO_TAX_SALE_AMT,
            tssh.NET_SALE_AMT
            FROM TB_SL_SALE_HDR tssh
            WHERE 1=1
            AND tssh.HQ_OFFICE_CD = #{membrOrgnCd}
            AND tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}
            <if test='storeCds != null and storeCds != ""'>
                AND tssh.STORE_CD IN
                <foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        )
        GROUP BY YOIL
        ORDER BY YOIL
    </select>

    <!-- 시간대별탭 - 시간대별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR
        COMMENTS : [매출]헤더
    -->
    <select id="getDayOfWeekTimeList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekTimeList */
        SELECT
        tssh.YOIL,
        COUNT(DISTINCT tssh.STORE_CD) AS STORE_CNT,
        SUM(tssh.REAL_SALE_AMT) AS REAL_SALE_AMT,
        SUM(tssh.SALE_FG) AS SALE_CNT,
        SUM(tssh.TOT_GUEST_CNT) AS TOT_GUEST_CNT
        ${sQuery1}
        FROM
        (
            SELECT
            TO_CHAR(TO_DATE(SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
            STORE_CD,
            REAL_SALE_AMT,
            SALE_FG,
            TOT_GUEST_CNT
            ${sQuery2}
            FROM TB_SL_SALE_HDR
            WHERE 1=1
            AND HQ_OFFICE_CD = #{membrOrgnCd}
            AND SALE_DATE BETWEEN #{startDate} AND #{endDate}
            <if test='storeCds != null and storeCds != ""'>
                AND STORE_CD IN
                <foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        ) tssh
        GROUP BY tssh.YOIL
        ORDER BY tssh.YOIL
    </select>

    <!-- 상품분류별탭 - 상품분류별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL, TB_HQ_PRODUCT, TB_HQ_PRODUCT_CLASS, TB_HQ_PRODUCT_BARCD,
                   TB_MS_STORE, TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_MS_PRODUCT_BARCD
        COMMENTS : [매출]상세, [본사]상품, [본사]상품_분류, [본사]상품_바코드
                   [매장]매장 정보, [매장]상품, [매장]상품_분류, [매장]상품_바코드
    -->
    <select id="getDayOfWeekProdClassList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekProdClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                tba.YOIL,
                tba.STORE_CNT,
                ${pivotProdClassCol1}
--                 (NVL(tba.PAY1_SALE_AMT, 0)+NVL(tba.PAY2_SALE_AMT, 0)) AS TOT_REAL_SALE_AMT,
--                 (NVL(tba.PAY1_SALE_QTY, 0)+NVL(tba.PAY2_SALE_QTY, 0)) AS TOT_SALE_QTY,
--                 tba.PAY1_SALE_AMT,
--                 tba.PAY1_SALE_QTY,
--                 tba.PAY2_SALE_AMT,
--                 tba.PAY2_SALE_QTY
                FROM
                (
                    SELECT
                    YOIL,
                    COUNT(STORE_CD) AS STORE_CNT,
                    ${pivotProdClassCol2}
--                     SUM(PAY1_SALE_AMT) AS PAY1_SALE_AMT,
--                     SUM(PAY1_SALE_QTY) AS PAY1_SALE_QTY,
--                     SUM(PAY2_SALE_AMT) AS PAY2_SALE_AMT,
--                     SUM(PAY2_SALE_QTY) AS PAY2_SALE_QTY
                    FROM
                    (
                        SELECT *
                        FROM
                        (
                            SELECT
                            TO_CHAR(TO_DATE(tssd.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                            tssd.STORE_CD,
                            tssd.PROD_CD,
                            thp.PROD_NM,
--                             thp.PROD_CLASS_CD,
                            thpb.BARCD_CD,
                            tssd.SALE_AMT,
                            tssd.SALE_QTY,
--                             thpc_p.PATH,
                            REPLACE(SUBSTR(thpc_p.PATH, 0, 6) ,'/','') AS Level1,
                            REPLACE(SUBSTR(thpc_p.PATH, 7, 6) ,'/','') AS Level2,
                            REPLACE(SUBSTR(thpc_p.PATH, 13, 6) ,'/','') AS Level3
                            FROM TB_SL_SALE_DTL tssd,
                            TB_HQ_PRODUCT thp,
                            TB_HQ_PRODUCT_CLASS thpc,
                            (
                                SELECT A.PROD_CLASS_CD
                                ,       SYS_CONNECT_BY_PATH (A.PROD_CLASS_CD,'/ ') PATH
                                FROM
                                (
                                    SELECT P_PROD_CLASS_CD
                                    ,       PROD_CLASS_CD
                                    ,       PROD_CLASS_NM
                                    FROM   TB_HQ_PRODUCT_CLASS
                                    WHERE  1=1
                                    AND    HQ_OFFICE_CD = #{membrOrgnCd}
                                )  A
                                WHERE CONNECT_BY_ISLEAF = 1
                                CONNECT BY NOCYCLE PRIOR P_PROD_CLASS_CD = PROD_CLASS_CD
                            ) thpc_p,
                            TB_HQ_PRODUCT_BARCD thpb
                            WHERE 1=1
                            AND thp.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD
                            AND thp.PROD_CD = tssd.PROD_CD
                            AND thpc.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD
                            AND thpc.PROD_CLASS_CD = thp.PROD_CLASS_CD
                            AND thpc_p.PROD_CLASS_CD = thp.PROD_CLASS_CD
                            AND thpb.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                            AND thpb.PROD_CD (+)= thp.PROD_CD
                            AND thpb.PROD_CD (+)= tssd.PROD_CD
                            AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}
                            AND tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                            <if test='storeCds != null and storeCds != ""'>
                                AND tssd.STORE_CD IN
                                <foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >
                                    #{item}
                                </foreach>
                            </if>
                            <if test="prodCd != null and prodCd != ''">
                                AND tssd.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                            </if>
                            <if test="prodNm != null and prodNm != ''">
                                AND thp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                            </if>
                            <if test="barCd != null and barCd != ''">
                                AND thpb.BARCD_CD LIKE '%'|| #{barCd} ||'%'
                            </if>
                        )
                        WHERE 1=1
--                         AND Level1 IN (00052,00053,00054,00055,00056,00057,00058,00059)
                        AND ${level} IN
                        <foreach collection="arrProdClassCd" item="item" open="(" close=")" separator=",">
                            ${item}
                        </foreach>
                        <if test="prodClassCd != null and prodClassCd != ''">
                        AND (      Level1 = #{prodClassCd}
                                OR Level2 = #{prodClassCd}
                                OR Level3 = #{prodClassCd}
                            )
                        </if>
                    )
                    PIVOT
                    (
                        SUM(SALE_AMT) AS SALE_AMT,
                        SUM(SALE_QTY) AS SALE_QTY
--                         FOR Level1 IN ('00052' AS PAY1,'00053' AS PAY2,'00054' AS PAY3,'00055' AS PAY4,'00056' AS PAY5,'00057' AS PAY6,'00058' AS PAY7,'00059' AS PAY8)
                        FOR ${level} IN (${pivotProdClassCol3})
                    )
                    GROUP BY YOIL
                ) tba
                WHERE 1=1
                ORDER BY tba.YOIL
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tba.YOIL,
                tba.STORE_CNT,
                ${pivotProdClassCol1}
                FROM
                (
                    SELECT
                    YOIL,
                    COUNT(DISTINCT STORE_CD) AS STORE_CNT,
                    ${pivotProdClassCol2}
                    FROM
                    (
                        SELECT *
                        FROM
                        (
                            SELECT
                            TO_CHAR(TO_DATE(tssd.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                            tssd.STORE_CD,
                            tmp.PROD_NM,
                            tssd.PROD_CD,
--                             tmp.PROD_CLASS_CD,
                            tmpb.BARCD_CD,
                            tssd.SALE_AMT,
                            tssd.SALE_QTY,
--                             tmpc_p.PATH,
                            REPLACE(SUBSTR(tmpc_p.PATH, 0, 6) ,'/','') AS Level1,
                            REPLACE(SUBSTR(tmpc_p.PATH, 7, 6) ,'/','') AS Level2,
                            REPLACE(SUBSTR(tmpc_p.PATH, 13, 6) ,'/','') AS Level3
                            FROM TB_SL_SALE_DTL tssd,
                            TB_MS_STORE tms,
                            TB_MS_PRODUCT tmp,
                            TB_MS_PRODUCT_CLASS tmpc,
                            (
                                SELECT A.PROD_CLASS_CD
                                ,       SYS_CONNECT_BY_PATH (A.PROD_CLASS_CD,'/ ') PATH
                                FROM
                                (
                                    SELECT P_PROD_CLASS_CD
                                    ,       PROD_CLASS_CD
                                    ,       PROD_CLASS_NM
                                    FROM   TB_MS_PRODUCT_CLASS
                                    WHERE  1=1
                                    AND    STORE_CD = #{storeCd}
                                )  A
                                WHERE CONNECT_BY_ISLEAF = 1
                                CONNECT BY NOCYCLE PRIOR P_PROD_CLASS_CD = PROD_CLASS_CD
                            ) tmpc_p,
                            TB_MS_PRODUCT_BARCD tmpb
                            WHERE 1=1
                            AND tms.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD
                            AND tms.STORE_CD = tssd.STORE_CD
                            AND tmp.STORE_CD = tssd.STORE_CD
                            AND tmp.PROD_CD = tssd.PROD_CD
                            AND tmpc.STORE_CD = tssd.STORE_CD
                            AND tmpc.PROD_CLASS_CD = tmp.PROD_CLASS_CD
                            AND tmpc_p.PROD_CLASS_CD = tmp.PROD_CLASS_CD
                            AND tmpb.STORE_CD (+)= tmp.STORE_CD
                            AND tmpb.PROD_CD (+)= tmp.PROD_CD
                            AND tmpb.PROD_CD (+)= tssd.PROD_CD
                            AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}
                            AND tssd.STORE_CD = #{storeCd}
                            AND tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                            <if test="prodCd != null and prodCd != ''">
                                AND tssd.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                            </if>
                            <if test="prodNm != null and prodNm != ''">
                                AND thp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                            </if>
                            <if test="barCd != null and barCd != ''">
                                AND thpb.BARCD_CD LIKE '%'|| #{barCd} ||'%'
                            </if>
                        )
                        WHERE 1=1
                        AND ${level} IN
                        <foreach collection="arrProdClassCd" item="item" open="(" close=")" separator=",">
                            ${item}
                        </foreach>
                        <if test="prodClassCd != null and prodClassCd != ''">
                            AND (      Level1 = #{prodClassCd}
                                    OR Level2 = #{prodClassCd}
                                    OR Level3 = #{prodClassCd}
                                )
                        </if>
                    )
                    PIVOT
                    (
                        SUM(SALE_AMT) AS SALE_AMT,
                        SUM(SALE_QTY) AS SALE_QTY
                        FOR ${level} IN (${pivotProdClassCol3})
                    )
                    GROUP BY YOIL
                ) tba
                WHERE 1=1
                ORDER BY tba.YOIL
            </when>
        </choose>
    </select>

    <!-- 코너별탭 - 코너별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL
        COMMENTS : [매출]상세
    -->
    <select id="getDayOfWeekCornerList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekCornerList */
        SELECT
        YOIL,
        STORE_CNT,
        <foreach collection="arrCornerCol" item="item" separator="+">
            NVL(CORNR_${item}_REAL_SALE_AMT, 0)
        </foreach> AS TOT_REAL_SALE_AMT,
        <foreach collection="arrCornerCol" item="item" separator="+">
            NVL(CORNR_${item}_SALE_QTY, 0)
        </foreach> AS TOT_SALE_QTY,
        <foreach collection="arrCornerCol" item="item" separator=",">
            NVL(CORNR_${item}_REAL_SALE_AMT,0) AS CORNR_${item}_REAL_SALE_AMT
        </foreach> ,
        <foreach collection="arrCornerCol" item="item" separator=",">
            NVL(CORNR_${item}_SALE_QTY,0) AS CORNR_${item}_SALE_QTY
        </foreach>
--         NVL(CORNR_A00000101_REAL_SALE_AMT,0) AS CORNR_A00000101_REAL_SALE_AMT,
--         NVL(CORNR_A00000101_SALE_QTY,0) AS CORNR_A00000101_SALE_QTY,
        FROM
        (
            SELECT
            YOIL,
            COUNT(DISTINCT STORE_CD) AS STORE_CNT,
            <foreach collection="arrCornerCol" item="item" separator=",">
                SUM(CORNR_${item}_REAL_SALE_AMT) AS CORNR_${item}_REAL_SALE_AMT
            </foreach> ,
            <foreach collection="arrCornerCol" item="item" separator=",">
                SUM(CORNR_${item}_SALE_QTY) AS CORNR_${item}_SALE_QTY
            </foreach>
--             SUM(CORNR_A00000101_REAL_SALE_AMT) AS CORNR_A00000101_REAL_SALE_AMT,
--             SUM(CORNR_A00000101_SALE_QTY) AS CORNR_A00000101_SALE_QTY,
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tssd.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                tssd.STORE_CD,
                SUM(tssd.REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(tssd.SALE_QTY) AS SALE_QTY,
                (tssd.STORE_CD || tssd.CORNR_CD) AS STORE_CORNR_CD
                FROM TB_SL_SALE_DTL tssd
                WHERE 1=1
                AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                        AND tssd.STORE_CD = #{storeCd}
                    ]]>
                </if>
                GROUP BY tssd.SALE_DATE, tssd.STORE_CD, tssd.CORNR_CD
            )
            PIVOT
            (
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(SALE_QTY) AS SALE_QTY
                FOR STORE_CORNR_CD
                IN (${pivotCornerCol})
                /*IN ('A00000101' AS CORNR_A00000101,
                'DS0000201' AS CORNR_DS0000201,
                'DS0000601' AS CORNR_DS0000601)*/
            )
            GROUP BY YOIL
        )
        ORDER BY YOIL
    </select>

    <!-- 외식테이블별탭 - 외식테이블별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL
        COMMENTS : [매출]상세
    -->
    <select id="getDayOfWeekTableList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekTableList */
        SELECT
        YOIL,
        <foreach collection="arrTableCol" item="item" separator="+">
            NVL(TBL${item}_REAL_SALE_AMT, 0)
        </foreach> AS TOT_REAL_SALE_AMT,
        <foreach collection="arrTableCol" item="item" separator="+">
            NVL(TBL${item}_TBL_CNT, 0)
        </foreach> AS TOT_TBL_CNT,
        <foreach collection="arrTableCol" item="item" separator="+">
            NVL(TBL${item}_GUEST_CNT, 0)
        </foreach> AS TOT_GUEST_CNT,
        <foreach collection="arrTableCol" item="item" separator=",">
            NVL(TBL${item}_REAL_SALE_AMT,0) AS TBL${item}_REAL_SALE_AMT
        </foreach> ,
        <foreach collection="arrTableCol" item="item" separator=",">
            NVL(TBL${item}_TBL_CNT,0) AS TBL${item}_TBL_CNT
        </foreach> ,
        <foreach collection="arrTableCol" item="item" separator=",">
            NVL(TBL${item}_GUEST_CNT,0) AS TBL${item}_GUEST_CNT
        </foreach>
--         NVL(TBL000_REAL_SALE_AMT,0) AS TBL000_REAL_SALE_AMT,
--         NVL(TBL000_TBL_CNT,0) AS TBL000_TBL_CNT,
--         NVL(TBL000_TOT_GUEST_CNT,0) AS TBL000_TOT_GUEST_CNT
        FROM
        (
            SELECT
            YOIL,
            <foreach collection="arrTableCol" item="item" separator=",">
                SUM(TBL${item}_REAL_SALE_AMT) AS TBL${item}_REAL_SALE_AMT
            </foreach> ,
            <foreach collection="arrTableCol" item="item" separator=",">
                SUM(TBL${item}_TBL_CNT) AS TBL${item}_TBL_CNT
            </foreach> ,
            <foreach collection="arrTableCol" item="item" separator=",">
                SUM(TBL${item}_GUEST_CNT) AS TBL${item}_GUEST_CNT
            </foreach>
--             SUM(TBL000_REAL_SALE_AMT) AS TBL000_REAL_SALE_AMT,
--             SUM(TBL000_TBL_CNT) AS TBL000_TBL_CNT,
--             SUM(TBL000_TOT_GUEST_CNT) AS TBL000_TOT_GUEST_CNT
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tssh.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                tssh.REAL_SALE_AMT,
                1 AS TBL_CNT,
                tssh.TOT_GUEST_CNT,
                tssh.TBL_CD
                FROM TB_SL_SALE_HDR tssh
                WHERE 1=1
                AND tssh.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tssh.STORE_CD = #{storeCd}
                AND tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test='tableCd != null and tableCd != ""'>
                    <![CDATA[
                        AND tssh.TBL_CD = #{tableCd}
                    ]]>
                </if>
                AND tssh.TBL_CD != '000'
            )
            PIVOT
            (
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(TBL_CNT) AS TBL_CNT,
                SUM(TOT_GUEST_CNT) AS GUEST_CNT
                FOR TBL_CD
                IN (${pivotTableCol})
                /*IN ('000' AS TBL000,
                '001' AS TBL001)*/
            )
            GROUP BY YOIL
        )
        ORDER BY YOIL
    </select>

    <!-- 포스별탭 - 포스별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL
        COMMENTS : [매출]상세
    -->
    <select id="getDayOfWeekPosList"  parameterType="DayOfWeekVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getDayOfWeekPosList */
        SELECT
        YOIL,
        STORE_CNT,
        <foreach collection="arrPosCol" item="item" separator="+">
            NVL(POS${item}_SALE_AMT, 0)
        </foreach> AS TOT_SALE_AMT,
        <foreach collection="arrPosCol" item="item" separator="+">
            NVL(POS${item}_DC_AMT, 0)
        </foreach> AS TOT_DC_AMT,
        <foreach collection="arrPosCol" item="item" separator="+">
            NVL(POS${item}_REAL_SALE_AMT, 0)
        </foreach> AS TOT_REAL_SALE_AMT,
        <foreach collection="arrPosCol" item="item" separator="+">
            NVL(POS${item}_SALE_QTY, 0)
        </foreach> AS TOT_SALE_QTY,
        <foreach collection="arrPosCol" item="item" separator=",">
            NVL(POS${item}_SALE_AMT,0) AS POS${item}_SALE_AMT
        </foreach> ,
        <foreach collection="arrPosCol" item="item" separator=",">
            NVL(POS${item}_DC_AMT,0) AS POS${item}_DC_AMT
        </foreach> ,
        <foreach collection="arrPosCol" item="item" separator=",">
            NVL(POS${item}_REAL_SALE_AMT,0) AS POS${item}_REAL_SALE_AMT
        </foreach> ,
        <foreach collection="arrPosCol" item="item" separator=",">
            NVL(POS${item}_SALE_QTY,0) AS POS${item}_SALE_QTY
        </foreach>
--         SUM(POS01_SALE_AMT) AS POS01_SALE_AMT,
--         SUM(POS01_DC_AMT) AS POS01_DC_AMT,
--         SUM(POS01_REAL_SALE_AMT) AS POS01_REAL_SALE_AMT,
--         SUM(POS01_SALE_QTY) AS POS01_SALE_QTY
        FROM
        (
            SELECT
            YOIL,
            COUNT(DISTINCT STORE_CD) AS STORE_CNT,
            <foreach collection="arrPosCol" item="item" separator=",">
                SUM(POS${item}_SALE_AMT) AS POS${item}_SALE_AMT
            </foreach> ,
            <foreach collection="arrPosCol" item="item" separator=",">
                SUM(POS${item}_DC_AMT) AS POS${item}_DC_AMT
            </foreach> ,
            <foreach collection="arrPosCol" item="item" separator=",">
                SUM(POS${item}_REAL_SALE_AMT) AS POS${item}_REAL_SALE_AMT
            </foreach> ,
            <foreach collection="arrPosCol" item="item" separator=",">
                SUM(POS${item}_SALE_QTY) AS POS${item}_SALE_QTY
            </foreach>
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tssd.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL,
                tssd.STORE_CD,
                tssd.SALE_AMT,
                tssd.DC_AMT,
                tssd.REAL_SALE_AMT,
                tssd.SALE_QTY,
                tssd.POS_NO
                FROM TB_SL_SALE_DTL tssd
                WHERE 1=1
                AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test='storeCds != null and storeCds != ""'>
                    AND tssd.STORE_CD IN
                    <foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
            )
            PIVOT
            (
                SUM(SALE_AMT) AS SALE_AMT,
                SUM(DC_AMT) AS DC_AMT,
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(SALE_QTY) AS SALE_QTY
                FOR POS_NO
                IN (${pivotPosCol})
             /*   IN ('01' AS POS01,
                '02' AS POS02,
                '03' AS POS03)*/
            )
            GROUP BY YOIL
        )
        ORDER BY YOIL
    </select>

</mapper>