<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.iostock.vendr.vendrInstock.service.impl.VendrInstockHqMapper">

    <!-- 거래처 입고/반출등록 - 거래처 입고/반출 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK, TB_HQ_BRAND, TB_HQ_VENDOR
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 거래처 입고/반출 리스트 조회를 조회한다.
    -->
    <select id="getVendrInstockList" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getVendrInstockList */
        <![CDATA[
        SELECT  tphvi.SLIP_NO, tphvi.SLIP_FG, tphvi.PROC_FG, tphvi.VENDR_CD, thv.VENDR_NM
        ,       DECODE(tphvi.ORDER_SLIP_NO, NULL, 'N', 'Y') AS INSTOCK_TYPE
        ,       tphvi.INSTOCK_DATE
        FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
        ,       TB_HQ_VENDOR thv
        WHERE   tphvi.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     thv.HQ_OFFICE_CD    = tphvi.HQ_OFFICE_CD
        AND     thv.VENDR_CD        = tphvi.VENDR_CD
        ]]>
        <if test='dateFg == "reg"'>
            AND tphvi.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
        </if>
        <if test='dateFg == "in"'>
            AND tphvi.INSTOCK_DATE BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test='slipNo != null and slipNo != ""'>
            AND tphvi.SLIP_NO = #{slipNo}
        </if>
        <if test='orderSlipNo != null and orderSlipNo != ""'>
            AND tphvi.ORDER_SLIP_NO = #{orderSlipNo}
        </if>
        <if test='slipFg != null and slipFg != ""'>
            AND tphvi.SLIP_FG = #{slipFg}
        </if>
        <if test='procFg != null and procFg != ""'>
            AND tphvi.PROC_FG = #{procFg}
        </if>
        <![CDATA[
        ORDER BY tphvi.SLIP_NO DESC
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 거래처 입고/반출 등록시 발주번호 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK, TB_HQ_BRAND, TB_HQ_VENDOR
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 거래처 입고/반출 등록시 발주번호 리스트를 조회한다.
    -->
    <select id="getVendrInstockOrderSlipList" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getVendrInstockOrderSlipList */
        <![CDATA[
        SELECT  tphvo.SLIP_NO, tphvo.ORDER_DATE, tphvo.VENDR_CD, thv.VENDR_NM
        FROM    TB_PO_HQ_VENDR_ORDER tphvo
        ,       TB_HQ_VENDOR thv
        WHERE   tphvo.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     tphvo.ORDER_DATE    BETWEEN #{startDate} AND #{endDate}
        AND     tphvo.PROC_FG       IN ('1','3','4')
        AND     thv.HQ_OFFICE_CD    = tphvo.HQ_OFFICE_CD
        AND     thv.VENDR_CD        = tphvo.VENDR_CD
        ]]>
        <if test='vendrCd != null and vendrCd != ""'>
            AND tphvo.VENDR_CD = #{vendrCd}
        </if>
        <![CDATA[
        ORDER BY tphvo.SLIP_NO DESC
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 입고/반출 상세 조회 -->
    <!--
        TABLE    : TB_ST_HQ_SETPROD_COMPOSITION, TB_HQ_PRODUCT
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 입고/반출 상세 내역을 조회한다.
    -->
    <select id="getSlipInfo" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getSlipInfo */
        <![CDATA[
        SELECT  tphvi.SLIP_NO, tphvi.PROC_FG, tphvi.VENDR_CD, thv.VENDR_NM
        ,       DECODE(tphvi.ORDER_SLIP_NO, NULL, 'N', 'Y') AS INSTOCK_TYPE
        ,       tphvi.INSTOCK_DATE, tphvi.DTL_CNT, tphvi.REMARK
        ,       tphvi.ORDER_SLIP_NO
        ,       tphvi.REG_DT
        ,       thereg.EMP_NM AS REG_NM
        ,       DECODE(tphvi.PROC_FG, 0, NULL, tphvi.CONFM_DT) AS CONFM_DT
        ,       DECODE(tphvi.PROC_FG, 0, NULL, theconfm.EMP_NM) AS CONFM_NM
        ,       tphvi.IN_TOT_QTY * tphvi.SLIP_FG AS IN_TOT_QTY
        ,       tphvi.IN_TOT * tphvi.SLIP_FG AS IN_TOT
        FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
        ,       TB_HQ_VENDOR thv
        ,       TB_HQ_EMPLOYEE thereg
        ,       TB_HQ_EMPLOYEE theconfm
        WHERE   tphvi.HQ_OFFICE_CD        = #{hqOfficeCd}
        AND     tphvi.SLIP_NO             = #{slipNo}
        AND     thv.HQ_OFFICE_CD          = tphvi.HQ_OFFICE_CD
        AND     thv.VENDR_CD              = tphvi.VENDR_CD
        AND     thereg.HQ_OFFICE_CD   (+) = tphvi.HQ_OFFICE_CD
        AND     thereg.USER_ID        (+) = tphvi.REG_ID
        AND     theconfm.HQ_OFFICE_CD (+) = tphvi.HQ_OFFICE_CD
        AND     theconfm.USER_ID      (+) = tphvi.CONFM_ID
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 신규전표번호 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 신규전표번호를 조회한다.
    -->
    <select id="getNewSlipNo" parameterType="vendrInstockVO" resultType="String">
        /* USE : VendrInstockHqMapper.getNewSlipNo */
        <![CDATA[
        SELECT  NVL(MAX(tphvi.SLIP_NO), #{yymm}||'0000')+1 AS SLIP_NO
        FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
        WHERE   tphvi.HQ_OFFICE_CD  =     #{hqOfficeCd}
        AND     tphvi.SLIP_NO       LIKE  #{yymm}||'%'
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 입고/반출상품 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_IN_DTL, TB_HQ_PRODUCT, TB_HQ_ENVST
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 입고/반출상품 리스트를 조회한다.
    -->
    <select id="getVendrInstockProdList" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getVendrInstockProdList */
        <![CDATA[
        SELECT  tphvid.PROD_CD, thp.PROD_NM, tphvid.PO_UNIT_FG, tphvid.PO_UNIT_QTY, thp.PO_UNIT_ALLOW_FG
        ,       tphvid.SLIP_FG, tphvid.COST_UPRC, thp.PO_MIN_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_TOT_QTY , 0, NULL, tphvid.IN_TOT_QTY *tphvid.SLIP_FG)) AS PREV_IN_TOT_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_UNIT_QTY, 0, NULL, tphvid.IN_UNIT_QTY*tphvid.SLIP_FG)) AS IN_UNIT_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_ETC_QTY , 0, NULL, tphvid.IN_ETC_QTY *tphvid.SLIP_FG)) AS IN_ETC_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_TOT_QTY , 0, NULL, tphvid.IN_TOT_QTY *tphvid.SLIP_FG)) AS IN_TOT_QTY
        ,       tphvid.IN_AMT*tphvid.SLIP_FG AS IN_AMT
        ,       tphvid.IN_VAT*tphvid.SLIP_FG AS IN_VAT
        ,       tphvid.IN_TOT*tphvid.SLIP_FG AS IN_TOT
        ,       thp.VAT_FG AS VAT_FG01
        ,       DECODE(thv.VAT_INCLD_YN, 'Y', 1, 0) AS VENDR_VAT_FG01
        FROM    TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
        ,       TB_HQ_PRODUCT thp
        ,       TB_HQ_VENDOR thv
        WHERE   tphvid.HQ_OFFICE_CD =   #{hqOfficeCd}
        AND     tphvid.SLIP_NO      =   #{slipNo}
        AND     thp.HQ_OFFICE_CD    =   tphvid.HQ_OFFICE_CD
        AND     thp.PROD_CD         =   tphvid.PROD_CD
        AND     thv.HQ_OFFICE_CD    =   tphvid.HQ_OFFICE_CD
        AND     thv.VENDR_CD        =   #{vendrCd}
        ORDER
        BY      tphvid.PROD_CD
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 진행구분 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 진행구분을 조회한다.
    -->
    <select id="getProcFgCheck" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getProcFgCheck */
        <![CDATA[
        SELECT  tphvi.PROC_FG, tphvi.DTL_CNT
        ,       DECODE(tphvi.ORDER_SLIP_NO, NULL, 'N', 'Y') AS INSTOCK_TYPE
        FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
        WHERE   tphvi.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     tphvi.SLIP_NO       = #{slipNo}
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 입고/반출상품 추가/변경 등록 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL, TB_HQ_PRODUCT, TB_HQ_ENVST
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 입고/반출상품 추가/변경 등록 리스트를 조회한다.
    -->
    <select id="getVendrInstockProdRegList" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getVendrInstockProdRegList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        <![CDATA[
        SELECT  thvp.PROD_CD
        ,       thp.PROD_NM
        ,       thp.VAT_FG AS VAT_FG01
        , 		NVL(tphvid.COST_UPRC, thp.COST_UPRC) AS COST_UPRC
        , 		thp.LAST_COST_UPRC
        ,       thp.PO_UNIT_ALLOW_FG
        ,       thp.PO_UNIT_FG
        ,       thp.PO_UNIT_QTY
        ,       DECODE(thv.VAT_INCLD_YN, 'Y', 1, 0) AS VENDR_VAT_FG01
        ,       TO_NUMBER(DECODE(tphvid.IN_UNIT_QTY, 0, NULL, tphvid.IN_UNIT_QTY*tphvid.SLIP_FG)) AS PREV_IN_UNIT_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_ETC_QTY,  0, NULL, tphvid.IN_ETC_QTY*tphvid.SLIP_FG )) AS PREV_IN_ETC_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_TOT_QTY,  0, NULL, tphvid.IN_TOT_QTY*tphvid.SLIP_FG )) AS PREV_IN_TOT_QTY
        ,       TO_NUMBER(DECODE(tphvid.IN_AMT    ,  0, NULL, tphvid.IN_AMT*tphvid.SLIP_FG     )) AS IN_AMT
        ,       TO_NUMBER(DECODE(tphvid.IN_VAT    ,  0, NULL, tphvid.IN_VAT*tphvid.SLIP_FG     )) AS IN_VAT
        ,       TO_NUMBER(DECODE(tphvid.IN_TOT    ,  0, NULL, tphvid.IN_TOT*tphvid.SLIP_FG     )) AS IN_TOT
        ]]>
        <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM    TB_HQ_VENDOR_PROD thvp
        ,       TB_HQ_PRODUCT thp
        ,       TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
        ,       TB_HQ_VENDOR thv
        WHERE   thvp.HQ_OFFICE_CD     =   #{hqOfficeCd}
        AND     thvp.VENDR_CD         =   #{vendrCd}
        AND     thp.HQ_OFFICE_CD      =   thvp.HQ_OFFICE_CD
        AND     thp.PROD_CD           =   thvp.PROD_CD
        AND     thp.USE_YN            =   'Y'
        AND     tphvid.HQ_OFFICE_CD(+)=   thvp.HQ_OFFICE_CD
        AND     tphvid.SLIP_NO    (+) =   #{slipNo}
        AND     tphvid.PROD_CD    (+) =   thp.PROD_CD
        AND     thv.HQ_OFFICE_CD      =   thvp.HQ_OFFICE_CD
        AND     thv.VENDR_CD          =   #{vendrCd}
        ]]>
        <if test='prodCd != null and prodCd != ""'>
            AND thp.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test="barcdCd != null and barcdCd != ''">
            AND thp.PROD_CD IN  ( SELECT  thpb.PROD_CD
                                  FROM    TB_HQ_PRODUCT_BARCD thpb
                                  WHERE   thpb.HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND     thpb.BARCD_CD     = #{barcdCd}
                                )
        </if>
        <if test="prodClassCd != null and prodClassCd != ''">
            AND thp.PROD_CLASS_CD IN  ( SELECT	#{prodClassCd} AS PROD_CLASS_CD
                                        FROM	DUAL
                                        UNION
                                        SELECT  thpc.PROD_CLASS_CD
                                        FROM    TB_HQ_PRODUCT_CLASS thpc
                                        WHERE   thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                                        START WITH  thpc.P_PROD_CLASS_CD = #{prodClassCd}
                                        CONNECT BY  thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD
                                      )
        </if>
        ORDER BY thp.PROD_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 거래처 입고/반출등록 - 입고/반출 삭제시 상품이 있는지 여부 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 입고/반출 삭제시 상품이 있는지 여부를 조회한다.
    -->
    <select id="getDtlProdExist" parameterType="vendrInstockVO" resultType="String">
        /* USE : VendrInstockHqMapper.getDtlProdExist */
        <![CDATA[
        SELECT  DECODE(COUNT(tshvid.PROD_CD), 0, 'N', 'Y') AS IS_EXIST
        FROM    TB_PO_HQ_VENDR_INSTOCK_DTL tshvid
        WHERE   tshvid.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     tshvid.SLIP_NO      = #{slipNo}
        AND     ROWNUM              = 1
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 입고/반출상품 발주내역으로 세팅 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_IN_DTL, TB_HQ_PRODUCT, TB_HQ_ENVST
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출등록 - 입고/반출상품 발주내역으로 세팅 리스트를 조회한다.
    -->
    <select id="getVendrInstockOrderInfoRegList" parameterType="vendrInstockVO" resultType="DefaultMap">
        /* USE : VendrInstockHqMapper.getVendrInstockOrderInfoRegList */
        <![CDATA[
        SELECT  tphvod.PROD_CD, thp.PROD_NM, tphvod.PO_UNIT_FG, tphvod.PO_UNIT_QTY, thp.PO_UNIT_ALLOW_FG
        ,       tphvod.SLIP_FG, thp.PO_MIN_QTY
        ,       thp.LAST_COST_UPRC
        ,       tphvod.COST_UPRC AS ORDER_COST_UPRC
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvod.ORDER_UNIT_QTY*tphvod.SLIP_FG)) AS ORDER_UNIT_QTY
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvod.ORDER_ETC_QTY *tphvod.SLIP_FG)) AS ORDER_ETC_QTY
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvod.ORDER_TOT_QTY *tphvod.SLIP_FG)) AS ORDER_TOT_QTY
        ,       tphvid.COST_UPRC
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvid.IN_UNIT_QTY*tphvid.SLIP_FG)) AS IN_UNIT_QTY
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvid.IN_ETC_QTY *tphvid.SLIP_FG)) AS IN_ETC_QTY
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvid.IN_TOT_QTY *tphvid.SLIP_FG)) AS IN_TOT_QTY
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tphvid.IN_TOT_QTY *tphvid.SLIP_FG)) AS PREV_IN_TOT_QTY
        ,       tphvid.IN_AMT*tphvid.SLIP_FG AS IN_AMT
        ,       tphvid.IN_VAT*tphvid.SLIP_FG AS IN_VAT
        ,       tphvid.IN_TOT*tphvid.SLIP_FG AS IN_TOT
        ,       thp.VAT_FG AS VAT_FG01
        ,       DECODE(thv.VAT_INCLD_YN, 'Y', 1, 0) AS VENDR_VAT_FG01
        FROM    TB_PO_HQ_VENDR_ORDER_DTL tphvod
        ,       TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
        ,       TB_HQ_PRODUCT thp
        ,       TB_HQ_VENDOR thv
        WHERE   tphvod.HQ_OFFICE_CD   =   #{hqOfficeCd}
        AND     tphvod.SLIP_NO        =   #{orderSlipNo}
        AND     tphvid.HQ_OFFICE_CD(+)=   tphvod.HQ_OFFICE_CD
        AND     tphvid.SLIP_NO     (+)=   #{slipNo}
        AND     tphvid.PROD_CD     (+)=   tphvod.PROD_CD
        AND     thp.HQ_OFFICE_CD      =   tphvod.HQ_OFFICE_CD
        AND     thp.PROD_CD           =   tphvod.PROD_CD
        AND     thv.HQ_OFFICE_CD      =   tphvod.HQ_OFFICE_CD
        AND     thv.VENDR_CD          =   #{vendrCd}
        ORDER
        BY      tphvid.PROD_CD
        ]]>
    </select>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 HD 등록 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보를 등록한다.
    -->
    <insert id="insertVendrInstockHd" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.insertVendrInstockHd */
        INSERT INTO TB_PO_HQ_VENDR_INSTOCK
        (
            HQ_OFFICE_CD,
            SLIP_NO,
            SLIP_FG,
            VENDR_CD,
            PROC_FG,
            ORDER_SLIP_NO,
            INSTOCK_DATE,
            DTL_CNT,
            IN_TOT_QTY,
            IN_AMT,
            IN_VAT,
            IN_TOT,
            REMARK,
            IN_REG_DT,
            IN_REG_ID,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd},
            #{slipNo},
            #{slipFg},
            #{vendrCd},
            #{procFg},
            #{orderSlipNo},
            #{instockDate},
            0,
            0,
            0,
            0,
            0,
            #{remark},
            #{regDt},
            #{regId},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 HD 수정 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보를 수정한다.
    -->
    <update id="updateVendrInstockHd" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateVendrInstockHd */
        UPDATE  TB_PO_HQ_VENDR_INSTOCK
        SET     VENDR_CD        = #{vendrCd}
        ,       ORDER_SLIP_NO   = #{orderSlipNo}
        ,       INSTOCK_DATE    = #{instockDate}
        ,       REMARK          = #{remark}
        ,       MOD_DT          = #{modDt}
        ,       MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 DTL의 집계정보 HD에 수정 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 DTL의 집계정보를 HD에 수정한다.
    -->
    <update id="updateVendrInstockDtlSumHd" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateVendrInstockDtlSumHd */
        UPDATE  TB_PO_HQ_VENDR_INSTOCK
        SET     ( DTL_CNT, IN_TOT_QTY
                , IN_AMT, IN_VAT, IN_TOT)
            =   ( SELECT  COUNT(tphvid.PROD_CD), NVL(SUM(tphvid.IN_TOT_QTY),0)
                ,       NVL(SUM(tphvid.IN_AMT),0), NVL(SUM(tphvid.IN_VAT),0), NVL(SUM(tphvid.IN_TOT),0)
                  FROM    TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
                  WHERE   tphvid.HQ_OFFICE_CD  = #{hqOfficeCd}
                  AND     tphvid.SLIP_NO       = #{slipNo}
            )
        ,       MOD_DT = #{modDt}
        ,       MOD_ID = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 HD 삭제 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보를 삭제한다.
    -->
    <delete id="deleteVendrInstockHd" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.deleteVendrInstockHd */
        DELETE  TB_PO_HQ_VENDR_INSTOCK
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </delete>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경시 발주 DT 내역의 입고관련 정보 초기화 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 발주 DT 내역의 입고관련 정보를 초기화한다.
    -->
    <update id="updateDefaultVendrOrderDtl" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateDefaultVendrOrderDtl */
        UPDATE  TB_PO_HQ_VENDR_ORDER_DTL
        SET     IN_UNIT_QTY   = 0
        ,       IN_ETC_QTY    = 0
        ,       IN_TOT_QTY    = 0
        ,       IN_AMT        = 0
        ,       IN_VAT        = 0
        ,       IN_TOT        = 0
        ,       IN_FIRST_DATE = NULL
        ,       IN_LAST_DATE  = NULL
        ,       MOD_DT        = #{modDt}
        ,       MOD_ID        = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{orderSlipNo}
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경시 발주 DT 내역의 입고관련 정보 갱신 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 발주 DT 내역의 입고관련 정보를 갱신한다.
    -->
    <update id="updateVendrInstockToOrderDtl" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateVendrInstockToOrderDtl */
        UPDATE  TB_PO_HQ_VENDR_ORDER_DTL tphvod
        SET     (   IN_UNIT_QTY, IN_ETC_QTY, IN_TOT_QTY
                ,   IN_AMT , IN_VAT , IN_TOT
                ,   IN_FIRST_DATE, IN_LAST_DATE )
            =   (   SELECT  NVL(FLOOR(SUM(tphvid.IN_TOT_QTY)/tphvod.PO_UNIT_QTY),0)
                    ,       NVL(MOD  (SUM(tphvid.IN_TOT_QTY),tphvod.PO_UNIT_QTY),0)
                    ,       NVL(SUM(tphvid.IN_TOT_QTY),0)
                    ,       NVL(SUM(tphvid.IN_AMT),0)
                    ,       NVL(SUM(tphvid.IN_VAT),0)
                    ,       NVL(SUM(tphvid.IN_TOT),0)
                    ,       MIN(tphvi.INSTOCK_DATE)
                    ,       MAX(tphvi.INSTOCK_DATE)
                    FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
                    ,       TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
                    WHERE   tphvi.HQ_OFFICE_CD  =   #{hqOfficeCd}
                    AND     tphvi.ORDER_SLIP_NO =   #{orderSlipNo}
                    AND     tphvi.PROC_FG       =   '1'
                    AND     tphvid.HQ_OFFICE_CD =   tphvi.HQ_OFFICE_CD
                    AND     tphvid.SLIP_NO      =   tphvi.SLIP_NO
                    AND     tphvid.PROD_CD      =   tphvod.PROD_CD
                    GROUP
                    BY      tphvod.PO_UNIT_QTY
                )
        ,       MOD_DT  =   #{modDt}
        ,       MOD_ID  =   #{modId}
        WHERE    HQ_OFFICE_CD =   #{hqOfficeCd}
        AND      SLIP_NO      =   #{orderSlipNo}
        AND      PROD_CD      IN  ( SELECT  tphvid.PROD_CD
                                    FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
                                    ,       TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
                                    WHERE   tphvi.HQ_OFFICE_CD  =   #{hqOfficeCd}
                                    AND     tphvi.ORDER_SLIP_NO =   #{orderSlipNo}
                                    AND     tphvi.PROC_FG       =   '1'
                                    AND     tphvid.HQ_OFFICE_CD =   tphvi.HQ_OFFICE_CD
                                    AND     tphvid.SLIP_NO      =   tphvi.SLIP_NO
                                    GROUP
                                    BY      tphvid.PROD_CD
                                  )
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경시 입고DT에 있으면서 발주 DT 내역에 없는 내역은 신규로 생성 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 입고DT에 있으면서 발주 DT 내역에 없는 내역은 신규로 생성한다.
    -->
    <insert id="insertVendrInstockToOrderDtl" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.insertVendrInstockToOrderDtl */
        INSERT INTO TB_PO_HQ_VENDR_ORDER_DTL
        (        HQ_OFFICE_CD           ,   SLIP_NO                 ,   STORAGE_CD          ,   HQ_BRAND_CD
        ,        PROD_CD                ,   SLIP_FG
        ,        COST_UPRC
        ,        PO_UNIT_FG             ,   PO_UNIT_QTY
        ,        ORDER_UNIT_QTY         ,   ORDER_ETC_QTY           ,   ORDER_TOT_QTY
        ,        ORDER_AMT              ,   ORDER_VAT               ,   ORDER_TOT
        ,        IN_UNIT_QTY            ,   IN_ETC_QTY              ,   IN_TOT_QTY
        ,        IN_AMT                 ,   IN_VAT                  ,   IN_TOT
        ,        IN_FIRST_DATE          ,   IN_LAST_DATE
        ,        REG_DT                 ,   REG_ID
        ,        MOD_DT                 ,   MOD_ID
        )
        SELECT   tphvid.HQ_OFFICE_CD    ,   #{orderSlipNo}          ,   tphvid.STORAGE_CD   ,   tphvid.HQ_BRAND_CD
        ,        tphvid.PROD_CD         ,   tphvid.SLIP_FG
        ,        SUM(tphvid.COST_UPRC)
        ,        SUM(tphvid.PO_UNIT_FG) ,   SUM(tphvid.PO_UNIT_QTY)
        ,        0                      ,   0                       ,   0
        ,        0                      ,   0                       ,   0
        ,        SUM(tphvid.IN_UNIT_QTY),   SUM(tphvid.IN_ETC_QTY)  ,   SUM(tphvid.IN_TOT_QTY)
        ,        SUM(tphvid.IN_AMT)     ,   SUM(tphvid.IN_VAT)      ,   SUM(tphvid.IN_TOT)
        ,        MIN(tphvi.INSTOCK_DATE),   MAX(tphvi.INSTOCK_DATE)
        ,        #{regDt}       ,   #{regId}
        ,        #{modDt}       ,   #{modId}
        FROM     TB_PO_HQ_VENDR_INSTOCK_DTL tphvid
        ,        TB_PO_HQ_VENDR_INSTOCK tphvi
        WHERE    tphvid.HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND      tphvid.SLIP_NO       =   #{slipNo}
        AND      tphvid.PROD_CD       IN  ( SELECT  PROD_CD
                                            FROM    TB_PO_HQ_VENDR_INSTOCK_DTL
                                            WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
                                            AND     SLIP_NO       =   #{slipNo}
                                            MINUS
                                            SELECT  PROD_CD
                                            FROM    TB_PO_HQ_VENDR_ORDER_DTL
                                            WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
                                            AND     SLIP_NO       =   #{orderSlipNo}
                                          )
        AND      tphvi.HQ_OFFICE_CD =   tphvid.HQ_OFFICE_CD
        AND      tphvi.SLIP_NO      =   tphvid.SLIP_NO
        GROUP
        BY       tphvid.HQ_OFFICE_CD    ,   #{orderSlipNo}      ,   tphvid.STORAGE_CD   ,   tphvid.HQ_BRAND_CD
        ,        tphvid.PROD_CD         ,   tphvid.SLIP_FG
    </insert>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경시 발주 DT 내역의 집계정보 HD에 수정 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 발주 DT 내역의 집계정보 HD에 수정한다.
    -->
    <update id="updateVendrOrderDtlSumHd" parameterType="vendrInstockVO">
        /* USE : VendrOrderMapper.updateVendrOrderDtlSumHd */
        UPDATE  TB_PO_HQ_VENDR_ORDER
        SET     ( DTL_CNT
                , ORDER_TOT_QTY, ORDER_AMT, ORDER_VAT, ORDER_TOT
                , IN_TOT_QTY, IN_AMT, IN_VAT, IN_TOT
                , IN_FIRST_DATE, IN_LAST_DATE
            )
            =   ( SELECT  COUNT(tphvod.PROD_CD)
                  ,       NVL(SUM(tphvod.ORDER_TOT_QTY),0), NVL(SUM(tphvod.ORDER_AMT),0), NVL(SUM(tphvod.ORDER_VAT),0), NVL(SUM(tphvod.ORDER_TOT),0)
                  ,       NVL(SUM(tphvod.IN_TOT_QTY),0), NVL(SUM(tphvod.IN_AMT),0), NVL(SUM(tphvod.IN_VAT),0), NVL(SUM(tphvod.IN_TOT),0)
                  ,       MIN(tphvod.IN_FIRST_DATE), MAX(tphvod.IN_LAST_DATE)
                  FROM    TB_PO_HQ_VENDR_ORDER_DTL tphvod
                  WHERE   tphvod.HQ_OFFICE_CD  = #{hqOfficeCd}
                  AND     tphvod.SLIP_NO       = #{orderSlipNo}
                )
        ,       MOD_DT = #{modDt}
        ,       MOD_ID = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{orderSlipNo}
    </update>


    <!-- 거래처 발주등록 - 입고/반출정보 진행상태 변경시 발주 테이블의 진행구분 수정 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER
        PARAM    : vendrOrderVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 발주 테이블의 진행구분 수정한다.
    -->
    <update id="updateVendrOrderProcFg" parameterType="vendrInstockVO">
        /* USE : VendrOrderMapper.updateVendrOrderProcFg */
        UPDATE  TB_PO_HQ_VENDR_ORDER
        SET     PROC_FG   = #{procFg}
        <if test='procFg == "0" or procFg == "1" or procFg == "2"'>
            ,       CONFM_DT = #{modDt}
            ,       CONFM_ID = #{modId}
        </if>
        <if test='procFg == "3"'>
            ,       VENDR_CHK_DT = #{modDt}
            ,       VENDR_CHK_ID = #{modId}
        </if>
        <if test='procFg == "5"'>
            ,       END_DT = #{modDt}
            ,       END_ID = #{modId}
        </if>
        ,       MOD_DT = #{modDt}
        ,       MOD_ID = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{orderSlipNo}
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태를 변경한다.
    -->
    <update id="updateProcFg" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateProcFg */
        UPDATE  TB_PO_HQ_VENDR_INSTOCK
        SET     PROC_FG   = #{procFg}
        <if test='procFg == "0"'>
            ,       CONFM_DT = NULL
            ,       CONFM_ID = NULL
        </if>
        <if test='procFg == "1"'>
            ,       CONFM_DT = #{modDt}
            ,       CONFM_ID = #{modId}
        </if>
        ,       MOD_DT = #{modDt}
        ,       MOD_ID = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 DTL 등록 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 DTL을 등록한다.
    -->
    <insert id="insertVendrInstockDtl" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.insertVendrInstockDtl */
        INSERT INTO TB_PO_HQ_VENDR_INSTOCK_DTL
        (
            HQ_OFFICE_CD,
            SLIP_NO,
            STORAGE_CD,
            HQ_BRAND_CD,
            PROD_CD,
            SLIP_FG,
            COST_UPRC,
            PO_UNIT_FG,
            PO_UNIT_QTY,
            IN_UNIT_QTY,
            IN_ETC_QTY,
            IN_TOT_QTY,
            IN_AMT,
            IN_VAT,
            IN_TOT,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd},
            #{slipNo},
            #{storageCd},
            #{hqBrandCd},
            #{prodCd},
            #{slipFg},
            #{costUprc},
            #{poUnitFg},
            #{poUnitQty},
            #{inUnitQty},
            #{inEtcQty},
            #{inTotQty},
            #{inAmt},
            #{inVat},
            #{inTot},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 DTL을 수정한다.
    -->
    <update id="updateVendrInstockDtl" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateVendrInstockDtl */
        UPDATE  TB_PO_HQ_VENDR_INSTOCK_DTL
        SET     COST_UPRC   = #{costUprc}
        ,       IN_UNIT_QTY = #{inUnitQty}
        ,       IN_ETC_QTY  = #{inEtcQty}
        ,       IN_TOT_QTY  = #{inTotQty}
        ,       IN_AMT      = #{inAmt}
        ,       IN_VAT      = #{inVat}
        ,       IN_TOT      = #{inTot}
        ,       MOD_DT      = #{modDt}
        ,       MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     PROD_CD       = #{prodCd}
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 DTL 삭제 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 DTL을 삭제한다.
    -->
    <delete id="deleteVendrInstockDtl" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.deleteVendrInstockDtl */
        DELETE  TB_PO_HQ_VENDR_INSTOCK_DTL
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     PROD_CD       = #{prodCd}
    </delete>


    <!-- 거래처 입고/반출등록 - 입고/반출 상품 공급가 수정(본사) -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출시 본사 상품 공급가 수정한다.
    -->
    <update id="updateProdSplyUprc" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateProdSplyUprc */
        <![CDATA[
        UPDATE  TB_HQ_PRODUCT
        SET     SPLY_UPRC   = #{splyUprc}
        ,       MOD_DT      = #{modDt}
        ,       MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     PROD_CD       = #{prodCd}
        AND     SPLY_UPRC     <> #{splyUprc}
        ]]>
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출 상품 공급가 수정(매장) -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출시 본사 상품 공급가 수정한다.
    -->
    <update id="updateStProdSplyUprc" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.updateStProdSplyUprc */
        <![CDATA[
        UPDATE  TB_MS_PRODUCT
        SET     SPLY_UPRC   = #{splyUprc}
        ,       MOD_DT      = #{modDt}
        ,       MOD_ID      = #{modId}
        WHERE   STORE_CD  IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd})
        AND     PROD_CD   =  #{prodCd}
        AND     SPLY_UPRC <> #{splyUprc}
        ]]>
    </update>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경시 거래처정산 데이터 등록 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_EXACT_CALC, TB_PO_HQ_VENDR_INSTOCK
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 거래처정산 데이터를 등록한다.
    -->
    <insert id="insertVendrExact" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.insertVendrExact */
        INSERT INTO TB_PO_HQ_VENDR_EXACT_CALC
        (
            HQ_OFFICE_CD,
            VENDR_CD,
            EXCCLC_DATE,
            SEQ_NO,
            EXCCLC_FG,
            EXCCLC_AMT,
            EXCCLC_VAT,
            EXCCLC_TOT,
            SLIP_NO,
            REMARK,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT  tphvi.HQ_OFFICE_CD
        ,       tphvi.VENDR_CD
        ,       tphvi.INSTOCK_DATE
        ,       (SELECT TO_NUMBER(NVL(MAX(SEQ_NO), 0)+1) FROM TB_PO_HQ_VENDR_EXACT_CALC WHERE HQ_OFFICE_CD = tphvi.HQ_OFFICE_CD AND VENDR_CD = tphvi.VENDR_CD AND EXCCLC_DATE = tphvi.INSTOCK_DATE)
        ,       tphvi.SLIP_FG
        ,       tphvi.IN_AMT
        ,       tphvi.IN_VAT
        ,       tphvi.IN_TOT
        ,       tphvi.SLIP_NO
        ,       tphvi.REMARK
        ,       #{regDt}
        ,       #{regId}
        ,       #{modDt}
        ,       #{modId}
        FROM    TB_PO_HQ_VENDR_INSTOCK tphvi
        WHERE   tphvi.HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     tphvi.SLIP_NO       =   #{slipNo}
    </insert>


    <!-- 거래처 입고/반출등록 - 입고/반출정보 진행상태 변경시 거래처정산 데이터 삭제 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_EXACT_CALC
        PARAM    : vendrInstockVO
        COMMENTS : 거래처 입고/반출정보 진행상태 변경시 거래처정산 데이터를 삭제한다.
    -->
    <delete id="deleteVendrExact" parameterType="vendrInstockVO">
        /* USE : VendrInstockHqMapper.deleteVendrExact */
        DELETE  TB_PO_HQ_VENDR_EXACT_CALC
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </delete>


    <!--                엑셀업로드 시작                 -->
    <!--  거래처 입고/반출등록 엑셀업로드 - 엑셀업로드 수량추가 -->
    <!--
        TABLE    : TB_PO_TEMP_EXCEL, TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : excelUploadVO
        COMMENTS : 거래처 입고/반출등록 엑셀업로드 - 엑셀업로드 수량추가인 경우 기존에 등록된 내역을 TEMP 테이블에 입력한다.
    -->
    <insert id="insertExcelUploadAddQty" parameterType="excelUploadVO">
        /* USE : VendrInstockHqMapper.insertExcelUploadAddQty */
        INSERT INTO TB_PO_TEMP_EXCEL
        (   SESSION_ID
        ,   HQ_OFFICE_CD
        ,   PROD_CD
        ,   UPRC
        ,   UNIT_QTY
        ,   ETC_QTY
        ,   QTY
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        )
        SELECT  #{sessionId}
        ,       #{hqOfficeCd}
        ,       PROD_CD
        ,       COST_UPRC
        ,       ORDER_UNIT_QTY
        ,       ORDER_ETC_QTY
        ,       0
        ,       #{regDt}
        ,       #{regId}
        ,       #{modDt}
        ,       #{modId}
        FROM    TB_PO_HQ_VENDR_INSTOCK_DTL
        WHERE   HQ_OFFICE_CD=  #{hqOfficeCd}
        AND     SLIP_NO     =  #{slipNo}
        AND     PROD_CD     IN (    SELECT  PROD_CD
                                    FROM    TB_PO_TEMP_EXCEL
                                    WHERE   SESSION_ID  = #{sessionId}
                                    AND     PROD_CD     IS NOT  NULL
                                    AND     PROD_CD     IN (    SELECT  PROD_CD
                                                                FROM    TB_HQ_PRODUCT
                                                                WHERE   HQ_OFFICE_CD  =  #{hqOfficeCd}
                                                                AND     PO_PROD_FG    IN ('1','3')
                                                                AND     USE_YN        =  'Y'
                                                            )
                                )
    </insert>


    <!--  거래처 입고/반출등록 엑셀업로드 - 기존 데이터중 엑셀업로드 한 데이터와 같은 상품 삭제 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL, TB_PO_TEMP_EXCEL
        PARAM    : excelUploadVO
        COMMENTS : 거래처 입고/반출등록 엑셀업로드 - 기존 데이터중 엑셀업로드 한 데이터와 같은 상품은 삭제한다.
    -->
    <delete id="deleteVendrInstockToExcelUploadData" parameterType="excelUploadVO">
        /* USE : VendrInstockHqMapper.deleteVendrInstockToExcelUploadData */
        DELETE  TB_PO_HQ_VENDR_INSTOCK_DTL
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     PROD_CD       IN  ( SELECT  PROD_CD
                                    FROM    TB_PO_TEMP_EXCEL
                                    WHERE   SESSION_ID  = #{sessionId}
                                    AND     PROD_CD     IS NOT NULL
                                  )
    </delete>


    <!--  거래처 입고/반출등록 엑셀업로드 - 엑셀업로드 한 수량을 입고수량으로 입력 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL, TB_PO_TEMP_EXCEL, TB_HQ_PRODUCT
        PARAM    : excelUploadVO
        COMMENTS : 거래처 입고/반출등록 엑셀업로드 - 엑셀업로드 한 수량을 입고수량으로 입력한다.
    -->
    <insert id="insertVendrInstockToExcelUploadData" parameterType="excelUploadVO">
        /* USE : VendrInstockHqMapper.insertVendrInstockToExcelUploadData */
        <selectKey resultType="int" keyProperty="vatFg" order="BEFORE">
            SELECT  DECODE(VAT_INCLD_YN,'Y',1,0) AS VAT_FG
            FROM    TB_HQ_VENDOR
            WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
            AND     VENDR_CD      = #{vendrCd}
        </selectKey>

        INSERT INTO TB_PO_HQ_VENDR_INSTOCK_DTL
        (   HQ_OFFICE_CD
        ,   SLIP_NO
        ,   STORAGE_CD
        ,   HQ_BRAND_CD
        ,   PROD_CD
        ,   SLIP_FG
        ,   COST_UPRC
        ,   PO_UNIT_FG
        ,   PO_UNIT_QTY
        ,   IN_UNIT_QTY
        ,   IN_ETC_QTY
        ,   IN_TOT_QTY
        ,   IN_AMT
        ,   IN_VAT
        ,   IN_TOT
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        )
        SELECT  #{hqOfficeCd}
        ,       #{slipNo}
        ,       '000' AS STORAGE_CD
        ,       '00' AS HQ_BRAND_CD
        ,       tpte.PROD_CD
        ,       #{slipFg}
        ,       tpte.UPRC
        ,       thp.PO_UNIT_FG
        ,       thp.PO_UNIT_QTY
        ,       tpte.UNIT_QTY * ${slipFg} AS IN_UNIT_QTY
        ,       tpte.ETC_QTY * ${slipFg} AS IN_ETC_QTY
        ,       tpte.QTY * ${slipFg} AS IN_TOT_QTY
        ,       (ROUND(tpte.UPRC*(tpte.UNIT_QTY*thp.PO_UNIT_QTY + tpte.ETC_QTY)/thp.PO_UNIT_QTY)
                - ROUND(ROUND(tpte.UPRC*(tpte.UNIT_QTY*thp.PO_UNIT_QTY + tpte.ETC_QTY)/thp.PO_UNIT_QTY)*thp.VAT_FG*NVL(${vatFg},0)/11)) * ${slipFg} AS IN_AMT
        ,       (ROUND(ROUND(tpte.UPRC*(tpte.UNIT_QTY*thp.PO_UNIT_QTY + tpte.ETC_QTY)/thp.PO_UNIT_QTY)*thp.VAT_FG/(10+NVL(${vatFg},0)))) * ${slipFg} AS IN_VAT
        ,       (ROUND(tpte.UPRC*(tpte.UNIT_QTY*thp.PO_UNIT_QTY + tpte.ETC_QTY)/thp.PO_UNIT_QTY)
                - ROUND(ROUND(tpte.UPRC*(tpte.UNIT_QTY*thp.PO_UNIT_QTY + tpte.ETC_QTY)/thp.PO_UNIT_QTY)*thp.VAT_FG*NVL(${vatFg},0)/11)
                + ROUND(ROUND(tpte.UPRC*(tpte.UNIT_QTY*thp.PO_UNIT_QTY + tpte.ETC_QTY)/thp.PO_UNIT_QTY)*thp.VAT_FG/(10+NVL(${vatFg},0)))) * ${slipFg} AS IN_TOT
        ,       #{regDt}
        ,       #{regId}
        ,       #{modDt}
        ,       #{modId}
        FROM    (   SELECT  tpte.HQ_OFFICE_CD
                    ,       tpte.PROD_CD
                    ,       MAX(NVL(tpte.UPRC, 0)) UPRC
                    ,       TRUNC(SUM(NVL(tpte.UNIT_QTY, 0)*thp.PO_UNIT_QTY+NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0))/thp.PO_UNIT_QTY) AS UNIT_QTY
                    ,       ( MOD   (SUM(NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0)),thp.PO_UNIT_QTY)
                            * DECODE(${slipFg}, 1, DECODE(SUBSTR(thp.PO_UNIT_ALLOW_FG, 1, 1), 'B', 0, 1), DECODE(SUBSTR(thp.PO_UNIT_ALLOW_FG, 2, 1), 'B', 0, 1))
                            ) AS ETC_QTY
                    ,       (SUM (NVL(tpte.UNIT_QTY, 0)*thp.PO_UNIT_QTY+NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0))
                                - DECODE(${slipFg}, 1, DECODE(SUBSTR(thp.PO_UNIT_ALLOW_FG, 1, 1), 'B', MOD(SUM(NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0)),thp.PO_UNIT_QTY), 0)
                                        , DECODE(SUBSTR(thp.PO_UNIT_ALLOW_FG, 2, 1), 'B', MOD(SUM(NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0)),thp.PO_UNIT_QTY), 0)
                                        )
                            ) AS QTY
                    FROM    TB_PO_TEMP_EXCEL tpte
                    ,       TB_HQ_PRODUCT thp
                    WHERE   tpte.SESSION_ID   =   #{sessionId}
                    AND     tpte.PROD_CD      IS  NOT NULL
                    AND     thp.HQ_OFFICE_CD  =   tpte.HQ_OFFICE_CD
                    AND     thp.PROD_CD       =   tpte.PROD_CD
                    AND     thp.HQ_OFFICE_CD  =   #{hqOfficeCd}
                    AND     thp.PO_PROD_FG    IN  ('1','3')
                    AND     thp.USE_YN        =   'Y'
                    AND     tpte.PROD_CD      IN  ( SELECT  PROD_CD
                                                    FROM    TB_HQ_VENDOR_PROD
                                                    WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
                                                    AND     VENDR_CD      = #{vendrCd}
                                                  )
                    GROUP
                    BY      tpte.HQ_OFFICE_CD
                    ,       tpte.PROD_CD
                    ,       thp.PO_UNIT_QTY
                    ,       thp.PO_UNIT_ALLOW_FG
                ) tpte
        ,       TB_HQ_PRODUCT thp
        WHERE   thp.HQ_OFFICE_CD   =   #{hqOfficeCd}
        AND     thp.HQ_OFFICE_CD   =   tpte.HQ_OFFICE_CD
        AND     thp.PROD_CD        =   tpte.PROD_CD
        AND     NVL(tpte.QTY,0)    >   0
    </insert>


    <!--  거래처 입고/반출등록 엑셀업로드 - 정상 입력된 데이터 TEMP 테이블에서 삭제 -->
    <!--
        TABLE    : TB_PO_TEMP_EXCEL, TB_HQ_PRODUCT
        PARAM    : excelUploadVO
        COMMENTS : 거래처 입고/반출등록 엑셀업로드 - 정상 입력된 데이터 TEMP 테이블에서 삭제한다.
    -->
    <delete id="deleteExcelUploadCompleteData" parameterType="excelUploadVO">
        /* USE : VendrInstockHqMapper.deleteExcelUploadCompleteData */
        DELETE  TB_PO_TEMP_EXCEL
        WHERE   SESSION_ID  = #{sessionId}
        AND     PROD_CD     IS NOT NULL
        AND     PROD_CD     IN  (   SELECT  PROD_CD
                                    FROM    (   SELECT  tpte.PROD_CD
                                                ,       (SUM (NVL(tpte.UNIT_QTY, 0)*thp.PO_UNIT_QTY+NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0))
                                                        - DECODE(${slipFg}, 1, DECODE(SUBSTR(thp.PO_UNIT_ALLOW_FG, 1, 1), 'B', MOD(SUM(NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0)),thp.PO_UNIT_QTY), 0)
                                                                , DECODE(SUBSTR(thp.PO_UNIT_ALLOW_FG, 2, 1), 'B', MOD(SUM(NVL(tpte.ETC_QTY, 0)+NVL(tpte.QTY, 0)),thp.PO_UNIT_QTY), 0)
                                                                )
                                                        ) AS QTY
                                                FROM    TB_PO_TEMP_EXCEL tpte
                                                ,       TB_HQ_PRODUCT thp
                                                WHERE   tpte.SESSION_ID   =   #{sessionId}
                                                AND     tpte.PROD_CD      IS  NOT NULL
                                                AND     thp.HQ_OFFICE_CD  =   tpte.HQ_OFFICE_CD
                                                AND     thp.PROD_CD       =   tpte.PROD_CD
                                                AND     thp.HQ_OFFICE_CD  =   #{hqOfficeCd}
                                                AND     thp.PO_PROD_FG    IN  ('1','3')
                                                AND     thp.USE_YN        =   'Y'
                                                AND     tpte.PROD_CD      IN  ( SELECT  PROD_CD
                                                                                FROM    TB_HQ_VENDOR_PROD
                                                                                WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
                                                                                AND     VENDR_CD      = #{vendrCd}
                                                                              )
                                                GROUP
                                                BY      tpte.PROD_CD
                                                ,       thp.PO_UNIT_QTY
                                                ,       thp.PO_UNIT_ALLOW_FG
                                            ) tpte
                                    WHERE   NVL(tpte.QTY,0) > 0
                                )
    </delete>
    <!--                엑셀업로드 끝                 -->
</mapper>
