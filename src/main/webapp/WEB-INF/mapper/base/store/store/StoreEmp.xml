<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    StoreEmp.xml
    매장사원관리 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이한빈     2018.08.16      최초작성
-->
<mapper namespace="kr.co.solbipos.base.store.emp.store.service.impl.StoreEmpMapper">

    <resultMap id="storeEmpMap" type="DefaultMap">
        <result column="SMS_RECV_YN" property="smsRecvYn" typeHandler="CustomBooleanTypeHandler"/>
    </resultMap>

    <!-- 매장사원목록 조회 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장사원목록을 조회한다.
    -->
    <select id="getStoreEmpList" parameterType="storeEmpVO" resultMap="storeEmpMap">
        /* USE : StoreEmpMapper.getStoreEmpList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
            tme.STORE_CD,
            tme.EMP_NO,
            tme.EMP_NM,
            tme.EMP_PWD,
            tme.WEB_USE_YN,
            tcn_web_use_yn.NMCODE_NM AS WEB_USE_YN_NM,
            tme.USER_ID,
            tme.MP_NO,
            tme.SERVICE_FG,
            tcn_service_fg.NMCODE_NM AS SERVICE_FG_NM,
            tme.SMS_RECV_YN
            <include refid="CmmSQL.PagingTemplateCount"/>
        FROM
            TB_MS_EMPLOYEE tme
        LEFT OUTER JOIN TB_CM_NMCODE tcn_service_fg ON
            tme.SERVICE_FG = tcn_service_fg.NMCODE_CD
            AND tcn_service_fg.NMCODE_GRP_CD = '008'
        LEFT OUTER JOIN TB_CM_NMCODE tcn_web_use_yn ON
            tme.WEB_USE_YN = tcn_web_use_yn.NMCODE_CD
            AND tcn_web_use_yn.NMCODE_GRP_CD = '904'
        <where>
            <if test="storeCd != null and storeCd != ''">
                AND tme.STORE_CD = #{storeCd}
            </if>
            <if test="empNo != null and empNo != ''">
                AND tme.EMP_NO = #{empNo}
            </if>
            <if test="empNm != null and empNm != ''">
                AND tme.EMP_NM LIKE '%'||#{empNm}||'%'
            </if>
            <if test="userId != null and userId != ''">
                AND tme.USER_ID LIKE '%'||#{userId}||'%'
            </if>
            <if test='serviceFg != null and serviceFg.code != ""'>
                AND tme.SERVICE_FG = #{serviceFg.code}
            </if>
            <if test="mpNo != null and mpNo != ''">
                AND tme.MP_NO LIKE '%'||#{mpNo}||'%'

            </if>
            <if test='webUseYn != null and webUseYn.code != ""'>
                AND tme.WEB_USE_YN = #{webUseYn.code}
            </if>
            <if test='smsRecvYn != null and smsRecvYn.code != ""'>
                AND tme.SMS_RECV_YN = #{smsRecvYn.code}
            </if>
            <if test="chkDt == false">
                <if test="startDt != null and startDt != '' and endDt != null and endDt != ''">
                    AND tme.REG_DT BETWEEN #{startDt}||'000000' AND #{endDt}||'235959' --조회(등록)일자
                </if>
            </if>
        </where>
        ORDER BY
            tme.EMP_NO
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매장사원 조회 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장사원을 조회한다.
    -->
    <select id="getStoreEmp" parameterType="storeEmpVO" resultType="DefaultMap">
        /* USE : StoreEmpMapper.getStoreEmp */
        SELECT
        tme.STORE_CD,
        tme.EMP_NO,
        tme.EMP_NM,
        tme.EMP_PWD,
        tme.WEB_USE_YN,
        tcn_web_use_yn.NMCODE_NM AS WEB_USE_YN_NM,
        tme.USER_ID,
        tme.MP_NO,
        tme.SERVICE_FG,
        tcn_service_fg.NMCODE_NM AS SERVICE_FG_NM,
        tme.SMS_RECV_YN,
        tcn_sms_recv_yn.NMCODE_NM AS SMS_RECV_YN_NM
        FROM
        TB_MS_EMPLOYEE tme
        LEFT OUTER JOIN TB_CM_NMCODE tcn_service_fg ON
        tme.SERVICE_FG = tcn_service_fg.NMCODE_CD
        AND tcn_service_fg.NMCODE_GRP_CD = '008'
        LEFT OUTER JOIN TB_CM_NMCODE tcn_web_use_yn ON
        tme.WEB_USE_YN = tcn_web_use_yn.NMCODE_CD
        AND tcn_web_use_yn.NMCODE_GRP_CD = '904'
        LEFT OUTER JOIN TB_CM_NMCODE tcn_sms_recv_yn ON
        tme.SMS_RECV_YN = tcn_sms_recv_yn.NMCODE_CD
        AND tcn_sms_recv_yn.NMCODE_GRP_CD = '105'
        WHERE
        tme.STORE_CD = #{storeCd}
        AND tme.EMP_NO = #{empNo}
    </select>

    <!-- 매장사원 등록 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장사원을 등록한다.
    -->
    <insert id="insertStoreEmp" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.insertStoreEmp */
        INSERT INTO TB_MS_EMPLOYEE tme
        (
            tme.STORE_CD,
            tme.EMP_NO,
            tme.EMP_NM,
            tme.EMP_PWD,
            tme.WEB_USE_YN,
            tme.USER_ID,
            tme.MP_NO,
            tme.SERVICE_FG,
            tme.SMS_RECV_YN,
            tme.REG_ID,
            tme.REG_DT,
            tme.MOD_ID,
            tme.MOD_DT
        )
        VALUES
        (
            #{storeCd},
            #{empNo},
            #{empNm},
            #{empPwd},
            #{webUseYn.code},
            #{userId},
            #{mpNo},
            #{serviceFg.code},
            #{smsRecvYn.code},
            #{regId},
            #{regDt},
            #{regId},
            #{regDt}
        )
    </insert>

    <!-- 매장사원 수정 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장사원을 수정한다.
    -->
    <update id="updateStoreEmp" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.updateStoreEmp */
        UPDATE TB_MS_EMPLOYEE tme
        SET
        tme.EMP_NM = #{empNm},
        tme.WEB_USE_YN = #{webUseYn.code},
        <if test='webUseYn != null and webUseYn.code == "Y" and userId != null and userId != ""'>
        tme.USER_ID = #{userId},
        </if>
        tme.MP_NO = #{mpNo},
        tme.SERVICE_FG = #{serviceFg.code},
        tme.SMS_RECV_YN = #{smsRecvYn.code},
        tme.MOD_ID = #{regId},
        tme.MOD_DT = #{regDt}
        WHERE
        tme.STORE_CD = #{storeCd}
        AND tme.EMP_NO = #{empNo}
    </update>

    <!-- 존재하는 웹 사용자 ID 조회 -->
    <!--
        TABLE    : TB_WB_USER_INFO
        PARAM    : storeEmpVO
        COMMENTS : 웹 사용자 ID를 조회한다.
    -->
    <select id="getExistUserId" parameterType="java.lang.String" resultType="java.lang.String">
        /* USE : StoreEmpMapper.getExistUserId */
        SELECT
        twui.USER_ID
        FROM TB_WB_USER_INFO twui
        WHERE
        twui.USER_ID = #{userId}
    </select>

    <!-- 매장사원 기존 패스워드 조회 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE, TB_WB_USER_INFO
        PARAM    : storeEmpVO
        COMMENTS : 매장사원의 기존 패스워드를 조회한다.
    -->
    <select id="getCurrentPwd" parameterType="storeEmpVO" resultType="java.lang.String">
        /* USE : StoreEmpMapper.getCurrentPwd */
        <choose>
            <when test='webUseYn != null and webUseYn.code =="Y"'>
                SELECT
                twui.USER_PWD
                FROM TB_WB_USER_INFO twui
                WHERE
                twui.USER_ID = #{userId}
            </when>
            <otherwise>
                SELECT
                tme.EMP_PWD
                FROM TB_MS_EMPLOYEE tme
                WHERE
                tme.STORE_CD = #{storeCd}
                AND tme.EMP_NO = #{empNo}
            </otherwise>
        </choose>
    </select>

    <!-- 매장사원 로그인 정보 등록/수정 -->
    <!--
        TABLE    : TB_WB_USER_INFO
        PARAM    : storeEmpVO
        COMMENTS : 매장사원의 로그인정보를 등록/수정한다.
    -->
    <insert id="saveWebUser" parameterType="webUserVO">
        /* USE : StoreEmpMapper.saveWebUser */
        MERGE INTO TB_WB_USER_INFO twui
        USING ( SELECT #{userId} AS USER_ID
                  FROM DUAL ) org
        ON (
            twui.USER_ID = org.USER_ID
        )
        WHEN MATCHED THEN
        UPDATE
        SET
            twui.USER_PWD = #{userPwd},
            twui.LAST_PWD_CHG_DT = #{lastPwdChgDt},
            twui.MOD_DT = #{regDt},
            twui.MOD_ID = #{regId}
        WHEN NOT MATCHED THEN
        INSERT
        (
            USER_ID,
            USER_PWD,
            AUTH_GRP_CD,
            LOGIN_FAIL_CNT,
            LOCK_CD,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{userId},
            #{userPwd},
            '000004',
            0,
            'N',
            #{useYn.code},
            #{regDt},
            #{regId},
            #{regDt},
            #{regId}
        )
    </insert>

    <!-- 매장사원 로그인 정보 등록/수정 -->
    <!--
        TABLE    : TB_WB_USER_INFO
        PARAM    : storeEmpVO
        COMMENTS : 매장사원의 로그인정보를 등록/수정한다.
    -->
    <update id="updateWebUserUseYn" parameterType="webUserVO">
        /* USE : StoreEmpMapper.updateWebUserUseYn */
        UPDATE TB_WB_USER_INFO twui
        SET
        twui.USE_YN = #{useYn.code},
        twui.MOD_DT = #{regDt},
        twui.MOD_ID = #{regId}
        WHERE
        twui.USER_ID = #{userId}
    </update>

    <!-- 매장사원 패스워드 변경이력 등록 -->
    <!--
        TABLE    : TB_WB_USER_INFO
        PARAM    : storeEmpVO
        COMMENTS : 매장사원의 패스워드 이력을 등록한다.
    -->
    <update id="insertWebPwdChangeHistory" parameterType="webUserVO">
        /* USE : StoreEmpMapper.insertWebPwdChangeHistory */
        INSERT INTO TB_WB_PWD_CHG_HIST twpch
        (
            twpch.USER_ID,
            twpch.IDX,
            twpch.PRIOR_PWD,
            twpch.REG_IP,
            twpch.REG_DT,
            twpch.REG_ID
        )
        VALUES
        (
            #{userId},
            (SELECT NVL(MAX(IDX),0) + 1 AS MAX FROM TB_WB_PWD_CHG_HIST WHERE USER_ID = #{userId}),
            #{priorPwd},
            #{regIp},
            #{regDt},
            #{regId}
        )
    </update>
</mapper>