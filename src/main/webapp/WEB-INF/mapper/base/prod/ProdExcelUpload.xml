<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    ProdExcelUpload.xml
    상품엑셀업로드
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2020.09.09     최초작성
-->
<mapper namespace="kr.co.solbipos.base.prod.prodExcelUpload.service.impl.ProdExcelUploadMapper">

    <!-- 상품분류 콤보 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_CLASS, TB_MS_PRODUCT_CLASS
        COMMENTS : [본사]상품_분류, [매장]상품_분류
    -->
    <select id="prodClassComboList" parameterType="ProdExcelUploadVO" resultType="DefaultMap">
        /* ProdExcelUploadMapper.prodClassComboList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thpc.PROD_CLASS_CD AS VALUE
                , SUBSTR( SYS_CONNECT_BY_PATH(thpc.PROD_CLASS_NM,'▶') , 2 ) AS NAME
                , SUBSTR( SYS_CONNECT_BY_PATH(thpc.PROD_CLASS_CD,'▶') , 2 ) AS PATH
                FROM TB_HQ_PRODUCT_CLASS thpc
                WHERE 1=1
                AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                START WITH thpc.P_PROD_CLASS_CD = '00000' AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                CONNECT BY thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmpc.PROD_CLASS_CD AS VALUE
                , SUBSTR( SYS_CONNECT_BY_PATH(tmpc.PROD_CLASS_NM,'▶') , 2 ) AS NAME
                , SUBSTR( SYS_CONNECT_BY_PATH(tmpc.PROD_CLASS_CD,'▶') , 2 ) AS PATH
                FROM (SELECT * FROM TB_MS_PRODUCT_CLASS WHERE STORE_CD = #{storeCd}) tmpc
                WHERE 1=1
                START WITH tmpc.P_PROD_CLASS_CD = '00000' AND tmpc.STORE_CD = #{storeCd}
                CONNECT BY tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}
            </when>
        </choose>
    </select>

    <!-- 검증결과 전체 삭제 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <delete id="getProdExcelUploadCheckDeleteAll" parameterType="ProdExcelUploadVO">
        /* ProdExcelUploadMapper.getProdExcelUploadCheckDeleteAll */
        DELETE
        TB_TMP_EXCEL_PRODUCT
        WHERE 1=1
        AND SESSION_ID = #{sessionId}
        AND HQ_OFFICE_CD = #{membrOrgnCd}
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                AND STORE_CD = #{storeCd}
            ]]>
        </if>
    </delete>

    <!-- 검증결과 삭제 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <delete id="getProdExcelUploadCheckDelete" parameterType="ProdExcelUploadVO">
        /* ProdExcelUploadMapper.getProdExcelUploadCheckDelete */
        DELETE
        TB_TMP_EXCEL_PRODUCT
        WHERE 1=1
        AND SESSION_ID = #{sessionId}
        AND HQ_OFFICE_CD = #{membrOrgnCd}
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                AND STORE_CD = #{storeCd}
            ]]>
        </if>
        AND PROD_CD = #{prodCd}
        <if test='deleteFg != null and deleteFg != ""'>
            AND RESULT = #{deleteFg}
        </if>
    </delete>

    <!-- 검증결과 조회 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <select id="getProdExcelUploadCheckList"  parameterType="ProdExcelUploadVO" resultType="DefaultMap">
        /* ProdExcelUploadMapper.getProdExcelUploadCheckList */
        SELECT
        SESSION_ID,
        SEQ,
        HQ_OFFICE_CD,
        STORE_CD,
        RESULT,
        NVL(PROD_CD, '') AS PROD_CD,
        NVL(PROD_NM, '') AS PROD_NM,
        HQ_BRAND_CD,
        PROD_CLASS_CD,
        CORNR_CD,
        ORGPLCE_CD,
        SDATTR_CLASS_CD,
        SDSEL_GRP_CD,
        POINT_SAVE_YN,
        PROD_DC_FG,
        CASE PROD_TYPE_FG WHEN '4' THEN '2' ELSE VAT_FG END AS VAT_FG,
        PROD_TIP_YN,
        PROD_PACK_AMT,
        PROD_DLVR_AMT,
        PROD_TYPE_FG,
        SALE_PROD_YN,
        STOCK_PROD_YN,
        SIDE_PROD_YN,
        SET_PROD_FG,
        NVL(COST_UPRC, '') AS COST_UPRC,
        LAST_COST_UPRC,
        NVL(SPLY_UPRC, '') AS SPLY_UPRC,
        SPLY_UPRC_USE_YN,
        PO_PROD_FG,
        PO_UNIT_FG,
        PO_UNIT_QTY,
        PO_UNIT_ALLOW_FG,
        PO_MIN_QTY,
        SAFE_STOCK_QTY,
        STOCK_UNIT_FG,
        USE_YN,
        REMARK,
        NVL(SALE_UPRC, '') AS SALE_UPRC,
        NVL(BARCD_CD, '') AS BAR_CD,
        REG_DT,
        REG_ID,
        MOD_DT,
        MOD_ID,
        VENDR_CD,
        START_STOCK_QTY,
        PRC_CTRL_FG,
        NVL(STIN_SALE_UPRC, '') AS STIN_SALE_UPRC,
        NVL(DLVR_SALE_UPRC, '') AS DLVR_SALE_UPRC,
        NVL(PACK_SALE_UPRC, '') AS PACK_SALE_UPRC,
        NVL(DEPOSIT_CUP_FG, '') AS DEPOSIT_CUP_FG,
        CASE PROD_TYPE_FG WHEN '4' THEN 'N' ELSE POINT_USE_YN END AS POINT_USE_YN,
        CASE PROD_TYPE_FG WHEN '4' THEN 'N' ELSE DC_YN END AS DC_YN
        FROM TB_TMP_EXCEL_PRODUCT
        WHERE 1=1
        AND SESSION_ID = #{sessionId}
        AND HQ_OFFICE_CD = #{membrOrgnCd}
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                AND STORE_CD = #{storeCd}
            ]]>
        </if>
    </select>

    <!-- 업로드시 임시테이블 저장 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <insert id="getProdExcelUploadCheckSave" parameterType="ProdExcelUploadVO">
        /* ProdExcelUploadMapper.getProdExcelUploadCheckSave */
        INSERT INTO TB_TMP_EXCEL_PRODUCT
        (
            SESSION_ID,
            SEQ,
            HQ_OFFICE_CD,
            STORE_CD,
            RESULT,
            PROD_CD,
            PROD_NM,
            HQ_BRAND_CD,
            PROD_CLASS_CD,
            CORNR_CD,
            ORGPLCE_CD,
            SDATTR_CLASS_CD,
            SDSEL_GRP_CD,
            POINT_SAVE_YN,
            PROD_DC_FG,
            VAT_FG,
            PROD_TIP_YN,
            PROD_PACK_AMT,
            PROD_DLVR_AMT,
            PROD_TYPE_FG,
            SALE_PROD_YN,
            STOCK_PROD_YN,
            SIDE_PROD_YN,
            SET_PROD_FG,
            COST_UPRC,
            LAST_COST_UPRC,
            SPLY_UPRC,
            SPLY_UPRC_USE_YN,
            PO_PROD_FG,
            PO_UNIT_FG,
            PO_UNIT_QTY,
            PO_UNIT_ALLOW_FG,
            PO_MIN_QTY,
            SAFE_STOCK_QTY,
            STOCK_UNIT_FG,
            USE_YN,
            REMARK,
            SALE_UPRC,
            BARCD_CD,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            VENDR_CD,
            START_STOCK_QTY,
            PRC_CTRL_FG,
            STIN_SALE_UPRC,
            DLVR_SALE_UPRC,
            PACK_SALE_UPRC,
            DEPOSIT_CUP_FG,
            POINT_USE_YN,
            DC_YN
        ) VALUES (
            #{sessionId},
            #{seq},
            #{membrOrgnCd},
            #{storeCd},
            #{result},
            #{prodCd},
            #{prodNm},
            NVL(#{hqBrandCd}, '0000000'),
            #{prodClassCd},
            '', --CORNR_CD
            '', --ORGPLCE_CD
            '', --SDATTR_CLASS_CD
            '', --SDSEL_GRP_CD
            'Y', --POINT_SAVE_YN
            '', -- PROD_DC_FG
             #{vatFg},
            'N', --PROD_TIP_YN
            '0', --PROD_PACK_AMT
            '0', --PROD_DLVR_AMT
            #{prodTypeFg},
            #{saleProdYn},
            #{stockProdYn},
            'N', --SIDE_PROD_YN
            '1', --SET_PROD_FG
            REPLACE(#{costUprcD}, ',',''),
            '0', --LAST_COST_UPRC
            REPLACE(#{splyUprcD}, ',',''),
            'Y', --SPLY_UPRC_USE_YN
            #{poProdFg},
            #{poUnitFg}, --PO_UNIT_FG
            REPLACE(#{poUnitQtyI}, ',',''), --PO_UNIT_QTY
            '', --PO_UNIT_ALLOW_FG
            REPLACE(#{poMinQtyI}, ',',''),
            REPLACE(#{safeStockQtyI}, ',',''),
            '', --STOCK_UNIT_FG
            'Y', --USE_YN
            #{remark}, --REMARK
            REPLACE(#{saleUprc}, ',',''),
            #{barCd},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId},
            #{vendrCd},
            REPLACE(#{startStockQtyI}, ',',''),
            #{prcCtrlFg},
            REPLACE(NVL(#{stinSaleUprc}, #{saleUprc}), ',',''),
            REPLACE(NVL(#{dlvrSaleUprc}, #{saleUprc}), ',',''),
            REPLACE(NVL(#{packSaleUprc}, #{saleUprc}), ',',''),
            #{depositCupFg},
            #{pointUseYn},
            #{dcYn}
         )
    </insert>

    <!-- 브랜드코드 검증 조회 -->
    <!--
        TABLE    : TB_HQ_BRAND, TB_MS_BRAND
        COMMENTS : [본사/매장]브랜드코드
        * 매장 브랜드 코드 9자리로 변경될 예정이니 추후에 기본 브랜드코드 변경해야함
    -->
    <select id="getHqBrandCdCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getHqBrandCdCheck */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL((MIN(HQ_BRAND_CD) KEEP(DENSE_RANK FIRST ORDER BY MOD_DT DESC)), '0000000') AS HQ_BRAND_CD
                FROM TB_HQ_BRAND
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND HQ_BRAND_NM = #{hqBrandCd}
                AND USE_YN = 'Y'
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL((MIN(MS_BRAND_CD) KEEP(DENSE_RANK FIRST ORDER BY MOD_DT DESC)), '0000000') AS MS_BRAND_CD
                FROM TB_MS_BRAND
                WHERE STORE_CD = #{storeCd}
                AND MS_BRAND_NM = #{hqBrandCd}
                AND USE_YN = 'Y'
            </when>
        </choose>
    </select>

    <!-- 상품유형 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getProdTypeFgCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getProdTypeFgCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '008'
        AND NMCODE_NM = #{prodTypeFg}
        GROUP BY NMCODE_CD
    </select>

    <!-- 판매상품여부 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getSaleProdYnCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getSaleProdYnCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '067'
        AND NMCODE_NM = #{saleProdYn}
        GROUP BY NMCODE_CD
    </select>

    <!-- 발주상품구분 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getPoProdFgCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getPoProdFgCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '092'
        AND NMCODE_NM = #{poProdFg}
        GROUP BY NMCODE_CD
    </select>

    <!-- 발주단위구분 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getPoUnitFgCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getPoUnitFgCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '093'
        AND NMCODE_NM = #{poUnitFg}
        GROUP BY NMCODE_CD
    </select>

    <!-- 과세여부 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getVatFgCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getVatFgCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '039'
        AND NMCODE_NM = #{vatFg}
        GROUP BY NMCODE_CD
    </select>

    <!-- 재고관리여부 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getStockProdYnCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getStockProdYnCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '067'
        AND NMCODE_NM = #{stockProdYn}
        GROUP BY NMCODE_CD
    </select>

    <!-- 거래처 검증 조회 -->
    <!--
        TABLE    : TB_HQ_VENDOR, TB_MS_VENDOR
        COMMENTS : [본사]상품_거래처, [매장]상품_거래처
    -->
    <select id="getVendrCdCheck" parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getVendrCdCheck */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL(MAX(VENDR_CD), #{vendrCd}) AS VENDR_CD
                FROM TB_HQ_VENDOR
                WHERE 1=1
                AND HQ_OFFICE_CD = #{membrOrgnCd}
                AND VENDR_NM = #{vendrCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL(MAX(VENDR_CD), #{vendrCd}) AS VENDR_CD
                FROM TB_MS_VENDOR
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND VENDR_NM = #{vendrCd}
            </when>
        </choose>
    </select>

    <!-- 상품분류 검증 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_CLASS, TB_MS_PRODUCT_CLASS
        COMMENTS : [본사]상품_분류, [매장]상품_분류
    -->
    <select id="getProdClassCdCheck" parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getProdClassCdCheck */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL(MAX(PROD_CLASS_CD), #{prodClassCd}||' - 존재하지 않는 상품분류입니다.') AS PROD_CLASS_CD
                FROM
                (
                SELECT
                thpc.PROD_CLASS_CD AS PROD_CLASS_CD
                , SUBSTR( SYS_CONNECT_BY_PATH(thpc.PROD_CLASS_NM,'▶') , 2 ) AS PATH_NM
                , SUBSTR( SYS_CONNECT_BY_PATH(thpc.PROD_CLASS_CD,'▶') , 2 ) AS PATH
                FROM TB_HQ_PRODUCT_CLASS thpc
                WHERE 1=1
                AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                START WITH thpc.P_PROD_CLASS_CD = '00000' AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                CONNECT BY thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                )
                WHERE 1=1
                AND ( PATH_NM = #{prodClassCd}
                OR    PROD_CLASS_CD = #{prodClassCd}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL(MAX(PROD_CLASS_CD), #{prodClassCd}||' - 존재하지 않는 상품분류입니다.') AS PROD_CLASS_CD
                FROM
                (
                SELECT
                tmpc.PROD_CLASS_CD AS PROD_CLASS_CD
                , SUBSTR( SYS_CONNECT_BY_PATH(tmpc.PROD_CLASS_NM,'▶') , 2 ) AS PATH_NM
                , SUBSTR( SYS_CONNECT_BY_PATH(tmpc.PROD_CLASS_CD,'▶') , 2 ) AS PATH
                FROM (SELECT * FROM TB_MS_PRODUCT_CLASS WHERE STORE_CD = #{storeCd}) tmpc
                WHERE 1=1
                START WITH tmpc.P_PROD_CLASS_CD = '00000' AND tmpc.STORE_CD = #{storeCd}
                CONNECT BY tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}
                )
                WHERE 1=1
                AND ( PATH_NM = #{prodClassCd}
                OR    PROD_CLASS_CD = #{prodClassCd}
                )
            </when>
        </choose>
    </select>

    <!-- 가격관리구분 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getPrcCtrlFgCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getPrcCtrlFgCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '045'
        AND NMCODE_NM = #{prcCtrlFg}
        GROUP BY NMCODE_CD
    </select>

    <!-- 판매상품여부 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getPointUseYnCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getPointUseYnCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '067'
          AND NMCODE_NM = #{pointUseYn}
        GROUP BY NMCODE_CD
    </select>

    <!-- 할인여부 검증 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        COMMENTS : [공통]명칭코드
    -->
    <select id="getDcYnCheck"  parameterType="ProdExcelUploadVO" resultType="String">
        /* ProdExcelUploadMapper.getDcYnCheck */
        SELECT (CASE WHEN COUNT(NMCODE_CD) = '0' THEN '' ELSE NMCODE_CD END) AS NMCODE_CD
        FROM TB_CM_NMCODE
        WHERE NMCODE_GRP_CD = '067'
          AND NMCODE_NM = #{dcYn}
        GROUP BY NMCODE_CD
    </select>

    <!-- 기초마스터 체크 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <select id="getMasterChk"  parameterType="ProdExcelUploadVO" resultType="DefaultMap">
        /* ProdExcelUploadMapper.getMasterChk */
        SELECT 	PROD_CLASS_CNT,
        VENDR_CNT
        FROM	(
        SELECT 	COUNT(PROD_CLASS_CD) AS PROD_CLASS_CNT
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                FROM 	TB_HQ_PRODUCT_CLASS
                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                FROM 	TB_MS_PRODUCT_CLASS
                WHERE 	STORE_CD = #{storeCd}
            </when>
        </choose>
        ),
        (
        SELECT 	COUNT(VENDR_CD) AS VENDR_CNT
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                FROM 	TB_HQ_VENDOR
                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                FROM 	TB_MS_VENDOR
                WHERE 	STORE_CD = #{storeCd}
            </when>
        </choose>
        )
    </select>


    <!-- 기초마스터등록 - 상품분류 조회 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <select id="getProdClassCdInsertList"  parameterType="ProdExcelUploadVO" resultType="DefaultMap">
        /* ProdExcelUploadMapper.getProdClassCdInsertList */
        SELECT  DISTINCT PROD_CLASS_CD
        ,       REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 1) AS Level1
        ,       REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 2) AS Level2
        ,       REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 3) AS Level3
        ,       REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 1) || REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 2) AS Level12
        ,       REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 1) || REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 2) || REGEXP_SUBSTR(PROD_CLASS_CD,'[^▶]+', 1, 3) AS Level123
        FROM
        (
            SELECT REPLACE(PROD_CLASS_CD, ' - 존재하지 않는 상품분류입니다.', '') AS PROD_CLASS_CD
            FROM TB_TMP_EXCEL_PRODUCT
            WHERE 1=1
            AND SESSION_ID = #{sessionId}
            AND HQ_OFFICE_CD = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
                <![CDATA[
                    AND STORE_CD = #{storeCd}
                ]]>
            </if>
        )
        ORDER BY Level1, Level2, Level3
    </select>

    <!-- 기초마스터등록 - 거래처 조회 -->
    <!--
        TABLE    : TB_TMP_EXCEL_PRODUCT
        COMMENTS : [임시]상품엑셀업로드
    -->
    <select id="getVendrCdInsertList"  parameterType="ProdExcelUploadVO" resultType="DefaultMap">
        /* ProdExcelUploadMapper.getVendrCdInsertList */
        SELECT 	DISTINCT VENDR_CD AS VENDR_NM,
        '1' AS VENDOR_FG,
        'Y' AS VAT_INCLD_YN
        FROM    TB_TMP_EXCEL_PRODUCT
        WHERE   1=1
        AND SESSION_ID = #{sessionId}
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                AND STORE_CD = #{storeCd}
            ]]>
        </if>
        AND VENDR_CD IS NOT NULL
        ORDER BY VENDR_CD
    </select>
</mapper>