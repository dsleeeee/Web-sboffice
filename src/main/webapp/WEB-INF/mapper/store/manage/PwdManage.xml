<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    PwdManage.xml
    비밀번호 임의변경 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       노현수     2018.06.15      최초작성
-->
<mapper namespace="kr.co.solbipos.store.manage.pwdmanage.service.impl.PwdManageMapper">

    <!-- 비밀번호 임의변경 대상 목록 조회 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE, TB_MS_STORE, TB_HQ_OFFICE, TB_CM_NMCODE
        PARAM    : pwdManageVO
        COMMENTS : 비밀번호를 변경할 대상 목록을 조회한다.
    -->
    <select id="getPwdManageList" parameterType="pwdManageVO" resultType="DefaultMap">
        /* USE : PwdManageMapper.getPwdManageList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT emp.*
        <include refid="CmmSQL.PagingTemplateCount"/>
          FROM (
            <if test='(orgnFg != null and orgnFg.toString() != "HQ") and (orgnFg != null and orgnFg.toString() != "STORE")'>
                SELECT
                    'A' AS EMP_ORGN_FG,
                    '' AS HQ_OFFICE_CD,
                    '' AS HQ_OFFICE_NM,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    tce.EMP_NO,
                    tce.EMP_NM AS USER_NM,
                    tce.USER_ID,
                    tce.SERVICE_FG,
                    tce.WEB_USE_YN,
                    tce.MP_NO,
                    '' AS EMAIL_ADDR,
                    '' AS ADDR,
                    tca.AGENCY_CD,
                    tca.AGENCY_NM
                FROM
                    TB_CM_EMPLOYEE tce
                INNER JOIN TB_CM_AGENCY tca ON
                    tce.AGENCY_CD = tca.AGENCY_CD
                LEFT OUTER JOIN TB_CM_NMCODE tcn ON
                    tce.SERVICE_FG = tcn.NMCODE_CD
                AND tcn.NMCODE_GRP_CD = '007'
                UNION ALL
            </if>
            <if test='orgnFg != null and orgnFg.toString() != "STORE"'>
                SELECT
                    'H' AS EMP_ORGN_FG,
                    tho.HQ_OFFICE_CD,
                    tho.HQ_OFFICE_NM,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    the.EMP_NO,
                    the.EMP_NM AS USER_NM,
                    the.USER_ID,
                    the.SERVICE_FG,
                    the.WEB_USE_YN,
                    the.MP_NO,
                    '' AS EMAIL_ADDR,
                    '' AS ADDR,
                    tho.AGENCY_CD,
                    tca.AGENCY_NM
                FROM
                    TB_HQ_EMPLOYEE the
                INNER JOIN TB_HQ_OFFICE tho ON
                    the.HQ_OFFICE_CD = tho.HQ_OFFICE_CD
                LEFT OUTER JOIN TB_CM_NMCODE tcn ON
                    the.SERVICE_FG = tcn.NMCODE_CD
                AND tcn.NMCODE_GRP_CD = '007'
                LEFT OUTER JOIN TB_CM_AGENCY tca ON
                    tho.AGENCY_CD = tca.AGENCY_CD
                WHERE 1=1
                UNION ALL
            </if>
                SELECT
                    'S' AS EMP_ORGN_FG,
                    tho.HQ_OFFICE_CD,
                    tho.HQ_OFFICE_NM,
                    tms.STORE_CD,
                    tms.STORE_NM,
                    tme.EMP_NO,
                    tme.EMP_NM AS USER_NM,
                    tme.USER_ID,
                    tme.SERVICE_FG,
                    tme.WEB_USE_YN,
                    tme.MP_NO,
                    tme.EMAIL_ADDR,
                    tme.ADDR || tme.ADDR_DTL AS ADDR,
                    tms.AGENCY_CD,
                    tca.AGENCY_NM
                FROM
                  TB_MS_EMPLOYEE tme
                INNER JOIN TB_MS_STORE tms ON
                  tme.STORE_CD = tms.STORE_CD
                LEFT OUTER JOIN TB_HQ_OFFICE tho ON
                  tms.HQ_OFFICE_CD = tho.HQ_OFFICE_CD
                LEFT OUTER JOIN TB_CM_NMCODE tcn ON
                    tme.SERVICE_FG = tcn.NMCODE_CD
                    AND tcn.NMCODE_GRP_CD = '007'
                LEFT OUTER JOIN TB_CM_AGENCY tca ON
                    tms.AGENCY_CD = tca.AGENCY_CD
                WHERE 1=1
          ) emp
        WHERE 1=1
        <if test='orgnFg != null and orgnFg.toString() == "AGENCY"'>
            AND emp.AGENCY_CD = #{agencyCd}
        </if>
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            AND emp.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND emp.STORE_CD = #{storeCd}
        </if>
        <if test='empOrgnFg != null and empOrgnFg.toString() != ""'>
            AND emp.EMP_ORGN_FG = #{empOrgnFg}
        </if>
        <if test='srchAgencyCd != null and srchAgencyCd != ""'>
            AND emp.AGENCY_CD  LIKE '%'|| #{srchAgencyCd} || '%'
        </if>
        <if test='agencyNm != null and agencyNm != ""'>
            AND emp.AGENCY_NM LIKE '%'|| #{agencyNm} || '%'
        </if>
        <if test='srchHqOfficeCd != null and srchHqOfficeCd != ""'>
            AND emp.HQ_OFFICE_CD  LIKE '%'|| #{srchHqOfficeCd} || '%'
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            AND emp.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} || '%'
        </if>
        <if test='srchStoreCd != null and srchStoreCd != ""'>
            AND emp.STORE_CD LIKE '%'|| #{srchStoreCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND emp.STORE_NM LIKE '%'||#{storeNm} || '%'
        </if>
        <if test='userId != null and userId != ""'>
            AND emp.USER_ID LIKE '%'||#{userId}||'%'
        </if>
        <if test='userNm != null and userNm != ""'>
            AND emp.USER_NM LIKE '%'||#{userNm}||'%'
        </if>
        ORDER BY emp.EMP_ORGN_FG ASC, emp.HQ_OFFICE_CD ASC, emp.STORE_CD ASC, emp.USER_NM
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 비밀번호 임의변경 권한 확인 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE, TB_MS_STORE, TB_HQ_OFFICE, TB_CM_NMCODE
        PARAM    : pwdManageVO
        COMMENTS : 비밀번호 임의변경 권한 확인
    -->
    <select id="checkModifyPwd" parameterType="pwdManageVO" resultType="java.lang.Integer">
        /* USE : PwdManageMapper.checkModifyPwd */
        SELECT COUNT(*)
          FROM (
            <if test='(orgnFg != null and orgnFg.toString() != "HQ") and (orgnFg != null and orgnFg.toString() != "STORE")'>
                SELECT
                    'A' AS EMP_ORGN_FG,
                    '' AS HQ_OFFICE_CD,
                    '' AS HQ_OFFICE_NM,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    tce.EMP_NO,
                    tce.EMP_NM AS USER_NM,
                    tce.USER_ID,
                    tce.SERVICE_FG,
                    tce.WEB_USE_YN,
                    tce.MP_NO,
                    '' AS EMAIL_ADDR,
                    '' AS ADDR,
                    tca.AGENCY_CD,
                    tca.AGENCY_NM
                FROM
                    TB_CM_EMPLOYEE tce
                INNER JOIN TB_CM_AGENCY tca ON
                    tce.AGENCY_CD = tca.AGENCY_CD
                LEFT OUTER JOIN TB_CM_NMCODE tcn ON
                    tce.SERVICE_FG = tcn.NMCODE_CD
                AND tcn.NMCODE_GRP_CD = '007'
                UNION ALL
            </if>
            <if test='orgnFg != null and orgnFg.toString() != "STORE"'>
                SELECT
                    'H' AS EMP_ORGN_FG,
                    tho.HQ_OFFICE_CD,
                    tho.HQ_OFFICE_NM,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    the.EMP_NO,
                    the.EMP_NM AS USER_NM,
                    the.USER_ID,
                    the.SERVICE_FG,
                    the.WEB_USE_YN,
                    the.MP_NO,
                    '' AS EMAIL_ADDR,
                    '' AS ADDR,
                    tho.AGENCY_CD,
                    tca.AGENCY_NM
                FROM
                    TB_HQ_EMPLOYEE the
                INNER JOIN TB_HQ_OFFICE tho ON
                    the.HQ_OFFICE_CD = tho.HQ_OFFICE_CD
                LEFT OUTER JOIN TB_CM_NMCODE tcn ON
                    the.SERVICE_FG = tcn.NMCODE_CD
                AND tcn.NMCODE_GRP_CD = '007'
                LEFT OUTER JOIN TB_CM_AGENCY tca ON
                    tho.AGENCY_CD = tca.AGENCY_CD
                WHERE 1=1
                UNION ALL
            </if>
                SELECT
                    'S' AS EMP_ORGN_FG,
                    tho.HQ_OFFICE_CD,
                    tho.HQ_OFFICE_NM,
                    tms.STORE_CD,
                    tms.STORE_NM,
                    tme.EMP_NO,
                    tme.EMP_NM AS USER_NM,
                    tme.USER_ID,
                    tme.SERVICE_FG,
                    tme.WEB_USE_YN,
                    tme.MP_NO,
                    tme.EMAIL_ADDR,
                    tme.ADDR || tme.ADDR_DTL AS ADDR,
                    tms.AGENCY_CD,
                    tca.AGENCY_NM
                FROM
                  TB_MS_EMPLOYEE tme
                INNER JOIN TB_MS_STORE tms ON
                  tme.STORE_CD = tms.STORE_CD
                LEFT OUTER JOIN TB_HQ_OFFICE tho ON
                  tms.HQ_OFFICE_CD = tho.HQ_OFFICE_CD
                LEFT OUTER JOIN TB_CM_NMCODE tcn ON
                    tme.SERVICE_FG = tcn.NMCODE_CD
                    AND tcn.NMCODE_GRP_CD = '007'
                LEFT OUTER JOIN TB_CM_AGENCY tca ON
                    tms.AGENCY_CD = tca.AGENCY_CD
                WHERE 1=1
          ) emp
        WHERE 1=1
        <if test='orgnFg != null and orgnFg.toString() == "AGENCY"'>
            AND emp.AGENCY_CD = #{agencyCd}
        </if>
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            AND emp.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND emp.STORE_CD = #{storeCd}
        </if>
        <if test='empOrgnFg != null and empOrgnFg.toString() != ""'>
            AND emp.EMP_ORGN_FG = #{empOrgnFg}
        </if>
        <if test='srchAgencyCd != null and srchAgencyCd != ""'>
            AND emp.AGENCY_CD  LIKE '%'|| #{srchAgencyCd} || '%'
        </if>
        <if test='agencyNm != null and agencyNm != ""'>
            AND emp.AGENCY_NM LIKE '%'|| #{agencyNm} || '%'
        </if>
        <if test='srchHqOfficeCd != null and srchHqOfficeCd != ""'>
            AND emp.HQ_OFFICE_CD  LIKE '%'|| #{srchHqOfficeCd} || '%'
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            AND emp.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} || '%'
        </if>
        <if test='srchStoreCd != null and srchStoreCd != ""'>
            AND emp.STORE_CD LIKE '%'|| #{srchStoreCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND emp.STORE_NM LIKE '%'||#{storeNm} || '%'
        </if>
        <if test='userId != null and userId != ""'>
            AND emp.USER_ID LIKE '%'||#{userId}||'%'
        </if>
        <if test='userNm != null and userNm != ""'>
            AND emp.USER_NM LIKE '%'||#{userNm}||'%'
        </if>
    </select>

    <!-- 기존 비밀번호 조회 -->
    <!--
        TABLE    : TB_WB_USER_INFO, TB_MS_EMPLOYEE
        PARAM    : pwdManageVO
        COMMENTS : 사용자의 기존 비밀번호를 조회한다.
    -->
    <select id="getOldPassword" parameterType="pwdManageVO" resultType="java.lang.String">
        /* USE : PwdManageMapper.getOldPassword */
        <choose>
            <when test='pwdChgFg != null and pwdChgFg.toString() == "WEB"'>
                SELECT
                    USER_PWD
                FROM
                    TB_WB_USER_INFO
                WHERE
                    USER_ID = #{userId}
            </when>
            <otherwise>
                  SELECT
                      EMP_PWD
                  FROM
                      TB_MS_EMPLOYEE
                  WHERE
                      STORE_CD = #{storeCd}
                    AND
                      EMP_NO = #{empNo}
            </otherwise>
        </choose>
    </select>

    <!-- 비밀번호 변경 -->
    <!--
        TABLE    : TB_WB_USER_INFO, TB_MS_EMPLOYEE
        PARAM    : pwdManageVO
        COMMENTS : 사용자의 비밀번호를 변경한다.
    -->
    <update id="updatePassword" parameterType="pwdManageVO">
        /* USE : PwdManageMapper.updatePassword */
        <choose>
            <when test='pwdChgFg != null and pwdChgFg.toString() == "WEB"'>
                UPDATE
                    TB_WB_USER_INFO
                SET
                    USER_PWD = #{newPassword},
                    MOB_LOGIN_AUTO_SERIAL = #{lastPwdChgDt},
                    LAST_PWD_CHG_DT = #{lastPwdChgDt}
                WHERE
                    USER_ID = #{userId}
            </when>
            <otherwise>
                UPDATE
                    TB_MS_EMPLOYEE
                SET
                    EMP_PWD = #{newPassword},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    EMP_NO = #{empNo}
                   AND
                    USER_ID = #{userId}
            </otherwise>
        </choose>

    </update>

    <!-- 비밀번호 변경이력 저장 -->
    <!--
        TABLE    : TB_WB_PWD_CHG_HIST
        PARAM    : pwdManageVO
        COMMENTS : 사용자의 비밀번호를 변경이력을 저장한다.
    -->
    <insert id="insertPasswordHistory" parameterType="pwdManageVO">
        /* PwdManageMapper.insertPwdChgHist */
        INSERT INTO TB_WB_PWD_CHG_HIST
        (
          USER_ID,
          IDX,
          PRIOR_PWD,
          REG_IP,
          REG_DT,
          REG_ID
        ) VALUES (
          #{userId},
          (SELECT NVL(MAX(IDX),0) + 1 AS MAX FROM TB_WB_PWD_CHG_HIST WHERE USER_ID = #{userId}),
          #{priorPwd},
          #{regIp},
          #{regDt},
          #{regId}
        )
    </insert>

    <!-- 로그인 잠금해제 -->
    <!--
        TABLE    : TB_WB_USER_INFO
        PARAM    : pwdManageVO
        COMMENTS : 로그인 잠금을 해제한다.
    -->
    <update id="updatePasswordUnLock" parameterType="pwdManageVO">
        /* USE : PwdManageMapper.updatePasswordUnLock */
        UPDATE TB_WB_USER_INFO
           SET  LOGIN_FAIL_CNT = '0',
                USER_STAT_FG = #{userStatFg}
         WHERE USER_ID = #{userId}
    </update>

</mapper>
