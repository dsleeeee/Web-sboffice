<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    HqEmp.xml
    본사 사원관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       정상화     2018.08.14     최초생성
    2       김지은     2018.11.21     기능수정(angular)
-->

<mapper namespace="kr.co.solbipos.base.store.emp.hq.service.impl.HqEmpMapper">

    <!-- 본사 사원 목록 조회 -->
    <!--
        TABLE    : TB_HQ_EMPLOYEE
        PARAM    : hqEmpVO
        COMMENTS : 본사 사원 목록을 조회한다.
    -->
    <select id="getHqEmpList" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.getHqEmpList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        the.EMP_NO,
        the.EMP_NM,
        the.USER_ID,
        the.WEB_USE_YN,
        the.SERVICE_FG,
        the.MP_NO,
        the.SMS_RECV_YN,
        twub.HQ_BRAND_CD,
        twub.HQ_BRAND_NM,
        the.USE_YN,
        NVL(the.MAIN_SALE_FG, 0) AS MAIN_SALE_FG
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM TB_HQ_EMPLOYEE the,
        (
            SELECT
            twub.USER_ID,
            LISTAGG(twub.HQ_BRAND_CD, ',') WITHIN GROUP (ORDER BY twub.HQ_BRAND_CD) AS HQ_BRAND_CD,
            LISTAGG(thb.HQ_BRAND_NM, ',') WITHIN GROUP (ORDER BY thb.HQ_BRAND_NM) AS HQ_BRAND_NM
            FROM TB_WB_USER_BRAND twub,
            TB_HQ_BRAND thb
            WHERE 1=1
            AND thb.HQ_OFFICE_CD = #{hqOfficeCd}
            AND thb.HQ_BRAND_CD = twub.HQ_BRAND_CD
            GROUP BY twub.USER_ID
        ) twub
--         WHERE the.USE_YN = 'Y'
        WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test="chkDt == false">
            <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
              AND the.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
            </if>
        </if>
        <if test="empNo != null and empNo != ''">
            AND the.EMP_NO LIKE '%'|| #{empNo} ||'%'
        </if>
        <if test="empNm != null and empNm != ''">
            AND the.EMP_NM LIKE '%'|| #{empNm} ||'%'
        </if>
        <if test="userId != null and userId != ''">
            AND the.USER_ID LIKE '%'|| #{userId} ||'%'
        </if>
        <if test="serviceFg != null and serviceFg != ''">
            AND the.SERVICE_FG = #{serviceFg}
        </if>
        <if test="mpNo != null and mpNo != ''">
            AND the.MP_NO LIKE '%'|| #{mpNo} ||'%'
        </if>
        <if test="webUseYn != null and webUseYn.toString() != ''">
            AND the.WEB_USE_YN = #{webUseYn}
        </if>
        <if test="smsRecvYn != null and smsRecvYn != ''">
            AND the.SMS_RECV_YN = #{smsRecvYn}
        </if>
        <if test='mainSaleFg != null and mainSaleFg == "0"'>
            AND (the.MAIN_SALE_FG = #{mainSaleFg}
              OR the.MAIN_SALE_FG IS NULL)
        </if>
        <if test='mainSaleFg != null and mainSaleFg == "1"'>
            AND the.MAIN_SALE_FG = #{mainSaleFg}
        </if>
        AND twub.USER_ID (+)= the.USER_ID
        ORDER BY the.REG_DT DESC
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 본사 사원 상세정보 조회 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE, TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원의 상세정보를 조회한다.
    -->
    <select id="getHqEmpDtlInfo" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.getHqEmpDtlInfo */
        SELECT
        the.EMP_NO,
        the.EMP_NM,
        the.SMS_RECV_YN,
        (SELECT tcn.NMCODE_NM FROM TB_CM_NMCODE tcn WHERE tcn.NMCODE_GRP_CD ='072' AND tcn.NMCODE_CD = the.SMS_RECV_YN ) AS SMS_RECV_YN_NM,
        the.USER_ID,
        the.WEB_USE_YN,
        (SELECT tcn.NMCODE_NM FROM TB_CM_NMCODE tcn WHERE tcn.NMCODE_GRP_CD ='067' AND tcn.NMCODE_CD = the.WEB_USE_YN ) AS WEB_USE_YN_NM,
        the.SERVICE_FG,
        (SELECT tcn.NMCODE_NM FROM TB_CM_NMCODE tcn WHERE tcn.NMCODE_GRP_CD ='007' AND tcn.NMCODE_CD = the.SERVICE_FG ) AS SERVICE_FG_NM,
        the.MP_NO,
        twub.HQ_BRAND_CD,
        twub.HQ_BRAND_NM,
        the.USE_YN,
        NVL(the.MAIN_SALE_FG, '0') AS MAIN_SALE_FG,
        the.VENDR_CD,
        NVL((SELECT VENDR_NM FROM TB_HQ_VENDOR WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND VENDR_CD = the.VENDR_CD), '본사') AS VENDR_NM,
        the.BRANCH_CD,
        NVL((SELECT BRANCH_NM FROM TB_HQ_BRANCH_MOMS WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND BRANCH_CD = the.BRANCH_CD), '그룹없음') AS BRANCH_NM,
        the.MOMS_TEAM,
        the.MOMS_AC_SHOP,
        the.MOMS_AREA_FG,
        the.MOMS_COMMERCIAL,
        the.MOMS_SHOP_TYPE,
        the.MOMS_STORE_MANAGE_TYPE
        FROM TB_HQ_EMPLOYEE the,
        (
            SELECT
            twub.USER_ID,
            LISTAGG(twub.HQ_BRAND_CD, ',') WITHIN GROUP (ORDER BY twub.HQ_BRAND_CD) AS HQ_BRAND_CD,
            LISTAGG(thb.HQ_BRAND_NM, ',') WITHIN GROUP (ORDER BY thb.HQ_BRAND_NM) AS HQ_BRAND_NM
            FROM TB_WB_USER_BRAND twub,
            TB_HQ_BRAND thb
            WHERE 1=1
            AND thb.HQ_OFFICE_CD = #{hqOfficeCd}
            AND thb.HQ_BRAND_CD = twub.HQ_BRAND_CD
            GROUP BY twub.USER_ID
        ) twub
        WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
        AND the.EMP_NO = #{empNo}
        AND twub.USER_ID (+)= the.USER_ID
    </select>

    <!-- 본사 사원 웹 사용자 조회 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 해당 웹 유저 id로 조회되는 사원이 있는지 조회 (중복체크)
    -->
    <select id="getHqUserIdCnt" parameterType="hqEmpVO" resultType="Integer">
        /* USE : HqEmpMapper.getHqUserIdCnt */
        SELECT COUNT(1) AS CNT
          FROM TB_WB_USER_INFO
         WHERE USER_ID = #{userId}
    </select>

    <!-- 신규사원번호 조회 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 신규 등록할 사원번호를 조회한다
    -->
    <select id="getHqEmpNo" parameterType="hqEmpVO" resultType="String">
        /* USE : HqEmpMapper.getHqEmpNo */
        SELECT LPAD(NVL(MAX(EMP_NO)+ 1, 0), 4, '0') AS EMP_NO
          FROM TB_HQ_EMPLOYEE
         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
    </select>

    <!-- 본사 사원 등록 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원 정보를 등록한다.
    -->
    <insert id="insertHqEmpInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.insertHqEmpInfo */
        INSERT INTO TB_HQ_EMPLOYEE
        (
            HQ_OFFICE_CD,
            EMP_NO,
            EMP_NM,
            EMP_PWD,
            WEB_USE_YN,
            USER_ID,
            MP_NO,
            SERVICE_FG,
            SMS_RECV_YN,
            USE_YN,
            MAIN_SALE_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            VENDR_CD,
            BRANCH_CD,
            MOMS_TEAM,
            MOMS_AC_SHOP,
            MOMS_AREA_FG,
            MOMS_COMMERCIAL,
            MOMS_SHOP_TYPE,
            MOMS_STORE_MANAGE_TYPE
        )
        VALUES
        (
            #{hqOfficeCd},
            #{empNo},
            #{empNm},
            #{empPwd},
            #{webUseYn},
            #{userId},
            #{mpNo},
            #{serviceFg},
            #{smsRecvYn},
            #{useYn},
            #{mainSaleFg},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId},
            #{vendrCd},
            #{branchCd},
            #{momsTeam},
            #{momsAcShop},
            #{momsAreaFg},
            #{momsCommercial},
            #{momsShopType},
            #{momsStoreManageType}
        )
    </insert>

     <!-- 본사 사원 웹 사용자 정보 등록 -->
     <!--
           TABLE    : TB_WB_USER_INFO
           PARAM    : hqEmpVO
           COMMENTS : 본사 사원이 웹 사용시, 웹 사용자 정보를 등록한다. 본사 000007 -> FN_TB_WB_AUTHOR_GRP_USE_CD
     -->
    <insert id="insertWbUserInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.insertWbUserInfo */
        INSERT INTO TB_WB_USER_INFO
        (
            USER_ID,
            USER_PWD,
            AUTH_GRP_CD,
            LOGIN_FAIL_CNT,
            LAST_PWD_CHG_DT,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            LOWER(#{userId}),
            #{userPwd},
            (SELECT FN_TB_WB_AUTHOR_GRP_USE_CD(#{hqOfficeCd}, 'H') FROM DUAL),
            0,
            #{regDt},
            #{webUseYn},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 본사 사원 비밀번호 조회 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원의 비밀번호를 조회한다.
    -->
    <select id="getHqEmpPassword" parameterType="hqEmpVO" resultType="java.lang.String">
        /* USE : HqEmpMapper.getHqEmpPassword */
        SELECT twui.USER_PWD
          FROM TB_WB_USER_INFO twui
         WHERE twui.USER_ID = #{userId}
    </select>

    <!-- 본사 사원정보 수정 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원정보를 수정한다.
          MEMO     : USE_YN 은 UPDATE 하지 않는다.(현재 리스트에 USE_YN 이 'Y' 인 데이터만 가져오기 때문
    -->
    <update id="updateHqEmpInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.updateHqEmpInfo */
        UPDATE TB_HQ_EMPLOYEE the
           SET the.EMP_NM = #{empNm},
               the.WEB_USE_YN = #{webUseYn},
               the.USER_ID = #{userId},
               the.MP_NO = #{mpNo},
               the.SERVICE_FG = #{serviceFg},
               the.SMS_RECV_YN = #{smsRecvYn},
               the.USE_YN = #{useYn},
               the.MAIN_SALE_FG = #{mainSaleFg},
               the.MOD_DT = #{modDt},
               the.MOD_ID = #{modId},
               the.VENDR_CD = #{vendrCd},
               the.BRANCH_CD = #{branchCd},
               the.MOMS_TEAM = #{momsTeam},
               the.MOMS_AC_SHOP = #{momsAcShop},
               the.MOMS_AREA_FG = #{momsAreaFg},
               the.MOMS_COMMERCIAL = #{momsCommercial},
               the.MOMS_SHOP_TYPE = #{momsShopType},
               the.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
         WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
           AND the.EMP_NO = #{empNo}
    </update>

    <!-- 본사 웹사용자 정보 수정 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 본사 웹 사용자 정보가 있으면 수정, 없으면 insert 본사 000007 -> FN_TB_WB_AUTHOR_GRP_USE_CD
    -->
    <update id="saveWbUserInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.saveWbUserInfo */
        MERGE INTO TB_WB_USER_INFO twui
        USING (SELECT the.USER_ID
                 FROM TB_HQ_EMPLOYEE the
                WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                  AND the.EMP_NO = #{empNo}
              ) org
           ON (twui.USER_ID = org.USER_ID)
         WHEN MATCHED THEN
       UPDATE
          SET twui.USE_YN = #{webUseYn},
              twui.MOD_DT = #{modDt},
              twui.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
       INSERT
       (
           twui.USER_ID,
           twui.USER_PWD,
           twui.AUTH_GRP_CD,
           twui.LOGIN_FAIL_CNT,
           twui.USE_YN,
           twui.REG_DT,
           twui.REG_ID,
           twui.MOD_DT,
           twui.MOD_ID
       )
       VALUES
       (
           #{userId},
           #{userPwd},
           (SELECT FN_TB_WB_AUTHOR_GRP_USE_CD(#{hqOfficeCd}, 'H') FROM DUAL),
           '0',
           #{webUseYn},
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
       )
    </update>

    <!-- 웹 비밀번호 변경 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 웹 비밀번호 변경한다.
    -->
    <update id="updateUserPassword" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.updateUserPassword */
        UPDATE TB_WB_USER_INFO
           SET USER_PWD = #{userPwd},
               LAST_PWD_CHG_DT = #{modDt},
               MOB_LOGIN_AUTO_SERIAL = #{modDt},
               MOD_DT = #{modDt},
               MOD_ID = #{modId}
         WHERE USER_ID = #{userId}
    </update>

    <!-- 웹 비밀번호 변경 히스토리 등록 -->
    <!--
          TABLE    : TB_WB_PWD_CHG_HIST
          PARAM    : hqEmpVO
          COMMENTS : 웹 비밀번호 변경 히스토리를 등록한다.
    -->
    <insert id="insertPasswordHistory" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.insertPasswordHistory */
        INSERT INTO TB_WB_PWD_CHG_HIST
        (
            USER_ID,
            IDX,
            PRIOR_PWD,
            REG_IP,
            REG_DT,
            REG_ID
        )
        VALUES
        (
            #{userId},
            (SELECT NVL(MAX(IDX),0) + 1 AS MAX FROM TB_WB_PWD_CHG_HIST WHERE USER_ID = #{userId}),
            #{priorPwd},
            #{regIp},
            #{regDt},
            #{regId}
        )
    </insert>

    <!-- 권한복사를 위한 본사 사원 리스트 조회 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원을 조회한다.
    -->
    <select id="authHqEmpList" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.authHqEmpList */
        SELECT EMP_NO AS VALUE,
               '[' || EMP_NO || '] ' || EMP_NM AS NAME
          FROM TB_HQ_EMPLOYEE
         WHERE USE_YN = 'Y'
           AND HQ_OFFICE_CD = #{hqOfficeCd}
           AND EMP_NO != #{empNo}
         ORDER BY EMP_NO
    </select>

    <!-- 사용 메뉴 조회 -->
    <!--
        TABLE    : TB_WB_RESRCE_INFO, TB_HQ_EMPLOYEE, TB_WB_USER_INFO, TB_WB_AUTHOR_EXCEPT_V01
        PARAM    : hqEmpVO
        COMMENTS : 사용 메뉴를 조회한다.
    -->
    <select id="avlblMenu" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.avlblMenu */
        SELECT twr.*
          FROM (
          SELECT twr.RESRCE_CD AS RESRCE_CD_LARGE,
                 twr.RESRCE_NM AS RESRCE_NM_LARGE,
                 twri.RESRCE_CD AS RESRCE_CD_MID,
                 twri.RESRCE_NM AS RESRCE_NM_MID,
                 twrif.RESRCE_CD AS RESRCE_CD_SMALL,
                 twrif.RESRCE_NM AS RESRCE_NM_SMALL
            FROM TB_WB_RESRCE_INFO twr,
                 TB_WB_RESRCE_INFO twri,
                 TB_WB_RESRCE_INFO twrif
           WHERE 1=1
             AND twr.USE_YN = 'Y'
             AND twri.USE_YN = 'Y'
             AND twrif.USE_YN = 'Y'
             AND twri.P_RESRCE = twr.RESRCE_CD
             AND twrif.P_RESRCE = twri.RESRCE_CD
             AND (twr.SPCL_AUTHOR IS NULL OR twr.SPCL_AUTHOR NOT IN ('A01'))
             AND twrif.DISP_LEVEL = '3'
           ORDER BY twr.RESRCE_CD, twri.RESRCE_CD, twrif.RESRCE_CD
              ) twr,
              (
          SELECT twa.RESRCE_CD
            FROM TB_HQ_EMPLOYEE the,
                 TB_WB_USER_INFO twu,
                 TB_WB_AUTHOR_GRP_RESRCE twa
           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
             AND the.EMP_NO = '0000'
             AND twu.USER_ID = the.USER_ID
             AND twa.AUTH_GRP_CD = twu.AUTH_GRP_CD
             AND twa.USE_YN = 'Y'
           MINUS
          SELECT twa.RESRCE_CD
            FROM TB_HQ_EMPLOYEE the,
                 TB_WB_USER_INFO twu,
                 TB_WB_AUTHOR_EXCEPT_V01 twa
           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
             AND the.EMP_NO = '0000'
             AND twu.USER_ID = the.USER_ID
             AND twa.USER_ID = twu.USER_ID
             AND twa.INCLD_EXCLD_FG = 'E'
             AND twa.USE_YN = 'Y'
           MINUS
          SELECT twa.RESRCE_CD
            FROM TB_HQ_EMPLOYEE the,
                 TB_WB_USER_INFO twu,
                 TB_WB_AUTHOR_EXCEPT_V01 twa
           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
             AND the.EMP_NO = #{empNo}
             AND twu.USER_ID = the.USER_ID
             AND twa.USER_ID = twu.USER_ID
             AND twa.INCLD_EXCLD_FG = 'E'
             AND twa.USE_YN = 'Y'
               ) the
       WHERE the.RESRCE_CD = twr.RESRCE_CD_SMALL
    </select>

    <!-- 미사용 메뉴 조회 -->
    <!--
        TABLE    : TB_WB_RESRCE_INFO, TB_HQ_EMPLOYEE, TB_WB_USER_INFO, TB_WB_AUTHOR_EXCEPT_V01
        PARAM    : hqEmpVO
        COMMENTS : 미사용 메뉴를 조회한다.
    -->
    <select id="beUseMenu" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.beUseMenu */
        SELECT twr.*
          FROM (
          SELECT twr.RESRCE_CD AS RESRCE_CD_LARGE,
                 twr.RESRCE_NM AS RESRCE_NM_LARGE,
                 twri.RESRCE_CD AS RESRCE_CD_MID,
                 twri.RESRCE_NM AS RESRCE_NM_MID,
                 twrif.RESRCE_CD AS RESRCE_CD_SMALL,
                 twrif.RESRCE_NM AS RESRCE_NM_SMALL
            FROM TB_WB_RESRCE_INFO twr,
                 TB_WB_RESRCE_INFO twri,
                 TB_WB_RESRCE_INFO twrif
           WHERE 1=1
             AND twr.USE_YN = 'Y'
             AND twri.USE_YN = 'Y'
             AND twrif.USE_YN = 'Y'
             AND twri.P_RESRCE = twr.RESRCE_CD
             AND twrif.P_RESRCE = twri.RESRCE_CD
             AND (twr.SPCL_AUTHOR IS NULL OR twr.SPCL_AUTHOR NOT IN ('A01'))
             AND twrif.DISP_LEVEL = '3'
           ORDER BY twr.RESRCE_CD, twri.RESRCE_CD, twrif.RESRCE_CD
               ) twr,
               (
          SELECT twa.RESRCE_CD
            FROM TB_HQ_EMPLOYEE the,
                 TB_WB_USER_INFO twu,
                 TB_WB_AUTHOR_EXCEPT_V01 twa
           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
             AND the.EMP_NO = #{empNo}
             AND twu.USER_ID = the.USER_ID
             AND twa.USER_ID = twu.USER_ID
             AND twa.INCLD_EXCLD_FG = 'E'
             AND twa.USE_YN = 'Y'
               ) the
         WHERE the.RESRCE_CD = twr.RESRCE_CD_SMALL
    </select>

    <!-- 메뉴권한복사-->
    <!--
        TABLE    : TB_WB_USER_INFO, TB_HQ_EMPLOYEE
        PARAM    : hqEmpMenuVO
        COMMENTS : 메뉴권한을 복사한다.
    -->
    <update id="copyAuth" parameterType="hqEmpMenuVO" >
        /* USE : HqEmpMapper.copyAuth */
        UPDATE TB_WB_USER_INFO
           SET AUTH_GRP_CD = (SELECT twu.AUTH_GRP_CD
                                FROM TB_HQ_EMPLOYEE the,
                                     TB_WB_USER_INFO twu
                               WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                                 AND the.EMP_NO = #{copyEmpNo}
                                 AND twu.USER_ID = the.USER_ID
                              )
         WHERE USER_ID = (SELECT the.USER_ID
                            FROM TB_HQ_EMPLOYEE the,
                                 TB_WB_USER_INFO twu
                           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                             AND the.EMP_NO = #{empNo}
                             AND twu.USER_ID = the.USER_ID
                          )
    </update>

    <!-- 권한예외 복사-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT, TB_HQ_EMPLOYEE, TB_WB_USER_INFO
        PARAM    : hqEmpMenuVO
        COMMENTS : 예외 권한을 복사한다.
    -->
    <insert id="copyAuthExcp" parameterType="hqEmpMenuVO" >
        /* USE : HqEmpMapper.copyAuthExcp */
        <![CDATA[
        MERGE INTO TB_WB_AUTHOR_EXCEPT twa
        USING DUAL
         ON (
              twa.USER_ID = ( SELECT the.USER_ID
                                FROM TB_HQ_EMPLOYEE the,
                                      TB_WB_USER_INFO twu
                               WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                                 AND the.EMP_NO = #{empNo}
                                 AND twu.USER_ID = the.USER_ID)
              AND twa.RESRCE_CD = #{resrceCd}
             )
         WHEN MATCHED THEN
         UPDATE
            SET twa.INCLD_EXCLD_FG = #{incldExcldFg},
                twa.USE_YN = #{useYn},
                twa.MOD_DT = #{modDt},
                twa.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
         INSERT (USER_ID, RESRCE_CD, INCLD_EXCLD_FG, USE_YN, REG_DT, REG_ID)
         VALUES (
                  (SELECT the.USER_ID FROM TB_HQ_EMPLOYEE the, TB_WB_USER_INFO twu WHERE the.HQ_OFFICE_CD = #{hqOfficeCd} AND the.EMP_NO = #{empNo} AND twu.USER_ID = the.USER_ID),
                  #{resrceCd},
                  #{incldExcldFg},
                  #{useYn},
                  #{regDt},
                  #{regId}
                )
        ]]>
    </insert>

    <!-- 권한예외 복사 시, 복사기준본사의 권한예외 값 조회 -->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT_V01
        PARAM    : hqEmpMenuVO
        COMMENTS : 권한예외 복사 시, 복사기준본사의 권한예외 값을 조회한다.
    -->
    <select id="exceptMenu" parameterType="hqEmpMenuVO" resultType="DefaultMap">
       /* USE : HqEmpMapper.exceptMenu */
        SELECT USER_ID,
                RESRCE_CD,
                INCLD_EXCLD_FG,
                USE_YN
          FROM TB_WB_AUTHOR_EXCEPT_V01
         WHERE USER_ID = (SELECT twu.USER_ID
                             FROM TB_HQ_EMPLOYEE the,
                                   TB_WB_USER_INFO twu
                            WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                              AND the.EMP_NO != '0000'              <!-- 본사 기본계정 제외 -->
                              AND the.EMP_NO = #{copyEmpNo}
                              AND twu.USER_ID = the.USER_ID)
           AND USE_YN = 'Y'
</select>

    <!-- 메뉴권한 전체삭제-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 해당 사원의 메뉴권한 전체를 삭제한다.
    -->
    <delete id="removeAuthAll" parameterType="DefaultMap">
        /* HqEmpMapper.removeAuthAll */
        DELETE TB_WB_AUTHOR_EXCEPT
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_HQ_EMPLOYEE the,
                                 TB_WB_USER_INFO twu
                           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                             AND the.EMP_NO = #{empNo}
                             AND twu.USER_ID = the.USER_ID)
    </delete>

    <!-- 메뉴권한 추가-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 예외 권한을 복사한다.
    -->
    <insert id="addAuth" parameterType="DefaultMap">
        /* USE : HqEmpMapper.addAuth */
        INSERT INTO TB_WB_AUTHOR_EXCEPT
        (
            USER_ID,
            RESRCE_CD,
            INCLD_EXCLD_FG,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            (SELECT twu.USER_ID FROM TB_HQ_EMPLOYEE the, TB_WB_USER_INFO twu WHERE the.HQ_OFFICE_CD = #{hqOfficeCd} AND the.EMP_NO = #{empNo} AND twu.USER_ID = the.USER_ID),
            #{resrceCd},
            #{incldExcldFg},
            'Y',
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 메뉴권한 확인-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT_V01
        COMMENTS : 메뉴권한을 확인한다.
    -->
    <select id="isAuth" parameterType="DefaultMap" resultType="Integer">
        /* USE : HqEmpMapper.isAuth */
        SELECT COUNT(RESRCE_CD) AS CNT
          FROM TB_WB_AUTHOR_EXCEPT_V01
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_HQ_EMPLOYEE the,
                                 TB_WB_USER_INFO twu
                           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                             AND the.EMP_NO = #{empNo}
                             AND twu.USER_ID = the.USER_ID)
           AND RESRCE_CD = #{resrceCd}
           AND USE_YN = 'Y'
    </select>

    <!-- 메뉴권한 삭제-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 메뉴권한을 삭제한다.
    -->
    <delete id="removeAuth" parameterType="DefaultMap">
        /* HqEmpMapper.removeAuth */
        DELETE TB_WB_AUTHOR_EXCEPT
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_HQ_EMPLOYEE the,
                                 TB_WB_USER_INFO twu
                           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                             AND the.EMP_NO = #{empNo}
                             AND twu.USER_ID = the.USER_ID)
           AND RESRCE_CD = #{resrceCd}
    </delete>

    <!-- 미적용 관리브랜드 조회 팝업 - 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSearchNoUserHqBrandList" parameterType="hqEmpVO" resultType="DefaultMap">
        /* HqEmpMapper.getSearchNoUserHqBrandList */
        SELECT
        thb.HQ_BRAND_CD,
        thb.HQ_BRAND_NM,
        thb.USE_YN
        FROM TB_HQ_BRAND thb
        WHERE 1=1
        AND thb.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='chkHqBrandCd != null and chkHqBrandCd != ""'>
            AND thb.HQ_BRAND_CD NOT IN
            <foreach collection="hqBrandCdList" item="item" open="("  separator="," close=")" >
                #{item}
            </foreach>
        </if>
        ORDER BY thb.HQ_BRAND_CD
    </select>

    <!-- 관리브랜드 삭제 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getUserHqBrandSaveUpdate" parameterType="hqEmpVO">
        /* HqEmpMapper.getUserHqBrandSaveUpdate */
        DELETE TB_WB_USER_BRAND
        WHERE 1=1
        AND USER_ID = #{userId}
    </delete>

    <!-- 관리브랜드 저장 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getUserHqBrandSaveInsert" parameterType="hqEmpVO">
        /* HqEmpMapper.getUserHqBrandSaveInsert */
        INSERT INTO TB_WB_USER_BRAND
        (
            USER_ID,
            HQ_BRAND_CD,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        ) VALUES (
            #{userId},
            #{hqBrandCd},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 본사 거래처 조회(콤보박스용) -->
    <!--
        TABLE    : TB_HQ_VENDOR
        PARAM    : hqEmpVO
        COMMENTS : 본사 거래처를 조회한다.
    -->
    <select id="getHqVendrCombo" resultType="DefaultMap">
    /* USE : HqEmpMapper.getHqVendrCombo */
      SELECT '' AS VALUE,
             '본사' AS NAME
        FROM DUAL
       UNION
      SELECT VENDR_CD AS VALUE,
             VENDR_NM AS NAME
        FROM TB_HQ_VENDOR
       WHERE HQ_OFFICE_CD = #{hqOfficeCd}
       ORDER BY VALUE NULLS FIRST, VALUE ASC
    </select>


    <!-- 그룹 조회(콤보박스용) -->
    <!--
        TABLE    : TB_HQ_VENDOR
        PARAM    : hqEmpVO
        COMMENTS : 그룹를 조회한다.
    -->
    <select id="getHqBranchCombo" resultType="DefaultMap">
    /* USE : HqEmpMapper.getHqBranchCombo */
      SELECT '' AS VALUE,
             '그룹 선택' AS NAME
        FROM DUAL
       UNION
      SELECT BRANCH_CD AS VALUE,
             BRANCH_NM AS NAME
        FROM TB_HQ_BRANCH_MOMS
       WHERE HQ_OFFICE_CD = #{hqOfficeCd}
       ORDER BY VALUE NULLS FIRST, VALUE ASC
    </select>

    <!-- 코드별 본사 공통코드 콤보박스 조회 -->
    <!--
        TABLE    : TB_HQ_NMCODE
        COMMENTS :
    -->
    <select id="getHqNmcodeComboList" parameterType="hqEmpVO" resultType="DefaultMap">
        /* HqEmpMapper.getHqNmcodeComboList */
        SELECT
        thn.NMCODE_CD AS VALUE,
        thn.NMCODE_NM AS NAME
        FROM TB_HQ_NMCODE thn
        WHERE 1=1
        AND thn.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thn.NMCODE_GRP_CD = #{nmcodeGrpCd}
        ORDER BY thn.NMCODE_CD
    </select>

</mapper>
