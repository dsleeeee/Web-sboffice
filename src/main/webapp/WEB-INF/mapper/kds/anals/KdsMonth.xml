<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.kds.anals.chart.service.impl.KdsMapper">
    <select id="getKdsMonth" parameterType="KdsVO" resultType="DefaultMap">
        /* KdsMapper.getKdsMonth */
        SELECT
        C.STORE_CD,
        C.PROD_CD,
        C.SALE_MON,
        B.PROD_NM,
        D.STORE_NM,
        <choose>
            <when test='orgnFg != null and orgnFg == "HQ"'>
                FN_GET_PROD_CLASS_CD_NM_STR(#{hqOfficeCd}, B.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM,
            </when>
            <when test='orgnFg != null and orgnFg == "STORE"'>
                FN_GET_PROD_CLASS_CD_NM_STR(#{storeCd}, B.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM,
            </when>
        </choose>
        SUM(C.SALE_QTY) AS SALE_QTY,
        SUM(C.AVG_MAKE) AS AVG_MAKE,
        SUM(C.AVG_PIC) AS AVG_PIC
        FROM
        <choose>
            <when test='orgnFg != null and orgnFg == "HQ"'>
                TB_HQ_PRODUCT       B,
            </when>
            <when test='orgnFg != null and orgnFg == "STORE"'>
                TB_MS_PRODUCT       B,
            </when>
        </choose>
        (
        SELECT
        toodkd.STORE_CD, SUM(toodkd.SALE_QTY) AS SALE_QTY , toodkd.PROD_CD , SUBSTR(toodkd.SALE_DATE, 0, 6) AS SALE_MON , SUM(toodkd.SALE_QTY)
        <if test = 'makeDate == 0'>
            , AVG(toodkd.AVG_S_CK_TO_E_CK) AS AVG_MAKE
        </if>
        <if test = "makeDate == 1">
            , AVG(toodkd.AVG_L_OD_TO_E_CK) AS AVG_MAKE
        </if>
        <if test = 'picDate == 0'>
            , AVG(toodkd.AVG_S_OD_TO_E_PK) AS AVG_PIC
        </if>
        <if test = "picDate == 1">
            , AVG(toodkd.AVG_E_CK_TO_E_PK) AS AVG_PIC
        </if>
        FROM
        TB_OD_ORDER_DTL_KDS_DAILY toodkd
        GROUP BY
        SUBSTR(toodkd.SALE_DATE, 0, 6), toodkd.STORE_CD, toodkd.PROD_CD ) C,
        TB_MS_STORE D
        WHERE
        C.PROD_CD (+)= B.PROD_CD
        <choose>
            <when test='orgnFg != null and orgnFg == "HQ"'>
                AND D.HQ_OFFICE_CD = B.HQ_OFFICE_CD
            </when>
            <when test='orgnFg != null and orgnFg == "STORE"'>
                AND C.STORE_CD = B.STORE_CD
            </when>
        </choose>
        AND C.STORE_CD = D.STORE_CD
        <if test = 'hqOfficeCd != null and hqOfficeCd != ""'>
            AND B.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test = 'storeCd != null and storeCd != ""'>
            AND C.STORE_CD = #{storeCd}
        </if>
        <if test = 'prodCd != null and prodCd != ""'>
           AND C.PROD_CD = #{prodCd}
        </if>
        <if test='prodClassCd != null and prodClassCd != ""'>
            <choose>
                <when test='orgnFg != null and orgnFg == "HQ"'>
                    AND B.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_HQ_PRODUCT_CLASS
                                                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                     CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </when>
                <when test='orgnFg != null and orgnFg == "STORE"'>
                    AND B.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_MS_PRODUCT_CLASS
                                                 WHERE STORE_CD = #{storeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd}    AND STORE_CD = #{storeCd}
                                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </when>
            </choose>
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND B.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        AND C.SALE_MON BETWEEN #{kdsDayStartDate} AND #{kdsDayEndDate}
        GROUP BY
            C.PROD_CD,
            B.PROD_NM,
            C.STORE_CD,
            C.SALE_MON,
            B.PROD_CLASS_CD,
            D.STORE_NM
        ORDER BY
            C.SALE_MON
    </select>
</mapper>
