<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.anals.store.prod.service.impl.StoreProdMapper">
    <!-- 매장별매출분석 - 매장상품순위 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_PROD , TB_MS_PRODUCT_CLASS , TB_MS_PRODUCT
        PARAM    : storeProdVO
        COMMENTS : 매장별매출분석 - 매장상품순위 리스트를 조회한다.
    -->
    <select id="getStoreProdList" parameterType="storeProdVO" resultType="DefaultMap">
        /* USE : StoreProdMapper.getStoreProdList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
 		SELECT B.STORE_CD
 		      , C.STORE_NM
		      , C.RN
		      , C.LV1_NM
              , C.LV2_NM
              , C.LV3_NM
		      , B.PROD_CLASS_CD
		      , B.PROD_CD
		      , B.PROD_NM
		      , NVL(C.TOT_SALE_QTY,0) AS TOT_SALE_QTY
		      , NVL(C.TOT_SALE_AMT,0) AS TOT_SALE_AMT
		      , NVL(C.TOT_DC_AMT,0) AS TOT_DC_AMT
		      , NVL(C.REAL_SALE_AMT,0) AS REAL_SALE_AMT
		      <include refid="CmmSQL.PagingTemplateCount"/>
		 FROM (
		        SELECT B.STORE_CD
		        	, B.PROD_CD
		        	, B.PROD_NM
		        	, B.PROD_CLASS_CD
		        FROM TB_MS_PRODUCT       B
		       ) B
	        , (
	             SELECT M.STORE_CD
	                 , M.LV1_NM
                     , M.LV2_NM
                     , M.LV3_NM
		             , M.STORE_NM
		             , M.PROD_CD
		             , M.RN
		             , M.TOT_SALE_QTY
		             , M.TOT_SALE_AMT
		             , M.TOT_DC_AMT
		             , M.REAL_SALE_AMT
	              FROM (
	                        SELECT TSDP.STORE_CD
	                             , A.LV1_NM
                                 , A.LV2_NM
                                 , A.LV3_NM
	                        	 , TMS.STORE_NM
	                             , TSDP.PROD_CD
	                             , RANK() OVER (PARTITION BY TSDP.STORE_CD ORDER BY SUM(TSDP.REAL_SALE_AMT) DESC) rn
	                             , SUM(TSDP.TOT_SALE_QTY)  AS TOT_SALE_QTY
	                             , SUM(TSDP.TOT_SALE_AMT)  AS TOT_SALE_AMT
	                             , SUM(TSDP.TOT_DC_AMT)    AS TOT_DC_AMT
	                             , SUM(TSDP.REAL_SALE_AMT) AS REAL_SALE_AMT
	                          FROM TB_SL_DAILY_PROD TSDP
	                           		, TB_MS_STORE TMS
	                           		,(
	                         <choose>
							<when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
         					 		     <![CDATA[
							                SELECT  A.HQ_OFFICE_CD
							                ,       A.PROD_CLASS_CD
							                ,       NULL    LV1_CD
							                ,       NULL    LV2_CD
							                ,       NULL    LV3_CD
							                ,       DECODE  (A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
							                                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
							                                )  AS  LV1_NM
							                ,       DECODE  (A.LV ,1  ,NULL
							                                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
							                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
							                                )  AS  LV2_NM
							                ,       DECODE  (A.LV ,1  ,NULL
							                                    ,2  ,NULL
							                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
							                                )  AS  LV3_NM
							                FROM    (
							                        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
							                        FROM    (
							                                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
							                                    FROM    TB_HQ_PRODUCT_CLASS
							                                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
							                                )
							                        START WITH  P_PROD_CLASS_CD ='00000'
							                        CONNECT BY
							                        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
							                        )   A

							                ]]>
				                     )                   A,
				                     TB_HQ_PRODUCT       B
				             WHERE TSDP.STORE_CD = TMS.STORE_CD
                             AND B.HQ_OFFICE_CD   = #{hqOfficeCd}
                             AND B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
                             AND B.PROD_CD       = TSDP.PROD_CD
                             AND TSDP.HQ_OFFICE_CD  = #{hqOfficeCd}
							</when>
							<when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
	         				         <![CDATA[
				                        SELECT  A.STORE_CD
				                        ,       A.PROD_CLASS_CD
				                        ,       NULL    LV1_CD
		                                ,       NULL    LV2_CD
		                                ,       NULL    LV3_CD
				                        ,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
				                                            ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
				                        ,       DECODE(A.LV ,1  ,NULL
				                                            ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
				                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
				                                      )  AS  LV2_NM
				                        ,       DECODE(A.LV ,1  ,NULL
				                                            ,2  ,NULL
				                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
				                        FROM    (
				                                SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
				                                FROM    (
				                                            SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
				                                            FROM    TB_MS_PRODUCT_CLASS
				                                            WHERE   STORE_CD    =  #{storeCd}
				                                        )
				                                START WITH  P_PROD_CLASS_CD ='00000'
				                                CONNECT BY
				                                PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
				                                )   A
				                    ]]>
			                     )                   A,
			                     TB_MS_PRODUCT       B
			             WHERE   B.STORE_CD      = #{storeCd}
			             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
			             AND     B.PROD_CD       = TSDP.PROD_CD
			             AND     TSDP.HQ_OFFICE_CD  = #{hqOfficeCd}
			             AND     TSDP.STORE_CD      = #{storeCd}
			            </when>
	      				</choose>
                        <if test='startDate != null and startDate != ""'>
                          	AND TSDP.SALE_DATE >= #{startDate}
                        </if>
                        <if test='endDate != null and endDate != ""'>
			  		   		AND TSDP.SALE_DATE <![CDATA[<= ]]> #{endDate}
			  		   	</if>
			  		   	<if test='storeCd != null and storeCd != ""'>
						    AND TSDP.STORE_CD IN
						     	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
										#{item}
								</foreach>
						</if>
	                         GROUP BY TSDP.STORE_CD, TSDP.PROD_CD, TMS.STORE_NM, LV1_NM, LV2_NM, LV3_NM
	                  ) M
	                  WHERE 1 = 1
				    <if test='chkProdAll != "Y"'>
					  AND M.RN = 1
					</if>
					<if test='prodCd != null and prodCd != ""'>
   					  AND M.PROD_CD = #{prodCd}
   					</if>
           ) C
		WHERE B.STORE_CD = C.STORE_CD
		AND B.PROD_CD = C.PROD_CD
		ORDER BY C.REAL_SALE_AMT DESC
		<include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

	<!-- 매장별매출분석 - 매장상품순위 리스트(엑셀) 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_PROD , TB_MS_PRODUCT_CLASS , TB_MS_PRODUCT
        PARAM    : storeProdVO
        COMMENTS : 매장별매출분석 - 매장상품순위 리스트를 조회한다.
    -->
    <select id="getStoreProdExcelList" parameterType="storeProdVO" resultType="DefaultMap">
        /* USE : StoreProdMapper.getStoreProdExcelList */
 		SELECT B.STORE_CD
 		      , C.STORE_NM
		      , C.RN
		      , C.LV1_NM
              , C.LV2_NM
              , C.LV3_NM
		      , B.PROD_CLASS_CD
		      , B.PROD_CD
		      , B.PROD_NM
		      , NVL(C.TOT_SALE_QTY,0) AS TOT_SALE_QTY
		      , NVL(C.TOT_SALE_AMT,0) AS TOT_SALE_AMT
		      , NVL(C.TOT_DC_AMT,0) AS TOT_DC_AMT
		      , NVL(C.REAL_SALE_AMT,0) AS REAL_SALE_AMT
		 FROM (
		        SELECT B.STORE_CD
		        	, B.PROD_CD
		        	, B.PROD_NM
		        	, B.PROD_CLASS_CD
		        FROM TB_MS_PRODUCT       B
		       ) B
	        , (
	             SELECT M.STORE_CD
	                 , M.LV1_NM
                     , M.LV2_NM
                     , M.LV3_NM
		             , M.STORE_NM
		             , M.PROD_CD
		             , M.RN
		             , M.TOT_SALE_QTY
		             , M.TOT_SALE_AMT
		             , M.TOT_DC_AMT
		             , M.REAL_SALE_AMT
	              FROM (
	                        SELECT TSDP.STORE_CD
	                             , A.LV1_NM
                                 , A.LV2_NM
                                 , A.LV3_NM
	                        	 , TMS.STORE_NM
	                             , TSDP.PROD_CD
	                             , RANK() OVER (PARTITION BY TSDP.STORE_CD ORDER BY SUM(TSDP.REAL_SALE_AMT) DESC) rn
	                             , SUM(TSDP.TOT_SALE_QTY)  AS TOT_SALE_QTY
	                             , SUM(TSDP.TOT_SALE_AMT)  AS TOT_SALE_AMT
	                             , SUM(TSDP.TOT_DC_AMT)    AS TOT_DC_AMT
	                             , SUM(TSDP.REAL_SALE_AMT) AS REAL_SALE_AMT
	                          FROM TB_SL_DAILY_PROD TSDP
	                           		, TB_MS_STORE TMS
	                           		,(
	                         <choose>
							<when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
         					 		     <![CDATA[
					                        SELECT  A.HQ_OFFICE_CD
					                        ,       A.PROD_CLASS_CD
					                        ,       NULL    LV1_CD
					                        ,       NULL    LV2_CD
					                        ,       NULL    LV3_CD
					                        ,       DECODE  (A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
					                                            ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
					                                        )  AS  LV1_NM
					                        ,       DECODE  (A.LV ,1  ,NULL
					                                            ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
					                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
					                                        )  AS  LV2_NM
					                        ,       DECODE  (A.LV ,1  ,NULL
					                                            ,2  ,NULL
					                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
					                                        )  AS  LV3_NM
					                        FROM    (
					                                SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
					                                FROM    (
					                                            SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
					                                            FROM    TB_HQ_PRODUCT_CLASS
					                                            WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
					                                        )
					                                START WITH  P_PROD_CLASS_CD ='00000'
					                                CONNECT BY
					                                PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
					                                )   A

					                        ]]>
				                     )                   A,
				                     TB_HQ_PRODUCT       B
				             WHERE TSDP.STORE_CD = TMS.STORE_CD
                             AND B.HQ_OFFICE_CD   = #{hqOfficeCd}
                             AND B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
                             AND B.PROD_CD       = TSDP.PROD_CD
                             AND TSDP.HQ_OFFICE_CD  = #{hqOfficeCd}
							</when>
							<when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
	         				         <![CDATA[
				                        SELECT  A.STORE_CD
				                        ,       A.PROD_CLASS_CD
				                        ,       NULL    LV1_CD
		                                ,       NULL    LV2_CD
		                                ,       NULL    LV3_CD
				                        ,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
				                                            ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
				                        ,       DECODE(A.LV ,1  ,NULL
				                                            ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
				                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
				                                      )  AS  LV2_NM
				                        ,       DECODE(A.LV ,1  ,NULL
				                                            ,2  ,NULL
				                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
				                        FROM    (
				                                SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
				                                FROM    (
				                                            SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
				                                            FROM    TB_MS_PRODUCT_CLASS
				                                            WHERE   STORE_CD    =  #{storeCd}
				                                        )
				                                START WITH  P_PROD_CLASS_CD ='00000'
				                                CONNECT BY
				                                PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
				                                )   A
				                    ]]>
			                     )                   A,
			                     TB_MS_PRODUCT       B
			             WHERE   B.STORE_CD      = #{storeCd}
			             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
			             AND     B.PROD_CD       = TSDP.PROD_CD
			             AND     TSDP.HQ_OFFICE_CD  = #{hqOfficeCd}
			             AND     TSDP.STORE_CD      = #{storeCd}
			            </when>
	      				</choose>
                        <if test='startDate != null and startDate != ""'>
                          	AND TSDP.SALE_DATE >= #{startDate}
                        </if>
                        <if test='endDate != null and endDate != ""'>
			  		   		AND TSDP.SALE_DATE <![CDATA[<= ]]> #{endDate}
			  		   	</if>
			  		   	<if test='storeCd != null and storeCd != ""'>
						    AND TSDP.STORE_CD IN
						     	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
										#{item}
								</foreach>
						</if>
	                         GROUP BY TSDP.STORE_CD, TSDP.PROD_CD, TMS.STORE_NM, LV1_NM, LV2_NM, LV3_NM
	                  ) M
	                  WHERE 1 = 1
				    <if test='chkProdAll != "Y"'>
					  AND M.RN = 1
					</if>
					<if test='prodCd != null and prodCd != ""'>
   					  AND M.PROD_CD = #{prodCd}
   					</if>
           ) C
		WHERE B.STORE_CD = C.STORE_CD
		AND B.PROD_CD = C.PROD_CD
		ORDER BY C.REAL_SALE_AMT DESC
    </select>
</mapper>
