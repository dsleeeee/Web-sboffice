<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    EmpBatchChange.xml
    사원정보일괄변경
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       권지현     2023.02.16      최초작성
-->
<mapper namespace="kr.co.solbipos.base.store.empBatchChanhe.service.impl.EmpBatchChangeMapper">

    <!-- 매장목록 조회 -->
    <!--
        TABLE    : TB_HQ_BRANCH_MOMS, TB_MS_STORE
        PARAM    : empBatchChangeVO
        COMMENTS : 매장목록을 조회한다.
    -->
    <select id="getEmpList" parameterType="empBatchChangeVO" resultType="DefaultMap">
    /* USE : EmpBatchChangeMapper.getEmpList  */
    <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  the.EMP_NO
        ,		the.EMP_NM
        ,		the.USER_ID
        ,		the.BRANCH_CD
        ,		the.MOMS_TEAM
        ,		the.MOMS_AC_SHOP
        ,		the.MOMS_AREA_FG
        ,		the.MOMS_COMMERCIAL
        ,		the.MOMS_SHOP_TYPE
        ,		the.MOMS_STORE_MANAGE_TYPE
    <include refid="CmmSQL.PagingTemplateCount"/>
        FROM    TB_HQ_EMPLOYEE the
        WHERE   the.HQ_OFFICE_CD = #{hqOfficeCd}
<!--        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>-->
<!--            AND the.HQ_BRAND_CD = #{storeHqBrandCd} &#45;&#45; 매장브랜드 선택일때-->
<!--        </if>-->
<!--        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>-->
<!--            <if test='userBrands != null and userBrands != ""'>-->
<!--                &#45;&#45; 매장브랜드 전체일때-->
<!--                AND the.HQ_BRAND_CD IN-->
<!--                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >-->
<!--                    #{item}-->
<!--                </foreach>-->
<!--            </if>-->
<!--        </if>-->
        <if test='empNo != null and empNo != ""'>
            AND the.EMP_NO LIKE '%'|| #{empNo} ||'%'
        </if>
        <if test="empNm != null and empNm != ''">
            AND the.EMP_NM LIKE '%'|| #{empNm} ||'%'
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND the.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND the.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND the.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND the.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND the.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND the.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND the.BRANCH_CD = #{branchCd}
        </if>
        ORDER
        BY the.EMP_NO
    <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매장목록 조회2 -->
    <!--
        TABLE    : TB_HQ_BRANCH_MOMS, TB_MS_STORE
        PARAM    : empBatchChangeVO
        COMMENTS : 매장목록을 조회한다.
    -->
    <select id="getEmpList2" parameterType="empBatchChangeVO" resultType="DefaultMap">
    /* USE : EmpBatchChangeMapper.getEmpList2  */
        SELECT  the.EMP_NO
        ,		the.EMP_NM
        ,		the.USER_ID
        ,		the.BRANCH_CD
        ,		the.MOMS_TEAM
        ,		the.MOMS_AC_SHOP
        ,		the.MOMS_AREA_FG
        ,		the.MOMS_COMMERCIAL
        ,		the.MOMS_SHOP_TYPE
        ,		the.MOMS_STORE_MANAGE_TYPE
        FROM    TB_HQ_EMPLOYEE the
        WHERE   the.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     the.WEB_USE_YN = 'Y'
<!--        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>-->
<!--            AND the.HQ_BRAND_CD = #{storeHqBrandCd} &#45;&#45; 매장브랜드 선택일때-->
<!--        </if>-->
<!--        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>-->
<!--            <if test='userBrands != null and userBrands != ""'>-->
<!--                &#45;&#45; 매장브랜드 전체일때-->
<!--                AND the.HQ_BRAND_CD IN-->
<!--                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >-->
<!--                    #{item}-->
<!--                </foreach>-->
<!--            </if>-->
<!--        </if>-->
        <if test='empNo != null and empNo != ""'>
            AND the.EMP_NO LIKE '%'|| #{empNo} ||'%'
        </if>
        <if test="empNm != null and empNm != ''">
            AND the.EMP_NM LIKE '%'|| #{empNm} ||'%'
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND the.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND the.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND the.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND the.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND the.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND the.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND the.BRANCH_CD = #{branchCd}
        </if>
        <if test='originalEmpNo != null and originalEmpNo != ""'>
            AND the.EMP_NO != #{originalEmpNo}
        </if>
        ORDER
        BY the.EMP_NO
    </select>

    <!-- 매장정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS :
    -->
    <update id="getEmpBatchChangeSave" parameterType="empBatchChangeVO">
        /* EmpBatchChangeMapper.getEmpBatchChangeSave */
        UPDATE  TB_HQ_EMPLOYEE
        SET     BRANCH_CD = #{branchCd},
                MOMS_TEAM = #{momsTeam},
                MOMS_AC_SHOP = #{momsAcShop},
                MOMS_AREA_FG = #{momsAreaFg},
                MOMS_COMMERCIAL = #{momsCommercial},
                MOMS_SHOP_TYPE = #{momsShopType},
                MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     EMP_NO = #{empNo}
    </update>

    <!-- 매장정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS :
    -->
    <update id="getEmpBatchChangeUploadSave" parameterType="empBatchChangeVO">
        /* EmpBatchChangeMapper.getEmpBatchChangeUploadSave */
        MERGE INTO TB_HQ_EMPLOYEE A
        USING
        (
            SELECT
            C.EMP_NO,
            (SELECT BRANCH_CD FROM TB_HQ_BRANCH_MOMS WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND BRANCH_NM = C.BRANCH_CD) AS BRANCH_CD,
            (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '151' AND NMCODE_NM = C.MOMS_TEAM) AS MOMS_TEAM,
            (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '152' AND NMCODE_NM = C.MOMS_AC_SHOP) AS MOMS_AC_SHOP,
            (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '153' AND NMCODE_NM = C.MOMS_AREA_FG) AS MOMS_AREA_FG,
            (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '154' AND NMCODE_NM = C.MOMS_COMMERCIAL) AS MOMS_COMMERCIAL,
            (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '155' AND NMCODE_NM = C.MOMS_SHOP_TYPE) AS MOMS_SHOP_TYPE,
            (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '156' AND NMCODE_NM = C.MOMS_STORE_MANAGE_TYPE) AS MOMS_STORE_MANAGE_TYPE
            FROM TB_TMP_EXCEL_EMPLOYEE C
            WHERE C.SESSION_ID = #{sessionId}
            AND C.HQ_OFFICE_CD = #{hqOfficeCd}
        ) B
        ON (A.EMP_NO = B.EMP_NO)
        WHEN MATCHED THEN
            UPDATE
            SET
            A.BRANCH_CD = B.BRANCH_CD,
            A.MOMS_TEAM = B.MOMS_TEAM,
            A.MOMS_AC_SHOP = B.MOMS_AC_SHOP,
            A.MOMS_AREA_FG = B.MOMS_AREA_FG,
            A.MOMS_COMMERCIAL = B.MOMS_COMMERCIAL,
            A.MOMS_SHOP_TYPE = B.MOMS_SHOP_TYPE,
            A.MOMS_STORE_MANAGE_TYPE = B.MOMS_STORE_MANAGE_TYPE,
            MOD_DT = #{modDt},
            MOD_ID = #{modId}
        WHEN NOT MATCHED THEN
            INSERT
            (
                A.EMP_NO,
                A.BRANCH_CD,
                A.MOMS_TEAM,
                A.MOMS_AC_SHOP,
                A.MOMS_AREA_FG,
                A.MOMS_COMMERCIAL,
                A.MOMS_SHOP_TYPE,
                A.MOMS_STORE_MANAGE_TYPE,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID
            ) VALUES (
                B.EMP_NO,
                B.BRANCH_CD,
                B.MOMS_TEAM,
                B.MOMS_AC_SHOP,
                B.MOMS_AREA_FG,
                B.MOMS_COMMERCIAL,
                B.MOMS_SHOP_TYPE,
                B.MOMS_STORE_MANAGE_TYPE,
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </update>

    <!-- 검증결과 전체 삭제 -->
    <!--
        TABLE    : TB_TMP_EXCEL_EMPLOYEE
        COMMENTS : [임시]매장엑셀업로드
    -->
    <delete id="getEmpExcelUploadCheckDeleteAll" parameterType="empBatchChangeVO">
        /* EmpBatchChangeMapper.getEmpExcelUploadCheckDeleteAll */
        DELETE  TB_TMP_EXCEL_EMPLOYEE
        WHERE   SESSION_ID = #{sessionId}
        AND     HQ_OFFICE_CD = #{hqOfficeCd}
    </delete>

    <!-- 매장코드 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : 유요한 매장코드인지 체크
    -->
    <select id="getEmpNoChk"  parameterType="ProdExcelUploadVO" resultType="Integer">
        /* EmpBatchChangeMapper.getEmpNoChk */
        SELECT  COUNT(*)
        FROM    TB_HQ_EMPLOYEE
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     EMP_NO = #{empNo}
    </select>

    <!-- 지사코드 -->
    <!--
        TABLE    : TB_HQ_BRANCH_MOMS
        COMMENTS : 유효한 지사코드인지 체크
    -->
    <select id="getBranchCdChk"  parameterType="ProdExcelUploadVO" resultType="String">
        /* EmpBatchChangeMapper.getBranchCdChk */
        SELECT  BRANCH_CD
        FROM    TB_HQ_BRANCH_MOMS
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     BRANCH_NM = #{branchCd}
    </select>

    <!-- 본사공통코드 -->
    <!--
        TABLE    : TB_HQ_NMCODE
        COMMENTS : 유효한 본사공통코드인지 체크
    -->
    <select id="getHqNmcodeChk"  parameterType="ProdExcelUploadVO" resultType="String">
        /* EmpBatchChangeMapper.getHqNmcodeChk */
        SELECT  NMCODE_CD
        FROM    TB_HQ_NMCODE
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     NMCODE_GRP_CD = #{nmcodeGrpCd}
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "151"'>
            AND     NMCODE_NM = #{momsTeam}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "152"'>
            AND     NMCODE_NM = #{momsAcShop}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "153"'>
            AND     NMCODE_NM = #{momsAreaFg}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "154"'>
            AND     NMCODE_NM = #{momsCommercial}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "155"'>
            AND     NMCODE_NM = #{momsShopType}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "156"'>
            AND     NMCODE_NM = #{momsStoreManageType}
        </if>
    </select>

    <!-- 검증결과 저장 -->
    <!--
        TABLE    : TB_TMP_EXCEL_EMPLOYEE
        COMMENTS : [임시]매장엑셀업로드
    -->
    <insert id="getEmpExcelUploadCheckSave" parameterType="empBatchChangeVO">
        /* EmpBatchChangeMapper.getEmpExcelUploadCheckSave */
        INSERT INTO TB_TMP_EXCEL_EMPLOYEE
        (
            SESSION_ID,
            SEQ,
            HQ_OFFICE_CD,
            EMP_NO,
            BRANCH_CD,
            MOMS_TEAM,
            MOMS_AC_SHOP,
            MOMS_AREA_FG,
            MOMS_COMMERCIAL,
            MOMS_SHOP_TYPE,
            MOMS_STORE_MANAGE_TYPE,
            RESULT
        ) VALUES (
            #{sessionId},
            #{seq},
            #{hqOfficeCd},
            #{empNo},
            #{branchCd},
            #{momsTeam},
            #{momsAcShop},
            #{momsAreaFg},
            #{momsCommercial},
            #{momsShopType},
            #{momsStoreManageType},
            #{result}
         )
    </insert>

    <!-- 검증결과 조회 -->
    <!--
        TABLE    : TB_TMP_EXCEL_EMPLOYEE
        PARAM    : empBatchChangeVO
        COMMENTS : 엑셀업로드 검증결과를 조회한다.
    -->
    <select id="getEmpExcelUploadCheckList" parameterType="empBatchChangeVO" resultType="DefaultMap">
        /* USE : EmpBatchChangeMapper.getEmpExcelUploadCheckList  */
        SELECT  SESSION_ID,
                SEQ,
                HQ_OFFICE_CD,
                EMP_NO,
                BRANCH_CD,
                MOMS_TEAM,
                MOMS_AC_SHOP,
                MOMS_AREA_FG,
                MOMS_COMMERCIAL,
                MOMS_SHOP_TYPE,
                MOMS_STORE_MANAGE_TYPE,
                RESULT
        FROM    TB_TMP_EXCEL_EMPLOYEE
        WHERE   SESSION_ID = #{sessionId}
        AND     HQ_OFFICE_CD = #{hqOfficeCd}
        ORDER
        BY SEQ
    </select>

    <!-- 검증결과 삭제 -->
    <!--
        TABLE    : TB_TMP_EXCEL_EMPLOYEE
        COMMENTS : [임시]매장엑셀업로드
    -->
    <delete id="getEmpExcelUploadCheckDelete" parameterType="empBatchChangeVO">
        /* EmpBatchChangeMapper.getEmpExcelUploadCheckDelete */
        DELETE  TB_TMP_EXCEL_EMPLOYEE
        WHERE   SESSION_ID = #{sessionId}
        AND     HQ_OFFICE_CD = #{hqOfficeCd}
        AND     EMP_NO = #{empNo}
    </delete>


    <!-- 메뉴권한복사-->
    <!--
        TABLE    : TB_WB_USER_INFO, TB_HQ_EMPLOYEE
        PARAM    : empBatchChangeVO
        COMMENTS : 메뉴권한을 복사한다.
    -->
    <update id="copyAuth" parameterType="empBatchChangeVO" >
        /* USE : EmpBatchChangeMapper.copyAuth */
        UPDATE TB_WB_USER_INFO
        SET AUTH_GRP_CD = (SELECT twu.AUTH_GRP_CD
                           FROM TB_HQ_EMPLOYEE the,
                                TB_WB_USER_INFO twu
                           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                             AND the.EMP_NO = #{originalEmpNo}
                             AND twu.USER_ID = the.USER_ID
        )
        WHERE USER_ID = (SELECT the.USER_ID
                         FROM TB_HQ_EMPLOYEE the,
                              TB_WB_USER_INFO twu
                         WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                           AND the.EMP_NO = #{targetEmpNo}
                           AND twu.USER_ID = the.USER_ID
        )
    </update>

    <!-- 권한예외 복사-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT, TB_HQ_EMPLOYEE, TB_WB_USER_INFO
        PARAM    : empBatchChangeVO
        COMMENTS : 예외 권한을 복사한다.
    -->
    <insert id="copyAuthExcp" parameterType="empBatchChangeVO" >
        /* USE : EmpBatchChangeMapper.copyAuthExcp */
        <![CDATA[
        MERGE INTO TB_WB_AUTHOR_EXCEPT twa
            USING DUAL
            ON (
                        twa.USER_ID = ( SELECT the.USER_ID
                                        FROM TB_HQ_EMPLOYEE the,
                                             TB_WB_USER_INFO twu
                                        WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                                          AND the.EMP_NO = #{targetEmpNo}
                                          AND twu.USER_ID = the.USER_ID)
                    AND twa.RESRCE_CD = #{resrceCd}
                )
            WHEN MATCHED THEN
                UPDATE
                    SET twa.INCLD_EXCLD_FG = #{incldExcldFg},
                        twa.USE_YN = #{useYn},
                        twa.MOD_DT = #{modDt},
                        twa.MOD_ID = #{modId}
            WHEN NOT MATCHED THEN
                INSERT (USER_ID, RESRCE_CD, INCLD_EXCLD_FG, USE_YN, REG_DT, REG_ID)
                    VALUES (
                               (SELECT the.USER_ID FROM TB_HQ_EMPLOYEE the, TB_WB_USER_INFO twu WHERE the.HQ_OFFICE_CD = #{hqOfficeCd} AND the.EMP_NO = #{targetEmpNo} AND twu.USER_ID = the.USER_ID),
                               #{resrceCd},
                               #{incldExcldFg},
                               #{useYn},
                               #{regDt},
                               #{regId}
                           )
        ]]>
    </insert>

    <!-- 권한예외 복사 시, 복사기준본사의 권한예외 값 조회 -->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT_V01
        PARAM    : empBatchChangeVO
        COMMENTS : 권한예외 복사 시, 복사기준본사의 권한예외 값을 조회한다.
    -->
    <select id="exceptMenu" parameterType="empBatchChangeVO" resultType="DefaultMap">
        /* USE : EmpBatchChangeMapper.exceptMenu */
        SELECT USER_ID,
        RESRCE_CD,
        INCLD_EXCLD_FG,
        USE_YN
        FROM TB_WB_AUTHOR_EXCEPT_V01
        WHERE USER_ID = (SELECT twu.USER_ID
        FROM TB_HQ_EMPLOYEE the,
        TB_WB_USER_INFO twu
        WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
        AND the.EMP_NO != '0000'              <!-- 본사 기본계정 제외 -->
        AND the.EMP_NO = #{originalEmpNo}
        AND twu.USER_ID = the.USER_ID)
        AND USE_YN = 'Y'
    </select>

    <!-- 메뉴권한 전체삭제-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 해당 사원의 메뉴권한 전체를 삭제한다.
    -->
    <delete id="removeAuthAll" parameterType="DefaultMap">
        /* EmpBatchChangeMapper.removeAuthAll */
        DELETE TB_WB_AUTHOR_EXCEPT
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_HQ_EMPLOYEE the,
                                 TB_WB_USER_INFO twu
                           WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
        AND the.EMP_NO = #{targetEmpNo}
        AND twu.USER_ID = the.USER_ID)
    </delete>
</mapper>