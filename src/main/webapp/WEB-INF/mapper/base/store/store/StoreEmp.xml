<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    StoreEmp.xml
    매장사원관리 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이한빈     2018.08.16      최초작성
    2       김지은     2018.11.21     기능수정(angular)
-->
<mapper namespace="kr.co.solbipos.base.store.emp.store.service.impl.StoreEmpMapper">

    <resultMap id="storeEmpMap" type="DefaultMap">
        <result column="SMS_RECV_YN" property="smsRecvYn" typeHandler="CustomBooleanTypeHandler"/>
    </resultMap>

    <!-- 매장사원목록 조회 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장 사원 목록을 조회한다.
    -->
    <select id="getStoreEmpList" parameterType="storeEmpVO" resultMap="storeEmpMap">
        /* USE : StoreEmpMapper.getStoreEmpList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT tme.STORE_CD,
               tme.EMP_NO,
               tme.EMP_NM,
               tme.EMP_PWD,
               tme.WEB_USE_YN,
               tcn_web_use_yn.NMCODE_NM AS WEB_USE_YN_NM,
               tme.USER_ID,
               tme.MP_NO,
               tme.SERVICE_FG,
               tcn_service_fg.NMCODE_NM AS SERVICE_FG_NM,
               tme.SMS_RECV_YN
               <include refid="CmmSQL.PagingTemplateCount"/>
          FROM TB_MS_EMPLOYEE tme
          LEFT OUTER JOIN TB_CM_NMCODE tcn_service_fg ON
            tme.SERVICE_FG = tcn_service_fg.NMCODE_CD
            AND tcn_service_fg.NMCODE_GRP_CD = '007'
          LEFT OUTER JOIN TB_CM_NMCODE tcn_web_use_yn ON
            tme.WEB_USE_YN = tcn_web_use_yn.NMCODE_CD
            AND tcn_web_use_yn.NMCODE_GRP_CD = '067'
        <where>
            <if test="storeCd != null and storeCd != ''">
            AND tme.STORE_CD = #{storeCd}
            </if>
            <if test="empNo != null and empNo != ''">
            AND tme.EMP_NO LIKE '%'||#{empNo}||'%'
            </if>
            <if test="empNm != null and empNm != ''">
            AND tme.EMP_NM LIKE '%'||#{empNm}||'%'
            </if>
            <if test="userId != null and userId != ''">
            AND tme.USER_ID LIKE '%'||#{userId}||'%'
            </if>
            <if test='serviceFg != null and serviceFg.toString() != ""'>
            AND tme.SERVICE_FG = #{serviceFg}
            </if>
            <if test="mpNo != null and mpNo != ''">
            AND tme.MP_NO LIKE '%'||#{mpNo}||'%'
            </if>
            <if test='webUseYn != null and webUseYn.toString() != ""'>
            AND tme.WEB_USE_YN = #{webUseYn}
            </if>
            <if test='smsRecvYn != null and smsRecvYn != ""'>
            AND tme.SMS_RECV_YN = #{smsRecvYn}
            </if>
            <if test="chkDt == false">
                <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND tme.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959' --조회(등록)일자
                </if>
            </if>
        </where>
          ORDER BY tme.REG_DT DESC, tme.EMP_NO
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매장 사원 상세정보 조회 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장사원을 조회한다.
    -->
    <select id="getStoreEmpDtlInfo" parameterType="storeEmpVO" resultType="DefaultMap">
        /* USE : StoreEmpMapper.getStoreEmpDtlInfo */
        SELECT tme.STORE_CD,
               tme.EMP_NO,
               tme.EMP_NM,
               tme.EMP_PWD,
               tme.WEB_USE_YN,
               tcn_web_use_yn.NMCODE_NM AS WEB_USE_YN_NM,
               tme.USER_ID,
               tme.MP_NO,
               tme.SERVICE_FG,
               tcn_service_fg.NMCODE_NM AS SERVICE_FG_NM,
               tme.SMS_RECV_YN,
               tcn_sms_recv_yn.NMCODE_NM AS SMS_RECV_YN_NM
          FROM TB_MS_EMPLOYEE tme
          LEFT OUTER JOIN TB_CM_NMCODE tcn_service_fg ON
            tme.SERVICE_FG = tcn_service_fg.NMCODE_CD
            AND tcn_service_fg.NMCODE_GRP_CD = '007'
          LEFT OUTER JOIN TB_CM_NMCODE tcn_web_use_yn ON
            tme.WEB_USE_YN = tcn_web_use_yn.NMCODE_CD
            AND tcn_web_use_yn.NMCODE_GRP_CD = '067'
          LEFT OUTER JOIN TB_CM_NMCODE tcn_sms_recv_yn ON
            tme.SMS_RECV_YN = tcn_sms_recv_yn.NMCODE_CD
            AND tcn_sms_recv_yn.NMCODE_GRP_CD = '072'
          WHERE tme.STORE_CD = #{storeCd}
            AND tme.EMP_NO = #{empNo}
    </select>

    <!-- 매장 사원 웹 사용자 조회 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : storeEmpVO
          COMMENTS : 해당 웹 유저 id로 조회되는 사원이 있는지 조회 (중복체크)
    -->
    <select id="getStoreUserIdCnt" parameterType="storeEmpVO" resultType="Integer">
        /* USE : StoreEmpMapper.getStoreUserIdCnt */
        SELECT COUNT(1) AS CNT
          FROM TB_WB_USER_INFO
         WHERE USER_ID = #{userId}
    </select>


    <!-- 신규사원번호 조회 -->
    <!--
          TABLE    : TB_MS_EMPLOYEE
          PARAM    : storeEmpVO
          COMMENTS : 신규 등록할 사원번호를 조회한다
    -->
    <select id="getStoreEmpNo" parameterType="storeEmpVO" resultType="String">
          /* USE : StoreEmpMapper.getStoreEmpNo */
        SELECT LPAD(NVL(MAX(EMP_NO)+ 1, 0), 4, '0') AS EMP_NO
          FROM TB_MS_EMPLOYEE
         WHERE STORE_CD = #{storeCd}
    </select>


    <!-- 매장사원 등록 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장사원을 등록한다.
    -->
    <insert id="insertStoreEmpInfo" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.insertStoreEmpInfo */
        INSERT INTO TB_MS_EMPLOYEE tme
        (
            tme.STORE_CD,
            tme.EMP_NO,
            tme.EMP_NM,
            tme.EMP_PWD,
            tme.WEB_USE_YN,
            tme.USER_ID,
            tme.MP_NO,
            tme.SERVICE_FG,
            tme.SMS_RECV_YN,
            tme.REG_ID,
            tme.REG_DT,
            tme.MOD_ID,
            tme.MOD_DT
        )
        VALUES
        (
            #{storeCd},
            #{empNo},
            #{empNm},
            #{empPwd},
            #{webUseYn},
            #{userId},
            #{mpNo},
            #{serviceFg},
            #{smsRecvYn},
            #{regId},
            #{regDt},
            #{regId},
            #{regDt}
        )
    </insert>


    <!-- 매장 사원 웹 사용자 정보 등록 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : storeEmpVO
          COMMENTS : 매장 사원이 웹 사용시, 웹 사용자 정보를 등록한다.
    -->
    <insert id="insertWbUserInfo" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.insertWbUserInfo */
        INSERT INTO TB_WB_USER_INFO
        (
            USER_ID,
            USER_PWD,
            AUTH_GRP_CD,
            LOGIN_FAIL_CNT,
            LAST_PWD_CHG_DT,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            LOWER(#{userId}),
            #{userPwd},
            #{authGrpCd},
            0,
            #{regDt},
            #{webUseYn},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 매장 사원 비밀번호 조회 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : storeEmpVO
          COMMENTS : 매장 사원의 비밀번호를 조회한다.
    -->
    <select id="getStoreEmpPassword" parameterType="storeEmpVO" resultType="java.lang.String">
        /* USE : StoreEmpMapper.getStoreEmpPassword */
        SELECT twui.USER_PWD
          FROM TB_WB_USER_INFO twui
         WHERE twui.USER_ID = #{userId}
    </select>


    <!-- 매장 사원 수정 -->
    <!--
        TABLE    : TB_MS_EMPLOYEE
        PARAM    : storeEmpVO
        COMMENTS : 매장 사원을 수정한다.
    -->
    <update id="updateStoreEmpInfo" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.updateStoreEmpInfo */
        UPDATE TB_MS_EMPLOYEE tme
           SET tme.EMP_NM = #{empNm},
               tme.WEB_USE_YN = #{webUseYn},
               tme.USER_ID = #{userId},
               tme.MP_NO = #{mpNo},
               tme.SERVICE_FG = #{serviceFg},
               tme.SMS_RECV_YN = #{smsRecvYn},
               tme.MOD_ID = #{regId},
               tme.MOD_DT = #{regDt}
         WHERE tme.STORE_CD = #{storeCd}
           AND tme.EMP_NO = #{empNo}
    </update>



    <!-- 매장 웹사용자 정보 수정 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : storeEmpVO
          COMMENTS : 매장 웹 사용자 정보가 있으면 수정, 없으면 insert
    -->
    <update id="saveWbUserInfo" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.saveWbUserInfo */
        MERGE INTO TB_WB_USER_INFO twui
        USING (SELECT the.USER_ID
                 FROM TB_MS_EMPLOYEE the
                WHERE the.STORE_CD = #{storeCd}
                  AND the.EMP_NO = #{empNo}
               ) org
           ON (twui.USER_ID = org.USER_ID)
         WHEN MATCHED THEN
       UPDATE
          SET twui.USE_YN = #{webUseYn},
              twui.MOD_DT = #{modDt},
              twui.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
        INSERT
        (
            twui.USER_ID,
            twui.USER_PWD,
            twui.AUTH_GRP_CD,
            twui.LOGIN_FAIL_CNT,
            twui.USE_YN,
            twui.REG_DT,
            twui.REG_ID,
            twui.MOD_DT,
            twui.MOD_ID
        )
        VALUES
        (
            #{userId},
            #{userPwd},
            #{authGrpCd},
            '0',
            #{webUseYn},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </update>

    <!-- 웹 비밀번호 변경 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : storeEmpVO
          COMMENTS : 웹 비밀번호 변경한다.
    -->
    <update id="updateUserPassword" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.updateUserPassword */
        UPDATE TB_WB_USER_INFO
           SET USER_PWD = #{userPwd},
               LAST_PWD_CHG_DT = #{modDt},
               MOD_DT = #{modDt},
               MOD_ID = #{modId}
         WHERE USER_ID = #{userId}
    </update>

    <!-- 웹 비밀번호 변경 히스토리 등록 -->
    <!--
          TABLE    : TB_WB_PWD_CHG_HIST
          PARAM    : storeEmpVO
          COMMENTS : 웹 비밀번호 변경 히스토리를 등록한다.
    -->
    <insert id="insertPasswordHistory" parameterType="storeEmpVO">
        /* USE : StoreEmpMapper.insertPasswordHistory */
        INSERT INTO TB_WB_PWD_CHG_HIST
        (
            USER_ID,
            IDX,
            PRIOR_PWD,
            REG_IP,
            REG_DT,
            REG_ID
        )
        VALUES
        (
            #{userId},
            (SELECT NVL(MAX(IDX),0) + 1 AS MAX FROM TB_WB_PWD_CHG_HIST WHERE USER_ID = #{userId}),
            #{priorPwd},
            #{regIp},
            #{regDt},
            #{regId}
        )
    </insert>

    <!-- 권한복사를 위한 매장 사원 리스트 조회 -->
    <!--
          TABLE    : TB_MS_EMPLOYEE
          PARAM    : storeEmpVO
          COMMENTS : 매장 사원을 조회한다.
    -->
    <select id="authStoreEmpList" parameterType="storeEmpVO" resultType="DefaultMap">
            /* USE : StoreEmpMapper.authStoreEmpList */
            SELECT EMP_NO AS VALUE,
                   '[' || EMP_NO || '] ' || EMP_NM AS NAME
              FROM TB_MS_EMPLOYEE
             WHERE USE_YN = 'Y'
               AND STORE_CD = #{storeCd}
               AND EMP_NO != #{empNo}
         ORDER BY EMP_NO
    </select>

    <!-- 사용 메뉴 조회 -->
    <!--
        TABLE    : TB_WB_RESRCE_INFO, TB_MS_EMPLOYEE, TB_WB_USER_INFO, TB_WB_AUTHOR_EXCEPT
        PARAM    : storeEmpVO
        COMMENTS : 사용 메뉴를 조회한다.
    -->
    <select id="avlblMenu" parameterType="storeEmpVO" resultType="DefaultMap">
        /* USE : StoreEmpMapper.avlblMenu */
        SELECT twr.*
          FROM (
          SELECT twr.RESRCE_CD AS RESRCE_CD_LARGE,
                  twr.RESRCE_NM AS RESRCE_NM_LARGE,
                  twri.RESRCE_CD AS RESRCE_CD_MID,
                  twri.RESRCE_NM AS RESRCE_NM_MID,
                  twrif.RESRCE_CD AS RESRCE_CD_SMALL,
                  twrif.RESRCE_NM AS RESRCE_NM_SMALL
            FROM TB_WB_RESRCE_INFO twr,
                  TB_WB_RESRCE_INFO twri,
                  TB_WB_RESRCE_INFO twrif
           WHERE 1=1
             AND twr.USE_YN = 'Y'
             AND twri.USE_YN = 'Y'
             AND twrif.USE_YN = 'Y'
             AND twri.P_RESRCE = twr.RESRCE_CD
             AND twrif.P_RESRCE = twri.RESRCE_CD
             AND (twr.SPCL_AUTHOR IS NULL OR twr.SPCL_AUTHOR NOT IN ('A01'))
             AND twrif.DISP_LEVEL = '3'
           ORDER BY twr.RESRCE_CD, twri.RESRCE_CD, twrif.RESRCE_CD
              ) twr,
              (
          SELECT twa.RESRCE_CD
            FROM TB_MS_EMPLOYEE tme,
                  TB_WB_USER_INFO twu,
                  TB_WB_AUTHOR_GRP_RESRCE twa
           WHERE tme.STORE_CD = #{storeCd}
             AND tme.EMP_NO = '0000'
             AND twu.USER_ID = tme.USER_ID
             AND twa.AUTH_GRP_CD = twu.AUTH_GRP_CD
             AND twa.USE_YN = 'Y'
           MINUS
          SELECT twa.RESRCE_CD
            FROM TB_MS_EMPLOYEE tme,
                  TB_WB_USER_INFO twu,
                  TB_WB_AUTHOR_EXCEPT twa
           WHERE tme.STORE_CD = #{storeCd}
             AND tme.EMP_NO = '0000'
             AND twu.USER_ID = tme.USER_ID
             AND twa.USER_ID = twu.USER_ID
             AND twa.INCLD_EXCLD_FG = 'E'
             AND twa.USE_YN = 'Y'
           MINUS
          SELECT twa.RESRCE_CD
            FROM TB_MS_EMPLOYEE tme,
                  TB_WB_USER_INFO twu,
                  TB_WB_AUTHOR_EXCEPT twa
           WHERE tme.STORE_CD = #{storeCd}
             AND tme.EMP_NO = #{empNo}
             AND twu.USER_ID = tme.USER_ID
             AND twa.USER_ID = twu.USER_ID
             AND twa.INCLD_EXCLD_FG = 'E'
             AND twa.USE_YN = 'Y'
               ) tme
       WHERE tme.RESRCE_CD = twr.RESRCE_CD_SMALL
    </select>

    <!-- 미사용 메뉴 조회 -->
    <!--
        TABLE    : TB_WB_RESRCE_INFO, TB_MS_EMPLOYEE, TB_WB_USER_INFO, TB_WB_AUTHOR_EXCEPT
        PARAM    : storeEmpVO
        COMMENTS : 미사용 메뉴를 조회한다.
    -->
    <select id="beUseMenu" parameterType="storeEmpVO" resultType="DefaultMap">
        /* USE : StoreEmpMapper.beUseMenu */
        SELECT twr.*
          FROM (
          SELECT twr.RESRCE_CD AS RESRCE_CD_LARGE,
                 twr.RESRCE_NM AS RESRCE_NM_LARGE,
                 twri.RESRCE_CD AS RESRCE_CD_MID,
                 twri.RESRCE_NM AS RESRCE_NM_MID,
                 twrif.RESRCE_CD AS RESRCE_CD_SMALL,
                 twrif.RESRCE_NM AS RESRCE_NM_SMALL
            FROM TB_WB_RESRCE_INFO twr,
                 TB_WB_RESRCE_INFO twri,
                 TB_WB_RESRCE_INFO twrif
           WHERE 1=1
             AND twr.USE_YN = 'Y'
             AND twri.USE_YN = 'Y'
             AND twrif.USE_YN = 'Y'
             AND twri.P_RESRCE = twr.RESRCE_CD
             AND twrif.P_RESRCE = twri.RESRCE_CD
             AND (twr.SPCL_AUTHOR IS NULL OR twr.SPCL_AUTHOR NOT IN ('A01'))
             AND twrif.DISP_LEVEL = '3'
           ORDER BY twr.RESRCE_CD, twri.RESRCE_CD, twrif.RESRCE_CD
               ) twr,
               (
          SELECT twa.RESRCE_CD
            FROM TB_MS_EMPLOYEE tme,
                  TB_WB_USER_INFO twu,
                  TB_WB_AUTHOR_EXCEPT twa
           WHERE tme.STORE_CD = #{storeCd}
             AND tme.EMP_NO = #{empNo}
             AND twu.USER_ID = tme.USER_ID
             AND twa.USER_ID = twu.USER_ID
             AND twa.INCLD_EXCLD_FG = 'E'
             AND twa.USE_YN = 'Y'
               ) the
         WHERE the.RESRCE_CD = twr.RESRCE_CD_SMALL
    </select>





    <!-- 메뉴권한복사-->
    <!--
        TABLE    : TB_WB_USER_INFO, TB_MS_EMPLOYEE
        PARAM    : storeEmpMenuVO
        COMMENTS : 메뉴권한을 복사한다.
    -->
    <update id="copyAuth" parameterType="storeEmpMenuVO" >
        /* USE : StoreEmpMapper.copyAuth */
        UPDATE TB_WB_USER_INFO
           SET AUTH_GRP_CD = (SELECT twu.AUTH_GRP_CD
                                FROM TB_MS_EMPLOYEE tme,
                                     TB_WB_USER_INFO twu
                               WHERE tme.STORE_CD = #{storeCd}
                                 AND tme.EMP_NO = #{copyEmpNo}
                                 AND twu.USER_ID = tme.USER_ID
                              )
         WHERE USER_ID = (SELECT tme.USER_ID
                            FROM TB_MS_EMPLOYEE tme,
                                 TB_WB_USER_INFO twu
                           WHERE tme.STORE_CD = #{storeCd}
                             AND tme.EMP_NO = #{empNo}
                             AND twu.USER_ID = tme.USER_ID
                          )
    </update>

    <!-- 권한예외 복사-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT, TB_MS_EMPLOYEE, TB_WB_USER_INFO
        PARAM    : storeEmpMenuVO
        COMMENTS : 예외 권한을 복사한다.
    -->
    <insert id="copyAuthExcp" parameterType="storeEmpMenuVO" >
        /* USE : StoreEmpMapper.copyAuthExcp */
        <![CDATA[
        MERGE INTO TB_WB_AUTHOR_EXCEPT twa
        USING DUAL
         ON (
              twa.USER_ID = ( SELECT tme.USER_ID
                                FROM TB_MS_EMPLOYEE tme,
                                      TB_WB_USER_INFO twu
                               WHERE tme.STORE_CD = #{storeCd}
                                 AND tme.EMP_NO = #{empNo}
                                 AND twu.USER_ID = tme.USER_ID)
              AND twa.RESRCE_CD = #{resrceCd}
             )
         WHEN MATCHED THEN
         UPDATE
            SET twa.INCLD_EXCLD_FG = #{incldExcldFg},
                twa.USE_YN = #{useYn},
                twa.MOD_DT = #{modDt},
                twa.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
         INSERT (USER_ID, RESRCE_CD, INCLD_EXCLD_FG, USE_YN, REG_DT, REG_ID)
         VALUES (
                  (SELECT tme.USER_ID FROM TB_MS_EMPLOYEE tme, TB_WB_USER_INFO twu WHERE tme.STORE_CD = #{storeCd} AND tme.EMP_NO = #{empNo} AND twu.USER_ID = tme.USER_ID),
                  #{resrceCd},
                  #{incldExcldFg},
                  #{useYn},
                  #{regDt},
                  #{regId}
                )
        ]]>
    </insert>

    <!-- 권한예외 복사 시, 복사기준본사의 권한예외 값 조회 -->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        PARAM    : storeEmpMenuVO
        COMMENTS : 권한예외 복사 시, 복사기준본사의 권한예외 값을 조회한다.
    -->
    <select id="exceptMenu" parameterType="storeEmpMenuVO" resultType="DefaultMap">
        /* USE : StoreEmpMapper.exceptMenu */
        SELECT USER_ID,
        RESRCE_CD,
        INCLD_EXCLD_FG,
        USE_YN
        FROM TB_WB_AUTHOR_EXCEPT
        WHERE USER_ID = (SELECT twu.USER_ID
        FROM TB_MS_EMPLOYEE tme,
        TB_WB_USER_INFO twu
        WHERE tme.STORE_CD = #{storeCd}
        AND tme.EMP_NO != '0000'              <!-- 본사 기본계정 제외 -->
        AND tme.EMP_NO = #{copyEmpNo}
        AND twu.USER_ID = tme.USER_ID)
        AND USE_YN = 'Y'
    </select>

    <!-- 메뉴권한 전체삭제-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 해당 사원의 메뉴권한 전체를 삭제한다.
    -->
    <delete id="removeAuthAll" parameterType="DefaultMap">
        /* StoreEmpMapper.removeAuthAll */
        DELETE TB_WB_AUTHOR_EXCEPT
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_MS_EMPLOYEE tme,
                                 TB_WB_USER_INFO twu
                           WHERE tme.STORE_CD = #{storeCd}
                             AND tme.EMP_NO = #{empNo}
                             AND twu.USER_ID = tme.USER_ID)
    </delete>

    <!-- 메뉴권한 추가-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 예외 권한을 복사한다.
    -->
    <insert id="addAuth" parameterType="DefaultMap">
        /* USE : StoreEmpMapper.addAuth */
        INSERT INTO TB_WB_AUTHOR_EXCEPT
        (
            USER_ID,
            RESRCE_CD,
            INCLD_EXCLD_FG,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            (SELECT twu.USER_ID FROM TB_MS_EMPLOYEE tme, TB_WB_USER_INFO twu WHERE tme.STORE_CD = #{storeCd} AND tme.EMP_NO = #{empNo} AND twu.USER_ID = tme.USER_ID),
            #{resrceCd},
            #{incldExcldFg},
            'Y',
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 메뉴권한 확인-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 메뉴권한을 확인한다.
    -->
    <select id="isAuth" parameterType="DefaultMap" resultType="Integer">
        /* USE : StoreEmpMapper.isAuth */
        SELECT COUNT(RESRCE_CD) AS CNT
          FROM TB_WB_AUTHOR_EXCEPT
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_MS_EMPLOYEE tme,
                                 TB_WB_USER_INFO twu
                           WHERE tme.STORE_CD = #{storeCd}
                             AND tme.EMP_NO = #{empNo}
                             AND twu.USER_ID = tme.USER_ID)
           AND RESRCE_CD = #{resrceCd}
           AND USE_YN = 'Y'
    </select>

    <!-- 메뉴권한 삭제-->
    <!--
        TABLE    : TB_WB_AUTHOR_EXCEPT
        COMMENTS : 메뉴권한을 삭제한다.
    -->
    <delete id="removeAuth" parameterType="DefaultMap">
        /* StoreEmpMapper.removeAuth */
        DELETE TB_WB_AUTHOR_EXCEPT
         WHERE USER_ID = (SELECT twu.USER_ID
                            FROM TB_MS_EMPLOYEE tme,
                                 TB_WB_USER_INFO twu
                           WHERE tme.STORE_CD = #{storeCd}
                             AND tme.EMP_NO = #{empNo}
                             AND twu.USER_ID = tme.USER_ID)
           AND RESRCE_CD = #{resrceCd}
    </delete>

</mapper>
