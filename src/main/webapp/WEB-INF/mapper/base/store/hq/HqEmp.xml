<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    HqEmp.xml
    본사 사원관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       정상화     2018.08.14     최초생성
    2       김지은     2018.11.21     기능수정(angular)
-->

<mapper namespace="kr.co.solbipos.base.store.emp.hq.service.impl.HqEmpMapper">

    <!-- 본사 사원 목록 조회 -->
    <!--
        TABLE    : TB_HQ_EMPLOYEE
        PARAM    : hqEmpVO
        COMMENTS : 본사 사원 목록을 조회한다.
    -->
    <select id="getHqEmpList" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.getHqEmpList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT the.EMP_NO,
               the.EMP_NM,
               the.USER_ID,
               the.WEB_USE_YN,
               the.SERVICE_FG,
               the.MP_NO,
               the.SMS_RECV_YN
               <include refid="CmmSQL.PagingTemplateCount"/>
          FROM TB_HQ_EMPLOYEE the
         WHERE the.USE_YN = 'Y'
           AND the.HQ_OFFICE_CD = #{hqOfficeCd}
         <if test="chkDt == false">
           <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
           AND the.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
           </if>
         </if>
         <if test="empNo != null and empNo != ''">
           AND the.EMP_NO LIKE '%'|| #{empNo} ||'%'
         </if>
         <if test="empNm != null and empNm != ''">
           AND the.EMP_NM LIKE '%'|| #{empNm} ||'%'
         </if>
         <if test="userId != null and userId != ''">
           AND the.USER_ID LIKE '%'|| #{userId} ||'%'
         </if>
         <if test="serviceFg != null and serviceFg != ''">
           AND the.SERVICE_FG = #{serviceFg}
         </if>
         <if test="mpNo != null and mpNo != ''">
           AND the.MP_NO LIKE '%'|| #{mpNo} ||'%'
         </if>
         <if test="webUseYn != null and webUseYn.toString() != ''">
           AND the.WEB_USE_YN = #{webUseYn}
         </if>
         <if test="smsRecvYn != null and smsRecvYn != ''">
           AND the.SMS_RECV_YN = #{smsRecvYn}
         </if>
         ORDER BY the.REG_DT DESC
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 본사 사원 상세정보 조회 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE, TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원의 상세정보를 조회한다.
    -->
    <select id="getHqEmpDtlInfo" parameterType="hqEmpVO" resultType="DefaultMap">
        /* USE : HqEmpMapper.getHqEmpDtlInfo */
        SELECT the.EMP_NO,
               the.EMP_NM,
               the.SMS_RECV_YN,
               (SELECT tcn.NMCODE_NM FROM TB_CM_NMCODE tcn WHERE tcn.NMCODE_GRP_CD ='072' AND tcn.NMCODE_CD = the.SMS_RECV_YN ) AS SMS_RECV_YN_NM,
               the.USER_ID,
               the.WEB_USE_YN,
               (SELECT tcn.NMCODE_NM FROM TB_CM_NMCODE tcn WHERE tcn.NMCODE_GRP_CD ='067' AND tcn.NMCODE_CD = the.WEB_USE_YN ) AS WEB_USE_YN_NM,
               the.SERVICE_FG,
               (SELECT tcn.NMCODE_NM FROM TB_CM_NMCODE tcn WHERE tcn.NMCODE_GRP_CD ='007' AND tcn.NMCODE_CD = the.SERVICE_FG ) AS SERVICE_FG_NM,
               the.MP_NO
          FROM TB_HQ_EMPLOYEE the
         WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
           AND the.EMP_NO = #{empNo}
    </select>

    <!-- 본사 사원 웹 사용자 조회 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 해당 웹 유저 id로 조회되는 사원이 있는지 조회 (중복체크)
    -->
    <select id="getHqUserIdCnt" parameterType="hqEmpVO" resultType="Integer">
        /* USE : HqEmpMapper.getHqUserIdCnt */
        SELECT COUNT(1) AS CNT
          FROM TB_WB_USER_INFO
         WHERE USER_ID = #{userId}
    </select>

    <!-- 신규사원번호 조회 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 신규 등록할 사원번호를 조회한다
    -->
    <select id="getHqEmpNo" parameterType="hqEmpVO" resultType="String">
        /* USE : HqEmpMapper.getHqEmpNo */
        SELECT LPAD(NVL(MAX(EMP_NO)+ 1, 0), 4, '0') AS EMP_NO
          FROM TB_HQ_EMPLOYEE
         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
    </select>

    <!-- 본사 사원 등록 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원 정보를 등록한다.
    -->
    <insert id="insertHqEmpInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.insertHqEmpInfo */
        INSERT INTO TB_HQ_EMPLOYEE
        (
            HQ_OFFICE_CD,
            EMP_NO,
            EMP_NM,
            EMP_PWD,
            WEB_USE_YN,
            USER_ID,
            MP_NO,
            SERVICE_FG,
            SMS_RECV_YN,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd},
            #{empNo},
            #{empNm},
            #{empPwd},
            #{webUseYn},
            #{userId},
            #{mpNo},
            #{serviceFg},
            #{smsRecvYn},
            #{useYn},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

     <!-- 본사 사원 웹 사용자 정보 등록 -->
     <!--
           TABLE    : TB_WB_USER_INFO
           PARAM    : hqEmpVO
           COMMENTS : 본사 사원이 웹 사용시, 웹 사용자 정보를 등록한다.
     -->
    <insert id="insertWbUserInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.insertWbUserInfo */
        INSERT INTO TB_WB_USER_INFO
        (
            USER_ID,
            USER_PWD,
            AUTH_GRP_CD,
            LOGIN_FAIL_CNT,
            LAST_PWD_CHG_DT,
            USE_YN,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            LOWER(#{userId}),
            #{userPwd},
            #{authGrpCd},
            0,
            #{regDt},
            #{webUseYn},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 본사 사원 비밀번호 조회 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원의 비밀번호를 조회한다.
    -->
    <select id="getHqEmpPassword" parameterType="hqEmpVO" resultType="java.lang.String">
        /* USE : HqEmpMapper.getHqEmpPassword */
        SELECT twui.USER_PWD
          FROM TB_WB_USER_INFO twui
         WHERE twui.USER_ID = #{userId}
    </select>

    <!-- 본사 사원정보 수정 -->
    <!--
          TABLE    : TB_HQ_EMPLOYEE
          PARAM    : hqEmpVO
          COMMENTS : 본사 사원정보를 수정한다.
          MEMO     : USE_YN 은 UPDATE 하지 않는다.(현재 리스트에 USE_YN 이 'Y' 인 데이터만 가져오기 때문
    -->
    <update id="updateHqEmpInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.updateHqEmpInfo */
        UPDATE TB_HQ_EMPLOYEE the
           SET the.EMP_NM = #{empNm},
               the.WEB_USE_YN = #{webUseYn},
               the.USER_ID = #{userId},
               the.MP_NO = #{mpNo},
               the.SERVICE_FG = #{serviceFg},
               the.SMS_RECV_YN = #{smsRecvYn},
               the.MOD_DT = #{modDt},
               the.MOD_ID = #{modId}
         WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
           AND the.EMP_NO = #{empNo}
    </update>

    <!-- 본사 웹사용자 정보 수정 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 본사 웹 사용자 정보가 있으면 수정, 없으면 insert
    -->
    <update id="saveWbUserInfo" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.saveWbUserInfo */
        MERGE INTO TB_WB_USER_INFO twui
        USING (SELECT the.USER_ID
                 FROM TB_HQ_EMPLOYEE the
                WHERE the.HQ_OFFICE_CD = #{hqOfficeCd}
                  AND the.EMP_NO = #{empNo}
              ) org
           ON (twui.USER_ID = org.USER_ID)
         WHEN MATCHED THEN
       UPDATE
          SET twui.USE_YN = #{webUseYn},
              twui.MOD_DT = #{modDt},
              twui.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
       INSERT
       (
           twui.USER_ID,
           twui.USER_PWD,
           twui.AUTH_GRP_CD,
           twui.LOGIN_FAIL_CNT,
           twui.USE_YN,
           twui.REG_DT,
           twui.REG_ID,
           twui.MOD_DT,
           twui.MOD_ID
       )
       VALUES
       (
           #{userId},
           #{userPwd},
           #{authGrpCd},
           '0',
           #{webUseYn},
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
       )
    </update>

    <!-- 웹 비밀번호 변경 -->
    <!--
          TABLE    : TB_WB_USER_INFO
          PARAM    : hqEmpVO
          COMMENTS : 웹 비밀번호 변경한다.
    -->
    <update id="updateUserPassword" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.updateUserPassword */
        UPDATE TB_WB_USER_INFO
           SET USER_PWD = #{userPwd},
               LAST_PWD_CHG_DT = #{modDt},
               MOD_DT = #{modDt},
               MOD_ID = #{modId}
         WHERE USER_ID = #{userId}
    </update>

    <!-- 웹 비밀번호 변경 히스토리 등록 -->
    <!--
          TABLE    : TB_WB_PWD_CHG_HIST
          PARAM    : hqEmpVO
          COMMENTS : 웹 비밀번호 변경 히스토리를 등록한다.
    -->
    <insert id="insertPasswordHistory" parameterType="hqEmpVO">
        /* USE : HqEmpMapper.insertPasswordHistory */
        INSERT INTO TB_WB_PWD_CHG_HIST
        (
            USER_ID,
            IDX,
            PRIOR_PWD,
            REG_IP,
            REG_DT,
            REG_ID
        )
        VALUES
        (
            #{userId},
            (SELECT NVL(MAX(IDX),0) + 1 AS MAX FROM TB_WB_PWD_CHG_HIST WHERE USER_ID = #{userId}),
            #{priorPwd},
            #{regIp},
            #{regDt},
            #{regId}
        )
    </insert>
</mapper>
