<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.table.service.impl.TableSaleMapper">

    <!-- 일자별 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_TABLE
        PARAM    : tableSaleVO
        COMMENTS : 일자별 값을 조회한다.
    -->
    <select id="getTableDayList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableDayList */
        SELECT 	DECODE(GROUPING(A.STORE_CD ||'||'|| A.TBL_CD), 1, 'TOTAL', A.STORE_CD ||'||'|| A.TBL_CD) AS STORE_TBL_CD
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'YYYYMMDD'), 'DY') AS SALE_DAY
        ,		SUM(A.REAL_SALE_AMT)      AS REAL_SALE_AMT
        ,		SUM(A.SALE_CNT)           AS SALE_CNT
        ,		SUM(A.GUEST_CNT_1)        AS GUEST_CNT
        FROM 	TB_SL_DAILY_TABLE A
        ,		TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND 	A.STORE_CD      = B.STORE_CD
        AND 	A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		ROLLUP(A.STORE_CD ||'||'|| A.TBL_CD)
        ,		A.SALE_DATE
        ORDER
        BY      A.SALE_DATE DESC
        ,		A.STORE_CD || '||' || A.TBL_CD
    </select>

    <!-- 일자별 로우 수 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_TABLE
        PARAM    : tableSaleVO
        COMMENTS : 일자별 값의 총 로우 수를 조회한다.
    -->
    <select id="getDayListCnt" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getDayListCnt */
        SELECT	A.SALE_DATE
        , 		COUNT(*) OVER() AS TOT_CNT
        FROM 	TB_SL_DAILY_TABLE A
        ,       TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND     A.STORE_CD      = B.STORE_CD
        AND     A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		A.SALE_DATE
    </select>

    <!-- 일자별 로우 수에 맞는 날짜 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_TABLE
        PARAM    : tableSaleVO
        COMMENTS : 일자별 값의 로우 수에 맞는 날짜를 조회한다.
    -->
    <select id="getSearchSaleDay" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getSearchSaleDay */
        SELECT 	FIRST_VALUE(SALE_DATE) OVER()   AS F_VAL
        ,		LAST_VALUE(SALE_DATE) OVER()    AS L_VAL
        FROM    (
                    SELECT  SALE_DATE
                    ,       ROWNUM AS NUM
                    FROM
                            (
                                SELECT	A.SALE_DATE
                                , 		COUNT(*) OVER() AS TOT_CNT
                                FROM 	TB_SL_DAILY_TABLE A
                                ,       TB_MS_TABLE_V01 B
                                WHERE 	1=1
                                AND     A.STORE_CD      = B.STORE_CD
                                AND     A.TBL_CD        = B.TBL_CD
                                AND     A.STORE_CD      = #{storeCd}
                                AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
                                AND 	A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                                <if test='arrTableCd != null and arrTableCd.length >= 0'>
                                    AND A.STORE_CD||'||'||A.TBL_CD IN
                                    <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                                        #{item}
                                    </foreach>
                                </if>
                                GROUP
                                BY 		A.SALE_DATE
                                ORDER
                                BY 		A.SALE_DATE DESC
                            )
        )
        WHERE NUM BETWEEN #{startNum} AND #{endNum}
    </select>

<!--    <select id="getTableDayList" parameterType="tableSaleVO" resultType="DefaultMap">-->
<!--        /* TableSaleMapper.getTableDayList */-->
<!--        <include refid="CmmSQL.PagingTemplateHeader"/>-->
<!--        SELECT STORE_CD-->
<!--        , TO_CHAR(TO_DATE(SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE-->
<!--        , TO_CHAR(TO_DATE(SALE_DATE, 'YYYYMMDD'), 'DY') SALE_DAY-->
<!--        , NVL(SUM(REAL_SALE_AMT), 0) TOT_REAL_SALE_AMT-->
<!--        , NVL(SUM(SALE_CNT), 0) TOT_SALE_CNT-->
<!--        , NVL(SUM(TOT_GUEST_CNT), 0) TOT_GUEST_CNT-->
<!--        ${sQuery1}-->
<!--        <include refid="CmmSQL.PagingTemplateCount"/>-->
<!--        FROM TB_SL_DAILY_TABLE TSDT-->
<!--        WHERE 1 = 1-->
<!--        AND HQ_OFFICE_CD = #{hqOfficeCd}-->
<!--        <if test='arrTableCd != null and arrTableCd.length >= 0'>-->
<!--            AND STORE_CD||'||'||TBL_CD IN-->
<!--            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">-->
<!--                #{item}-->
<!--            </foreach>-->
<!--        </if>-->
<!--        <if test='startDate != null and startDate != ""'>-->
<!--            AND TSDT.SALE_DATE <![CDATA[>= ]]> #{startDate}-->
<!--        </if>-->
<!--        <if test='endDate != null and endDate != ""'>-->
<!--            AND TSDT.SALE_DATE <![CDATA[<= ]]> #{endDate}-->
<!--        </if>-->
<!--        GROUP-->
<!--        BY 	  STORE_CD, SALE_DATE-->
<!--        ORDER-->
<!--        BY    SALE_DATE DESC-->
<!--        <include refid="CmmSQL.PagingTemplateBottom"/>-->
<!--    </select>-->

    <!-- 일자별 엑셀 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_TABLE
        PARAM    : tableSaleVO
        COMMENTS :
    -->
    <select id="getTableDayExcelList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableDayExcelList */
        SELECT 	DECODE(GROUPING(A.STORE_CD ||'||'|| A.TBL_CD), 1, 'TOTAL', A.STORE_CD ||'||'|| A.TBL_CD) AS STORE_TBL_CD
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'YYYYMMDD'), 'DY') AS SALE_DAY
        ,		SUM(A.REAL_SALE_AMT)      AS REAL_SALE_AMT
        ,		SUM(A.SALE_CNT)           AS SALE_CNT
        ,		SUM(A.GUEST_CNT_1)        AS GUEST_CNT
        FROM 	TB_SL_DAILY_TABLE A
        ,		TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND 	A.STORE_CD      = B.STORE_CD
        AND 	A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		ROLLUP(A.STORE_CD ||'||'|| A.TBL_CD)
        ,		A.SALE_DATE
        ORDER
        BY      A.SALE_DATE DESC
        ,		A.STORE_CD || '||' || A.TBL_CD
    </select>

    <select id="getStoreTableList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getStoreTableList */
        SELECT	TMP.STORE_CD||'||'||TMP.TBL_CD AS TABLE_CD
        , TMP.TBL_NM AS TABLE_NM
        , (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = TMP.STORE_CD) AS STORE_NM
        , TMP.TBL_GRP_CD
        , TMP.TBL_CD	AS	TABLE_CD_ORG
        FROM    TB_MS_TABLE_V01 TMP
        WHERE	1=1
        AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.STORE_CD = TMP.STORE_CD AND Z.HQ_OFFICE_CD = #{hqOfficeCd})
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND TMP.STORE_CD IN (${storeCdQuery})
        </if>
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND TMP.STORE_CD||'||'||TMP.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        ORDER BY TMP.STORE_CD||'||'||TMP.TBL_CD
    </select>

    <!-- 요일별 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_TABLE
        PARAM    : tableSaleVO
        COMMENTS :
    -->
    <select id="getTableDayOfWeekList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableDayOfWeekList */
        SELECT 	DECODE(GROUPING(A.STORE_CD || '||' ||A.TBL_CD), 1, 'TOTAL', A.STORE_CD || '||' ||A.TBL_CD) AS STORE_TBL_CD
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL
        ,       CASE TO_CHAR(TO_DATE(A.SALE_DATE, 'YYYY-MM-DD'),'DY','NLS_DATE_LANGUAGE=korean')
                    WHEN '일' THEN 1
                    WHEN '월' THEN 2
                    WHEN '화' THEN 3
                    WHEN '수' THEN 4
                    WHEN '목' THEN 5
                    WHEN '금' THEN 6
                    ELSE 7
                END AS DAY_ORDER
        ,		SUM(A.REAL_SALE_AMT)      AS REAL_SALE_AMT
        ,		SUM(A.SALE_CNT)           AS SALE_CNT
        ,		SUM(A.GUEST_CNT_1)        AS GUEST_CNT
        FROM 	TB_SL_DAILY_TABLE A
        ,		TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND 	A.STORE_CD      = B.STORE_CD
        AND 	A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		ROLLUP(A.STORE_CD || '||' ||A.TBL_CD)
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'YYYYMMDD'), 'DY')
        ,		TO_CHAR(TO_DATE(A.SALE_DATE, 'YYYY-MM-DD'),'DY','NLS_DATE_LANGUAGE=korean')
        ORDER
        BY 		DAY_ORDER
        ,       A.STORE_CD || '||' ||A.TBL_CD
    </select>

    <!-- 월별 로우 수 조회 -->
    <!--
        TABLE    : TB_SL_MONTHLY_TABLE
        PARAM    : tableSaleVO
        COMMENTS : 월별 값의 총 로우 수를 조회한다.
    -->
    <select id="getMonthListCnt" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getMonthListCnt */
        SELECT	A.SALE_YM
        , 		COUNT(*) OVER() AS TOT_CNT
        FROM 	TB_SL_MONTHLY_TABLE A
        ,       TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND     A.STORE_CD      = B.STORE_CD
        AND     A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_YM BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		A.SALE_YM
    </select>

    <!-- 월별 로우 수에 맞는 날짜 조회 -->
    <!--
        TABLE    : TB_SL_MONTHLY_TABLE
        PARAM    : tableSaleVO
        COMMENTS : 월별 값의 로우 수에 맞는 날짜를 조회한다.
    -->
    <select id="getSearchSaleMonth" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getSearchSaleMonth */
        SELECT 	FIRST_VALUE(SALE_YM) OVER()   AS F_VAL
        ,		LAST_VALUE(SALE_YM) OVER()    AS L_VAL
        FROM    (
                    SELECT	SALE_YM
                    ,       ROWNUM AS NUM
                    FROM
                        (
                            SELECT	A.SALE_YM
                            , 		COUNT(*) OVER() AS TOT_CNT
                            FROM 	TB_SL_MONTHLY_TABLE A
                            ,       TB_MS_TABLE_V01 B
                            WHERE 	1=1
                            AND     A.STORE_CD      = B.STORE_CD
                            AND     A.TBL_CD        = B.TBL_CD
                            AND     A.STORE_CD      = #{storeCd}
                            AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
                            AND 	A.SALE_YM BETWEEN #{startDate} AND #{endDate}
                            <if test='arrTableCd != null and arrTableCd.length >= 0'>
                                AND A.STORE_CD||'||'||A.TBL_CD IN
                                <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </if>
                            GROUP
                            BY 		A.SALE_YM
                            ORDER
                            BY 		A.SALE_YM DESC
                        )
                )
        WHERE NUM BETWEEN #{startNum} AND #{endNum}
    </select>


    <!-- 월별 조회 -->
    <!--
        TABLE    : TB_SL_MONTHLY_TABLE
        PARAM    : tableSaleVO
        COMMENTS :
    -->
    <select id="getTableMonthList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableMonthList */
        SELECT 	DECODE(GROUPING(A.STORE_CD || '||' ||A.TBL_CD), 1, 'TOTAL', A.STORE_CD || '||' ||A.TBL_CD) AS STORE_TBL_CD
        ,		TO_CHAR(TO_DATE(A.SALE_YM, 'YYYYMM'), 'YYYY-MM') AS SALE_YM
        ,		SUM(A.REAL_SALE_AMT)      AS REAL_SALE_AMT
        ,		SUM(A.SALE_CNT)           AS SALE_CNT
        ,		SUM(A.GUEST_CNT_1)        AS GUEST_CNT
        FROM 	TB_SL_MONTHLY_TABLE A
        ,		TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND 	A.STORE_CD      = B.STORE_CD
        AND 	A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_YM BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		ROLLUP(A.STORE_CD || '||' ||A.TBL_CD)
        ,		TO_CHAR(TO_DATE(A.SALE_YM, 'YYYYMM'), 'YYYY-MM')
        ORDER
        BY     	TO_CHAR(TO_DATE(A.SALE_YM, 'YYYYMM'), 'YYYY-MM') DESC
        ,		A.STORE_CD || '||' ||A.TBL_CD
    </select>

    <!-- 월별 엑셀 조회 -->
    <!--
        TABLE    : TB_SL_MONTHLY_TABLE
        PARAM    : tableSaleVO
        COMMENTS :
    -->
    <select id="getTableMonthExcelList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableMonthExcelList */
        SELECT 	DECODE(GROUPING(A.STORE_CD || '||' ||A.TBL_CD), 1, 'TOTAL', A.STORE_CD || '||' ||A.TBL_CD) AS STORE_TBL_CD
        ,		TO_CHAR(TO_DATE(A.SALE_YM, 'YYYYMM'), 'YYYY-MM') AS SALE_YM
        ,		SUM(A.REAL_SALE_AMT)      AS REAL_SALE_AMT
        ,		SUM(A.SALE_CNT)           AS SALE_CNT
        ,		SUM(A.GUEST_CNT_1)        AS GUEST_CNT
        FROM 	TB_SL_MONTHLY_TABLE A
        ,		TB_MS_TABLE_V01 B
        WHERE 	1=1
        AND 	A.STORE_CD      = B.STORE_CD
        AND 	A.TBL_CD        = B.TBL_CD
        AND     A.STORE_CD      = #{storeCd}
        AND     A.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND 	A.SALE_YM BETWEEN #{startDate} AND #{endDate}
        <if test='arrTableCd != null and arrTableCd.length >= 0'>
            AND A.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrTableCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP
        BY 		ROLLUP(A.STORE_CD || '||' ||A.TBL_CD)
        ,		TO_CHAR(TO_DATE(A.SALE_YM, 'YYYYMM'), 'YYYY-MM')
        ORDER
        BY     	TO_CHAR(TO_DATE(A.SALE_YM, 'YYYYMM'), 'YYYY-MM') DESC
        ,		A.STORE_CD || '||' ||A.TBL_CD
    </select>

    <select id="getTableDayPeriodList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableDayPeriodList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT TO_CHAR(TO_DATE(TSDT.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE,
        TMTG.STORE_CD,
        TMS.STORE_NM,
        TMT.TBL_CD,
        TMT.TBL_NM,
        <!-- TMTG.TBL_GRP_NM, -->
        NVL(SUM(TSDT.SALE_CNT), 0) AS SALE_CNT,
        NVL(SUM((TSDT.TOT_GUEST_CNT)), 0) AS GUEST_CNT,
        NVL(SUM(TSDT.TOT_SALE_AMT), 0) AS TOT_SALE_AMT,
        NVL(SUM(TSDT.TOT_DC_AMT), 0) AS TOT_DC_AMT,
        NVL(SUM(TSDT.TOT_TIP_AMT), 0) AS TOT_TIP_AMT,
        NVL(SUM(TSDT.REAL_SALE_AMT), 0) AS REAL_SALE_AMT
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM TB_MS_TABLE_GROUP TMTG
        , TB_MS_TABLE_V01 TMT
        , TB_SL_DAILY_TABLE TSDT
        , TB_MS_STORE TMS
        WHERE TMS.HQ_OFFICE_CD = #{hqOfficeCd}
        AND TMTG.TBL_GRP_CD = TMT.TBL_GRP_CD
        AND TMT.TBL_CD = TSDT.TBL_CD
        AND TMT.STORE_CD = TSDT.STORE_CD
        AND TMTG.STORE_CD = TSDT.STORE_CD
        AND TMT.STORE_CD = TMS.STORE_CD
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND TMTG.STORE_CD IN (${storeCdQuery})
        </if>
        <if test='orgnFg != null and orgnFg == "H"'>
            AND (
            'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
            OR	TMTG.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
            )
        </if>
        <if test='startDate != null and startDate != "" and endDate != null and endDate != ""'>
            <![CDATA[
   			  AND TSDT.SALE_DATE >= #{startDate}
   			  AND TSDT.SALE_DATE <= #{endDate}
   			  ]]>
        </if>
        GROUP BY TMTG.STORE_CD, TMS.STORE_NM, TSDT.SALE_DATE, TMT.TBL_CD, TMT.TBL_NM
        ORDER BY TSDT.SALE_DATE DESC, TMT.TBL_CD, TMT.TBL_NM
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getTableDayPeriodExcelList" parameterType="tableSaleVO" resultType="DefaultMap">
        /* TableSaleMapper.getTableDayPeriodExcelList */
        SELECT TO_CHAR(TO_DATE(TSDT.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE,
        TMTG.STORE_CD,
        TMS.STORE_NM,
        TMT.TBL_CD,
        TMT.TBL_NM,
        <!-- TMTG.TBL_GRP_NM, -->
        NVL(SUM(TSDT.SALE_CNT), 0) AS SALE_CNT,
        NVL(SUM((TSDT.TOT_GUEST_CNT)), 0) AS GUEST_CNT,
        NVL(SUM(TSDT.TOT_SALE_AMT), 0) AS TOT_SALE_AMT,
        NVL(SUM(TSDT.TOT_DC_AMT), 0) AS TOT_DC_AMT,
        NVL(SUM(TSDT.TOT_TIP_AMT), 0) AS TOT_TIP_AMT,
        NVL(SUM(TSDT.REAL_SALE_AMT), 0) AS REAL_SALE_AMT
        FROM TB_MS_TABLE_GROUP TMTG
        , TB_MS_TABLE_V01 TMT
        , TB_SL_DAILY_TABLE TSDT
        , TB_MS_STORE TMS
        WHERE TMS.HQ_OFFICE_CD = #{hqOfficeCd}
        AND TMTG.TBL_GRP_CD = TMT.TBL_GRP_CD
        AND TMT.TBL_CD = TSDT.TBL_CD
        AND TMT.STORE_CD = TSDT.STORE_CD
        AND TMTG.STORE_CD = TSDT.STORE_CD
        AND TMT.STORE_CD = TMS.STORE_CD
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND TMTG.STORE_CD IN (${storeCdQuery})
        </if>
        <if test='orgnFg != null and orgnFg == "H"'>
            AND (
            'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
            OR	TMTG.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
            )
        </if>
        <if test='startDate != null and startDate != "" and endDate != null and endDate != ""'>
            <![CDATA[
              AND TSDT.SALE_DATE >= #{startDate}
              AND TSDT.SALE_DATE <= #{endDate}
              ]]>
        </if>
        GROUP BY TMTG.STORE_CD, TMS.STORE_NM, TSDT.SALE_DATE, TMT.TBL_CD, TMT.TBL_NM
        ORDER BY TSDT.SALE_DATE DESC, TMT.TBL_CD, TMT.TBL_NM
    </select>


</mapper>