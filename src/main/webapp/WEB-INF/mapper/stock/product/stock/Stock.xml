<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    Stock.xml
    재고현황(매장)
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2022.09.07     최초작성
-->

<mapper namespace="kr.co.solbipos.stock.product.stock.service.impl.StockMapper">

    <!-- 재고현황(매장) - 조회 -->
    <!--
        TABLE    : TB_ST_STORE_STOCK_CUR, TB_MS_STORE, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD, TB_HQ_PRODUCT_CLASS
        PARAM    : stockVO
        COMMENTS : 재고현황(매장)을 조회한다.
    -->
    <select id="getStockList" parameterType="stockVO" resultType="DefaultMap">
        /* StockMapper.getStockList */
        SELECT  A.LV1_CD
        , 		A.LV1_NM
        , 		A.LV2_CD
        ,		A.LV2_NM
        , 		A.LV3_CD
        , 		A.LV3_NM
        ,		tsssc.PROD_CD             ,   tmp.PROD_NM
        ,       tsssc.FIRST_IN_DATE       ,   tsssc.LAST_IN_DATE
        ,       tsssc.FIRST_SALE_DATE     ,   tsssc.LAST_SALE_DATE
        ,       tsssc.STORE_CD
        ,       (SELECT STORE_NM FROM TB_MS_STORE Z WHERE Z.STORE_CD = tsssc.STORE_CD) AS STORE_NM
        ,       tmp.COST_UPRC
        ,       tmpb.BARCD_CD
        ,       tmp.PO_UNIT_QTY
        ,       ROUND(tsssc.CURR_QTY * tmp.COST_UPRC / tmp.PO_UNIT_QTY) AS CURR_AMT
        <if test='unitFg == "1"'>
            ,       tmp.PO_UNIT_FG AS PO_UNIT_FG
            ,       (tmp.SAFE_STOCK_QTY / tmp.PO_UNIT_QTY) AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((tsssc.CURR_QTY                               ) / tmp.PO_UNIT_QTY) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_STORE_IN_QTY                       ) / tmp.PO_UNIT_QTY) AS ACC_STORE_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_STORE_OUT_QTY                      ) / tmp.PO_UNIT_QTY) AS ACC_STORE_OUT_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_PURCHS_OUT_QTY                     ) / tmp.PO_UNIT_QTY) AS ACC_PURCHS_OUT_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_PURCHS_IN_QTY                      ) / tmp.PO_UNIT_QTY) AS ACC_PURCHS_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_MOVE_IN_QTY                        ) / tmp.PO_UNIT_QTY) AS ACC_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_MOVE_OUT_QTY                       ) / tmp.PO_UNIT_QTY) AS ACC_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_DISUSE_QTY                         ) / tmp.PO_UNIT_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_ADJ_QTY                            ) / tmp.PO_UNIT_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_SET_IN_QTY + tsssc.ACC_SET_OUT_QTY ) / tmp.PO_UNIT_QTY) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_STORE_SALE_QTY                     ) / tmp.PO_UNIT_QTY) AS ACC_STORE_SALE_QTY
        </if>
        <if test='unitFg == "0"'>
            ,       (CASE WHEN tmp.STOCK_UNIT_FG IS NOT NULL THEN tmp.STOCK_UNIT_FG ELSE tmp.PO_UNIT_FG END) AS PO_UNIT_FG
            ,       tmp.SAFE_STOCK_QTY AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((tsssc.CURR_QTY                               )) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_STORE_IN_QTY                       )) AS ACC_STORE_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_STORE_OUT_QTY                      )) AS ACC_STORE_OUT_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_PURCHS_OUT_QTY                     )) AS ACC_PURCHS_OUT_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_PURCHS_IN_QTY                      )) AS ACC_PURCHS_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_MOVE_IN_QTY                        )) AS ACC_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_MOVE_OUT_QTY                       )) AS ACC_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_DISUSE_QTY                         )) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_ADJ_QTY                            )) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_SET_IN_QTY + tsssc.ACC_SET_OUT_QTY )) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((tsssc.ACC_STORE_SALE_QTY                     )) AS ACC_STORE_SALE_QTY
        </if>
        , SF_ZERO_TO_NULL(tsssc.ACC_MALL_SALE_QTY) AS ACC_MALL_SALE_QTY
        , SF_ZERO_TO_NULL(tsssc.ACC_MALL_RTN_QTY) AS ACC_MALL_RTN_QTY
        , SF_ZERO_TO_NULL(tsssc.ACC_PRDTION_IN_QTY) AS ACC_PRDTION_IN_QTY
        , SF_ZERO_TO_NULL(tsssc.ACC_PRDTION_OUT_QTY) AS ACC_PRDTION_OUT_QTY
        FROM    (
        <![CDATA[
            SELECT  A.HQ_OFFICE_CD
            ,       A.PROD_CLASS_CD
            ,		NULL	LV1_CD
            ,		NULL	LV2_CD
            ,		NULL	LV3_CD
            ,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
                                ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
                            )  AS  LV1_NM
            ,       DECODE	(A.LV ,1  ,NULL
                                ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
                                ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
                            )  AS  LV2_NM
            ,       DECODE	(A.LV ,1  ,NULL
                                ,2  ,NULL
                                ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
                            )  AS  LV3_NM
            FROM    (
                    SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
                    FROM    (
                                SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
                                FROM    TB_HQ_PRODUCT_CLASS
                                WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
                            )
                    START WITH  P_PROD_CLASS_CD ='00000'
                    AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
                    CONNECT BY
                    PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
                    AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
                    )   A

            ]]>
        )  A
        ,		TB_ST_STORE_STOCK_CUR tsssc
        ,       TB_MS_PRODUCT tmp
        ,       TB_MS_PRODUCT_BARCD tmpb
        WHERE   tmp.STORE_CD          =   tsssc.STORE_CD
        AND		EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.STORE_CD = tmp.STORE_CD AND Z.HQ_OFFICE_CD = #{hqOfficeCd})
        AND     tsssc.STORAGE_CD      =   '999'
        AND     tmp.PROD_CD           =   tsssc.PROD_CD
        AND     tmp.STOCK_PROD_YN     =   'Y'
        AND     tmp.USE_YN            =   'Y'
        AND     tmpb.STORE_CD     (+) =   tsssc.STORE_CD
        AND     tmpb.PROD_CD      (+) =   tsssc.PROD_CD
        AND 	tmp.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND tmp.STORE_CD IN (${storeCdQuery})
        </if>
        <if test='prodCd != null and prodCd != ""'>
            AND tsssc.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND tmpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='prodClassCd != null and prodClassCd != ""'>
            AND tmp.PROD_CLASS_CD IN  (
                                        SELECT              PROD_CLASS_CD
                                        FROM                TB_MS_PRODUCT_CLASS
                                        WHERE               STORE_CD        = tsssc.STORE_CD
                                        START WITH          PROD_CLASS_CD   = #{prodClassCd}
                                        AND                 STORE_CD        = tsssc.STORE_CD
                                        CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
                                        AND                 STORE_CD        = tsssc.STORE_CD
                                        )
        </if>
        ORDER BY tsssc.PROD_CD, tsssc.STORE_CD
    </select>
</mapper>