<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    DlvrProd.xml
    배달 시스템 상품 명칭 맵핑
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2020.10.14     최초작성
-->

<mapper namespace="kr.co.solbipos.base.prod.dlvrProd.service.impl.DlvrProdMapper">

    <!-- 배달시스템 상품 명칭 매핑 - 배달앱구분코드 -->
    <!--
        TABLE    : TB_CM_NMCODE
        PARAM    : dlvrProdVO
        COMMENTS : 배달앱 구분코드를 조회한다.
    -->
    <select id="getDlvrColList" parameterType="dlvrProdVO" resultType="DefaultMap">
        /* USE : DlvrProdMapper.getDlvrColList */
        SELECT  tcn.NMCODE_CD AS DLVR_CD,
                tcn.NMCODE_NM AS DLVR_NM
        FROM TB_CM_NMCODE tcn
        WHERE tcn.NMCODE_GRP_CD = '112'
          AND tcn.NMCODE_CD NOT IN ('1') /* 코드 1(포스앱)은 포스에서 사용하는 코드이므로 나오지 않도록 함 */
        ORDER BY TO_NUMBER(tcn.NMCODE_CD)

    </select>

    <!-- 배달시스템 상품 명칭 매핑 - 상품목록조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_DLVR_PROD_NM
                   TB_MS_PRODUCT, TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : dlvrProdVO
        COMMENTS : 상품 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getProdList" parameterType="dlvrProdVO" resultType="DefaultMap">
        /* USE : DlvrProdMapper.getProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT thp.PROD_CD,
                thp.PROD_NM,
                <foreach collection="arrDlvrCol" item="item" separator=",">
                    thpdpn.DLVR_PROD_NM_${item}
                </foreach>
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_HQ_PRODUCT thp,
                ( SELECT *
                FROM (
                SELECT HQ_OFFICE_CD,
                PROD_CD,
                DLVR_NAME_CD,
                DLVR_PROD_NM
                <if test="chkDt == false">
                    , REG_DT
                </if>
                FROM TB_HQ_PRODUCT_DLVR_PROD_NM
                )
                PIVOT (
                MIN(DLVR_PROD_NM)
                FOR DLVR_NAME_CD
                IN (${pivotDlvrCol})
                )
                ) thpdpn
                WHERE thpdpn.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                AND thpdpn.PROD_CD (+)= thp.PROD_CD
                AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                   <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                       <if test="regDtType != null and regDtType == 'prod'">
                           <![CDATA[
                           AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                           ]]>
                       </if>
                       <if test="regDtType != null and regDtType == 'dlvrProdNm'">
                           <![CDATA[
                           AND thpdpn.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                           ]]>
                       </if>
                   </if>
               </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM TB_HQ_PRODUCT_BARCD
                    WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND PROD_CD = thp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_HQ_PRODUCT_CLASS
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY
                    PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="channelProdNm != null and channelProdNm != ''">
                    AND
                    (
                    <foreach collection="arrDlvrCol" item="item" separator="OR">
                        thpdpn.DLVR_PROD_NM_${item} LIKE '%' || #{channelProdNm} || '%' --채널사상품명
                    </foreach>
                    )
                </if>
                AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                )
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD,
                tmp.PROD_NM,
                <foreach collection="arrDlvrCol" item="item" separator=",">
                    tmpdpn.DLVR_PROD_NM_${item}
                </foreach>
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_MS_PRODUCT tmp,
                (  SELECT *
                FROM (
                SELECT STORE_CD,
                PROD_CD,
                DLVR_NAME_CD,
                DLVR_PROD_NM
                FROM TB_MS_PRODUCT_DLVR_PROD_NM
                )
                PIVOT (
                MIN(DLVR_PROD_NM)
                FOR DLVR_NAME_CD
                IN (${pivotDlvrCol})
                )
                ) tmpdpn
                WHERE tmpdpn.STORE_CD (+)= tmp.STORE_CD
                AND tmpdpn.PROD_CD (+)= tmp.PROD_CD
                AND tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM TB_MS_PRODUCT_BARCD
                    WHERE STORE_CD = tmp.STORE_CD
                    AND PROD_CD = tmp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY
                    PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="channelProdNm != null and channelProdNm != ''">
                    AND
                    (
                    <foreach collection="arrDlvrCol" item="item" separator="OR">
                        tmpdpn.DLVR_PROD_NM_${item} LIKE '%' || #{channelProdNm} || '%' --채널사상품명
                    </foreach>
                    )
                </if>
                AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                )
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 배달시스템 상품 명칭 매핑 - 전체 엑셀다운로드 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_DLVR_PROD_NM
                   TB_MS_PRODUCT, TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : dlvrProdVO
        COMMENTS : 전체 엑셀다운로드 ( 본사/매장 )
    -->
    <select id="getDlvrProdNmExcelList" parameterType="dlvrProdVO" resultType="DefaultMap">
        /* USE : DlvrProdMapper.getDlvrProdNmExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT thp.PROD_CD,
                thp.PROD_NM,
                thp.USE_YN,
                <foreach collection="arrDlvrCol" item="item" separator=",">
                    thpdpn.DLVR_PROD_NM_${item}
                </foreach>
                FROM TB_HQ_PRODUCT thp,
                ( SELECT *
                FROM (
                SELECT HQ_OFFICE_CD,
                PROD_CD,
                DLVR_NAME_CD,
                DLVR_PROD_NM
                FROM TB_HQ_PRODUCT_DLVR_PROD_NM
                )
                PIVOT (
                MIN(DLVR_PROD_NM)
                FOR DLVR_NAME_CD
                IN (${pivotDlvrCol})
                )
                ) thpdpn
                WHERE thpdpn.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                AND thpdpn.PROD_CD (+)= thp.PROD_CD
                AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                )
                ORDER BY thp.PROD_CD ASC
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.USE_YN,
                <foreach collection="arrDlvrCol" item="item" separator=",">
                    tmpdpn.DLVR_PROD_NM_${item}
                </foreach>
                FROM TB_MS_PRODUCT tmp,
                (  SELECT *
                FROM (
                SELECT STORE_CD,
                PROD_CD,
                DLVR_NAME_CD,
                DLVR_PROD_NM
                FROM TB_MS_PRODUCT_DLVR_PROD_NM
                )
                PIVOT (
                MIN(DLVR_PROD_NM)
                FOR DLVR_NAME_CD
                IN (${pivotDlvrCol})
                )
                ) tmpdpn
                WHERE tmpdpn.STORE_CD (+)= tmp.STORE_CD
                AND tmpdpn.PROD_CD (+)= tmp.PROD_CD
                AND tmp.STORE_CD = #{storeCd}
                AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                )
                ORDER BY tmp.PROD_CD ASC
            </when>
        </choose>
    </select>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_DLVR_PROD_NM
                   TB_MS_PRODUCT, TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : dlvrProdVO
        COMMENTS : 기존 배달상품명칭을 삭제한다. ( 본사/매장 )
    -->
    <delete id="deleteDlvrProdNm" parameterType="dlvrProdVO">
        /* DlvrProdMapper.deleteDlvrProdNm */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM TB_HQ_PRODUCT_DLVR_PROD_NM
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD = #{prodCd}
                AND DLVR_NAME_CD = #{dlvrNameCd}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM TB_MS_PRODUCT_DLVR_PROD_NM
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
                AND DLVR_NAME_CD = #{dlvrNameCd}
            </when>
        </choose>
    </delete>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭등록 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_DLVR_PROD_NM
                   TB_MS_PRODUCT, TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : dlvrProdVO
        COMMENTS : 배달상품명칭을 등록한다. ( 본사/매장 )
    -->
    <insert id="insertDlvrProdNm" parameterType="dlvrProdVO">
        /* DlvrProdMapper.insertDlvrProdNm */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_DLVR_PROD_NM
                (
                    HQ_OFFICE_CD,
                    PROD_CD,
                    DLVR_NAME_CD,
                    DLVR_PROD_NM,
                    REG_ID,
                    REG_DT,
                    MOD_ID,
                    MOD_DT
                )
                VALUES
                (
                    #{hqOfficeCd},
                    #{prodCd},
                    #{dlvrNameCd},
                    #{dlvrProdNm},
                    #{regId},
                    #{regDt},
                    #{modId},
                    #{modDt}
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_DLVR_PROD_NM
                (
                    STORE_CD,
                    PROD_CD,
                    DLVR_NAME_CD,
                    DLVR_PROD_NM,
                    REG_ID,
                    REG_DT,
                    MOD_ID,
                    MOD_DT
                )
                VALUES
                (
                    #{storeCd},
                    #{prodCd},
                    #{dlvrNameCd},
                    #{dlvrProdNm},
                    #{regId},
                    #{regDt},
                    #{modId},
                    #{modDt}
                )
            </when>
        </choose>
    </insert>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭 복사 전 기존데이터 삭제 -->
    <!--
        TABLE    : TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : dlvrProdVO
        COMMENTS : 기준매장의 배달상품명칭을 복사하기 전 적용대상매장의 배달상품명칭을 삭제한다.
    -->
    <delete id="deleteStoreDlvrProdNm" parameterType="dlvrProdVO">
        /* DlvrProdMapper.deleteAllDlvrProdNm */
        DELETE
        FROM TB_MS_PRODUCT_DLVR_PROD_NM
        WHERE STORE_CD = #{targetStoreCd}
    </delete>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭 복사 -->
    <!--
        TABLE    : TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : dlvrProdVO
        COMMENTS : 기준매장의 배달상품명칭을 복사하여 적용대상매장에 등록한다.
    -->
    <insert id="copyStoreDlvrProdNm" parameterType="dlvrProdVO">
        /* USE : DlvrProdMapper.copyStoreDlvrProdNm */
        INSERT INTO TB_MS_PRODUCT_DLVR_PROD_NM
        (
        STORE_CD
        , PROD_CD
        , DLVR_NAME_CD
        , DLVR_PROD_NM
        , REG_DT
        , REG_ID
        , MOD_DT
        , MOD_ID
        , DLVR_MAPPING_FG
        )
        <choose>
            <!-- 기준매장이 본사인 경우 -->
            <when test='originalStoreFg != null and originalStoreFg == "H"'>
                SELECT  #{targetStoreCd} AS STORE_CD
                , PROD_CD
                , DLVR_NAME_CD
                , DLVR_PROD_NM
                , #{regDt}
                , #{regId}
                , #{modDt}
                , #{modId}
                , DLVR_MAPPING_FG
                FROM TB_HQ_PRODUCT_DLVR_PROD_NM
                WHERE HQ_OFFICE_CD = #{originalStoreCd}
                AND DLVR_NAME_CD IN (SELECT NMCODE_CD
                FROM TB_CM_NMCODE
                WHERE NMCODE_GRP_CD = '112'
                AND NMCODE_CD != '1')
            </when>
            <!-- 기준매장이 매장인 경우 -->
            <when test='originalStoreFg != null and originalStoreFg == "S"'>
                SELECT  #{targetStoreCd} AS STORE_CD
                , PROD_CD
                , DLVR_NAME_CD
                , DLVR_PROD_NM
                , #{regDt}
                , #{regId}
                , #{modDt}
                , #{modId}
                , DLVR_MAPPING_FG
                FROM TB_MS_PRODUCT_DLVR_PROD_NM
                WHERE STORE_CD = #{originalStoreCd}
                AND DLVR_NAME_CD IN (SELECT NMCODE_CD
                FROM TB_CM_NMCODE
                WHERE NMCODE_GRP_CD = '112'
                AND NMCODE_CD != '1')
            </when>
        </choose>
    </insert>

    <!-- 배달시스템 상품 명칭 매핑 - 상품명칭 엑셀 업로드 전 상품코드 유효여부 체크  -->
    <!--
        TABLE    : TB_MS_PRODUCT
        PARAM    : dlvrProdVO
        COMMENTS : 상품명칭 엑셀 업로드 전 유효한 상품코드인지 체크한다.
    -->
    <select id="chkDlvrProd" parameterType="dlvrProdVO" resultType="integer">
        /* USE : DlvrProdMapper.chkDlvrProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(PROD_CD)
                FROM TB_HQ_PRODUCT
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN
                <foreach collection="arrProdCdCol" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(PROD_CD)
                FROM TB_MS_PRODUCT
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN
                <foreach collection="arrProdCdCol" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </when>
        </choose>
    </select>

    <!-- 상품명칭 매장적용 팝업 - 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : [매장]매장 정보
    -->
    <select id="getDlvrProdNmStoreRegistList" parameterType="dlvrProdVO" resultType="DefaultMap">
        /* DlvrProdMapper.getDlvrProdNmStoreRegistList */
        SELECT
        tms.HQ_OFFICE_CD,
        tms.STORE_CD,
        tms.STORE_NM,
        tms.SYS_STAT_FG
        FROM TB_MS_STORE tms
        WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test="storeCd != null and storeCd != ''">
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        <if test="sysStatFg != null and sysStatFg != ''">
            AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        ORDER BY tms.STORE_CD ASC
    </select>

    <!-- 상품명칭 매장적용 팝업 - 저장 delete -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getDlvrProdNmStoreRegistSaveDelete" parameterType="dlvrProdVO" >
        /* DlvrProdMapper.getDlvrProdNmStoreRegistSaveDelete */
        DELETE
        FROM TB_MS_PRODUCT_DLVR_PROD_NM
        WHERE 1=1
        AND STORE_CD = #{storeCd}
        AND PROD_CD IN (${selectProdCd})
    </delete>

    <!-- 상품명칭 매장적용 팝업 - 저장 insert -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getDlvrProdNmStoreRegistSaveInsert" parameterType="dlvrProdVO" >
        /* DlvrProdMapper.getDlvrProdNmStoreRegistSaveInsert */
        INSERT INTO TB_MS_PRODUCT_DLVR_PROD_NM
        (
            STORE_CD,
            PROD_CD,
            DLVR_NAME_CD,
            DLVR_PROD_NM,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            DLVR_MAPPING_FG
        )
        SELECT
        #{storeCd} AS STORE_CD,
        PROD_CD,
        DLVR_NAME_CD,
        DLVR_PROD_NM,
        #{regDt} AS REG_DT,
        #{regId} AS REG_ID,
        #{modDt} AS MOD_DT,
        #{modId} AS MOD_ID,
        DLVR_MAPPING_FG
        FROM TB_HQ_PRODUCT_DLVR_PROD_NM
        WHERE 1=1
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        AND PROD_CD IN (${selectProdCd})
    </insert>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭 중복 체크 delete -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getDlvrProdNmMappingChkSaveDeleteAll" parameterType="dlvrProdVO" >
        /* DlvrProdMapper.getDlvrProdNmMappingChkSaveDeleteAll */
        DELETE
        FROM TB_TMP_PRODUCT_DLVR_PROD_NM
        WHERE 1=1
        AND SESSION_ID = #{sessionId}
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                AND STORE_CD = #{storeCd}
            ]]>
        </if>
    </delete>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭 중복 체크 insert -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getDlvrProdNmMappingChkSaveInsert" parameterType="dlvrProdVO" >
        /* DlvrProdMapper.getDlvrProdNmMappingChkSaveInsert */
        INSERT INTO TB_TMP_PRODUCT_DLVR_PROD_NM
        (
            SESSION_ID,
            SEQ,
            HQ_OFFICE_CD,
            STORE_CD,
            PROD_CD,
            DLVR_NAME_CD,
            DLVR_PROD_NM,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        ) VALUES (
            #{sessionId},
            #{seq},
            #{hqOfficeCd},
            #{storeCd},
            #{prodCd},
            #{dlvrNameCd},
            #{dlvrProdNm},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 배달시스템 상품 명칭 매핑 - 배달상품명칭 중복 체크 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getDlvrProdNmMappingChk" parameterType="dlvrProdVO" resultType="String">
        /* DlvrProdMapper.getDlvrProdNmMappingChk */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LISTAGG(DLVR_PROD_NM, ',') WITHIN GROUP (ORDER BY DLVR_PROD_NM) AS DLVR_PROD_NM
                FROM
                (
                    SELECT DLVR_NAME_CD, DLVR_PROD_NM, COUNT(*)
                    FROM
                    (
                        SELECT DLVR_NAME_CD, DLVR_PROD_NM
                        FROM TB_TMP_PRODUCT_DLVR_PROD_NM
                        WHERE 1=1
                        AND SESSION_ID = #{sessionId}
                        AND HQ_OFFICE_CD = #{hqOfficeCd}
                        AND DLVR_PROD_NM IS NOT NULL
                        UNION ALL
                        SELECT A.DLVR_NAME_CD, A.DLVR_PROD_NM
                        FROM TB_HQ_PRODUCT_DLVR_PROD_NM A
                        WHERE 1=1
                        AND A.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND A.DLVR_PROD_NM IS NOT NULL
                        -- 수정할 데이터는 COUNT에서 빼야되서 제거
                        AND A.PROD_CD ||'/'|| A.DLVR_NAME_CD NOT IN (
                                                                            SELECT B.PROD_CD ||'/'|| B.DLVR_NAME_CD
                                                                            FROM TB_TMP_PRODUCT_DLVR_PROD_NM B
                                                                            WHERE 1=1
                                                                            AND B.SESSION_ID = #{sessionId}
                                                                            AND B.HQ_OFFICE_CD = #{hqOfficeCd}
                                                                            AND B.PROD_CD = A.PROD_CD
                                                                            AND B.DLVR_NAME_CD = A.DLVR_NAME_CD
                                                                        )
                    )
                    GROUP BY DLVR_NAME_CD, DLVR_PROD_NM
                    HAVING COUNT(*) > 1
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LISTAGG(DLVR_PROD_NM, ',') WITHIN GROUP (ORDER BY DLVR_PROD_NM) AS DLVR_PROD_NM
                FROM
                (
                    SELECT DLVR_NAME_CD, DLVR_PROD_NM, COUNT(*)
                    FROM
                    (
                        SELECT DLVR_NAME_CD, DLVR_PROD_NM
                        FROM TB_TMP_PRODUCT_DLVR_PROD_NM
                        WHERE 1=1
                        AND SESSION_ID = #{sessionId}
                        AND HQ_OFFICE_CD = #{hqOfficeCd}
                        AND STORE_CD = #{storeCd}
                        AND DLVR_PROD_NM IS NOT NULL
                        UNION ALL
                        SELECT A.DLVR_NAME_CD, A.DLVR_PROD_NM
                        FROM TB_MS_PRODUCT_DLVR_PROD_NM A
                        WHERE 1=1
                        AND A.STORE_CD = #{storeCd}
                        AND A.DLVR_PROD_NM IS NOT NULL
                        -- 수정할 데이터는 COUNT에서 빼야되서 제거
                        AND A.PROD_CD ||'/'|| A.DLVR_NAME_CD NOT IN (
                                                                            SELECT B.PROD_CD ||'/'|| B.DLVR_NAME_CD
                                                                            FROM TB_TMP_PRODUCT_DLVR_PROD_NM B
                                                                            WHERE 1=1
                                                                            AND B.SESSION_ID = #{sessionId}
                                                                            AND B.HQ_OFFICE_CD = #{hqOfficeCd}
                                                                            AND B.STORE_CD = #{storeCd}
                                                                            AND B.PROD_CD = A.PROD_CD
                                                                            AND B.DLVR_NAME_CD = A.DLVR_NAME_CD
                                                                        )
                    )
                    GROUP BY DLVR_NAME_CD, DLVR_PROD_NM
                    HAVING COUNT(*) > 1
                )
            </when>
        </choose>
    </select>

</mapper>