<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    EnvConfgBatchChange.xml
    환경변수일괄변경
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2021.02.17     최초작성
-->
<mapper namespace="kr.co.solbipos.store.manage.envConfgBatchChange.service.impl.EnvConfgBatchChangeMapper">

    <!-- 본사환경탭 - 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_HQ_ENVST, TB_MS_STORE, TB_MS_STORE_ENVST, TB_CM_ENVST
        COMMENTS : [본사]본사 정보, [본사]본사_환경설정, [매장]매장 정보, [매장]환경설정, [공통]환경설정
    -->
    <select id="getEnvConfgBatchChangeHqList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeHqList */
        SELECT
        the.HQ_OFFICE_CD,
        the.HQ_OFFICE_NM,
        the.ENVST_CD,
        the.ENVST_VAL,
        the.EXIST_FG,
        NVL(tms.TOT_STORE_CNT , 0) AS TOT_STORE_CNT,
        NVL(tmse.STORE_CNT, 0) AS STORE_CNT
        FROM
        (
            SELECT
            tho.HQ_OFFICE_CD,
            tho.HQ_OFFICE_NM,
            tce.ENVST_CD,
            the.ENVST_VAL,
            DECODE(the.ENVST_CD, NULL, 'N', 'Y') AS EXIST_FG
            FROM TB_HQ_OFFICE tho,
            TB_HQ_ENVST the,
            TB_CM_ENVST tce
            WHERE 1=1
            AND tho.HQ_OFFICE_CD != '00000'
            <if test='orgnFg != null and orgnFg == "A"'>
                AND tho.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
            </if>
            AND the.HQ_OFFICE_CD (+)= tho.HQ_OFFICE_CD
            AND the.ENVST_CD (+)= tce.ENVST_CD
            ORDER BY tho.HQ_OFFICE_CD
        ) the,
        (
            SELECT
            tms.HQ_OFFICE_CD,
            COUNT(tms.STORE_CD) AS TOT_STORE_CNT
            FROM TB_MS_STORE tms,
            TB_HQ_OFFICE tho
            WHERE 1=1
            AND tms.HQ_OFFICE_CD != '00000'
            <if test='orgnFg != null and orgnFg == "A"'>
                AND tho.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
            </if>
            AND tho.HQ_OFFICE_CD = tms.HQ_OFFICE_CD
            GROUP BY tms.HQ_OFFICE_CD
        ) tms,
        (
            SELECT
            tms.HQ_OFFICE_CD,
            tmse.ENVST_CD,
            COUNT(tmse.STORE_CD) AS STORE_CNT
            FROM TB_MS_STORE_ENVST tmse,
            TB_MS_STORE tms,
            TB_HQ_OFFICE tho
            WHERE 1=1
            AND tms.HQ_OFFICE_CD != '00000'
            <if test='orgnFg != null and orgnFg == "A"'>
                AND tho.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
            </if>
            AND tms.STORE_CD (+)= tmse.STORE_CD
            AND tho.HQ_OFFICE_CD = tms.HQ_OFFICE_CD
            GROUP BY tms.HQ_OFFICE_CD, tmse.ENVST_CD
        ) tmse
        WHERE 1=1
        <if test="hqOfficeCd != null and hqOfficeCd != ''">
            AND the.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
        </if>
        <if test="hqOfficeNm != null and hqOfficeNm != ''">
            AND the.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
        </if>
        <if test="useYn != null and useYn != ''">
            AND the.EXIST_FG = #{useYn}
        </if>
        AND the.ENVST_CD = #{envstCd}
        AND tms.HQ_OFFICE_CD (+)= the.HQ_OFFICE_CD
        AND tmse.HQ_OFFICE_CD (+)= the.HQ_OFFICE_CD
        AND tmse.ENVST_CD (+)= the.ENVST_CD
        ORDER BY the.HQ_OFFICE_CD
    </select>

    <!-- 환경설정 조회 팝업 - 조회(본사환경) -->
    <!--
        TABLE    : TB_CM_ENVST, TB_CM_NMCODE
        COMMENTS : [공통]환경설정, [공통]명칭코드
    -->
    <select id="getSearchEnvConfgList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getSearchEnvConfgList */
        SELECT
        tce.ENVST_CD,
        tce.ENVST_NM,
        tce.DIRCT_IN_YN,
        tce.TARGT_FG,
        (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '038' AND NMCODE_CD = tce.TARGT_FG) AS TARGT_FG_NM
        FROM TB_CM_ENVST tce
        WHERE 1=1
        AND tce.TARGT_FG IN ('H','C','X','Z') -- H:본사전용, C:공통(매장에서변경가능), N:No, S:매장전용, X:공통(매장에서사용하지만_본사기준), Z:본사+단독매장
        AND tce.ENVST_FG IN ('00','01')
        AND tce.USE_YN = 'Y'
        ORDER BY tce.ENVST_CD
    </select>

    <!-- 환경설정 조회 팝업 - 조회(매장환경) -->
    <!--
        TABLE    : TB_CM_ENVST, TB_CM_NMCODE
        COMMENTS : [공통]환경설정, [공통]명칭코드
    -->
    <select id="getSearchEnvConfgStoreList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getSearchEnvConfgStoreList */
        SELECT
        tce.ENVST_CD,
        tce.ENVST_NM,
        tce.DIRCT_IN_YN,
        tce.TARGT_FG,
        (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '038' AND NMCODE_CD = tce.TARGT_FG) AS TARGT_FG_NM
        FROM TB_CM_ENVST tce
        WHERE 1=1
        AND tce.TARGT_FG IN ('C','S','X','Z') -- H:본사전용, C:공통(매장에서변경가능), N:No, S:매장전용, X:공통(매장에서사용하지만_본사기준), Z:본사+단독매장
        AND tce.ENVST_FG IN ('00','01')
        AND tce.USE_YN = 'Y'
        ORDER BY tce.ENVST_CD
    </select>

    <!-- 환경설정 조회 팝업 - 조회(매장포스환경) -->
    <!--
        TABLE    : TB_CM_ENVST, TB_CM_NMCODE
        COMMENTS : [공통]환경설정, [공통]명칭코드
    -->
    <select id="getSearchEnvConfgStorePosList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getSearchEnvConfgStorePosList */
        SELECT
        tce.ENVST_CD,
        tce.ENVST_NM,
        tce.DIRCT_IN_YN,
        tce.TARGT_FG,
        (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '038' AND NMCODE_CD = tce.TARGT_FG) AS TARGT_FG_NM
        FROM TB_CM_ENVST tce
        WHERE 1=1
        AND tce.TARGT_FG IN ('C','S','Z') -- H:본사전용, C:공통(매장에서변경가능), N:No, S:매장전용, X:공통(매장에서사용하지만_본사기준), Z:본사+단독매장
        AND tce.ENVST_FG IN ('03')
        AND tce.USE_YN = 'Y'
        ORDER BY tce.ENVST_CD
    </select>

    <!-- 본사환경탭 - 환경변수값 콤보박스 조회 -->
    <!--
        TABLE    : TB_CM_ENVST_DTL
        COMMENTS : [공통]환경설정_상세
    -->
    <select id="getEnvstValComboList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getEnvstValComboList */
        SELECT
        tced.ENVST_VAL_CD AS VALUE,
        tced.ENVST_VAL_NM AS NAME
        FROM TB_CM_ENVST_DTL tced
        WHERE 1=1
        AND tced.ENVST_CD = #{envstCd}
        AND tced.USE_YN = 'Y'
        ORDER BY tced.ENVST_CD
    </select>

    <!-- 본사환경탭 - 저장 insert, update -->
    <!--
        TABLE    : TB_HQ_ENVST
        COMMENTS : [본사]본사_환경설정
    -->
    <update id="getEnvConfgBatchChangeHqSave" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeHqSave */
        MERGE INTO TB_HQ_ENVST
        USING DUAL ON
        (
            HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = #{envstCd}
        )
        WHEN MATCHED THEN
            UPDATE
            SET
            ENVST_VAL = #{envstVal},
            MOD_DT = #{modDt},
            MOD_ID = #{modId}
            WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = #{envstCd}
        WHEN NOT MATCHED THEN
            INSERT (
                HQ_OFFICE_CD,
                ENVST_CD,
                ENVST_VAL,
                DIRCT_IN_YN,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
            ) VALUES (
                #{hqOfficeCd},
                #{envstCd},
                #{envstVal},
                #{dirctInYn},
                'Y',
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </update>

    <!-- 매장환경탭 - 저장 insert, update -->
    <!--
        TABLE    : TB_MS_STORE_ENVST
        COMMENTS : [매장]환경설정
    -->
    <update id="getEnvConfgBatchChangeHqStoreSave" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeHqStoreSave */
        MERGE INTO TB_MS_STORE_ENVST
        USING DUAL ON
        (
            STORE_CD = #{storeCd} AND ENVST_CD = #{envstCd}
        )
        WHEN MATCHED THEN
            UPDATE
            SET
            ENVST_VAL = #{envstVal},
            MOD_DT = #{modDt},
            MOD_ID = #{modId}
            WHERE STORE_CD = #{storeCd} AND ENVST_CD = #{envstCd}
        WHEN NOT MATCHED THEN
            INSERT (
                STORE_CD,
                ENVST_CD,
                ENVST_VAL,
                DIRCT_IN_YN,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
            ) VALUES (
                #{storeCd},
                #{envstCd},
                #{envstVal},
                #{dirctInYn},
                'Y',
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </update>

    <!-- 본사환경탭 - 매장코드 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : [매장]매장 정보
    -->
    <select id="getStoreCdList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getStoreCdList */
        SELECT tms.STORE_CD
        FROM TB_MS_STORE tms
        WHERE 1=1
        AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
        ORDER BY tms.STORE_CD
    </select>

    <!-- 매장환경탭 - 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_MS_STORE, TB_MS_STORE_ENVST, TB_CM_ENVST
        COMMENTS : [본사]본사 정보, [매장]매장 정보, [매장]환경설정, [공통]환경설정
    -->
    <select id="getEnvConfgBatchChangeStoreList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeStoreList */
        SELECT
        HQ_OFFICE_CD,
        HQ_OFFICE_NM,
        STORE_CD,
        STORE_NM,
        ENVST_CD,
        ENVST_VAL,
        EXIST_FG
        FROM
        (
            SELECT
            tms.HQ_OFFICE_CD,
            tho.HQ_OFFICE_NM,
            tms.STORE_CD,
            tms.STORE_NM,
            tce.ENVST_CD,
            tmse.ENVST_VAL,
            DECODE(tmse.ENVST_CD, NULL, 'N', 'Y') AS EXIST_FG
            FROM TB_MS_STORE tms,
            TB_HQ_OFFICE tho,
            TB_MS_STORE_ENVST tmse,
            TB_CM_ENVST tce
            WHERE 1=1
            AND tms.STORE_CD != '0000000'
            <choose>
                <when test='targtFg != null'>
                    <!-- H:본사전용, C:공통(매장에서변경가능), N:No, S:매장전용, X:공통(매장에서사용하지만_본사기준), Z:본사+단독매장 -->
                    <if test='targtFg == "Z"'>
                        <![CDATA[
                            AND tms.HQ_OFFICE_CD = '00000'
                        ]]>
                    </if>
                </when>
            </choose>
            <if test='orgnFg != null and orgnFg == "A"'>
                AND tms.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
            </if>
            AND tho.HQ_OFFICE_CD = tms.HQ_OFFICE_CD
            AND tmse.STORE_CD (+)= tms.STORE_CD
            AND tmse.ENVST_CD (+)= tce.ENVST_CD
            AND tce.ENVST_CD = #{envstCd}
            AND tms.STORE_CD NOT IN (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '178')
            ORDER BY tms.HQ_OFFICE_CD, tms.STORE_CD
        )
        WHERE 1=1
        <if test="hqOfficeCd != null and hqOfficeCd != ''">
            AND HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
        </if>
        <if test="hqOfficeNm != null and hqOfficeNm != ''">
            AND HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
        </if>
        <if test="storeCd != null and storeCd != ''">
            AND STORE_CD LIKE '%'|| #{storeCd} ||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND STORE_NM LIKE '%'|| #{storeNm} ||'%'
        </if>
        <if test="useYn != null and useYn != ''">
            AND EXIST_FG = #{useYn}
        </if>
        ORDER BY HQ_OFFICE_CD, STORE_CD
    </select>

    <!-- 매장포스환경탭 - 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_MS_STORE, TB_MS_POS, TB_MS_POS_ENVST, TB_CM_ENVST
        COMMENTS : [본사]본사 정보, [매장]매장 정보, [매장]포스 정보, [매장]포스 환경설정, [공통]환경설정
    -->
    <select id="getEnvConfgBatchChangeStorePosList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeStorePosList */
        SELECT  HQ_OFFICE_CD
        ,       HQ_OFFICE_NM
        ,       STORE_CD
        ,       STORE_NM
        ,       POS_NO
        ,       POS_NM
        ,       ENVST_CD
        ,       ENVST_VAL
        ,       EXIST_FG
        ,       POS_USE_FG
        ,       POS_MAIN_FG
        FROM
            (
                SELECT  tms.HQ_OFFICE_CD
                ,       tho.HQ_OFFICE_NM
                ,       tms.STORE_CD
                ,       tms.STORE_NM
                ,       tmp.POS_NO
                ,       tmp.POS_NM
                ,       tce.ENVST_CD
                ,       tmpe.ENVST_VAL
                ,       DECODE(tmpe.ENVST_CD, NULL, 'N', 'Y') AS EXIST_FG
                ,       A.POS_USE_FG
                ,       B.POS_MAIN_FG
                FROM    TB_MS_POS tmp
                ,       TB_MS_STORE tms
                ,       TB_HQ_OFFICE tho
                ,       TB_MS_POS_ENVST tmpe
                ,       TB_CM_ENVST tce
                ,		(
                            SELECT 	A.STORE_CD
                            ,		A.POS_NO
                            ,		A.ENVST_CD
                            ,		B.ENVST_VAL_CD
                            ,		B.ENVST_VAL_NM AS POS_USE_FG
                            FROM 	TB_MS_POS_ENVST A
                            ,		TB_CM_ENVST_DTL B
                            WHERE 	A.ENVST_CD 	= B.ENVST_CD
                            AND 	A.ENVST_VAL = B.ENVST_VAL_CD
                            AND 	B.ENVST_CD 	= '4019'
                        ) A
                ,		(
                            SELECT 	A.STORE_CD
                            ,		A.POS_NO
                            ,		A.ENVST_CD
                            ,		B.ENVST_VAL_CD
                            ,		B.ENVST_VAL_NM AS POS_MAIN_FG
                            FROM 	TB_MS_POS_ENVST A
                            ,		TB_CM_ENVST_DTL B
                            WHERE 	A.ENVST_CD 	= B.ENVST_CD
                            AND 	A.ENVST_VAL = B.ENVST_VAL_CD
                            AND 	B.ENVST_CD 	= '4021'
                        ) B
                WHERE   1=1
                AND     tms.STORE_CD != '0000000'
                <choose>
                    <when test='targtFg != null'>
                        <!-- H:본사전용, C:공통(매장에서변경가능), N:No, S:매장전용, X:공통(매장에서사용하지만_본사기준), Z:본사+단독매장 -->
                        <if test='targtFg == "Z"'>
                            <![CDATA[
                                AND tms.HQ_OFFICE_CD = '00000'
                            ]]>
                        </if>
                    </when>
                </choose>
                <if test='orgnFg != null and orgnFg == "A"'>
                    AND tms.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
                </if>
                AND     tms.STORE_CD        (+) = tmp.STORE_CD
                AND     tho.HQ_OFFICE_CD        = tms.HQ_OFFICE_CD
                AND     tmpe.STORE_CD       (+) = tms.STORE_CD
                AND     tmpe.ENVST_CD       (+) = tce.ENVST_CD
                AND     tmpe.POS_NO         (+) = tmp.POS_NO
                AND 	A.STORE_CD			(+) = tmp.STORE_CD
                AND 	A.POS_NO			(+) = tmp.POS_NO
                AND 	B.STORE_CD			(+) = tmp.STORE_CD
                AND 	B.POS_NO			(+) = tmp.POS_NO
                AND     tce.ENVST_CD            = #{envstCd}
                AND     tms.STORE_CD NOT IN (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '178')
                <if test="posUseFg != null and posUseFg != ''">
                    AND A.ENVST_VAL_CD = #{posUseFg}
                </if>
                <if test="posMainFg != null and posMainFg != ''">
                    AND B.ENVST_VAL_CD = #{posMainFg}
                </if>
                ORDER BY tms.HQ_OFFICE_CD, tms.STORE_CD, tmp.POS_NO
            )
        WHERE 1=1
        <if test="hqOfficeCd != null and hqOfficeCd != ''">
            AND HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
        </if>
        <if test="hqOfficeNm != null and hqOfficeNm != ''">
            AND HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
        </if>
        <if test="storeCd != null and storeCd != ''">
            AND STORE_CD LIKE '%'|| #{storeCd} ||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND STORE_NM LIKE '%'|| #{storeNm} ||'%'
        </if>
        <if test="useYn != null and useYn != ''">
            AND EXIST_FG = #{useYn}
        </if>
        ORDER BY HQ_OFFICE_CD, STORE_CD, POS_NO
    </select>

    <!-- 매장포스환경탭 - 저장 insert, update -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        COMMENTS : [매장]포스 환경설정
    -->
    <update id="getEnvConfgBatchChangeStorePosSave" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeStorePosSave */
        MERGE INTO TB_MS_POS_ENVST
        USING DUAL ON
        (
            STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = #{envstCd}
        )
        WHEN MATCHED THEN
            UPDATE
            SET
            ENVST_VAL = #{envstVal},
            MOD_DT = #{modDt},
            MOD_ID = #{modId},
            POS_FG  = 'W'
            WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = #{envstCd}
        WHEN NOT MATCHED THEN
            INSERT (
                STORE_CD,
                POS_NO,
                ENVST_CD,
                ENVST_VAL,
                DIRCT_IN_YN,
                POS_FG,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
            ) VALUES (
                #{storeCd},
                #{posNo},
                #{envstCd},
                #{envstVal},
                #{dirctInYn},
                'W',
                'Y',
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </update>

    <!-- 기능키 조회 팝업 - 조회(기능키명칭탭) -->
    <!--
        TABLE    : TB_CM_ENVST, TB_CM_NMCODE
        COMMENTS : [공통]환경설정, [공통]명칭코드
    -->
    <select id="getSearchFnkeyList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getSearchFnkeyList */
        SELECT 	tcpf.FNKEY_FG
        ,       A.NMCODE_NM AS FNKEY_FG_NM
        ,       tcpf.FNKEY_NO
        ,       tcpf.FNKEY_NM
        FROM 	TB_CM_POS_FNKEY tcpf
        ,		(
                    SELECT	NMCODE_CD
                    ,		NMCODE_NM
                    FROM	TB_CM_NMCODE
                    WHERE	NMCODE_GRP_CD = '026'
                ) A
        WHERE 	tcpf.USE_YN ='Y'
        AND 	tcpf.FNKEY_FG IN ('6020', '6021', '6030', '6031')
        AND     tcpf.FNKEY_FG = A.NMCODE_CD
        ORDER
        BY      tcpf.FNKEY_FG
        ,       tcpf.FNKEY_NO
    </select>

    <!-- 기능키명칭탭 - 조회 -->
    <!--
        TABLE    : TB_MS_STORE_FNKEY, TB_MS_STORE, TB_HQ_OFFICE
        COMMENTS : [공통]환경설정, [공통]명칭코드
    -->
    <select id="getEnvConfgBatchChangeFnkeyList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeFnkeyList */
        SELECT 	tms.HQ_OFFICE_CD,
                tho.HQ_OFFICE_NM,
                tmsf.STORE_CD,
                tms.STORE_NM,
                FNKEY_FG,
                FNKEY_NO,
                FNKEY_NM
        FROM 	TB_MS_STORE_FNKEY tmsf,
                TB_MS_STORE tms,
                TB_HQ_OFFICE tho
        WHERE 	tms.STORE_CD = tmsf.STORE_CD
        AND 	tho.HQ_OFFICE_CD = tms.HQ_OFFICE_CD
        AND 	tmsf.FNKEY_FG = #{fnkeyFg}
        AND		tmsf.fnkey_no = #{fnkeyNo}
        <if test='orgnFg != null and orgnFg == "A"'>
            AND tms.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
        </if>
        <if test="hqOfficeCd != null and hqOfficeCd != ''">
            AND tms.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
        </if>
        <if test="hqOfficeNm != null and hqOfficeNm != ''">
            AND tho.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
        </if>
        <if test="storeCd != null and storeCd != ''">
            AND tmsf.STORE_CD LIKE '%'|| #{storeCd} ||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%'|| #{storeNm} ||'%'
        </if>
        ORDER BY tms.HQ_OFFICE_CD, tmsf.STORE_CD
    </select>


    <!-- 기능키명칭탭 - 저장 insert, update -->
    <!--
        TABLE    : TB_MS_STORE_FNKEY
        COMMENTS : [매장]환경설정
    -->
    <update id="getEnvConfgBatchChangeFnkeySave" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeFnkeySave */
        MERGE INTO TB_MS_STORE_FNKEY
            USING DUAL ON
                (
                    STORE_CD = #{storeCd} AND FNKEY_FG = #{fnkeyFg} AND FNKEY_NO = #{fnkeyNo}
                    )
            WHEN MATCHED THEN
                UPDATE
                    SET
                        FNKEY_NM = #{fnkeyNm},
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
            WHERE STORE_CD = #{storeCd} AND FNKEY_FG = #{fnkeyFg} AND FNKEY_NO = #{fnkeyNo}
    </update>

    <!-- 환경설정관리 - 저장 update -->
    <!--
        TABLE    : TB_HQ_ENVST, TB_MS_STORE_ENVST, TB_MS_POS_ENVST
        COMMENTS : [매장]환경설정
    -->
    <update id="getEnvConfgBatchChangeEnvSettingSaveHq" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeEnvSettingSaveHq */
            UPDATE  TB_HQ_ENVST
            SET     USE_YN = #{useYn},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
            WHERE   ENVST_CD = #{envstCd}
    </update>
    <update id="getEnvConfgBatchChangeEnvSettingSaveMs" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeEnvSettingSaveMs */
            UPDATE  TB_MS_STORE_ENVST
            SET     USE_YN = #{useYn},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
            WHERE   ENVST_CD = #{envstCd}
    </update>
    <update id="getEnvConfgBatchChangeEnvSettingSavePos" parameterType="EnvConfgBatchChangeVO">
        /* EnvConfgBatchChangeMapper.getEnvConfgBatchChangeEnvSettingSavePos */
            UPDATE  TB_MS_POS_ENVST
            SET     USE_YN = #{useYn},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    POS_FG  = 'W'
            WHERE   ENVST_CD = #{envstCd}
    </update>

    <!-- 공통코드 조회 팝업 - 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE, TB_HQ_NMCODE
        COMMENTS : 공통코드 리스트를 조회한다.(본사 또는 매장생성시 자동생성되는 공통코드들, PKG_CM_NMCODE 참조)
    -->
    <select id="getSearchCommCodeList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getSearchCommCodeList */
        SELECT NMCODE_GRP_CD
        ,      NMCODE_GRP_NM
        ,      NMCODE_CD
        ,      NMCODE_NM
        ,      PARENT_CD
        ,      USE_TARGET_FG
        ,      HQ_OFFICE_CD
        ,      HQ_OFFICE_NM
        FROM (
        		SELECT NMCODE_GRP_CD
        		, (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '000' AND NMCODE_CD = A.NMCODE_GRP_CD) AS NMCODE_GRP_NM
        		, NMCODE_CD
        		, NMCODE_NM
                , PARENT_CD
        		, 'H' AS USE_TARGET_FG
        		, '' AS HQ_OFFICE_CD
        		, '' AS HQ_OFFICE_NM
        		FROM TB_CM_NMCODE A
        		WHERE NMCODE_GRP_CD IN (
        		                            SELECT  NMCODE_CD
        		                            FROM    TB_CM_NMCODE
        		                            WHERE   NMCODE_GRP_CD   =   '999'
        		                            AND     NMCODE_ITEM_1   IN  ('C', 'H')
        		                            AND     USE_TARGET_FG   IN  ('C', 'H')
        		                        )
        		UNION ALL
        		SELECT
        		A.NMCODE_GRP_CD
        		, (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '000' AND NMCODE_CD = A.NMCODE_GRP_CD) AS NMCODE_GRP_NM
        		, A.NMCODE_CD
        		, A.NMCODE_NM
                , A.PARENT_CD
        		, 'S' AS USE_TARGET_FG
        		, '' AS HQ_OFFICE_CD
        		, '' AS HQ_OFFICE_NM
        		FROM TB_CM_NMCODE A
        		WHERE A.USE_TARGET_FG IN ('C', 'S')
        		UNION ALL
        		SELECT
        		A.NMCODE_GRP_CD
        		, (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '000' AND NMCODE_CD = A.NMCODE_GRP_CD) AS NMCODE_GRP_NM
        		, A.NMCODE_CD
        		, A.NMCODE_NM
                , A.PARENT_CD
        		, 'HS' AS USE_TARGET_FG
        		, A.HQ_OFFICE_CD
        		, B.HQ_OFFICE_NM
        		FROM    TB_HQ_NMCODE A
        		,       TB_HQ_OFFICE B
        		WHERE   A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
        		AND     A.HQ_OFFICE_CD    IN  (SELECT HQ_OFFICE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD != '00000' GROUP BY HQ_OFFICE_CD)
        		AND     A.NMCODE_GRP_CD   IN  (
        		                                SELECT  NMCODE_CD
        		                                FROM    TB_CM_NMCODE
        		                                WHERE   NMCODE_GRP_CD   =   '999'
        		                                AND     NMCODE_ITEM_1   =   'C'
        		                               )
        	)
        	ORDER
            BY HQ_OFFICE_CD ASC NULLS FIRST, USE_TARGET_FG
    </select>

    <!-- 공통코드관리탭 - 본사리스트 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE
        COMMENTS : 공통코드를 적용할 본사리스트를 조회한다.
    -->
    <select id="getHqList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getHqList */
        SELECT HQ_OFFICE_CD
        ,      HQ_OFFICE_NM
        FROM   TB_HQ_OFFICE
        WHERE  HQ_OFFICE_CD != '00000'
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            AND HQ_OFFICE_CD LIKE '%' || #{hqOfficeCd} || '%'
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            AND HQ_OFFICE_NM LIKE '%' || #{hqOfficeNm} || '%'
        </if>
        ORDER
        BY      HQ_OFFICE_CD
    </select>

    <!-- 공통코드관리탭 - 매장리스트 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE
        COMMENTS : 공통코드를 적용할 매장리스트를 조회한다.
    -->
    <select id="getStoreList" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* EnvConfgBatchChangeMapper.getStoreList */
        SELECT A.STORE_CD
        ,      A.STORE_NM
        ,      B.HQ_OFFICE_CD
        ,      B.HQ_OFFICE_NM
        FROM   TB_MS_STORE A
        ,      TB_HQ_OFFICE B
        WHERE  A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
        <if test='selHqOfficeCd != null and selHqOfficeCd != ""'>
            AND A.HQ_OFFICE_CD = #{selHqOfficeCd}
        </if>
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            AND A.HQ_OFFICE_CD LIKE '%' || #{hqOfficeCd} || '%'
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            AND B.HQ_OFFICE_NM LIKE '%' || #{hqOfficeNm} || '%'
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND A.STORE_CD LIKE '%' || #{storeCd} || '%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND A.STORE_NM LIKE '%' || #{storeNm} || '%'
        </if>
        ORDER
        BY      A.STORE_CD
    </select>

    <!-- 공통코드관리탭 - 본사 명칭코드에 공통코드 정보 저장 -->
    <!--
        TABLE    : TB_HQ_NMCODE, TB_CM_NMCODE
        COMMENTS : 본사 명칭코드에 공통코드 정보를 저장한다.
    -->
    <insert id="saveHqNmcode" parameterType="EnvConfgBatchChangeVO">
        /* USE : EnvConfgBatchChangeMapper.saveHqNmcode */
        MERGE INTO TB_HQ_NMCODE thn
        USING (
                  SELECT  #{hqOfficeCd}   AS HQ_OFFICE_CD
                  ,       NMCODE_GRP_CD   AS NMCODE_GRP_CD
                  ,       NMCODE_CD       AS NMCODE_CD
                  ,       NMCODE_GRP_CD   AS PARENT_CD
                  ,       NMCODE_NM       AS NMCODE_NM
                  ,       NMCODE_ITEM_1   AS NMCODE_ITEM_1
                  ,       NMCODE_ITEM_2   AS NMCODE_ITEM_2
                  ,       'Y'             AS USE_YN
                  ,       #{regDt}        AS REG_DT
                  ,       #{regId}        AS REG_ID
                  ,       #{modDt}        AS MOD_DT
                  ,       #{modId}        AS MOD_ID
                  FROM    TB_CM_NMCODE
                  WHERE   NMCODE_GRP_CD = #{nmcodeGrpCd}
                  AND     NMCODE_CD     = #{nmcodeCd}
                  AND     PARENT_CD     = #{parentCd}
                  AND     NMCODE_GRP_CD IN (
                                                SELECT  NMCODE_CD
                                                FROM    TB_CM_NMCODE
                                                WHERE   NMCODE_GRP_CD   =   '999'
                                                AND     NMCODE_ITEM_1   IN  ('C', 'H')
                                                AND     USE_TARGET_FG   IN  ('C', 'H')
                                            )
        ) B
        ON (
                thn.HQ_OFFICE_CD      = B.HQ_OFFICE_CD
                AND thn.NMCODE_GRP_CD = B.NMCODE_GRP_CD
                AND thn.NMCODE_CD     = B.NMCODE_CD
                AND thn.PARENT_CD     = B.PARENT_CD
        )
        WHEN MATCHED THEN
            UPDATE
            SET
                thn.NMCODE_NM       = B.NMCODE_NM
            ,   thn.NMCODE_ITEM_1   = B.NMCODE_ITEM_1
            ,   thn.NMCODE_ITEM_2   = B.NMCODE_ITEM_2
            ,   thn.USE_YN          = B.USE_YN
            ,   thn.MOD_DT          = B.MOD_DT
            ,   thn.MOD_ID          = B.MOD_ID
        WHEN NOT MATCHED THEN
            INSERT
            (
                thn.HQ_OFFICE_CD
            ,   thn.NMCODE_GRP_CD
            ,   thn.NMCODE_CD
            ,   thn.PARENT_CD
            ,   thn.NMCODE_NM
            ,   thn.NMCODE_ITEM_1
            ,   thn.NMCODE_ITEM_2
            ,   thn.USE_YN
            ,   thn.REG_DT
            ,   thn.REG_ID
            ,   thn.MOD_DT
            ,   thn.MOD_ID
            )
            VALUES
            (
                B.HQ_OFFICE_CD
            ,   B.NMCODE_GRP_CD
            ,   B.NMCODE_CD
            ,   B.PARENT_CD
            ,   B.NMCODE_NM
            ,   B.NMCODE_ITEM_1
            ,   B.NMCODE_ITEM_2
            ,   B.USE_YN
            ,   B.REG_DT
            ,   B.REG_ID
            ,   B.MOD_DT
            ,   B.MOD_ID
            )
    </insert>

    <!-- 공통코드관리탭 - 매장 명칭코드에 공통코드 정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE_NMCODE, TB_CM_NMCODE
        COMMENTS : 매장 명칭코드에 공통코드 정보를 저장한다.
    -->
    <insert id="saveStoreNmcode" parameterType="EnvConfgBatchChangeVO">
        /* USE : EnvConfgBatchChangeMapper.saveStoreNmcode */
        MERGE INTO TB_MS_STORE_NMCODE tmsn
        USING (
                    SELECT  #{storeCd}   AS STORE_CD
                    ,       NMCODE_GRP_CD   AS NMCODE_GRP_CD
                    ,       NMCODE_CD       AS NMCODE_CD
                    ,       NMCODE_GRP_CD   AS PARENT_CD
                    ,       NMCODE_NM       AS NMCODE_NM
                    ,       NMCODE_ITEM_1   AS NMCODE_ITEM_1
                    ,       NMCODE_ITEM_2   AS NMCODE_ITEM_2
                    ,       'Y'             AS USE_YN
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    FROM    TB_CM_NMCODE
                    WHERE   NMCODE_GRP_CD = #{nmcodeGrpCd}
                    AND     NMCODE_CD     = #{nmcodeCd}
                    AND     PARENT_CD     = #{parentCd}
                    AND     USE_TARGET_FG IN ('C', 'S')
        ) B
        ON (
                tmsn.STORE_CD          = B.STORE_CD
                AND tmsn.NMCODE_GRP_CD = B.NMCODE_GRP_CD
                AND tmsn.NMCODE_CD     = B.NMCODE_CD
                AND tmsn.PARENT_CD     = B.PARENT_CD
        )
        WHEN MATCHED THEN
            UPDATE
            SET
                tmsn.NMCODE_NM       = B.NMCODE_NM
            ,   tmsn.NMCODE_ITEM_1   = B.NMCODE_ITEM_1
            ,   tmsn.NMCODE_ITEM_2   = B.NMCODE_ITEM_2
            ,   tmsn.USE_YN          = B.USE_YN
            ,   tmsn.MOD_DT          = B.MOD_DT
            ,   tmsn.MOD_ID          = B.MOD_ID
        WHEN NOT MATCHED THEN
            INSERT
            (
                tmsn.STORE_CD
            ,   tmsn.NMCODE_GRP_CD
            ,   tmsn.NMCODE_CD
            ,   tmsn.PARENT_CD
            ,   tmsn.NMCODE_NM
            ,   tmsn.NMCODE_ITEM_1
            ,   tmsn.NMCODE_ITEM_2
            ,   tmsn.USE_YN
            ,   tmsn.REG_DT
            ,   tmsn.REG_ID
            ,   tmsn.MOD_DT
            ,   tmsn.MOD_ID
            )
            VALUES
            (
                B.STORE_CD
            ,   B.NMCODE_GRP_CD
            ,   B.NMCODE_CD
            ,   B.PARENT_CD
            ,   B.NMCODE_NM
            ,   B.NMCODE_ITEM_1
            ,   B.NMCODE_ITEM_2
            ,   B.USE_YN
            ,   B.REG_DT
            ,   B.REG_ID
            ,   B.MOD_DT
            ,   B.MOD_ID
            )
    </insert>

    <!-- 공통코드관리탭 - 매장 명칭코드에 본사 명칭코드 정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE_NMCODE, TB_HQ_NMCODE
        COMMENTS : 매장 명칭코드에 본사 명칭코드 정보를 저장한다.
    -->
    <insert id="saveHqToStoreNmcode" parameterType="EnvConfgBatchChangeVO">
        /* USE : EnvConfgBatchChangeMapper.saveHqToStoreNmcode */
        MERGE INTO TB_MS_STORE_NMCODE tmsn
        USING (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       NMCODE_GRP_CD   AS NMCODE_GRP_CD
                    ,       NMCODE_CD       AS NMCODE_CD
                    ,       PARENT_CD       AS PARENT_CD
                    ,       NMCODE_NM       AS NMCODE_NM
                    ,       NMCODE_ITEM_1   AS NMCODE_ITEM_1
                    ,       NMCODE_ITEM_2   AS NMCODE_ITEM_2
                    ,       USE_YN          AS USE_YN
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    FROM    TB_HQ_NMCODE
                    WHERE   NMCODE_GRP_CD = #{nmcodeGrpCd}
                    AND     NMCODE_CD     = #{nmcodeCd}
                    AND     PARENT_CD     = #{parentCd}
                    AND     HQ_OFFICE_CD  = #{hqOfficeCd}
                    AND     NMCODE_GRP_CD  IN  (
                                                    SELECT  NMCODE_CD
                                                    FROM    TB_CM_NMCODE
                                                    WHERE   NMCODE_GRP_CD   =   '999'
                                                    AND     NMCODE_ITEM_1   =   'C'
                                               )
        ) B
        ON (
                tmsn.STORE_CD          = B.STORE_CD
                AND tmsn.NMCODE_GRP_CD = B.NMCODE_GRP_CD
                AND tmsn.NMCODE_CD     = B.NMCODE_CD
                AND tmsn.PARENT_CD     = B.PARENT_CD
        )
        WHEN MATCHED THEN
            UPDATE
            SET
                tmsn.NMCODE_NM       = B.NMCODE_NM
            ,   tmsn.NMCODE_ITEM_1   = B.NMCODE_ITEM_1
            ,   tmsn.NMCODE_ITEM_2   = B.NMCODE_ITEM_2
            ,   tmsn.USE_YN          = B.USE_YN
            ,   tmsn.MOD_DT          = B.MOD_DT
            ,   tmsn.MOD_ID          = B.MOD_ID
        WHEN NOT MATCHED THEN
            INSERT
            (
                tmsn.STORE_CD
            ,   tmsn.NMCODE_GRP_CD
            ,   tmsn.NMCODE_CD
            ,   tmsn.PARENT_CD
            ,   tmsn.NMCODE_NM
            ,   tmsn.NMCODE_ITEM_1
            ,   tmsn.NMCODE_ITEM_2
            ,   tmsn.USE_YN
            ,   tmsn.REG_DT
            ,   tmsn.REG_ID
            ,   tmsn.MOD_DT
            ,   tmsn.MOD_ID
            )
            VALUES
            (
                B.STORE_CD
            ,   B.NMCODE_GRP_CD
            ,   B.NMCODE_CD
            ,   B.PARENT_CD
            ,   B.NMCODE_NM
            ,   B.NMCODE_ITEM_1
            ,   B.NMCODE_ITEM_2
            ,   B.USE_YN
            ,   B.REG_DT
            ,   B.REG_ID
            ,   B.MOD_DT
            ,   B.MOD_ID
            )
    </insert>
    <!-- 포스용도 조회 -->
    <!--
        TABLE    : TB_CM_ENVST_DTL
        PARAM    : EnvConfgBatchChangeVO
        COMMENTS : 포스용도를 조회한다.
    -->
    <select id="getPosUseFg" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* USE : EnvConfgBatchChangeMapper.getPosUseFg */
        SELECT  ENVST_VAL_CD    AS VALUE
        ,       ENVST_VAL_NM    AS NAME
        FROM    TB_CM_ENVST_DTL
        WHERE   ENVST_CD = '4019'
    </select>
    <!-- 포스용도 조회 -->
    <!--
        TABLE    : TB_CM_ENVST_DTL
        PARAM    : EnvConfgBatchChangeVO
        COMMENTS : 포스메인여부를 조회한다.
    -->
    <select id="getPosMainFg" parameterType="EnvConfgBatchChangeVO" resultType="DefaultMap">
        /* USE : EnvConfgBatchChangeMapper.getPosMainFg */
        SELECT  ENVST_VAL_CD    AS VALUE
        ,       ENVST_VAL_NM    AS NAME
        FROM    TB_CM_ENVST_DTL
        WHERE   ENVST_CD = '4021'
    </select>

</mapper>