<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    KioskKeyMap.xml
    키오스크키맵관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2020.09.03     최초작성
-->

<mapper namespace="kr.co.solbipos.base.prod.kioskKeyMap.service.impl.KioskKeyMapMapper">
    <!-- 키오스크용 포스 조회 -->
    <!--
        TABLE    : TB_MS_POS_ENVST, TB_MS_POS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크용도로 사용중인 포스를 조회한다.
    -->
    <select id="getKioskPosList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
      /* USE : KioskKeyMapMapper.getKioskPosList */
      SELECT tmp.POS_NO AS NAME,
              tmp.POS_NO AS VALUE
        FROM TB_MS_POS_ENVST tmpe,
              TB_MS_POS tmp
       WHERE tmpe.STORE_CD = #{storeCd}
         AND tmp.STORE_CD = tmpe.STORE_CD
         AND tmp.POS_NO = tmpe.POS_NO
         AND tmpe.ENVST_CD = '4019'  <!-- 포스용도 -->
         AND tmpe.ENVST_VAL = '6'    <!-- 6: KIOSK -->
    </select>

    <!-- 키오스크 카테고리(분류) 조회 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류)를 가져온다.
    -->
    <select id="getKioskCategory" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskCategory */
        SELECT STORE_CD,
                POS_NO,
                TU_CLS_CD,
                TU_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                CLS_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
        FROM TB_MS_KIOSK_CLS tmkc
       WHERE STORE_CD = #{storeCd}
         AND POS_NO = #{posNo}
   ORDER BY INDEX_NO
    </select>

    <!-- 키오스크 카테고리(분류) 저장 - 생성 시 카테고리 코드 생성 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성 시 카테고리 코드를 생성한다.
    -->
    <select id="getKioskCategoryCode" parameterType="kioskKeyMapVO" resultType="String">
      /* USE : KioskKeyMapMapper.getKioskCategoryCode */
      SELECT LPAD(NVL(MAX(TU_CLS_CD), '0') + 1, 2, '0')
        FROM TB_MS_KIOSK_CLS
       WHERE STORE_CD = #{storeCd}
         AND  POS_NO = #{posNo}
    </select>

    <!-- 키오스크 카테고리(분류) 저장 - 생성 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성한다.
    -->
    <insert id="insertKioskCategory" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.insertKioskCategory */
      INSERT INTO TB_MS_KIOSK_CLS
      (
            STORE_CD,
            POS_NO,
            TU_CLS_CD,
            TU_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
      )
      VALUES
      (
            #{storeCd},
            #{posNo},
            #{tuClsCd},
            #{tuClsNm},
            #{tuPage},
            #{x},
            #{y},
            #{width},
            #{height},
            #{indexNo},
            #{clsFg},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
      )
    </insert>

    <!-- 키오스크 카테고리(분류) 저장 - 수정 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 수정한다.
    -->
    <update id="updateKioskCategory" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.updateKioskCategory */
      UPDATE TB_MS_KIOSK_CLS
         SET TU_CLS_NM = #{tuClsNm},
              TU_PAGE = #{tuPage},
              X = #{x},
              Y = #{y},
              WIDTH = #{width},
              HEIGHT = #{height},
              INDEX_NO = #{indexNo},
              CLS_FG = #{clsFg},
              MOD_DT = #{modDt},
              MOD_ID = #{modId}
       WHERE STORE_CD = #{storeCd}
         AND POS_NO = #{posNo}
         AND TU_CLS_CD = #{tuClsCd}
    </update>

    <!-- 키오스크 카테고리(분류) 저장 - 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제한다.
    -->
    <delete id="deleteKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskCategory */
        DELETE TB_MS_KIOSK_CLS
         WHERE STORE_CD = #{storeCd}
           AND POS_NO = #{posNo}
           AND TU_CLS_CD = #{tuClsCd}
    </delete>

    <!-- 키오스크 카테고리(분류) 저장 - 카테고리 삭제 시, 카테고리에 속한 키맵도 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제 시, 카테고리에 속한 키맵도 삭제한다.
    -->
    <delete id="deleteAllKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKeyMap */
        DELETE TB_MS_KIOSK_KEY
         WHERE STORE_CD = #{storeCd}
           AND POS_NO = #{posNo}
           AND TU_CLS_CD = #{tuClsCd}
    </delete>

    <!-- 키오스크 키맵 조회 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키를 가져온다.
    -->
    <select id="getKioskKeyMap" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMap */
        SELECT tmkk.STORE_CD,
                tmkk.POS_NO,
                tmkk.TU_CLS_CD,
                tmkk.TU_KEY_CD,
                tmkk.PROD_CD,
                tmp.PROD_NM,
                tmkk.TU_PAGE,
                tmkk.X,
                tmkk.Y,
                tmkk.WIDTH,
                tmkk.HEIGHT,
                tmkk.INDEX_NO,
                tmkk.CLS_FG,
                tmkk.REG_DT,
                tmkk.REG_ID,
                tmkk.MOD_DT,
                tmkk.MOD_ID
          FROM TB_MS_KIOSK_KEY tmkk,
                TB_MS_PRODUCT tmp
         WHERE tmp.STORE_CD (+)= tmkk.STORE_CD
           AND tmp.PROD_CD (+)= tmkk.PROD_CD
           AND tmkk.STORE_CD = #{storeCd}
           AND tmkk.POS_NO = #{posNo}
           AND tmkk.TU_CLS_CD = #{tuClsCd}
      ORDER BY tmkk.INDEX_NO
    </select>

    <!-- 키오스크 키맵 수정 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 수정한다.
    -->
    <update id="updateKioskKeyMap" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.updateKioskKeyMap */
      UPDATE TB_MS_KIOSK_KEY
         SET TU_PAGE = #{tuPage},
              X = #{x},
              Y = #{y},
              WIDTH = #{width},
              HEIGHT = #{height},
              INDEX_NO = #{indexNo},
              CLS_FG = #{clsFg},
              MOD_DT = #{modDt},
              MOD_ID = #{modId}
       WHERE STORE_CD = #{storeCd}
         AND POS_NO = #{posNo}
         AND TU_CLS_CD = #{tuClsCd}
         AND TU_KEY_CD = #{tuKeyCd}
    </update>

    <!-- 키오스크 키맵 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 삭제한다.
    -->
    <delete id="deleteKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskKeyMap */
        DELETE TB_MS_KIOSK_KEY
         WHERE STORE_CD = #{storeCd}
           AND POS_NO = #{posNo}
           AND TU_CLS_CD = #{tuClsCd}
           AND TU_KEY_CD = #{tuKeyCd}
    </delete>

    <!-- 키오스크 상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_KIOSK_KEY
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵으로 등록할 상품을 조회한다. ( 본사/매장 )
    -->
    <select id="getKioskProdList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD,
                        tmp.PROD_NM,
                        NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                        (CASE WHEN tmkk.PROD_CD IS NULL THEN 'N' ELSE 'Y' END) AS REG_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_MS_PRODUCT tmp
                  LEFT OUTER JOIN (
                                          SELECT STORE_CD,
                                                  PROD_CD,
                                                  MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                                            FROM TB_MS_PRODUCT_SALE_PRICE
                                           WHERE STORE_CD = #{storeCd}
                                          <![CDATA[
                                             AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                             AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                          ]]>
                                             AND SALE_PRC_FG = #{salePrcFg}
                                       GROUP BY STORE_CD, PROD_CD
                                    ) thpsp ON tmp.STORE_CD = thpsp.STORE_CD
                                           AND tmp.PROD_CD = thpsp.PROD_CD
                  INNER JOIN TB_MS_STORE tms ON tms.STORE_CD  = tmp.STORE_CD
                  LEFT OUTER JOIN (
                                            SELECT STORE_CD,
                                                    PROD_CD
                                              FROM TB_MS_KIOSK_KEY
                                             WHERE STORE_CD = #{storeCd}
                                               AND POS_NO = #{posNo}
                                               AND TU_CLS_CD = #{tuClsCd}
                                         GROUP BY STORE_CD, PROD_CD
                                    ) tmkk ON tmp.STORE_CD = tmkk.STORE_CD
                                          AND tmp.PROD_CD = tmkk.PROD_CD
                   WHERE tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_MS_PRODUCT_CLASS
                                                  WHERE STORE_CD = #{storeCd}
                                             START WITH PROD_CLASS_CD = #{prodClassCd}
                                                    AND STORE_CD = #{storeCd}
                                     CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD
                                                    AND STORE_CD = #{storeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                                    SELECT 1
                                      FROM TB_MS_PRODUCT_BARCD
                                     WHERE STORE_CD = tmp.STORE_CD
                                       AND PROD_CD = tmp.PROD_CD
                                       AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND tmp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <choose>
                    <when test='regYn != null and regYn == "Y"'>
                        AND tmkk.PROD_CD IS NOT NULL
                    </when>
                    <when test='regYn != null and regYn == "N"'>
                        AND tmkk.PROD_CD IS NULL
                    </when>
                    <otherwise></otherwise>
                </choose>
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 관련 코드 조회 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키를 등록하기 위한 코드값 조회한다. ( 본사/매장 )
    -->
    <select id="getKioskKeyMapCode" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMapCode */
         SELECT LPAD(NVL(MAX(TU_KEY_CD),0)+1, 3, 0) AS TU_KEY_CD,
                 NVL(MAX(INDEX_NO),0)+1 AS INDEX_NO
           FROM TB_MS_KIOSK_KEY
          WHERE STORE_CD = #{storeCd}
            AND POS_NO = #{posNo}
            AND TU_CLS_CD = #{tuClsCd}
    </select>

    <!-- 키오스크 키맵 등록 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 상품을 키맵에 등록한다. ( 본사/매장 )
    -->
    <insert id="saveKioskKeyMap" parameterType="kioskKeyMapVO" useGeneratedKeys="false">
      /* USE : KioskKeyMapMapper.saveKioskKeyMap */
      INSERT INTO TB_MS_KIOSK_KEY
      (
            STORE_CD,
            POS_NO,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
      )
      VALUES
      (
            #{storeCd},
            #{posNo},
            #{tuClsCd},
            #{tuKeyCd},
            #{prodCd},
            #{tuPage},
            #{x},
            #{y},
            #{width},
            #{height},
            #{indexNo},
            #{clsFg},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
      )
    </insert>

</mapper>