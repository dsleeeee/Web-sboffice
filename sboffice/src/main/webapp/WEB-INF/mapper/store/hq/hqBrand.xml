<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    hq/hqBrand.xml
    브랜드 관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김지은     2018.06.01     최초작성
-->

<mapper namespace="kr.co.solbipos.store.hq.brand.service.impl.HqBrandMapper">
  
  <!-- 브랜드목록 조회 -->
  <!--
      TABLE    : TB_HQ_BRAND, TB_HQ_OFFICE
      COMMENTS : 브랜드 목록을 조회한다.
  -->
  <select id="getBrandlist" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : HqBrandMapper.list */
    <![CDATA[
    SELECT thb.HQ_OFFICE_CD,
           tho.HQ_OFFICE_NM,
           thb.HQ_BRAND_CD,
           thb.HQ_BRAND_NM,
           thb.USE_YN,
           thb.REG_DT,
           thb.REG_ID,
           thb.MOD_DT,
           thb.MOD_ID
      FROM TB_HQ_BRAND thb,
           TB_HQ_OFFICE tho
     WHERE tho.HQ_OFFICE_CD = thb.HQ_OFFICE_CD
    ]]>
    <if test='hqOfficeCd != null and hqOfficeCd != ""'>
       AND thb.HQ_OFFICE_CD LIKE '%'||#{hqOfficeCd}||'%'
    </if>
    <if test='hqOfficeNm != null and hqOfficeNm != ""'>
       AND tho.HQ_OFFICE_NM LIKE '%'||#{hqOfficeNm}||'%'
    </if>
    <if test='hqBrandCd != null and hqBrandCd != ""'>
       AND thb.HQ_BRAND_CD LIKE '%'||#{hqBrandCd}||'%'
    </if>
    <if test='hqBrandNm != null and hqBrandNm != ""'>
       AND thb.HQ_BRAND_NM LIKE '%'||#{hqBrandNm}||'%'
    </if>
    <if test='useYn != null and useYn.toString() != "ALL"'>
       AND thb.USE_YN = #{useYn}
    </if>
     ORDER BY thb.REG_DT, thb.HQ_OFFICE_CD, thb.HQ_BRAND_CD ASC
  </select>

  <!-- 브랜드 코드 조회  -->
  <!--
      TABLE    : TB_HQ_BRAND
      COMMENTS : 브랜드 코드을 조회한다.
  -->
  <select id="getHqBrandCd" parameterType="hqBrandVO" resultType="String">
    /* USE : HqBrandMapper.getHqBrandCd */
    SELECT CONCAT(#{hqOfficeCd}, LPAD(SUBSTR(NVL(MAX(HQ_BRAND_CD), '0000000'), 6, 2) +1, 2, '0')) AS HQ_BRAND_CD
      FROM TB_HQ_BRAND
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
  </select>

  <!-- 브랜드 추가 -->
  <!--
      TABLE    : TB_HQ_BRAND
      COMMENTS : 브랜드를 등록한다.
  -->
  <insert id="insertBrand" parameterType="DefaultMap">
    /* USE : HqBrandMapper.insertBrand */
      INSERT INTO TB_HQ_BRAND
    (
      HQ_BRAND_CD,
      HQ_BRAND_NM,
      HQ_OFFICE_CD,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
       #{hqBrandCd},
       #{hqBrandNm},
       #{hqOfficeCd},
       #{useYn},
       #{regDt},
       #{regId},
       #{modDt},
       #{modId}
    )
  </insert>

  <!-- 브랜드 수정 -->
  <!--
      TABLE    : TB_HQ_BRAND, TB_HQ_OFFICE
      COMMENTS : 등록된 브랜드 정보를 수정한다.
  -->
  <update id="updateBrand" parameterType="hqBrandVO">
    /* USE : HqBrandMapper.updateBrand */
    UPDATE TB_HQ_BRAND
       SET USE_YN = #{useYn}
     WHERE HQ_BRAND_CD = #{hqBrandCd}
       AND HQ_OFFICE_CD = #{hqOfficeCd}
  </update>

  <!-- 브랜드 삭제 -->
  <!--
      TABLE    : TB_HQ_BRAND, TB_HQ_OFFICE
      COMMENTS : 브랜드를 삭제한다.
  -->
  <delete id="deleteBrand" parameterType="hqBrandVO">
    /* USE : HqBrandMapper.deleteBrand */
    DELETE TB_HQ_BRAND
     WHERE HQ_BRAND_CD = #{hqBrandCd}
       AND HQ_OFFICE_CD = #{hqOfficeCd}
  </delete>

  <!-- 브랜드 환경정보 조회 -->
  <!--
      TABLE    : TB_CM_ENVST, TB_CM_ENVST_DTL, TB_HQ_ENVST, TB_CM_NMCODE, TB_HQ_BRAND, TB_HQ_OFFICE
      COMMENTS : 브랜드의 환경정보를 조회한다.
  -->
  <select id="getConfigList" parameterType="hqBrandVO" resultType="DefaultMap">
    /* USE : HqBrandMapper.getConfigList */
    SELECT tcd.ENVST_GRP_CD,
           tcn.NMCODE_NM,
           tcd.ENVST_CD,
           tcd.ENVST_NM,
           tcd.DIRCT_IN_YN,
           tcd.REMARK,
           tcd.ENVST_VAL_CD,
           tcd.ENVST_VAL_NM,
           tcd.DEFLT_YN,
           tcd.TARGT_FG,
           DECODE(the.ENVST_CD, NULL, 'N', 'Y') AS EXIST_FG,
           the.ENVST_VAL AS SEL_ENVST_VAL,
           tce.ENVST_CD_CNT
      FROM (
      SELECT tce.ENVST_GRP_CD,
             tce.ENVST_CD,
             tce.ENVST_NM,
             tce.ENVST_FG,
             tce.TARGT_FG,
             tce.DIRCT_IN_YN,
             tce.REMARK,
             tcd.ENVST_VAL_CD,
             tcd.ENVST_VAL_NM,
             tcd.DEFLT_YN
        FROM TB_CM_ENVST tce,
             TB_CM_ENVST_DTL tcd
       WHERE tce.TARGT_FG IN ('H','X','C')
         AND tce.USE_YN = 'Y'
         AND tcd.ENVST_CD (+)= tce.ENVST_CD
            ) tcd,
            (
       SELECT tce.ENVST_GRP_CD,
              COUNT(*) AS ENVST_CD_CNT
         FROM TB_CM_ENVST tce
        WHERE tce.TARGT_FG IN ('H','X','C')
          AND tce.USE_YN = 'Y'
        GROUP BY tce.ENVST_GRP_CD
            ) tce,
           TB_HQ_ENVST the,
           TB_CM_NMCODE tcn,
            (
       SELECT thb.HQ_BRAND_CD,
              tho.HQ_OFFICE_CD,
              tho.CLS_FG
         FROM TB_HQ_BRAND thb,
              TB_HQ_OFFICE tho
        WHERE tho.HQ_OFFICE_CD = thb.HQ_OFFICE_CD
            ) thb
     WHERE the.HQ_BRAND_CD (+)= #{hqBrandCd}
       AND the.ENVST_CD (+)= tcd.ENVST_CD
       AND tcn.NMCODE_GRP_CD = '048'
       AND tcn.NMCODE_CD = tcd.ENVST_GRP_CD
       AND thb.HQ_BRAND_CD (+)= the.HQ_BRAND_CD
       AND tce.ENVST_GRP_CD = tcd.ENVST_GRP_CD
     ORDER BY tcd.ENVST_GRP_CD, tcd.ENVST_CD, tcd.ENVST_VAL_CD
  </select>

  <!-- 브랜드환경정보 등록 -->
  <!--
      TABLE    : TB_HQ_ENVST
      COMMENTS : 브랜드의 환경정보를 조회한다.
  -->
  <insert id="insertConfig" parameterType="DefaultMap">
    /* USE : HqBrandMapper.insertConfig */
    INSERT INTO TB_HQ_ENVST
    (
      HQ_BRAND_CD,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{hqBrandCd},
      #{envstCd},
      #{envstVal},
      #{dirctInYn},
      #{useYn},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 환경설정 수정 -->
  <!--
      TABLE    : TB_HQ_ENVST
      COMMENTS : 환경설정정보를 수정한다.
  -->
  <update id="updateConfig" parameterType="DefaultMap">
    /* USE : HqBrandMapper.updateConfig */
    UPDATE TB_HQ_ENVST
       SET ENVST_VAL = #{envstVal},
           MOD_DT = #{modDt},
           MOD_ID = #{modId}
     WHERE HQ_BRAND_CD = #{hqBrandCd}
       AND ENVST_CD = #{envstCd}
  </update>

  <!-- 매장 환경설정 수정 -->
  <!--
      TABLE    : TB_MS_STORE_ENVST
      COMMENTS : 매장의환경설정정보를 수정한다. 
  -->
  <update id="updateConfigStore" parameterType="DefaultMap">
    /* USE : HqBrandMapper.updateConfigStore */
    UPDATE TB_MS_STORE_ENVST
       SET ENVST_VAL = #{envstVal}
     WHERE STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND HQ_BRAND_CD = #{hqBrandCd} )
       AND ENVST_CD = #{envstCd}
  </update>

  <!-- 분류목록 조회 -->
  <!--
      TABLE    : TB_HQ_PRODUCT_CLASS
      COMMENTS : 분류 목록을 조회한다.
  -->
  <select id="getClsList" parameterType="hqBrandVO" resultType="DefaultMap">
    /* USE : HqBrandMapper.getClsList */
    SELECT HQ_BRAND_CD,
           PROD_CLASS_CD,
           PROD_CLASS_NM,
           P_PROD_CLASS_CD
      FROM TB_HQ_PRODUCT_CLASS
     WHERE HQ_BRAND_CD = #{hqBrandCd}
  </select>

  <!-- 분류 코드 조회 -->
  <!--
      TABLE    : TB_HQ_PRODUCT_CLASS
      COMMENTS : 분류 코드를 조회한다.
  -->
  <select id="getClsCd" parameterType="hqClsVO" resultType="String">
    /* USE : HqBrandMapper.getClsCd */
    SELECT LPAD( NVL(MAX(PROD_CLASS_CD), 0) + 1, 5, '0') AS PROD_CLASS_CD
      FROM TB_HQ_PRODUCT_CLASS
     WHERE HQ_BRAND_CD = #{hqBrandCd}
  </select>

  <!-- 상위분류 코드 조회 -->
  <!--
      TABLE    : TB_HQ_PRODUCT_CLASS
      COMMENTS : 해당분류코드의 상위 분류코드를 조회한다.
  -->
  <select id="getPProdClsCd" parameterType="hqClsVO" resultType="String">
    /* USE : HqBrandMapper.getPProdClsCd */
    SELECT MAX(PROD_CLASS_CD) AS PROD_CLASS_CD
      FROM TB_HQ_PRODUCT_CLASS
     WHERE HQ_BRAND_CD = #{hqBrandCd}
  </select>

  <!-- 분류 등록 -->
  <!--
      TABLE    : TB_HQ_PRODUCT_CLASS
      COMMENTS : 분류를 등록한다.
  -->
  <insert id="insertCls" parameterType="hqClsVO">
    /* USE : HqBrandMapper.insertCls */
    INSERT INTO TB_HQ_PRODUCT_CLASS
    (
      HQ_BRAND_CD,
      PROD_CLASS_CD,
      PROD_CLASS_NM,
      P_PROD_CLASS_CD,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{hqBrandCd},
      #{prodClassCd},
      #{prodClassNm},
      #{pProdClassCd},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 분류 수정  -->
  <!--
      TABLE    : TB_HQ_PRODUCT_CLASS
      COMMENTS : 브랜드 목록을 조회한다.
  -->
  <update id="updateCls" parameterType="hqClsVO">
    /* USE : HqBrandMapper.updateCls */
    MERGE INTO TB_HQ_PRODUCT_CLASS thp
    USING (
          SELECT #{hqBrandCd} AS HQ_BRAND_CD,
                 #{prodClassCd} AS PROD_CLASS_CD,
                 #{prodClassNm} AS PROD_CLASS_NM,
                 #{pProdClassCd} AS P_PROD_CLASS_CD,
                 #{regDt} AS REG_DT,
                 #{regId} AS REG_ID,
                 #{modDt} AS MOD_DT,
                 #{modId} AS MOD_ID
            FROM DUAL
          ) thpc
       ON
        (
          thpc.HQ_BRAND_CD = thp.HQ_BRAND_CD
      AND thpc.PROD_CLASS_CD = thp.PROD_CLASS_CD
        )
     WHEN MATCHED THEN
          UPDATE SET
                 thp.PROD_CLASS_NM = thpc.PROD_CLASS_NM,
                 thp.MOD_DT = thpc.MOD_DT,
                 thp.MOD_ID = thpc.MOD_ID
     WHEN NOT MATCHED THEN
          INSERT
          (
            thp.HQ_BRAND_CD,
            thp.PROD_CLASS_CD,
            thp.PROD_CLASS_NM,
            thp.P_PROD_CLASS_CD,
            thp.REG_DT,
            thp.REG_ID,
            thp.MOD_DT,
            thp.MOD_ID
          )
          VALUES
          (
            thpc.HQ_BRAND_CD,
            thpc.PROD_CLASS_CD,
            thpc.PROD_CLASS_NM,
            thpc.P_PROD_CLASS_CD,
            thpc.REG_DT,
            thpc.REG_ID,
            thpc.MOD_DT,
            thpc.MOD_ID
          )
  </update>

  <!-- 해당 분류로 등록된 상품 조회 -->
  <!--
      TABLE    : TB_HQ_PRODUCT
      COMMENTS : 해당 분류로 등록된 상품 조회
  -->
  <select id="chkProdCnt" parameterType="hqClsVO" resultType="Integer">
    /* USE : HqBrandMapper.chkProdCnt */
    SELECT COUNT(1) AS CNT
      FROM TB_HQ_PRODUCT
     WHERE HQ_BRAND_CD = #{hqBrandCd}
       AND PROD_CLASS_CD = #{prodClassCd}
  </select>

  <!-- 분류 삭제 -->
  <!--
      TABLE    : TB_HQ_PRODUCT_CLASS
      COMMENTS : 브랜드 목록을 조회한다.
  -->
  <delete id="deleteCls" parameterType="hqClsVO" >
    /* USE : HqBrandMapper.deleteCls */
    DELETE TB_HQ_PRODUCT_CLASS
     WHERE HQ_BRAND_CD = #{hqBrandCd}
       AND PROD_CLASS_CD = #{prodClassCd}
  </delete>

</mapper>