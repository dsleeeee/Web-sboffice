<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    Regist.xml
    회원관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       정용길     2018.05.01     최초작성
    2       김지은     2018.11.08     회원정보관리 수정
-->
<mapper namespace="kr.co.solbipos.membr.info.regist.service.impl.RegistMapper">

    <!-- 등록매장 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_HQ_BRAND, TB_MS_STORE
        COMMENTS : 회원정보 등록시 등록매장 콤보박스 내용 조회
    -->
    <select id="getRegistStore" parameterType="hqManageVO" resultType="DefaultMap">
        /* RegistMapper.getRegistStore */
        SELECT tms.STORE_CD AS VALUE,
               tms.STORE_NM AS NAME
          FROM TB_MS_STORE tms
         WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
    </select>

    <!-- 회원등급 리스트 조회-->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_HQ_BRAND, TB_MS_STORE
        COMMENTS : 회원정보 등록시 등록매장 콤보박스 내용 조회
    -->
    <select id="getMemberClassList" parameterType="membrClassVO" resultType="DefaultMap">
        /* RegistMapper.getMemberClassList */
        SELECT MEMBR_CLASS_CD AS VALUE,
               MEMBR_CLASS_NM AS NAME
          FROM TB_MB_MEMBER_CLASS
         WHERE USE_YN = 'Y'
           AND MEMBR_ORGN_CD = #{membrOrgnCd}
         ORDER BY DEFLT_YN DESC
    </select>


    <!-- 회원정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 리스트 조회
    -->
    <select id="getMemberList" parameterType="registVO" resultType="DefaultMap">
        /* RegistMapper.getMemberList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT tmm.MEMBR_NO,
        SBPENC.D(tmm.MEMBR_NM) AS MEMBR_NM,
        tmm.MEMBR_CLASS_CD,
        tmmc.MEMBR_CLASS_NM,
        tmm.MEMBR_CARD_NO,
        tmm.SHORT_NO,
        tmm.MEMBR_ORGN_CD,
        tmm.REG_STORE_CD,
        tms.STORE_NM AS REG_STORE_NM,
        tmm.POST_NO,
        SBPENC.D(tmm.ADDR) AS ADDR,
        SBPENC.D(tmm.ADDR_DTL) AS ADDR_DTL,
        SBPENC.D(tmm.TEL_NO) AS PHONE_NO,
        tmm.EMAIL_ADDR,
        tmm.EMAIL_RECV_YN,
        TO_CHAR(TO_DATE(tmm.BIRTHDAY), 'YYYY-MM-DD') AS BIRTHDAY,
        tmm.GENDR_FG,
        tmm.SMS_RECV_YN,
        tmm.WEDDING_YN,
        tmm.WEDDINGDAY,
        tmm.LUNAR_YN,
        tmm.USE_YN,
        tmm.MEMBR_NICKNM,
        tmm.MEMBER_ENG_NM,
        tmm.REMARK,
        tmmp.TOT_SAVE_POINT,
        tmmp.TOT_USE_POINT,
        tmmp.AVABL_POINT,
        tmmp.TOT_ADJ_POINT,
        tmmp.FIRST_SALE_DATE,
        tmmp.LAST_SALE_DATE,
        TO_CHAR(TO_DATE(tmm.REG_DT, 'YYYY-MM-DD HH24MISS'), 'YYYY-MM-DD') AS REG_DT,
        '후불적용매장등록' AS POSTPAID_STORE
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM TB_MB_MEMBER tmm,
        TB_MB_MEMBER_CLASS tmmc,
        TB_MS_STORE tms,
        TB_MB_MEMBER_CARD tmmcd,
        TB_MB_MEMBER_POINT tmmp
        WHERE tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
          AND tmmc.MEMBR_ORGN_CD (+)= #{membrOrgnCd}
        <!-- <if test='orgnFg != null and orgnFg.toString() == "HQ"'>
            AND tmmc.MEMBR_ORGN_CD (+)= #{hqOfficeCd}
        </if>
        <if test='orgnFg != null and orgnFg.toString() == "STORE"'>
            AND tmmc.MEMBR_ORGN_CD (+)= #{storeCd}
        </if> -->
        AND tmmc.MEMBR_CLASS_CD (+)= tmm.MEMBR_CLASS_CD
        AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tms.STORE_CD = tmm.REG_STORE_CD
        AND tmm.MEMBR_ORGN_CD = tmmcd.MEMBR_ORGN_CD(+)
        AND tmm.MEMBR_CARD_NO = tmmcd.MEMBR_CARD_NO(+)
        AND tmm.MEMBR_ORGN_CD = tmmp.MEMBR_ORGN_CD(+)
        AND tmm.MEMBR_NO = tmmp.MEMBR_NO(+)
        <if test='storeCd != null and storeCd != ""'>
            AND tmm.REG_STORE_CD = #{storeCd}
        </if>
        <if test='membrCardNo != null and membrCardNo != ""'>
            AND tmm.MEMBR_CARD_NO LIKE '%'||#{membrCardNo}||'%'
        </if>
        <if test='membrNo != null and membrNo != ""'>
            AND tmm.MEMBR_NO LIKE '%'||#{membrNo}||'%'
        </if>
        <if test='membrNm != null and membrNm != ""'>
            AND SBPENC.D(tmm.MEMBR_NM) LIKE '%'||#{membrNm}||'%'
        </if>
        <if test='memberEngNm != null and memberEngNm != ""'>
            AND tmm.memberEngNm LIKE '%'||#{memberEngNm}||'%'
        </if>
        <if test='telNo != null and telNo != ""'>
            AND SBPENC.D(tmm.TEL_NO) LIKE '%'||#{telNo}||'%'
        </if>
        <if test='emailAddr != null and emailAddr.toString() != ""'>
            AND tmm.EMAIL_ADDR LIKE '%'||#{emailAddr}||'%'
        </if>
        <if test='regStoreCd != null and regStoreCd.toString() != ""'>
            AND tmm.REG_STORE_CD IN
            <foreach collection="regStoreCds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='membrClassCd != null and membrClassCd.toString() != ""'>
            AND tmm.MEMBR_CLASS_CD = #{membrClassCd}
        </if>
        <if test='gendrFg != null and gendrFg.toString() != ""'>
            AND tmm.GENDR_FG = #{gendrFg}
        </if>
        <if test='emailRecvYn != null and emailRecvYn.toString() != ""'>
            AND tmm.EMAIL_RECV_YN = #{emailRecvYn}
        </if>
        <if test='smsRecvYn != null and smsRecvYn.toString() != ""'>
            AND tmm.SMS_RECV_YN = #{smsRecvYn}
        </if>
        <if test='periodType != null and periodType.toString() != ""'>
            <if test='periodType.getCode() == "reg"'>
                AND tmm.REG_DT BETWEEN #{periodStartDate}||'000000' AND #{periodEndDate}||'999999'
            </if>
            <if test='periodType.getCode() == "last"'>
            </if>
        </if>
        <if test='anvType != null and anvType.toString() != ""'>
            <if test='anvType.getCode() == "1"'>
                AND tmm.BIRTHDAY BETWEEN #{anvStartDate} AND #{anvEndDate}
            </if>
            <if test='anvType.getCode() == "2"'>
                AND tmm.WEDDINGDAY BETWEEN #{anvStartDate} AND #{anvEndDate}
            </if>
        </if>
        <if test='useYn != null and useYn != ""'>
            AND tmm.USE_YN = #{useYn}
        </if>
        ORDER BY tmm.MEMBR_NO
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 회원정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 조회
    -->
    <select id="getMemberInfo" parameterType="registVO" resultType="DefaultMap">
        /* RegistMapper.getMemberInfo */
        SELECT tmm.MEMBR_ORGN_CD,
        tmm.MEMBR_NO,
        SBPENC.D(tmm.MEMBR_NM) AS MEMBR_NM,
        tmm.MEMBER_ENG_NM,
        tmm.MEMBR_NICKNM,
        tmm.MEMBR_CLASS_CD,
        tmm.MEMBR_CARD_NO,
        tmm.REG_STORE_CD,
        tmm.POST_NO,
        SBPENC.D(tmm.ADDR) AS ADDR,
        SBPENC.D(tmm.ADDR_DTL) AS ADDR_DTL,
        tmm.LUNAR_YN,
        tmm.BIRTHDAY,
        tmm.GENDR_FG,
        SBPENC.D(tmm.TEL_NO) AS PHONE_NO,
        tmm.SHORT_NO,
        tmm.WEDDING_YN,
        tmm.WEDDINGDAY,
        tmm.EMAIL_ADDR,
        tmm.EMAIL_RECV_YN,
        tmm.SMS_RECV_YN,
        tmm.REMARK,
        tmm.USE_YN,
        tmm.REG_DT,
        tmm.REG_ID,
        tmm.MOD_DT,
        tmm.MOD_ID,
        tmmp.CD_COMPANY,
        tmmp.CD_PARTNER,
        tnsp.LN_PARTNER,
        tnsp.NO_COMPANY,
        tnsp.NM_CEO
        FROM TB_MB_MEMBER tmm,
              TB_MB_MEMBER_PTN tmmp,
        <choose>
            <when test='hqOfficeCd != null and hqOfficeCd == "A0007"'>
                VITIS.TB_NEOE_SPOS_PTN tnsp
            </when>
            <otherwise>
                TB_NEOE_SPOS_PTN tnsp
            </otherwise>
        </choose>
        WHERE tmm.MEMBR_NO = #{membrNo}
        AND tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
        AND tmmp.MEMBR_ORGN_CD (+)= tmm.MEMBR_ORGN_CD
        AND tmmp.MEMBR_NO (+)= tmm.MEMBR_NO
        AND tnsp.CD_COMPANY (+)= tmmp.CD_COMPANY
        AND tnsp.CD_PARTNER (+)= tmmp.CD_PARTNER
    </select>

    <!-- 회원정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 조회
    -->
    <select id="getNewMemberNo" parameterType="registVO" resultType="String">
        /* RegistMapper.getNewMemberNo */
        SELECT LPAD( NVL(MAX(MEMBR_NO), 0) + 1, 10, '0') AS MEMBR_NO
          FROM TB_MB_MEMBER
         WHERE MEMBR_ORGN_CD = #{membrOrgnCd}
    </select>


    <!-- 회원정보 등록 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 등록
    -->
    <insert id="registMemberInfo" parameterType="registVO">
        /* RegistMapper.registMemberInfo */
        <selectKey keyProperty="membrNo" resultType="String" order="AFTER">
            select MEMBR_NO FROM TB_MB_MEMBER WHERE MEMBR_ORGN_CD = #{membrOrgnCd} AND MEMBR_NO = #{membrNo}
        </selectKey>
        <![CDATA[
        INSERT INTO TB_MB_MEMBER tmm (
            tmm.MEMBR_ORGN_CD,
            tmm.MEMBR_NO,
            tmm.MEMBR_NM,
            tmm.MEMBER_ENG_NM,
            tmm.MEMBR_NICKNM,
            tmm.MEMBR_CLASS_CD,
            tmm.MEMBR_CARD_NO,
            tmm.REG_STORE_CD,
            tmm.POST_NO,
            tmm.ADDR,
            tmm.ADDR_DTL,
            tmm.BIRTHDAY,
            tmm.LUNAR_YN,
            tmm.GENDR_FG,
            tmm.EMAIL_ADDR,
            tmm.SHORT_NO,
            tmm.TEL_NO,
            tmm.WEDDING_YN,
            tmm.WEDDINGDAY,
            tmm.EMAIL_RECV_YN,
            tmm.SMS_RECV_YN,
            tmm.USE_YN,
            tmm.REMARK,
            tmm.REG_DT,
            tmm.REG_ID,
            tmm.MOD_DT,
            tmm.MOD_ID
        ) VALUES (
            #{membrOrgnCd},
            #{membrNo},
            SBPENC.E(#{membrNm}),
            #{memberEngNm},
            #{membrNicknm},
            #{membrClassCd},
            #{membrCardNo},
            #{regStoreCd},
            #{postNo},
            SBPENC.E(#{addr}),
            SBPENC.E(#{addrDtl}),
            #{birthday},
            #{lunarYn},
            #{gendrFg},
            #{emailAddr},
            #{shortNo},
            SBPENC.E(#{telNo}),
            #{weddingYn},
            #{weddingday},
            #{emailRecvYn},
            #{smsRecvYn},
            #{useYn},
            #{remark},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
        ]]>
    </insert>

    <!-- 선불회원 등록 -->
    <!--
        TABLE    : TB_MB_MEMBER_PREPAID_STORE
        COMMENTS : 선불회원 등록
    -->
    <insert id="registMemberPrepaid" parameterType="registVO">
        /* RegistMapper.registMemberPrepaid */
        MERGE INTO TB_MB_MEMBER_PREPAID_STORE tmmps
        USING DUAL
           ON (tmmps.MEMBR_ORGN_CD = #{membrOrgnCd} AND tmmps.MEMBR_NO = #{membrNo})
         WHEN MATCHED THEN
       UPDATE
          SET tmmps.STORE_CD = #{regStoreCd},
              tmmps.USE_YN = #{useYn},
              tmmps.MOD_DT = #{modDt},
              tmmps.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
         INSERT
         (
             tmmps.MEMBR_ORGN_CD,
             tmmps.MEMBR_NO,
             tmmps.STORE_CD,
             tmmps.USE_YN,
             tmmps.REG_DT,
             tmmps.REG_ID,
             tmmps.MOD_DT,
             tmmps.MOD_ID
         )
         VALUES
         (
             #{membrOrgnCd},
             #{membrNo},
             #{regStoreCd},
             #{useYn},
             #{regDt},
             #{regId},
             #{modDt},
             #{modId}
         )
  </insert>

    <!-- 회원정보 수정 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 수정
    -->
    <update id="updateMemberInfo" parameterType="registVO">
        /* RegistMapper.updateMemberInfo */
        UPDATE TB_MB_MEMBER tmm
           SET tmm.MEMBR_NM = SBPENC.E(#{membrNm}),
               tmm.MEMBER_ENG_NM = #{memberEngNm},
               tmm.MEMBR_NICKNM = #{membrNicknm},
               tmm.MEMBR_CLASS_CD = #{membrClassCd},
               tmm.MEMBR_CARD_NO = #{membrCardNo},
               tmm.REG_STORE_CD = #{regStoreCd},
               tmm.POST_NO = #{postNo},
               tmm.ADDR = SBPENC.E(#{addr}),
               tmm.ADDR_DTL = SBPENC.E(#{addrDtl}),
               tmm.BIRTHDAY = #{birthday},
               tmm.LUNAR_YN = #{lunarYn},
               tmm.GENDR_FG = #{gendrFg},
               tmm.EMAIL_ADDR = #{emailAddr},
               tmm.SHORT_NO = #{shortNo},
               tmm.TEL_NO = SBPENC.E(#{telNo}),
               tmm.WEDDING_YN = #{weddingYn},
               tmm.WEDDINGDAY = #{weddingday},
               tmm.EMAIL_RECV_YN = #{emailRecvYn},
               tmm.SMS_RECV_YN = #{smsRecvYn},
               tmm.USE_YN = #{useYn},
               tmm.REMARK = #{remark},
               tmm.MOD_ID = #{modId},
               tmm.MOD_DT = #{modDt}
         WHERE tmm.MEMBR_NO = #{membrNo}
           AND tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
    </update>

    <!-- 회원정보 삭제 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 삭제 버튼 처리 USE_YN : N 으로 업데이트 처리
    -->
    <delete id="deleteMemberInfo" parameterType="registVO">
      /* RegistMapper.deleteMemberInfo */
      UPDATE TB_MB_MEMBER tmm
         SET tmm.USE_YN = 'N',
             tmm.MOD_ID = #{modId},
             tmm.MOD_DT = #{modDt}
       WHERE tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
         AND tmm.MEMBR_NO = #{membrNo}
    </delete>

    <!-- 회원카드정보 수정 -->
    <!--
        TABLE    : TB_MB_MEMBER_CARD
        COMMENTS : 회원정보 수정시에 회원 카드번호 수정
    -->
    <update id="updateMembrCard" parameterType="registVO">
        /* RegistMapper.updateMembrCard */
        UPDATE TB_MB_MEMBER_CARD tmmc
           SET tmmc.MEMBR_CARD_NO = #{membrCardNo},
               tmmc.MOD_ID = #{modId},
               tmmc.MOD_DT = #{modDt}
         WHERE tmmc.MEMBR_ORGN_CD = #{membrOrgnCd}
           AND tmmc.MEMBR_NO = #{membrNo}
    </update>

    <!-- 후불회원 등록매장 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER_POSTPAID_STORE
        COMMENTS : 후불회원 적용매장 조회
    -->
    <select id="getRegStoreList" parameterType="postpaidStoreVO" resultType="DefaultMap">
        /* RegistMapper.getRegStoreList */
        SELECT tmbcs.MEMBR_ORGN_CD,
               tmbcs.MEMBR_NO,
               tmbcs.STORE_CD,
               (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = tmbcs.STORE_CD) AS STORE_NM
          FROM TB_MB_MEMBER_POSTPAID_STORE tmbcs
         WHERE tmbcs.MEMBR_ORGN_CD = #{membrOrgnCd}
           AND tmbcs.MEMBR_NO = #{membrNo}
           AND tmbcs.USE_YN = 'Y'
        <if test='defaultStoreCd != null and defaultStoreCd.toString() != ""'>
           AND tmbcs.STORE_CD != #{defaultStoreCd}
        </if>
    </select>

    <!-- 후불회원 미등록매장 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER_POSTPAID_STORE
        COMMENTS : 후불회원 적용매장 조회
    -->
    <select id="getNoRegStoreList" parameterType="postpaidStoreVO" resultType="DefaultMap">
        /* RegistMapper.getNoRegStoreList */
        SELECT HQ_OFFICE_CD AS MEMBR_ORGN_CD,
               STORE_CD,
               STORE_NM
          FROM TB_MS_STORE
         WHERE HQ_OFFICE_CD = #{membrOrgnCd}
           AND STORE_CD NOT IN (SELECT STORE_CD
                                  FROM TB_MB_MEMBER_POSTPAID_STORE
                                 WHERE MEMBR_ORGN_CD = #{membrOrgnCd}
                                   AND MEMBR_NO =  #{membrNo}
                                   AND USE_YN = 'Y')
        <if test='defaultStoreCd != null and defaultStoreCd.toString() != ""'>
           AND STORE_CD != #{defaultStoreCd}
        </if>
    </select>

    <!-- 후불회원 적용매장 삭제 -->
    <!--
        TABLE    : TB_MB_MEMBER_POSTPAID_STORE
        COMMENTS : 후불회원 적용매장 삭제
    -->
    <update id="deletePostpaidStore" parameterType="postpaidStoreVO">
        /* RegistMapper.deletePostpaidStore */
        UPDATE TB_MB_MEMBER_POSTPAID_STORE
           SET USE_YN = 'N',
               MOD_DT = #{modDt},
               MOD_ID = #{modId}
         WHERE MEMBR_ORGN_CD = #{membrOrgnCd}
           AND MEMBR_NO = #{membrNo}
           AND STORE_CD = #{storeCd}
    </update>

    <!-- 후불회원 적용매장 등록 및 수정 -->
    <!--
        TABLE    : TB_MB_MEMBER_POSTPAID_STORE
        COMMENTS : 후불회원 적용매장 등록 및 수정
    -->
    <insert id="registPostpaidStore" parameterType="postpaidStoreVO">
        /* RegistMapper.registPostpaidStore */
        MERGE INTO TB_MB_MEMBER_POSTPAID_STORE tmmps
        USING DUAL
        ON (
            tmmps.MEMBR_ORGN_CD = #{membrOrgnCd}
            AND tmmps.MEMBR_NO = #{membrNo}
            AND tmmps.STORE_CD = #{storeCd}
        )
        WHEN MATCHED THEN
       UPDATE
          SET tmmps.USE_YN = #{useYn},
              tmmps.MOD_DT = #{modDt},
              tmmps.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
            INSERT
            (
                MEMBR_ORGN_CD,
                MEMBR_NO,
                STORE_CD,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
            ) VALUES (
                #{membrOrgnCd},
                #{membrNo},
                #{storeCd},
                #{useYn},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </insert>

    <!-- 회원 거래처 매핑코드 조회 -->
    <!--
        TABLE    :
        COMMENTS : 회원정보 등록시 등록매장 콤보박스 내용 조회
    -->
    <select id="getMappingCompany" parameterType="memberMappingVO" resultType="DefaultMap">
        /* RegistMapper.getMappingCompany */
        SELECT CD_COMPANY,
               CD_PARTNER,
               LN_PARTNER,
               NO_COMPANY,
               NM_CEO
        <choose>
            <when test='hqOfficeCd != null and hqOfficeCd == "A0007"'>
                FROM VITIS.TB_NEOE_SPOS_PTN tnsp
            </when>
            <otherwise>
                FROM TB_NEOE_SPOS_PTN tnsp
            </otherwise>
        </choose>
         WHERE USE_YN = 'Y'
      <if test='cdCompany != null and cdCompany.toString() != ""'>
        AND tnsp.CD_COMPANY = #{cdCompany}
      </if>
      <if test='cdPartner != null and cdPartner.toString() != ""'>
        AND tnsp.CD_PARTNER LIKE '%'||#{cdPartner}||'%'
      </if>
      <if test='lnPartner != null and lnPartner.toString() != ""'>
        AND tnsp.LN_PARTNER LIKE '%'||#{lnPartner}||'%'
      </if>
      <if test='noCompany != null and noCompany.toString() != ""'>
        AND tnsp.NO_COMPANY = #{noCompany}
      </if>
      <if test='nmCeo != null and nmCeo.toString() != ""'>
        AND tnsp.NM_CEO LIKE '%'||#{nmCeo}||'%'
      </if>
    </select>

    <!-- 회원 거래처 매핑코드 등록 및 저장  -->
    <!--
        TABLE    : TB_MB_MEMBER_PTN
        COMMENTS : 회원 거래처 매핑코드 등록 및 저장
    -->
    <insert id="registMemberMappingCode" parameterType="postpaidStoreVO">
        /* RegistMapper.registMemberMappingCode */
        MERGE INTO TB_MB_MEMBER_PTN tmmp
        USING DUAL
        ON (
            tmmp.MEMBR_ORGN_CD = #{membrOrgnCd}
            AND tmmp.MEMBR_NO = #{membrNo}
        )
        WHEN MATCHED THEN
       UPDATE
          SET tmmp.CD_COMPANY = #{cdCompany},
              tmmp.CD_PARTNER = #{cdPartner},
              tmmp.MOD_DT = #{modDt},
              tmmp.MOD_ID = #{modId}
         WHEN NOT MATCHED THEN
            INSERT
            (
                MEMBR_ORGN_CD,
                MEMBR_NO,
                CD_COMPANY,
                CD_PARTNER,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
            ) VALUES (
                #{membrOrgnCd},
                #{membrNo},
                #{cdCompany},
                #{cdPartner},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </insert>

    <!-- 회원 거래처 매핑 팝업 - 회원 거래처 매핑 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER, TB_MB_MEMBER_CLASS, TB_MS_STORE, TB_MB_MEMBER_PTN, TB_NEOE_SPOS_PTN
        COMMENTS : [회원]회원, [회원]회원_분류, [매장]매장정보, [회원]회원-거래처 매핑, 회원 거래처 매핑코드
    -->
    <select id="getMemberVendorMappingList" parameterType="registVO" resultType="DefaultMap">
        /* RegistMapper.getMemberVendorMappingList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        tmm.MEMBR_NO,
        SBPENC.D(tmm.MEMBR_NM) AS MEMBR_NM,
        tmm.MEMBR_CLASS_CD,
        tmmc.MEMBR_CLASS_NM,
        tmm.MEMBR_CARD_NO,
        tmm.SHORT_NO,
        tmm.MEMBR_ORGN_CD,
        tmm.REG_STORE_CD,
        tms.STORE_NM AS REG_STORE_NM,
        tmm.POST_NO,
        SBPENC.D(tmm.ADDR) AS ADDR,
        SBPENC.D(tmm.ADDR_DTL) AS ADDR_DTL,
        SBPENC.D(tmm.TEL_NO) AS TEL_NO,
        tmm.EMAIL_ADDR,
        tmm.EMAIL_RECV_YN,
        tmm.BIRTHDAY,
        tmm.GENDR_FG,
        tmm.SMS_RECV_YN,
        tmm.WEDDING_YN,
        tmm.WEDDINGDAY,
        tmm.LUNAR_YN,
        tmm.USE_YN,
        tmm.MEMBR_NICKNM,
        tmm.MEMBER_ENG_NM,
        tmm.REMARK,
        '후불적용매장등록' AS POSTPAID_STORE,
        tmmp.CD_PARTNER,
        tnsp.LN_PARTNER
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM TB_MB_MEMBER tmm,
        TB_MB_MEMBER_CLASS tmmc,
        TB_MS_STORE tms,
        TB_MB_MEMBER_PTN tmmp,
        <choose>
            <when test='hqOfficeCd != null and hqOfficeCd == "A0007"'>
                VITIS.TB_NEOE_SPOS_PTN tnsp
            </when>
            <otherwise>
                TB_NEOE_SPOS_PTN tnsp
            </otherwise>
        </choose>
        WHERE 1=1
        <if test='orgnFg != null and orgnFg.toString() == "HQ"'>
            AND tmmc.MEMBR_ORGN_CD (+)= #{hqOfficeCd}
        </if>
        <if test='orgnFg != null and orgnFg.toString() == "STORE"'>
            AND tmmc.MEMBR_ORGN_CD (+)= #{storeCd}
        </if>
        AND tmmc.MEMBR_CLASS_CD (+)= tmm.MEMBR_CLASS_CD
        AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tms.STORE_CD (+)= tmm.REG_STORE_CD
        AND tmmp.MEMBR_ORGN_CD (+)= tmm.MEMBR_ORGN_CD
        AND tmmp.MEMBR_NO (+)= tmm.MEMBR_NO
        AND tnsp.CD_COMPANY (+)= tmmp.CD_COMPANY
        AND tnsp.CD_PARTNER (+)= tmmp.CD_PARTNER
        <if test='membrNo != null and membrNo != ""'>
            AND tmm.MEMBR_NO LIKE '%'||#{membrNo}||'%'
        </if>
        <if test='membrNm != null and membrNm != ""'>
            AND SBPENC.D(tmm.MEMBR_NM) LIKE '%'||#{membrNm}||'%'
        </if>
        AND tmmp.CD_PARTNER IS NULL
        ORDER BY tmm.MEMBR_NO
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 회원정보 등록,수정시 본사코드 A0007만 -->
    <!--
    TABLE    : TB_SL_SALE_HDR_MEMBR, TB_MB_MEMBER_PTN
    COMMENTS : [매출]헤더_회원, [회원]회원-거래처 매핑
    -->
    <select id="registPoslinkPtn" statementType="CALLABLE" parameterType="registVO" resultType="String">
    /* RegistMapper.registPoslinkPtn */
    {
        CALL VITIS.SP_NEOE_POSLINK_PTN
        (
            #{membrOrgnCd},
            #{regStoreCd},
            #{membrNo},
            #{result, mode=OUT, jdbcType=VARCHAR}
        )
    }
    </select>

    <!-- 회원정보 등록,수정시 본사코드 A0007만 -->
    <!--
    TABLE    : TB_NS_NONSALE_HDR, TB_MB_MEMBER_PTN
    COMMENTS : [비매출]HEADER, [회원]회원-거래처 매핑
    -->
    <select id="registSposBillPtn" statementType="CALLABLE" parameterType="registVO" resultType="String">
    /* RegistMapper.registSposBillPtn */
    {
        CALL VITIS.SP_NEOE_SPOS_BILL_PTN
        (
            #{membrOrgnCd},
            #{regStoreCd},
            #{membrNo},
            #{result, mode=OUT, jdbcType=VARCHAR}
        )
    }
    </select>


    <!-- 회원정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER
        COMMENTS : 회원정보 조회
    -->
    <select id="getMemberSelect" parameterType="registVO" resultType="DefaultMap">
       SELECT *
        FROM(SELECT
                *
            FROM TB_MB_MEMBER tmm
            ORDER BY ROWNUM DESC)
        WHERE ROWNUM = 1
    </select>

    <!-- 카드정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER, TB_MB_MEMBER_CARD,
        COMMENTS : 카드정보 조회
    -->
    <select id="getCardList" parameterType="registVO" resultType="DefaultMap">
        SELECT
        *
        FROM
        TB_MB_MEMBER_CARD tmmc
        WHERE 1=1
        <if test='membrOrgnCd != null and membrOrgnCd != ""'>
            AND MEMBR_ORGN_CD = #{membrOrgnCd}
        </if>
        <if test='membrNo != null and membrNo != ""'>
            AND MEMBR_NO = #{membrNo}
        </if>
        ORDER BY REG_DT DESC

    </select>

    <!-- 회원카드정보 추가 -->
    <!--
        TABLE    : TB_MB_MEMBER_CARD
        COMMENTS : 회원정보등록시 카드정보도 등록
    -->
    <insert id="insertMembrCard" parameterType="registVO">
        /* RegistMapper.insertMembrCard */
        INSERT INTO TB_MB_MEMBER_CARD tmmc (
            tmmc.MEMBR_CARD_NO,
            tmmc.MEMBR_ORGN_CD,
            tmmc.MEMBR_NO,
            tmmc.CST_CARD_STAT_FG,
            tmmc.OLD_CST_CARD_NO,
            tmmc.CST_CARD_ISS_FG,
            tmmc.ISS_REMARK,
            tmmc.ISS_ORGN_CD,
            tmmc.ISS_DATE,
            tmmc.REG_ID,
            tmmc.REG_DT,
            tmmc.MOD_ID,
            tmmc.MOD_DT)
        VALUES (
            #{membrCardNo},
            #{membrOrgnCd},
            #{membrNo},
            0,
            #{oldCstCardNo},
            0,
            #{issRemark},
            #{issOrgnCd},
            #{issDate},
            #{regId},
            #{regDt},
            #{modId},
            #{modDt})
    </insert>

    <!-- 카드정보수정 수정 -->
    <!--
        TABLE    : TB_MB_MEMBER_CARD
        COMMENTS : 카드정보수정
    -->
    <update id="updateMemberCard" parameterType="registVO">
        /* RegistMapper.updateMemberInfo */
        UPDATE TB_MB_MEMBER_CARD tmmc
           SET
            tmmc.MEMBR_CARD_NO = #{membrCardNo},
            tmmc.CST_CARD_STAT_FG = #{cstCardStatFg},
            tmmc.OLD_CST_CARD_NO = #{oldCstCardNo},
            tmmc.CST_CARD_ISS_FG = #{cstCardIssFg},
            tmmc.ISS_REMARK = #{issRemark},
            tmmc.ISS_ORGN_CD = #{issOrgnCd},
            tmmc.ISS_DATE = #{iss_date},
            tmmc.MOD_ID = #{modId},
            tmmc.MOD_DT = #{modDt}
         WHERE tmm.MEMBR_NO = #{membrNo}
           AND tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
    </update>

    <!-- 배달정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER, TB_MB_MEMBER_DLVR_ADDR,
        COMMENTS : 배달정보 조회
    -->
    <select id="getDlvrList" parameterType="registVO" resultType="DefaultMap">
 /* RegistMapper.getDlvrList */
       SELECT
       tmmda.MEMBR_ORGN_CD
       , tmmda.MEMBR_NO
       , tmmda.DLVR_ADDR_SEQ
       , tmmda.DLVR_STORE_CD
       , tmmda.DLVR_LZONE_CD
       , tmmda.DLVR_MZONE_CD
       , SBPENC.D(tmmda.ADDR) AS ADDR
       , SBPENC.D(tmmda.ADDR_DTL) AS ADDR_DTL
       , tmmda.LAST_DLVR_DATE
       , tmmda.TOT_DLVR_CNT
       , tmmda.USE_YN
       , tmmda.REG_DT
       , tmmda.REG_ID
       , tmmda.MOD_DT
       , tmmda.MOD_ID
        FROM TB_MB_MEMBER_DLVR_ADDR tmmda
        WHERE MEMBR_ORGN_CD = #{membrOrgnCd}
        AND MEMBR_NO = #{membrNo}
    </select>


    <!-- 배달정보 추가 -->
    <!--
        TABLE    : TB_MB_MEMBER_DLVR_ADDR
        COMMENTS : 배달정보 등록
    -->
    <insert id="insertMembrDlvr" parameterType="registVO">
        /* RegistMapper.insertMembrDlvr */
        INSERT INTO TB_MB_MEMBER_DLVR_ADDR tmmda (
            tmmda.MEMBR_ORGN_CD
            , tmmda.MEMBR_NO
            , tmmda.DLVR_ADDR_SEQ
            , tmmda.DLVR_STORE_CD
            , tmmda.DLVR_LZONE_CD
            , tmmda.DLVR_MZONE_CD
            , tmmda.ADDR
            , tmmda.ADDR_DTL
            , tmmda.LAST_DLVR_DATE
            , tmmda.TOT_DLVR_CNT
            , tmmda.USE_YN
            , tmmda.REG_DT
            , tmmda.REG_ID
            , tmmda.MOD_DT
            , tmmda.MOD_ID
            )
        VALUES (
            #{membrOrgnCd}
            , #{membrNo}
            , (SELECT NVL(MAX(DLVR_ADDR_SEQ),0)+1 FROM TB_MB_MEMBER_DLVR_ADDR WHERE MEMBR_ORGN_CD = #{membrOrgnCd} AND MEMBR_NO = #{membrNo})
            , #{regStoreCd}
            , #{dlvrLzoneCd}
            , #{dlvrMzoneCd}
            , SBPENC.E((SELECT A.DLVR_LZONE_NM|| ' ' ||B.DLVR_MZONE_NM FROM TB_MS_DELIVERY_LZONE A,  TB_MS_DELIVERY_MZONE B WHERE A.DLVR_LZONE_CD = B.DLVR_LZONE_CD AND A.STORE_CD = B.STORE_CD AND A.STORE_CD = #{regStoreCd} AND B.DLVR_LZONE_CD = #{dlvrLzoneCd} AND B.DLVR_MZONE_CD = #{dlvrMzoneCd}))
            , SBPENC.E(#{addrDtl})
            , #{lastDlvrDate}
            , #{totDlvrCnt}
            , #{useYn}
            , #{regDt}
            , #{regId}
            , #{modDt}
            , #{modId}
             )
    </insert>

    <!-- 배달정보 수정 -->
    <!--
        TABLE    : TB_MB_MEMBER_DLVR_ADDR
        COMMENTS : 배달정보 수정
    -->
    <update id="updateMemberDlvr" parameterType="registVO">
        /* RegistMapper.updateMemberDlvr */
        UPDATE TB_MB_MEMBER_DLVR_ADDR tmmda
           SET
          tmmda.DLVR_STORE_CD = #{reqStoreCd}
          , tmmda.DLVR_LZONE_CD = #{dlvrLzoneCd}
          , tmmda.DLVR_MZONE_CD = #{dlvrMzoneCd}
          , tmmda.ADDR = SBPENC.E(#{addr})
          , tmmda.ADDR_DTL = SBPENC.E(#{addrDtl})
          , tmmda.LAST_DLVR_DATE = #{lastDlvrDate}
          , tmmda.TOT_DLVR_CNT = #{totDlvrCnt}
          , tmmda.USE_YN = #{useYn}
          , tmmda.MOD_DT = #{modDt}
          , tmmda.MOD_ID = #{modId}
         WHERE tmmda.MEMBR_NO = #{membrNo}
           AND tmmda.MEMBR_ORGN_CD = #{membrOrgnCd}
           AND tmmda.DLVR_ADDR_SEQ = #{dlvrAddrSeq}
    </update>

    <!-- 배달전화정보 조회 -->
    <!--
        TABLE    : TB_MB_MEMBER, TB_MB_MEMBER_DLVR_TEL,
        COMMENTS : 배달전화정보
    -->
    <select id="getDlvrTelList" parameterType="registVO" resultType="DefaultMap">
 /* RegistMapper.getDlvrTelList */
       SELECT
            tmmdt.MEMBR_ORGN_CD
            , tmmdt.MEMBR_NO
            , tmmdt.DLVR_TEL_SEQ
            , tmmdt.DLVR_STORE_CD
            , SBPENC.D(tmmdt.TEL_NO) AS TEL_NO
            , tmmdt.SHORT_NO
            , tmmdt.USE_YN
            , TO_CHAR(TO_DATE(tmmdt.REG_DT, 'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') AS REG_DT
            , tmmdt.REG_ID
            , TO_CHAR(TO_DATE(tmmdt.MOD_DT, 'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') AS MOD_DT
            , tmmdt.MOD_ID
        FROM
        	TB_MB_MEMBER_DLVR_TEL tmmdt
        WHERE MEMBR_ORGN_CD = #{membrOrgnCd}
        AND MEMBR_NO = #{membrNo}
    </select>

    <!-- 배달전화정보 추가 -->
    <!--
        TABLE    : TB_MB_MEMBER_DLVR_TEL
        COMMENTS : 배달전화정보 등록
    -->
    <insert id="insertMembrDlvrTel" parameterType="registVO">
        /* RegistMapper.insertMembrDlvrTel */
        INSERT INTO TB_MB_MEMBER_DLVR_TEL tmmdt (
            tmmdt.MEMBR_ORGN_CD,
            tmmdt.MEMBR_NO,
            tmmdt.DLVR_TEL_SEQ,
            tmmdt.DLVR_STORE_CD,
            tmmdt.TEL_NO,
            tmmdt.SHORT_NO,
            tmmdt.USE_YN,
            tmmdt.REG_ID,
            tmmdt.REG_DT,
            tmmdt.MOD_ID,
            tmmdt.MOD_DT)
        VALUES (
            #{membrOrgnCd},
            #{membrNo},
            (SELECT NVL(MAX(DLVR_TEL_SEQ),0)+1 FROM TB_MB_MEMBER_DLVR_TEL WHERE MEMBR_ORGN_CD = #{membrOrgnCd} AND MEMBR_NO = #{membrNo}),
            #{regStoreCd},
            SBPENC.E(#{telNo}),
            #{shortNo},
            #{useYn},
            #{regId},
            #{regDt},
            #{modId},
            #{modDt}
            )
    </insert>

    <!-- 배달전화정보 수정 -->
    <!--
        TABLE    : TB_MB_MEMBER_DLVR_TEL
        COMMENTS : 배달전화정보 수정
    -->
    <update id="updateMemberDlvrTel" parameterType="registVO">
        /* RegistMapper.updateMemberDlvrTel */
        UPDATE TB_MB_MEMBER_DLVR_TEL tmmda
           SET
            DLVR_STORE_CD = #{regStoreCd}
            , TEL_NO = SBPENC.E(#{telNo})
            , SHORT_NO = #{shortNo}
            , USE_YN = #{useYn}
         WHERE tmmda.MEMBR_NO = #{membrNo}
           AND tmmda.MEMBR_ORGN_CD = #{membrOrgnCd}
           AND tmmda.DLVR_TEL_SEQ = #{dlvrTelSeq}
    </update>

    <!-- 배달구역 리스트 조회-->
    <!--
        TABLE    : TB_MS_DELIVERY_LZONE
    -->
    <select id="getMembrLzoneList" parameterType="registVO" resultType="DefaultMap">
        /* RegistMapper.getMembrLzoneList */
        SELECT tmdl.DLVR_LZONE_CD AS VALUE,
               tmdl.DLVR_LZONE_NM AS NAME
        FROM TB_MS_DELIVERY_LZONE tmdl
        WHERE tmdl.STORE_CD = #{regStoreCd}
        ORDER BY DLVR_LZONE_CD ASC
    </select>

    <!-- 배달구역 리스트 조회-->
    <!--
        TABLE    : TB_MS_DELIVERY_MZONE
    -->
    <select id="getDlvrMzoneList" parameterType="registVO" resultType="DefaultMap">
        /* RegistMapper.getDlvrMzoneList */
        SELECT tmdm.DLVR_MZONE_CD AS VALUE,
               tmdm.DLVR_MZONE_NM AS NAME
        FROM TB_MS_DELIVERY_MZONE tmdm
        WHERE tmdm.DLVR_LZONE_CD = #{dlvrLzoneCd}
        AND tmdm.STORE_CD = #{regStoreCd}
        ORDER BY DLVR_MZONE_CD ASC
    </select>

</mapper>
