<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    DayProdSaleStore.xml
    일별상품매출현황(매장별)
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2025.01.09     최초작성
-->
<mapper namespace="kr.co.solbipos.sale.status.dayProdSaleStore.service.impl.DayProdSaleStoreMapper">

    <!-- 일별상품매출현황(매장별) 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_PROD_SDSEL, TB_MS_STORE, TB_MS_PRODUCT
        PARAM    : dayProdSaleStoreVO
        COMMENTS : 일별상품매출현황(매장별) 리스트를 조회한다.
    -->
    <select id="getDayProdSaleStoreList" parameterType="dayProdSaleStoreVO" resultType="DefaultMap">
        /* DayProdSaleStoreMapper.getDayProdSaleStoreList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT A.HQ_OFFICE_CD
        ,      A.SALE_DATE
        ,      A.STORE_CD
        ,      A.STORE_NM
        ,      A.PROD_CLASS_CD
        ,      A.PROD_CLASS_NM
        ,      A.PROD_CD
        ,      A.PROD_NM
        ,      A.SEL_TYPE_FG
        ,      A.SIDE_PROD_CLASS_CD
        ,      A.SIDE_PROD_CLASS_NM
        ,      A.SIDE_PROD_CD
        ,      A.SIDE_PROD_NM
        ,      A.TOT_SALE_QTY
        ,      A.TOT_SALE_AMT
        ,      A.TOT_DC_AMT
        ,      A.REAL_SALE_AMT
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM
        (
            SELECT
                tms.HQ_OFFICE_CD,
                TO_CHAR(TO_DATE(tsdps.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE,
                tsdps.STORE_CD,
                tms.STORE_NM,
                tmp.PROD_CLASS_CD,
                FN_GET_PROD_CLASS_CD_NM_STR(tms.HQ_OFFICE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM,
                tsdps.SIDE_PROD_CD AS PROD_CD,
                tmp.PROD_NM,
                tsdps.SEL_TYPE_FG,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN tmps2.PROD_CLASS_CD ELSE '' END) AS SIDE_PROD_CLASS_CD,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN FN_GET_PROD_CLASS_CD_NM_STR(tms.HQ_OFFICE_CD, tmps2.PROD_CLASS_CD, 'NM_STR') ELSE '' END) AS SIDE_PROD_CLASS_NM,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN tsdps.PROD_CD END) AS SIDE_PROD_CD,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN 'ㅤ- ▶ ' || tmps2.PROD_NM ELSE '' END) AS SIDE_PROD_NM,
                SUM(tsdps.TOT_SALE_QTY) AS TOT_SALE_QTY,
                SUM(tsdps.TOT_SALE_AMT) AS TOT_SALE_AMT,
                SUM(tsdps.TOT_DC_AMT) AS TOT_DC_AMT,
                SUM(tsdps.REAL_SALE_AMT) AS REAL_SALE_AMT
            FROM
                TB_SL_DAILY_PROD_SDSEL tsdps,
                TB_MS_STORE tms,
                TB_MS_PRODUCT tmp,
                TB_MS_PRODUCT tmps2 -- 사이드
            WHERE 1=1
            AND tsdps.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tsdps.SALE_DATE BETWEEN #{startDate} AND #{endDate}
            <if test='storeCdQuery != null and storeCdQuery != ""'>
                AND tsdps.STORE_CD IN (${storeCdQuery})
            </if>

            AND tms.STORE_CD = tsdps.STORE_CD
            AND tmp.STORE_CD = tsdps.STORE_CD
            AND tmp.PROD_CD = tsdps.SIDE_PROD_CD
            AND tmps2.STORE_CD = tsdps.STORE_CD
            AND tmps2.PROD_CD = tsdps.PROD_CD
            GROUP BY tsdps.SALE_DATE, tms.HQ_OFFICE_CD, tsdps.STORE_CD, tms.STORE_NM
            ,        tmp.PROD_CLASS_CD, tsdps.SIDE_PROD_CD, tmp.PROD_NM
            ,        tsdps.SEL_TYPE_FG, tmps2.PROD_CLASS_CD, tsdps.PROD_CD, tmps2.PROD_NM
            ORDER BY tsdps.SALE_DATE, tsdps.STORE_CD, tsdps.SIDE_PROD_CD, (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN tsdps.PROD_CD END) DESC

        ) A
        WHERE   1=1
        <if test="prodClassCd != null and prodClassCd != ''">
            AND A.PROD_CLASS_CD IN (
                                        SELECT
                                        PROD_CLASS_CD
                                        FROM TB_MS_PRODUCT_CLASS
                                        WHERE STORE_CD = A.STORE_CD
                                        START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = A.STORE_CD
                                        CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = A.STORE_CD
                                    )
        </if>
        <if test='prodCd != null and prodCd != ""'>
            AND A.PROD_CD LIKE '%'||#{prodCd}||'%'
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND A.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test="sideProdClassCd != null and sideProdClassCd != ''">
            AND A.SIDE_PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = A.STORE_CD
                                            START WITH PROD_CLASS_CD = #{sideProdClassCd} AND STORE_CD = A.STORE_CD
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = A.STORE_CD
                                        )
        </if>
        <if test='sideProdCd != null and sideProdCd != ""'>
            AND A.SIDE_PROD_CD LIKE '%'||#{sideProdCd}||'%'
        </if>
        <if test='sideProdNm != null and sideProdNm != ""'>
            AND A.SIDE_PROD_NM LIKE '%'||#{sideProdNm}||'%'
        </if>
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 일별상품매출현황(매장별) 엑셀다운로드 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_PROD_SDSEL, TB_MS_STORE, TB_MS_PRODUCT
        PARAM    : dayProdSaleStoreVO
        COMMENTS : 일별상품매출현황(매장별) 리스트를 조회한다.
    -->
    <select id="getDayProdSaleStoreExcelList" parameterType="dayProdSaleStoreVO" resultType="DefaultMap">
        /* DayProdSaleStoreMapper.getDayProdSaleStoreExcelList */
        SELECT A.HQ_OFFICE_CD
        ,      A.SALE_DATE
        ,      A.STORE_CD
        ,      A.STORE_NM
        ,      A.PROD_CLASS_CD
        ,      A.PROD_CLASS_NM
        ,      A.PROD_CD
        ,      A.PROD_NM
        ,      A.SEL_TYPE_FG
        ,      A.SIDE_PROD_CLASS_CD
        ,      A.SIDE_PROD_CLASS_NM
        ,      A.SIDE_PROD_CD
        ,      A.SIDE_PROD_NM
        ,      A.TOT_SALE_QTY
        ,      A.TOT_SALE_AMT
        ,      A.TOT_DC_AMT
        ,      A.REAL_SALE_AMT
        FROM
        (
            SELECT
                tms.HQ_OFFICE_CD,
                TO_CHAR(TO_DATE(tsdps.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE,
                tsdps.STORE_CD,
                tms.STORE_NM,
                tmp.PROD_CLASS_CD,
                FN_GET_PROD_CLASS_CD_NM_STR(tms.HQ_OFFICE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM,
                tsdps.SIDE_PROD_CD AS PROD_CD,
                tmp.PROD_NM,
                tsdps.SEL_TYPE_FG,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN tmps2.PROD_CLASS_CD ELSE '' END) AS SIDE_PROD_CLASS_CD,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN FN_GET_PROD_CLASS_CD_NM_STR(tms.HQ_OFFICE_CD, tmps2.PROD_CLASS_CD, 'NM_STR') ELSE '' END) AS SIDE_PROD_CLASS_NM,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN tsdps.PROD_CD END) AS SIDE_PROD_CD,
                (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN 'ㅤ- ▶ ' || tmps2.PROD_NM ELSE '' END) AS SIDE_PROD_NM,
                SUM(tsdps.TOT_SALE_QTY) AS TOT_SALE_QTY,
                SUM(tsdps.TOT_SALE_AMT) AS TOT_SALE_AMT,
                SUM(tsdps.TOT_DC_AMT) AS TOT_DC_AMT,
                SUM(tsdps.REAL_SALE_AMT) AS REAL_SALE_AMT
            FROM
                TB_SL_DAILY_PROD_SDSEL tsdps,
                TB_MS_STORE tms,
                TB_MS_PRODUCT tmp,
                TB_MS_PRODUCT tmps2 -- 사이드
            WHERE 1=1
            AND tsdps.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tsdps.SALE_DATE BETWEEN #{startDate} AND #{endDate}
            <if test='storeCdQuery != null and storeCdQuery != ""'>
                AND tsdps.STORE_CD IN (${storeCdQuery})
            </if>

            AND tms.STORE_CD = tsdps.STORE_CD
            AND tmp.STORE_CD = tsdps.STORE_CD
            AND tmp.PROD_CD = tsdps.SIDE_PROD_CD
            AND tmps2.STORE_CD = tsdps.STORE_CD
            AND tmps2.PROD_CD = tsdps.PROD_CD
            GROUP BY tsdps.SALE_DATE, tms.HQ_OFFICE_CD, tsdps.STORE_CD, tms.STORE_NM
            ,        tmp.PROD_CLASS_CD, tsdps.SIDE_PROD_CD, tmp.PROD_NM
            ,        tsdps.SEL_TYPE_FG, tmps2.PROD_CLASS_CD, tsdps.PROD_CD, tmps2.PROD_NM
            ORDER BY tsdps.SALE_DATE, tsdps.STORE_CD, tsdps.SIDE_PROD_CD, (CASE tsdps.SEL_TYPE_FG WHEN 'S' THEN tsdps.PROD_CD END) DESC

        ) A
        WHERE   1=1
        <if test="prodClassCd != null and prodClassCd != ''">
            AND A.PROD_CLASS_CD IN (
                                        SELECT
                                        PROD_CLASS_CD
                                        FROM TB_MS_PRODUCT_CLASS
                                        WHERE STORE_CD = A.STORE_CD
                                        START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = A.STORE_CD
                                        CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = A.STORE_CD
                                    )
        </if>
        <if test='prodCd != null and prodCd != ""'>
            AND A.PROD_CD LIKE '%'||#{prodCd}||'%'
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND A.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test="sideProdClassCd != null and sideProdClassCd != ''">
            AND A.SIDE_PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = A.STORE_CD
                                            START WITH PROD_CLASS_CD = #{sideProdClassCd} AND STORE_CD = A.STORE_CD
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = A.STORE_CD
                                        )
        </if>
        <if test='sideProdCd != null and sideProdCd != ""'>
            AND A.SIDE_PROD_CD LIKE '%'||#{sideProdCd}||'%'
        </if>
        <if test='sideProdNm != null and sideProdNm != ""'>
            AND A.SIDE_PROD_NM LIKE '%'||#{sideProdNm}||'%'
        </if>
    </select>

    <!-- 일별상품매출현황(매장별) 상세 팝업 리스트 조회 -->
    <!--
        TABLE    : TB_SL_SALE_DTL, TB_MS_STORE, TB_MS_PRODUCT
        PARAM    : dayProdSaleStoreVO
        COMMENTS : 일별상품매출현황(매장별) 상세 팝업 리스트를 조회한다.
    -->
    <select id="getDayProdSaleStoreDtl" parameterType="dayProdSaleStoreVO" resultType="DefaultMap">
        /* DayProdSaleStoreMapper.getDayProdSaleStoreDtl */
        SELECT A.HQ_OFFICE_CD
        ,      A.STORE_CD
        ,      B.STORE_NM
        ,      TO_CHAR(TO_DATE(A.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
        ,      A.POS_NO
        ,      A.BILL_NO
        ,      A.PROD_CD
        ,      C.PROD_NM
        ,      A.SALE_QTY
        ,      A.SALE_AMT
        ,      A.DC_AMT
        ,      A.REAL_SALE_AMT
        ,      A.ERP_SEND_PROD_CD
        ,      A.ERP_SEND_YN
        FROM   TB_SL_SALE_DTL A
        ,      TB_MS_STORE B
        ,      TB_MS_PRODUCT C
        WHERE  A.HQ_OFFICE_CD = #{hqOfficeCd}
        AND    A.STORE_CD = #{storeCd}
        AND    A.SALE_DATE = #{saleDate}
        AND    A.PROD_CD = #{prodCd}
        <if test='selTypeFg != null and selTypeFg == "N"'>
            AND A.SIDE_P_PROD_CD IS NULL
            AND A.SIDE_P_DTL_NO IS NULL
        </if>
        <if test='selTypeFg != null and selTypeFg == "P"'>
            AND A.SIDE_P_PROD_CD IS NULL
            AND A.SIDE_P_DTL_NO IS NOT NULL
        </if>
        <if test='selTypeFg != null and selTypeFg == "S"'>
            AND A.SIDE_P_PROD_CD = #{sidePProdCd}
            AND A.SIDE_P_DTL_NO IS NOT NULL
        </if>
        AND    B.HQ_OFFICE_CD = A.HQ_OFFICE_CD
        AND    B.STORE_CD = A.STORE_CD
        AND    C.STORE_CD = A.STORE_CD
        AND    C.PROD_CD =  A.PROD_CD
    </select>
</mapper>