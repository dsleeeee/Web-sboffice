<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.com.popup.service.impl.SaleComPopupMapper">

    <!-- 매출공통팝업 - 테이블별 매출현황 팝업 -->
    <!--
        TABLE    : TB_SL_DAILY_TABLE, TB_SL_SALE_HDR, TB_SL_SALE_HDR_PAY, TB_SL_SALE_HDR_GUEST
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 테이블별 매출현황 팝업
    -->
    <select id="getTablePopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getTablePopList */
		SELECT TSSH.STORE_CD
            , TSSH.SALE_DATE 
		    , TSSH.POS_NO
			, TSSH.BILL_NO
		    , TO_CHAR(TO_DATE(TSSH.BILL_DT,'yyyy/mm/dd hh24:mi:ss'),'hh24:mi:ss') AS BILL_DT
		    , DECODE(TSSH.SALE_FG, '1', '판매', '-1', '반품') AS SALE_FG
		    , SUM(TSSH.TOT_SALE_AMT) AS TOT_SALE_AMT
		    , SUM(TSSH.REAL_SALE_AMT) AS REAL_SALE_AMT
		    , SUM(TSSH.NET_SALE_AMT) AS NET_SALE_AMT
		    , SUM(TSSH.TAX_SALE_AMT) AS TAX_SALE_AMT
		    , SUM(A.PAY_AMT) AS PAY_TOT
		    , CASE WHEN A.PAY_CD = '01' THEN SUM(A.PAY_AMT) ELSE 0 END AS PAY01
		    , CASE WHEN A.PAY_CD = '02' THEN SUM(A.PAY_AMT) ELSE 0 END AS PAY02
		    , CASE WHEN A.PAY_CD != '01' AND A.PAY_CD != '02' THEN SUM(A.PAY_AMT) ELSE 0 END AS PAY03
		    , SUM(A.GUEST_CNT_1 + A.GUEST_CNT_2 + A.GUEST_CNT_3 + A.GUEST_CNT_4) GUEST_TOT
		    , SUM(A.GUEST_CNT_1) AS GUEST_CNT_1
		    , SUM(A.GUEST_CNT_2) AS GUEST_CNT_2
		    , SUM(A.GUEST_CNT_3) AS GUEST_CNT_3
		    , SUM(A.GUEST_CNT_4) AS GUEST_CNT_4
		    , (SUM(TSSH.TOT_SALE_AMT) / SUM(A.GUEST_CNT_1 + A.GUEST_CNT_2 + A.GUEST_CNT_3 + A.GUEST_CNT_4)) GUEST_AMT
		FROM TB_SL_SALE_HDR TSSH
          	, (SELECT TSSHP.STORE_CD
                ,TSSHP.BILL_NO
                ,TSSHP.POS_NO
                ,TSSHP.PAY_AMT
                ,TSSHP.PAY_CD
                ,TSSHP.SALE_DATE
                ,TSSHG.GUEST_CNT_1
                ,TSSHG.GUEST_CNT_2
                ,TSSHG.GUEST_CNT_3
                ,TSSHG.GUEST_CNT_4
                ,TSSHG.TBL_CD
              FROM TB_SL_SALE_HDR_PAY TSSHP
               , TB_SL_SALE_HDR_GUEST TSSHG
              WHERE TSSHP.STORE_CD 	= TSSHG.STORE_CD
              AND TSSHP.BILL_NO 	= TSSHG.BILL_NO
              AND TSSHP.POS_NO		= TSSHG.POS_NO
              AND TSSHP.SALE_DATE   = TSSHG.SALE_DATE
            ) A
		WHERE TSSH.STORE_CD = A.STORE_CD(+)
      	AND TSSH.BILL_NO 	= A.BILL_NO(+)
		AND TSSH.POS_NO 	= A.POS_NO(+)
		AND TSSH.SALE_DATE  = A.SALE_DATE(+)
		AND TSSH.REAL_SALE_AMT  = A.PAY_AMT(+)
		<if test='storeCd != null and storeCd != ""'>
			AND TSSH.STORE_CD = #{storeCd}
		</if>
		<if test='arrStoreTbl != null and arrStoreTbl.length >= 0'>
            AND TSSH.STORE_CD||'||'||A.TBL_CD IN
            <foreach collection="arrStoreTbl" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSH.SALE_DATE 	>= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
			AND TSSH.SALE_DATE 	 <![CDATA[<=]]>  #{endDate}
		</if>
	  	<if test='saleDate != null and saleDate != ""'>
	  		AND TSSH.SALE_DATE =   #{saleDate}
	  	</if>
		<if test='tblCd != null and tblCd != ""'>
			AND TSSH.TBL_CD = #{tblCd}
		</if>
		<if test='saleDay != null and saleDay != ""'>
			AND TO_CHAR(TO_DATE(TSSH.SALE_DATE, 'YYYYMMDD'),'DY') =   #{saleDay}
		</if>
		<if test='saleYm != null and saleYm != ""'>
			AND TO_CHAR(TO_DATE(TSSH.SALE_DATE),'YYYYMM') =   #{saleYm}
		</if>
		GROUP BY TSSH.POS_NO,TSSH.BILL_NO,TSSH.BILL_DT, TSSH.SALE_FG, A.PAY_CD, TSSH.STORE_CD, TSSH.SALE_DATE
		ORDER BY TSSH.POS_NO, TSSH.BILL_NO ASC
    </select>

	<!-- 매출공통팝업 - 상품매출내역 팝업 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_SL_DAILY_CORNR_PROD
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 테이블별 매출현황 팝업
    -->
    <select id="getProdPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getProdPopList */
        SELECT A.LV1_NM,
               A.LV2_NM,
               A.LV3_NM,
               B.PROD_CD,
               A.PROD_NM,
               SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY,
               SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT             
      <choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (           
             			SELECT  A.LV1_CD,
                                A.LV2_CD,
                                A.LV2_NM,
                                A.LV3_CD,
                                A.LV3_NM,
                                A.LV1_NM,
                                A.LV2_NM_FULL,
                                A.LV3_NM_FULL,
                                B.PROD_CD,
                                B.PROD_NM
                         FROM(
		                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
		                                 A.PROD_CLASS_CD     AS LV2_CD,
		                                 A.PROD_CLASS_NM     AS LV2_NM,
		                                 B.PROD_CLASS_CD     AS LV3_CD,
		                                 B.PROD_CLASS_NM     AS LV3_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
		                         FROM    (
		                                     SELECT  HQ_OFFICE_CD,
		                                           P_PROD_CLASS_CD,
		                                           PROD_CLASS_CD,
		                                           PROD_CLASS_NM
		                                     FROM    TB_HQ_PRODUCT_CLASS
		                                     WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                     AND     P_PROD_CLASS_CD IN (
		                                                                    SELECT  PROD_CLASS_CD
		                                                                    FROM    TB_HQ_PRODUCT_CLASS
		                                                                    WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                                    AND     P_PROD_CLASS_CD = '00000'
		                                                                 )
		                                 )                      A,
		                                 TB_HQ_PRODUCT_CLASS    B
		                         WHERE   B.P_PROD_CLASS_CD IN    (
		                                                             SELECT  PROD_CLASS_CD
		                                                             FROM    TB_HQ_PRODUCT_CLASS
		                                                             WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                             AND     P_PROD_CLASS_CD IN (
		                                                                                      SELECT  PROD_CLASS_CD
		                                                                                            FROM    TB_HQ_PRODUCT_CLASS
		                                                                                            WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                                                            AND     P_PROD_CLASS_CD = '00000'
		                                                                                         )
		                                                         )
		                         AND     A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
		                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
		                     )                   A,
		                     TB_HQ_PRODUCT       B
		                     WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
		                     AND     B.PROD_CLASS_CD = A.LV3_CD
					  	) A,
                   		TB_SL_DAILY_CORNR_PROD    B
             WHERE   B.PROD_CD       = A.PROD_CD(+)
             AND     B.HQ_OFFICE_CD  = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
				AND B.STORE_CD	IN
                    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                   					#{item}
               		</foreach>
			</if>
			<if test='startDate != null and startDate != ""'>
				AND B.SALE_DATE	>= REPLACE(#{startDate}, '-', '')
			</if>
			<if test='endDate != null and endDate != ""'>
				AND B.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
			</if>
			<if test='saleDate != null and saleDate != ""'>
				AND B.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
			</if>
			<if test='cornrCd != null and cornrCd != ""'>
                AND B.CORNR_CD  IN
                    <foreach collection="arrCornrCd" item="item" open="(" close=")" separator=",">
                                    #{item}
                    </foreach>
            </if>
			<if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND B.STORE_CD||'||'||B.CORNR_CD  IN
                    <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                                    #{item}
                    </foreach>
            </if>
            <if test='prodCd != null and prodCd != ""'>
				AND B.PROD_CD = #{prodCd}
			</if>
			<if test='saleMonth != null and saleMonth != ""'>
				AND TO_CHAR(TO_DATE(B.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
			</if>
			<if test='yoil != null and yoil != ""'>
				AND TO_CHAR(TO_DATE(B.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
			</if>
			<if test='saleHour != null and saleHour != ""'>
				AND B.SALE_HOUR = #{saleHour}
			</if>
         </when>
         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
             FROM    (
             			 SELECT  A.LV1_CD,
                                A.LV2_CD,
                                A.LV2_NM,
                                A.LV3_CD,
                                A.LV3_NM,
                                A.LV1_NM,
                                A.LV2_NM_FULL,
                                A.LV3_NM_FULL,
                                B.PROD_CD,
                                B.PROD_NM
                         FROM(
		                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
		                                 A.PROD_CLASS_CD     AS LV2_CD,
		                                 A.PROD_CLASS_NM     AS LV2_NM,
		                                 B.PROD_CLASS_CD     AS LV3_CD,
		                                 B.PROD_CLASS_NM     AS LV3_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
		                         FROM    (
		                                     SELECT  STORE_CD,
		                                           P_PROD_CLASS_CD,
		                                           PROD_CLASS_CD,
		                                           PROD_CLASS_NM
		                                     FROM    TB_MS_PRODUCT_CLASS
		                                     WHERE   STORE_CD        = #{storeCd}
		                                     AND     P_PROD_CLASS_CD IN (
		                                                                    SELECT  PROD_CLASS_CD
		                                                                    FROM    TB_MS_PRODUCT_CLASS
		                                                                    WHERE   STORE_CD        = #{storeCd}
		                                                                    AND     P_PROD_CLASS_CD = '00000'
		                                                                 )
		                                 )                      A,
		                                 TB_MS_PRODUCT_CLASS    B
		                         WHERE   B.P_PROD_CLASS_CD IN    (
		                                                             SELECT  PROD_CLASS_CD
		                                                             FROM    TB_MS_PRODUCT_CLASS
		                                                             WHERE   STORE_CD        = #{storeCd}
		                                                             AND     P_PROD_CLASS_CD IN (
		                                                                                      SELECT  PROD_CLASS_CD
		                                                                                            FROM    TB_MS_PRODUCT_CLASS
		                                                                                            WHERE   STORE_CD        = #{storeCd}
		                                                                                            AND     P_PROD_CLASS_CD = '00000'
		                                                                                         )
		                                                         )
		                         AND     A.STORE_CD      = B.STORE_CD
		                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
		                     )                   A,
		                     TB_MS_PRODUCT       B
		                     WHERE   B.STORE_CD      = #{storeCd}
		                     AND     B.PROD_CLASS_CD = A.LV3_CD
		                 ) A,
		                 TB_SL_DAILY_CORNR_PROD    B
             WHERE   B.PROD_CD       = A.PROD_CD(+)
             AND     B.HQ_OFFICE_CD  = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
				AND B.STORE_CD	IN
                    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                   					#{item}
               		</foreach>
			</if>
			<if test='startDate != null and startDate != ""'>
				AND B.SALE_DATE	>= REPLACE(#{startDate}, '-', '')
			</if>
			<if test='endDate != null and endDate != ""'>
				AND B.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
			</if>
			<if test='saleDate != null and saleDate != ""'>
				AND B.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
			</if>
			<if test='cornrCd != null and cornrCd != ""'>
                AND B.CORNR_CD  IN
                    <foreach collection="arrCornrCd" item="item" open="(" close=")" separator=",">
                                    #{item}
                    </foreach>
            </if>
            <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND B.STORE_CD||'||'||B.CORNR_CD  IN
                    <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                                    #{item}
                    </foreach>
            </if>
            <if test='prodCd != null and prodCd != ""'>
				AND B.PROD_CD = #{prodCd}
			</if>
			<if test='saleMonth != null and saleMonth != ""'>
				AND TO_CHAR(TO_DATE(B.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
			</if>
			<if test='yoil != null and yoil != ""'>
				AND TO_CHAR(TO_DATE(B.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
			</if>
			<if test='saleHour != null and saleHour != ""'>
				AND B.SALE_HOUR = #{saleHour}
			</if>
         </when>
      </choose>
       GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
                   A.LV2_NM_FULL,
                   A.LV3_NM_FULL,
                   B.PROD_CD,
                   A.PROD_NM
       ORDER BY B.PROD_CD
    </select>
	
	<!-- 매출공통팝업 - 상품매출내역 팝업 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_SL_DAILY_POS_PROD
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 포스별 매출현황 팝업
    -->
    <select id="getPosPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getProdPopList */
        SELECT  A.LV1_NM,
               A.LV2_NM,
               A.LV3_NM,
               C.PROD_CD,
               A.PROD_NM,
               SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY,
               SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
      <choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (
            			SELECT  A.LV1_CD,
                                A.LV2_CD,
                                A.LV2_NM,
                                A.LV3_CD,
                                A.LV3_NM,
                                A.LV1_NM,
                                A.LV2_NM_FULL,
                                A.LV3_NM_FULL,
                                B.PROD_CD,
                                B.PROD_NM
                         FROM(
		                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
		                                 A.PROD_CLASS_CD     AS LV2_CD,
		                                 A.PROD_CLASS_NM     AS LV2_NM,
		                                 B.PROD_CLASS_CD     AS LV3_CD,
		                                 B.PROD_CLASS_NM     AS LV3_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
		                         FROM    (
		                                     SELECT  HQ_OFFICE_CD,
		                                           P_PROD_CLASS_CD,
		                                           PROD_CLASS_CD,
		                                           PROD_CLASS_NM
		                                     FROM    TB_HQ_PRODUCT_CLASS
		                                     WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                     AND     P_PROD_CLASS_CD IN (
		                                                                    SELECT  PROD_CLASS_CD
		                                                                    FROM    TB_HQ_PRODUCT_CLASS
		                                                                    WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                                    AND     P_PROD_CLASS_CD = '00000'
		                                                                 )
		                                 )                      A,
		                                 TB_HQ_PRODUCT_CLASS    B
		                         WHERE   B.P_PROD_CLASS_CD IN    (
		                                                             SELECT  PROD_CLASS_CD
		                                                             FROM    TB_HQ_PRODUCT_CLASS
		                                                             WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                             AND     P_PROD_CLASS_CD IN (
		                                                                                      SELECT  PROD_CLASS_CD
		                                                                                            FROM    TB_HQ_PRODUCT_CLASS
		                                                                                            WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                                                            AND     P_PROD_CLASS_CD = '00000'
		                                                                                         )
		                                                         )
		                         AND     A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
		                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
		                     )                   A,
		                     TB_HQ_PRODUCT       B
		                     WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
		                     AND     B.PROD_CLASS_CD = A.LV3_CD
		             ) A,
                     TB_SL_DAILY_POS_PROD    C
             WHERE   C.PROD_CD       = A.PROD_CD(+)
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
				AND C.STORE_CD	IN
                    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                   					#{item}
               		</foreach>
			</if>
			<if test='startDate != null and startDate != ""'>
				AND C.SALE_DATE	>= REPLACE(#{startDate}, '-', '')
			</if>
			<if test='endDate != null and endDate != ""'>
				AND C.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
			</if>
			<if test='saleDate != null and saleDate != ""'>
				AND C.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
			</if>
            <if test='prodCd != null and prodCd != ""'>
				AND C.PROD_CD = #{prodCd}
			</if>
			<if test='saleMonth != null and saleMonth != ""'>
				AND TO_CHAR(TO_DATE(C.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
			</if>
			<if test='yoil != null and yoil != ""'>
				AND TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
			</if>
			<if test='saleHour != null and saleHour != ""'>
				AND C.SALE_HOUR = #{saleHour}
			</if>
			<if test='posNo != null and posNo != ""'>
				AND C.POS_NO = #{posNo}
			</if>
         </when>
         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
             FROM    (
             			 SELECT  A.LV1_CD,
                                A.LV2_CD,
                                A.LV2_NM,
                                A.LV3_CD,
                                A.LV3_NM,
                                A.LV1_NM,
                                A.LV2_NM_FULL,
                                A.LV3_NM_FULL,
                                B.PROD_CD,
                                B.PROD_NM
                         FROM(
		                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
		                                 A.PROD_CLASS_CD     AS LV2_CD,
		                                 A.PROD_CLASS_NM     AS LV2_NM,
		                                 B.PROD_CLASS_CD     AS LV3_CD,
		                                 B.PROD_CLASS_NM     AS LV3_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
		                         FROM    (
		                                     SELECT  STORE_CD,
		                                           P_PROD_CLASS_CD,
		                                           PROD_CLASS_CD,
		                                           PROD_CLASS_NM
		                                     FROM    TB_MS_PRODUCT_CLASS
		                                     WHERE   STORE_CD        = #{storeCd}
		                                     AND     P_PROD_CLASS_CD IN (
		                                                                    SELECT  PROD_CLASS_CD
		                                                                    FROM    TB_MS_PRODUCT_CLASS
		                                                                    WHERE   STORE_CD        = #{storeCd}
		                                                                    AND     P_PROD_CLASS_CD = '00000'
		                                                                 )
		                                 )                      A,
		                                 TB_MS_PRODUCT_CLASS    B
		                         WHERE   B.P_PROD_CLASS_CD IN    (
		                                                             SELECT  PROD_CLASS_CD
		                                                             FROM    TB_MS_PRODUCT_CLASS
		                                                             WHERE   STORE_CD        = #{storeCd}
		                                                             AND     P_PROD_CLASS_CD IN (
		                                                                                      SELECT  PROD_CLASS_CD
		                                                                                            FROM    TB_MS_PRODUCT_CLASS
		                                                                                            WHERE   STORE_CD        = #{storeCd}
		                                                                                            AND     P_PROD_CLASS_CD = '00000'
		                                                                                         )
		                                                         )
		                         AND     A.STORE_CD      = B.STORE_CD
		                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
		                     )                   A,
		                     TB_MS_PRODUCT       B
		                     WHERE   B.STORE_CD      = #{storeCd}
		                     AND     B.PROD_CLASS_CD = A.LV3_CD
		             ) A,
                     TB_SL_DAILY_POS_PROD    C
             WHERE   C.PROD_CD       = A.PROD_CD(+)
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
				AND C.STORE_CD	IN
                    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                   					#{item}
               		</foreach>
			</if>
			<if test='startDate != null and startDate != ""'>
				AND C.SALE_DATE	>= REPLACE(#{startDate}, '-', '')
			</if>
			<if test='endDate != null and endDate != ""'>
				AND C.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
			</if>
			<if test='saleDate != null and saleDate != ""'>
				AND C.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
			</if>
            <if test='prodCd != null and prodCd != ""'>
				AND C.PROD_CD = #{prodCd}
			</if>
			<if test='saleMonth != null and saleMonth != ""'>
				AND TO_CHAR(TO_DATE(C.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
			</if>
			<if test='yoil != null and yoil != ""'>
				AND TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
			</if>
			<if test='saleHour != null and saleHour != ""'>
				AND C.SALE_HOUR = #{saleHour}
			</if>
			<if test='posNo != null and posNo != ""'>
				AND C.POS_NO = #{posNo}
			</if>
         </when>
      </choose>
       GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
                   A.LV2_NM_FULL,
                   A.LV3_NM_FULL,
                   C.PROD_CD,
                   A.PROD_NM
       ORDER BY C.PROD_CD
    </select>
	
    <!-- 매출공통팝업 - 상품매출내역 팝업 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_SL_DAILY_POS_PROD
        PARAM    : getPosHourPopList
        COMMENTS : 매출공통팝업 - 포스별(시간대별) 매출현황 팝업
    -->
    <select id="getPosHourPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getProdPopList */
	     SELECT    B.STORE_NM
	               ,TO_CHAR(TO_DATE(A.SALE_DATE), 'YYYY-MM-DD') AS SALE_DATE
	               ,SUM(A.SALE_CNT)     AS TOT_SALE_QTY
	               ,SUM(A.REAL_SALE_AMT)    AS REAL_SALE_AMT
	     FROM    TB_SL_DAILY_POS_TIME A
	               , TB_MS_STORE B
         WHERE A.STORE_CD = B.STORE_CD
         AND   A.HQ_OFFICE_CD  = #{hqOfficeCd}
		<if test='storeCd != null and storeCd != ""'>
			AND A.STORE_CD	IN
                   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                  					#{item}
              		</foreach>
	 	</if>
		<if test='startDate != null and startDate != ""'>
			AND A.SALE_DATE	>= REPLACE(#{startDate}, '-', '')
		</if>
		<if test='endDate != null and endDate != ""'>
			AND A.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
		</if>
		<if test='saleHour != null and saleHour != ""'>
			AND A.SALE_HOUR = #{saleHour}
		</if>
		<if test='posNo != null and posNo != ""'>
			AND A.POS_NO = #{posNo}
		</if>   
		GROUP BY A.SALE_DATE, B.STORE_NM
    </select>
	
	<!-- 매출공통팝업 - 상품매출내역 팝업(판매자별) -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_SL_DAILY_CORNR_PROD
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 판매자별 매출현황 팝업
    -->
    <select id="getEmpPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getEmpPopList */
        SELECT  A.LV1_NM,
               A.LV2_NM,
               A.LV3_NM,
               C.PROD_CD,
               A.PROD_NM,
               SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY,
               SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
       <choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (
             			SELECT  A.LV1_CD,
                                A.LV2_CD,
                                A.LV2_NM,
                                A.LV3_CD,
                                A.LV3_NM,
                                A.LV1_NM,
                                A.LV2_NM_FULL,
                                A.LV3_NM_FULL,
                                B.PROD_CD,
                                B.PROD_NM
                         FROM(
		                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
		                                 A.PROD_CLASS_CD     AS LV2_CD,
		                                 A.PROD_CLASS_NM     AS LV2_NM,
		                                 B.PROD_CLASS_CD     AS LV3_CD,
		                                 B.PROD_CLASS_NM     AS LV3_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
		                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
		                         FROM    (
		                                     SELECT  HQ_OFFICE_CD,
		                                           P_PROD_CLASS_CD,
		                                           PROD_CLASS_CD,
		                                           PROD_CLASS_NM
		                                     FROM    TB_HQ_PRODUCT_CLASS
		                                     WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                     AND     P_PROD_CLASS_CD IN (
		                                                                    SELECT  PROD_CLASS_CD
		                                                                    FROM    TB_HQ_PRODUCT_CLASS
		                                                                    WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                                    AND     P_PROD_CLASS_CD = '00000'
		                                                                 )
		                                 )                      A,
		                                 TB_HQ_PRODUCT_CLASS    B
		                         WHERE   B.P_PROD_CLASS_CD IN    (
		                                                             SELECT  PROD_CLASS_CD
		                                                             FROM    TB_HQ_PRODUCT_CLASS
		                                                             WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                             AND     P_PROD_CLASS_CD IN (
		                                                                                      SELECT  PROD_CLASS_CD
		                                                                                            FROM    TB_HQ_PRODUCT_CLASS
		                                                                                            WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
		                                                                                            AND     P_PROD_CLASS_CD = '00000'
		                                                                                         )
		                                                         )
		                         AND     A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
		                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
		                     )                   A,
		                     TB_HQ_PRODUCT       B
		                     WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
		                     AND     B.PROD_CLASS_CD = A.LV3_CD
		             ) A,
                     (
				      SELECT TSSD.STORE_CD
				           , TSSD.PROD_CD
			               , TSSD.SALE_DATE
			               , HQ_OFFICE_CD
				           , SUM(TSSD.SALE_QTY) AS TOT_SALE_QTY
				           , SUM(TSSD.REAL_SALE_AMT) AS REAL_SALE_AMT
				        FROM TB_SL_SALE_DTL TSSD
				        WHERE TSSD.STORE_CD IN
		        	    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                        	#{item}
                    	</foreach>
						<if test='startDate != null and startDate != ""'>
							AND TSSD.SALE_DATE	>=   REPLACE(#{startDate}, '-', '')
						</if>
						<if test='endDate != null and endDate != ""'>
							AND TSSD.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
					    </if>
					    <if test='saleDate != null and saleDate != ""'>
							AND TSSD.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
						</if>
						<if test='saleMonth != null and saleMonth != ""'>
							AND TO_CHAR(TO_DATE(TSSD.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
						</if>
						<if test='yoil != null and yoil != ""'>
							AND TO_CHAR(TO_DATE(TSSD.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
						</if>
				         AND EXISTS (SELECT *
				                      FROM TB_SL_SALE_HDR Z
				                     WHERE Z.HQ_OFFICE_CD = TSSD.HQ_OFFICE_CD
				                       	AND Z.HQ_BRAND_CD = TSSD.HQ_BRAND_CD
				                       	AND Z.STORE_CD = TSSD.STORE_CD
				                       	AND Z.SALE_DATE = TSSD.SALE_DATE
				                       	AND Z.POS_NO = TSSD.POS_NO
				                       	AND Z.BILL_NO = TSSD.BILL_NO
				                       	AND Z.STORE_CD IN
				                       	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
		                        				#{item}
		                    			</foreach>
								        <if test='startDate != null and startDate != ""'>
											AND Z.SALE_DATE	>=  REPLACE(#{startDate}, '-', '')
										</if>
										<if test='endDate != null and endDate != ""'>
											AND Z.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
									    </if>
									    <if test='saleDate != null and saleDate != ""'>
											AND Z.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
										</if>
										<if test='saleMonth != null and saleMonth != ""'>
											AND TO_CHAR(TO_DATE(Z.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
										</if>
										<if test='empNo != null and empNo != ""'>
											AND Z.EMP_NO = #{empNo}
										</if>
										<if test='yoil != null and yoil != ""'>
											AND TO_CHAR(TO_DATE(Z.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
										</if>
										<if test='posNo != null and posNo != ""'>
											AND Z.POS_NO = #{posNo}
										</if>
										<if test='billNo != null and billNo != ""'>
		                                    AND Z.BILL_NO = #{billNo}
		                                </if>
				                 )
				       GROUP BY TSSD.STORE_CD, TSSD.PROD_CD, TSSD.SALE_DATE, HQ_OFFICE_CD
				       ) C
             WHERE   C.PROD_CD       = A.PROD_CD(+)
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
         </when>
         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
             FROM    (
              			 SELECT  A.LV1_CD,
                                A.LV2_CD,
                                A.LV2_NM,
                                A.LV3_CD,
                                A.LV3_NM,
                                A.LV1_NM,
                                A.LV2_NM_FULL,
                                A.LV3_NM_FULL,
                                B.PROD_CD,
                                B.PROD_NM
                         FROM(
		                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
		                                 A.PROD_CLASS_CD     AS LV2_CD,
		                                 A.PROD_CLASS_NM     AS LV2_NM,
		                                 B.PROD_CLASS_CD     AS LV3_CD,
		                                 B.PROD_CLASS_NM     AS LV3_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
		                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
		                         FROM    (
		                                     SELECT  STORE_CD,
		                                           P_PROD_CLASS_CD,
		                                           PROD_CLASS_CD,
		                                           PROD_CLASS_NM
		                                     FROM    TB_MS_PRODUCT_CLASS
		                                     WHERE   STORE_CD        = #{storeCd}
		                                     AND     P_PROD_CLASS_CD IN (
		                                                                    SELECT  PROD_CLASS_CD
		                                                                    FROM    TB_MS_PRODUCT_CLASS
		                                                                    WHERE   STORE_CD        = #{storeCd}
		                                                                    AND     P_PROD_CLASS_CD = '00000'
		                                                                 )
		                                 )                      A,
		                                 TB_MS_PRODUCT_CLASS    B
		                         WHERE   B.P_PROD_CLASS_CD IN    (
		                                                             SELECT  PROD_CLASS_CD
		                                                             FROM    TB_MS_PRODUCT_CLASS
		                                                             WHERE   STORE_CD        = #{storeCd}
		                                                             AND     P_PROD_CLASS_CD IN (
		                                                                                      SELECT  PROD_CLASS_CD
		                                                                                            FROM    TB_MS_PRODUCT_CLASS
		                                                                                            WHERE   STORE_CD        = #{storeCd}
		                                                                                            AND     P_PROD_CLASS_CD = '00000'
		                                                                                         )
		                                                         )
		                         AND     A.STORE_CD      = B.STORE_CD
		                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
		                     )                   A,
		                     TB_MS_PRODUCT       B
		                     WHERE   B.STORE_CD      = #{storeCd}
		                     AND     B.PROD_CLASS_CD = A.LV3_CD
		             ) A,
                     TB_MS_PRODUCT       B,
                                          (
				      SELECT TSSD.STORE_CD
				           , TSSD.PROD_CD
			               , TSSD.SALE_DATE
			               , HQ_OFFICE_CD
				           , SUM(TSSD.SALE_QTY) AS TOT_SALE_QTY
				           , SUM(TSSD.REAL_SALE_AMT) AS REAL_SALE_AMT
				        FROM TB_SL_SALE_DTL TSSD
				        WHERE TSSD.STORE_CD IN
		        	    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                        	#{item}
                    	</foreach>
						<if test='startDate != null and startDate != ""'>
							AND TSSD.SALE_DATE	>=   REPLACE(#{startDate}, '-', '')
						</if>
						<if test='endDate != null and endDate != ""'>
							AND TSSD.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
					    </if>
					    <if test='saleDate != null and saleDate != ""'>
							AND TSSD.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
						</if>
						<if test='saleMonth != null and saleMonth != ""'>
							AND TO_CHAR(TO_DATE(TSSD.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
						</if>
						<if test='yoil != null and yoil != ""'>
							AND TO_CHAR(TO_DATE(TSSD.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
						</if>
				         AND EXISTS (SELECT *
				                      FROM TB_SL_SALE_HDR Z
				                     WHERE Z.HQ_OFFICE_CD = TSSD.HQ_OFFICE_CD
				                       	AND Z.HQ_BRAND_CD = TSSD.HQ_BRAND_CD
				                       	AND Z.STORE_CD = TSSD.STORE_CD
				                       	AND Z.SALE_DATE = TSSD.SALE_DATE
				                       	AND Z.POS_NO = TSSD.POS_NO
				                       	AND Z.BILL_NO = TSSD.BILL_NO
				                       	AND Z.STORE_CD IN
				                       	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
		                        				#{item}
		                    			</foreach>
								        <if test='startDate != null and startDate != ""'>
											AND Z.SALE_DATE	>=  REPLACE(#{startDate}, '-', '')
										</if>
										<if test='endDate != null and endDate != ""'>
											AND Z.SALE_DATE	<![CDATA[ <= ]]> REPLACE(#{endDate}, '-', '')
									    </if>
									    <if test='saleDate != null and saleDate != ""'>
											AND Z.SALE_DATE	=  REPLACE(#{saleDate}, '-', '')
										</if>
										<if test='saleMonth != null and saleMonth != ""'>
											AND TO_CHAR(TO_DATE(Z.SALE_DATE), 'YYYYMM') = REPLACE(#{saleMonth}, '-', '')
										</if>
										<if test='empNo != null and empNo != ""'>
											AND Z.EMP_NO = #{empNo}
										</if>
										<if test='yoil != null and yoil != ""'>
											AND TO_CHAR(TO_DATE(Z.SALE_DATE, 'YYYYMMDD'),'DY') = #{yoil}
										</if>
										<if test='posNo != null and posNo != ""'>
											AND Z.POS_NO = #{posNo}
										</if>
										<if test='billNo != null and billNo != ""'>
		                                    AND Z.BILL_NO = #{billNo}
		                                </if>
				                 )
				       GROUP BY TSSD.STORE_CD, TSSD.PROD_CD, TSSD.SALE_DATE, HQ_OFFICE_CD
				       ) C
             WHERE   C.PROD_CD       = A.PROD_CD(+)
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
         </when>
      </choose>
       GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
                   A.LV2_NM_FULL,
                   A.LV3_NM_FULL,
                   C.PROD_CD,
                   A.PROD_NM
       ORDER BY C.PROD_CD
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(카드) -->
    <!--
        TABLE    : TB_SL_SALE_PAY_CARD
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(카드)
    -->
    <select id="getCardApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getCardApprPopList */
		SELECT TO_CHAR(TO_DATE(TSSPC.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
			, TSSPC.POS_NO
			, DECODE(TSSPC.SALE_FG, 1, '승인', -1, '취소') AS APPR_GUBUN
			, DECODE(TSSPC.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
			, TSSPC.ACQUIRE_NM
			, TSSPC.CARD_NO
			, TSSPC.SALE_AMT
			, TSSPC.TIP_AMT
			, TSSPC.VAT_AMT
			, DECODE(TSSPC.INST_CNT, 0 , '일시불', '할부') AS INST_CNT_NM
			, TSSPC.INST_CNT
			, TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
			, TSSPC.APPR_NO
			, TSSPC.APPR_AMT
		FROM TB_SL_SALE_PAY_CARD TSSPC
		WHERE 1=1
		<if test='storeCd != null and storeCd != ""'>
            AND TSSPC.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TSSPC.STORE_CD||'||'||TSSPC.CORNR_CD  IN
	        <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
	                        #{item}
	        </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TSSPC.STORE_CD||'||'||TSSPC.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TSSPC.APPR_PROC_FG = #{apprProcFg}
        </if>
        <if test='saleFg != null and saleFg != ""'>
            AND TSSPC.SALE_FG = #{saleFg}
        </if>
		<if test='acquireCd != null and acquireCd != ""'>
            AND TSSPC.ACQUIRE_CD = #{acquireCd}
        </if>
        <if test='acquireNm != null and acquireNm != ""'>
            AND TSSPC.ACQUIRE_NM = #{acquireNm}
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSPC.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
			AND TSSPC.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(현금) -->
    <!--
        TABLE    : TB_SL_SALE_PAY_CASH
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(현금)
    -->
    <select id="getCashApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getCashApprPopList */
		SELECT TO_CHAR(TO_DATE(TSSPC.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
			,TSSPC.POS_NO
			,TSSPC.REG_SEQ
			,DECODE(TSSPC.SALE_FG, 1, '승인', -1, '취소') AS SALE_FG
			,TSSPC.SALE_AMT
			,TSSPC.TIP_AMT
			,TSSPC.VAT_AMT
			,CASH_BILL_CARD_NO
			,DECODE(TSSPC.CASH_BILL_CARD_TYPE_FG, 1, '소득공제', 2, '지출증빙', 3, '자진발급') AS CASH_BILL_CARD_TYPE_FG
			,TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
			,TSSPC.APPR_NO
			,TSSPC.SALE_AMT AS APPR_AMT
		FROM TB_SL_SALE_PAY_CASH TSSPC
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TSSPC.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TSSPC.STORE_CD||'||'||TSSPC.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TSSPC.STORE_CD||'||'||TSSPC.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TSSPC.APPR_PROC_FG = #{apprProcFg}
        </if>
        <if test='apprProcFg == null and apprProcFg == ""'>
            AND TSSPC.APPR_PROC_FG IN ('1','2')
        </if>
        <if test='saleFg != null and saleFg != ""'>
            AND TSSPC.SALE_FG = #{saleFg}
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSPC.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
			AND TSSPC.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(PAYCO) -->
    <!--
        TABLE    : TB_SL_SALE_PAY_PAYCO
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(PAYCO)
    -->
    <select id="getPaycoApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getPaycoApprPopList */
        SELECT TO_CHAR(TO_DATE(TSSPP.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
			,TSSPP.POS_NO
			,DECODE(TSSPP.SALE_YN, 'Y', '승인', 'N',  '취소') AS APPR_GUBUN
			,DECODE(TSSPP.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
			,TSSPP.APPR_COMPANY_NM
			,TSSPP.APPR_AMT AS SALE_AMT
			,TSSPP.TIP_AMT
			,TSSPP.VAT_AMT
			,DECODE(TSSPP.INST_CNT, 0 , '일시불', '할부') AS INST_CNT_NM
			,TSSPP.INST_CNT
			,TO_CHAR(TO_DATE(TSSPP.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
			,TSSPP.APPR_NO
			,TSSPP.APPR_AMT
		FROM TB_SL_SALE_PAY_PAYCO TSSPP
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TSSPP.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TSSPP.STORE_CD||'||'||TSSPP.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TSSPP.STORE_CD||'||'||TSSPP.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TSSPP.APPR_PROC_FG = #{apprProcFg}
        </if>
         <if test='saleFg != null and saleFg != ""'>
            AND TSSPP.SALE_YN = DECODE(#{saleFg},'1','Y','-1','N')
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSPP.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
			AND TSSPP.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(MPAY) -->
    <!--
        TABLE    : TB_SL_SALE_PAY_MPAY
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(MPAY)
    -->
    <select id="getMpayApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getMpayApprPopList */
		SELECT TO_CHAR(TO_DATE(TSSPM.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
			,TSSPM.POS_NO
			,DECODE(TSSPM.SALE_YN, 'Y', '승인', 'N',  '취소') AS APPR_GUBUN
			,DECODE(TSSPM.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
			,TSSPM.MPAY_CD
			,TSSPM.COUPN_NM
			,TSSPM.COUPN_AMT
			,TSSPM.POINT_NM
			,TSSPM.POINT_AMT
			,TO_CHAR(TO_DATE(TSSPM.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
			,TSSPM.APPR_NO
			,TSSPM.SALE_AMT AS APPR_AMT
		FROM TB_SL_SALE_PAY_MPAY TSSPM
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TSSPM.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TSSPM.STORE_CD||'||'||TSSPM.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TSSPM.STORE_CD||'||'||TSSPM.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TSSPM.APPR_PROC_FG = #{apprProcFg}
        </if>
         <if test='saleFg != null and saleFg != ""'>
            AND TSSPM.SALE_YN = DECODE(#{saleFg},'1','Y','-1','N')
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSPM.SALE_DATE >= #{startDate}
		</if>
		<if test='mpayCd != null and mpayCd != ""'>
            AND TSSPM.MPAY_CD >= #{mpayCd}
        </if>
		<if test='endDate != null and endDate != ""'>
			AND TSSPM.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(MCOUPON) -->
    <!--
        TABLE    : TB_SL_SALE_PAY_COUPN
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(MCOUPON)
    -->
    <select id="getMcouponApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getMcouponApprPopList */
		SELECT TO_CHAR(TO_DATE(TSSPM.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
			,TSSPM.POS_NO
			,DECODE(TSSPM.SALE_FG, 1, '승인', -1, '취소') AS SALE_FG
			,TSSPM.SALE_AMT
			,TSSPM.TIP_AMT
			,TSSPM.VAT_AMT
			,DECODE(TSSPM.MCOUPN_TYPE_FG, 1 , '교환권', 2, '금액권') AS MCOUPN_TYPE_FG
			,TSSPM.MCOUPN_UPRC
			,TSSPM.MCOUPN_REMAIN_AMT
			,DECODE(TSSPM.CASH_BILL_APPR_PROC_FG, 1 , '포스승인', 2, '단말기승인', 3, '일반') AS CASH_BILL_APPR_PROC_FG
			,TSSPM.CASH_BILL_CARD_NO
			,TO_CHAR(TO_DATE(TSSPM.CASH_BILL_APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS CASH_BILL_APPR_DT
			,TO_CHAR(TO_DATE(TSSPM.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
			,TSSPM.APPR_NO
			,TSSPM.SALE_AMT AS APPR_AMT
		FROM TB_SL_SALE_PAY_MCOUPN TSSPM
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TSSPM.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TSSPM.STORE_CD||'||'||TSSPM.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TSSPM.STORE_CD||'||'||TSSPM.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='cashBillApprProcFg != null and cashBillApprProcFg != ""'>
            AND TSSPM.CASH_BILL_APPR_PROC_FG = #{cashBillApprProcFg}
        </if>
         <if test='saleFg != null and saleFg != ""'>
            AND TSSPM.SALE_FG = #{saleFg}
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSPM.SALE_DATE >= #{startDate}
		</if>
		<if test='mcoupnCd != null and mcoupnCd != ""'>
            AND TSSPM.MCOUPN_CD = #{mcoupnCd}
        </if>
		<if test='endDate != null and endDate != ""'>
			AND TSSPM.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(PARTNER) -->
    <!--
        TABLE    : TB_SL_SALE_PAY_PARTNER
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(PARTNER)
    -->
    <select id="getPartnerApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getPartnerApprPopList */
		SELECT TO_CHAR(TO_DATE(TSSPP.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
				,TSSPP.POS_NO
				,DECODE(TSSPP.SALE_FG, 1, '승인 ', -1, '취소') AS SALE_FG
				,DECODE(TSSPP.APPR_PROC_FG,'', '미승인', '승인') AS APPR_PROC
				,DECODE(TSSPP.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
				,TSSPP.SALE_AMT
				,TSSPP.TIP_AMT
				,TSSPP.VAT_AMT
				,TSSPP.PARTN_CARD_NO
				,TSSPP.SAVE_POINT
				,TSSPP.USE_POINT
				,TO_CHAR(TO_DATE(TSSPP.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
				,TSSPP.APPR_NO
				,TSSPP.SALE_AMT AS APPR_AMT
		FROM TB_SL_SALE_PAY_PARTNER TSSPP
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TSSPP.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TSSPP.STORE_CD||'||'||TSSPP.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TSSPP.STORE_CD||'||'||TSSPP.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TSSPP.APPR_PROC_FG = #{apprProcFg}
        </if>
         <if test='saleFg != null and saleFg != ""'>
            AND TSSPP.SALE_FG = #{saleFg}
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TSSPP.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
			AND TSSPP.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(NCARD) -->
    <!--
        TABLE    : TB_NS_NONSALE_PAY_CARD
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(NCARD)
    -->
    <select id="getNcardApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getNcardApprPopList */
		SELECT TO_CHAR(TO_DATE(TNNPC.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
				,TNNPC.POS_NO
				,DECODE(TNNPC.SALE_YN, 'Y', '승인', 'N',  '취소') AS APPR_PROC
				,DECODE(TNNPC.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
				,TNNPC.ACQUIRE_NM
				,DECODE(TNNPC.CARD_TYPE_FG, 1, '일반', 2, 'PAYON', 3, 'APP', 4, 'UNION', 5, 'PAYCO') AS CARD_TYPE_FG
				,TNNPC.CARD_NO
				,TNNPC.SALE_AMT
				,TNNPC.TIP_AMT
				,TNNPC.VAT_AMT
				,DECODE(TNNPC.INST_CNT, 0 , '일시불', '할부') AS INST_CNT_NM
				,TNNPC.INST_CNT
				,TO_CHAR(TO_DATE(TNNPC.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
				,TNNPC.APPR_NO
				,TNNPC.APPR_AMT
		FROM TB_NS_NONSALE_PAY_CARD TNNPC
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TNNPC.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TNNPC.STORE_CD||'||'||TNNPC.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TNNPC.STORE_CD||'||'||TNNPC.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TNNPC.APPR_PROC_FG = #{apprProcFg}
        </if>
         <if test='saleYn != null and saleYn != ""'>
            AND TNNPC.SALE_YN = #{saleYn}
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TNNPC.SALE_DATE >= #{startDate}
		</if>
		<if test='acquireCd != null and acquireCd != ""'>
            AND TNNPC.ACQUIRE_CD = #{acquireCd}
        </if>
		<if test='endDate != null and endDate != ""'>
			AND TNNPC.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>

    <!-- 매출공통팝업 - 승인현황(매장현황) 팝업(NCASH) -->
    <!--
        TABLE    : TB_NS_NONSALE_PAY_CASH
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 승인현황(매장현황) 팝업(NCASH)
    -->
    <select id="getNcashApprPopList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getNcashApprPopList */
		SELECT TO_CHAR(TO_DATE(TNNPC.SALE_DATE), 'YYYY-MM-YY') AS SALE_DATE
				,TNNPC.POS_NO
				,DECODE(TNNPC.SALE_YN, 'Y', '승인', 'N',  '취소') AS APPR_PROC
				,TNNPC.SALE_AMT
				,TNNPC.TIP_AMT
				,TNNPC.VAT_AMT
				,TNNPC.CASH_BILL_CARD_NO
				,DECODE(TNNPC.CASH_BILL_CARD_TYPE_FG, 1, '카드', 2, '주민', 3, '휴대폰', 4, '사업자') AS CASH_BILL_CARD_TYPE_FG
				,TO_CHAR(TO_DATE(TNNPC.APPR_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') AS APPR_DT
				,TNNPC.APPR_NO
				,TNNPC.SALE_AMT AS APPR_AMT
		FROM TB_NS_NONSALE_PAY_CASH TNNPC
		WHERE 1=1
        <if test='storeCd != null and storeCd != ""'>
            AND TNNPC.STORE_CD = #{storeCd}
        </if>
        <if test='arrStoreCornr != null and arrStoreCornr != ""'>
                AND TNNPC.STORE_CD||'||'||TNNPC.CORNR_CD  IN
            <foreach collection="arrStoreCornr" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='arrStorePos != null and arrStorePos != ""'>
                AND TNNPC.STORE_CD||'||'||TNNPC.POS_NO  IN
            <foreach collection="arrStorePos" item="item" open="(" close=")" separator=",">
                            #{item}
            </foreach>
        </if>
        <if test='apprProcFg != null and apprProcFg != ""'>
            AND TNNPC.APPR_PROC_FG = #{apprProcFg}
        </if>
        <if test='apprProcFg == null and apprProcFg == ""'>
            AND TNNPC.APPR_PROC_FG IN ('1','2')
        </if>
         <if test='saleYn != null and saleYn != ""'>
            AND TNNPC.SALE_YN = #{saleYn}
        </if>
		<if test='startDate != null and startDate != ""'>
			AND TNNPC.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
			AND TNNPC.SALE_DATE <![CDATA[ <= ]]> #{endDate}
		</if>
    </select>
    
    <!-- 매출공통팝업 - 상품선택(대분류) 팝업 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_CLASS
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 상품선택(대분류) 팝업
    -->
    <select id="getClassProdList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getClassProdList */
        <if test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
			SELECT DISTINCT PROD_CLASS_CD
					, PROD_CLASS_NM
	  		FROM TB_HQ_PRODUCT_CLASS
			WHERE P_PROD_CLASS_CD = '00000' 
	   		AND HQ_OFFICE_CD = #{hqOfficeCd}
	 		ORDER BY PROD_CLASS_CD
 		</if>
 		<if test='orgnFg != null and orgnFg == "S"'>    <!-- 매장 -->
			SELECT DISTINCT PROD_CLASS_CD
					, PROD_CLASS_NM
	  		FROM TB_MS_PRODUCT_CLASS
			WHERE P_PROD_CLASS_CD = '00000' 
	   		AND STORE_CD = #{storeCd}
	 		ORDER BY PROD_CLASS_CD
 		</if>
    </select>
    
    <!-- 매출공통팝업 - 상품선택(상품) 팝업 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_CLASS
        PARAM    : saleComPopupVO
        COMMENTS : 매출공통팝업 - 상품선택(상품) 팝업
    -->
    <select id="getProdList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getProdList */
       SELECT  A.LV1_NM,
               A.LV2_NM,
               A.LV3_NM,
               B.PROD_CD,
               B.PROD_NM
      <choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (
                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
                                 A.PROD_CLASS_CD     AS LV2_CD,
                                 A.PROD_CLASS_NM     AS LV2_NM,
                                 B.PROD_CLASS_CD     AS LV3_CD,
                                 B.PROD_CLASS_NM     AS LV3_NM,
                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
                                 (SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
                         FROM    (
                                     SELECT  HQ_OFFICE_CD,
                                           P_PROD_CLASS_CD,
                                           PROD_CLASS_CD,
                                           PROD_CLASS_NM
                                     FROM    TB_HQ_PRODUCT_CLASS
                                     WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                     AND     P_PROD_CLASS_CD IN (
                                                                    SELECT  PROD_CLASS_CD
                                                                    FROM    TB_HQ_PRODUCT_CLASS
                                                                    WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                                                    AND     P_PROD_CLASS_CD = '00000'
                                                                 )
                                 )                      A,
                                 TB_HQ_PRODUCT_CLASS    B
                         WHERE   B.P_PROD_CLASS_CD IN    (
                                                             SELECT  PROD_CLASS_CD
                                                             FROM    TB_HQ_PRODUCT_CLASS
                                                             WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                                             AND     P_PROD_CLASS_CD IN (
                                                                                      SELECT  PROD_CLASS_CD
                                                                                            FROM    TB_HQ_PRODUCT_CLASS
                                                                                            WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                                                                            AND     P_PROD_CLASS_CD = '00000'
                                                                                         )
                                                         )
                         AND     A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
                         AND     A.P_PROD_CLASS_CD  = #{prodClassCd}
                     )                   A,
                     TB_HQ_PRODUCT       B
             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.LV3_CD
            <if test='srchPopProdCd != null and srchPopProdCd != ""'>
	   			AND B.PROD_CD = #{srchPopProdCd}
	   		</if>
	   		<if test='srchPopProdNm != null and srchPopProdNm != ""'>
	   			AND B.PROD_NM LIKE '%'||#{srchPopProdNm}||'%' 
	   		</if>
         </when>
         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
             FROM    (
                         SELECT  A.P_PROD_CLASS_CD   AS LV1_CD,
                                 A.PROD_CLASS_CD     AS LV2_CD,
                                 A.PROD_CLASS_NM     AS LV2_NM,
                                 B.PROD_CLASS_CD     AS LV3_CD,
                                 B.PROD_CLASS_NM     AS LV3_NM,
                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM,
                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.PROD_CLASS_CD  ) FROM DUAL)    AS LV2_NM_FULL,
                                 (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, B.PROD_CLASS_CD  ) FROM DUAL)    AS LV3_NM_FULL
                         FROM    (
                                     SELECT  STORE_CD,
                                           P_PROD_CLASS_CD,
                                           PROD_CLASS_CD,
                                           PROD_CLASS_NM
                                     FROM    TB_MS_PRODUCT_CLASS
                                     WHERE   STORE_CD        = #{storeCd}
                                     AND     P_PROD_CLASS_CD IN (
                                                                    SELECT  PROD_CLASS_CD
                                                                    FROM    TB_MS_PRODUCT_CLASS
                                                                    WHERE   STORE_CD        = #{storeCd}
                                                                    AND     P_PROD_CLASS_CD = '00000'
                                                                 )
                                 )                      A,
                                 TB_MS_PRODUCT_CLASS    B
                         WHERE   B.P_PROD_CLASS_CD IN    (
                                                             SELECT  PROD_CLASS_CD
                                                             FROM    TB_MS_PRODUCT_CLASS
                                                             WHERE   STORE_CD        = #{storeCd}
                                                             AND     P_PROD_CLASS_CD IN (
                                                                                      SELECT  PROD_CLASS_CD
                                                                                            FROM    TB_MS_PRODUCT_CLASS
                                                                                            WHERE   STORE_CD        = #{storeCd}
                                                                                            AND     P_PROD_CLASS_CD = '00000'
                                                                                         )
                                                         )
                         AND     A.STORE_CD      = B.STORE_CD
                         AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
                         AND     A.P_PROD_CLASS_CD  = #{prodClassCd}
                     )                   A,
                     TB_MS_PRODUCT       B
             WHERE   B.STORE_CD      = #{storeCd}
             AND     B.PROD_CLASS_CD = A.LV3_CD
	   		<if test='srchPopProdCd != null and srchPopProdCd != ""'>
	   			AND B.PROD_CD = #{srchPopProdCd}
	   		</if>
	   		<if test='srchPopProdNm != null and srchPopProdNm != ""'>
	   			AND B.PROD_NM LIKE '%'||#{srchPopProdNm}||'%' 
	   		</if>
         </when>
      </choose>
       ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD  
    </select>
    
    <!-- 상품 목록 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 목록을 조회한다.
    -->
    <select id="getProductList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getProductList */
        <choose>
          <!-- 본사 -->
          <when test='orgnFg != null and orgnFg == "H"'>
              SELECT thp.HQ_OFFICE_CD,
                     thp.PROD_CLASS_CD,
                     thp.PROD_CD,
                     thp.PROD_NM
                FROM TB_HQ_PRODUCT thp
               WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
            <if test='prodClassCd != null and prodClassCd != ""'>
                 AND thp.PROD_CLASS_CD IN  ( SELECT  #{prodClassCd} AS PROD_CLASS_CD
                                               FROM    DUAL
                                              UNION
                                             SELECT  thpc.PROD_CLASS_CD
                                               FROM    TB_HQ_PRODUCT_CLASS thpc
                                              WHERE   thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                                              START WITH  thpc.P_PROD_CLASS_CD = #{prodClassCd}
                                            CONNECT BY  thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD
                 )
            </if>
            <if test='prodCd != null and prodCd != "" '>
                 AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
            </if>
            <if test='prodNm != null and prodNm != "" and prodNm.toString() != "선택"'>
                 AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
            </if>
          </when>
          <!-- 가맹점 -->
          <when test='orgnFg != null and orgnFg == "S"'>
              SELECT tmp.HQ_OFFICE_CD,
                     tmp.PROD_CLASS_CD,
                     tmp.PROD_CD,
                     tmp.PROD_NM
                FROM TB_MS_PRODUCT tmp
               WHERE tmp.STORE_CD = #{storeCd}
              <if test='prodClassCd != null and prodClassCd != "" '>
                 AND tmp.PROD_CLASS_CD IN  ( SELECT  #{prodClassCd} AS PROD_CLASS_CD
                                               FROM    DUAL
                                              UNION
                                             SELECT  tmpc.PROD_CLASS_CD
                                               FROM    TB_MS_PRODUCT_CLASS tmpc
                                              WHERE   tmpc.STORE_CD = #{storeCd}
                                              START WITH  tmpc.P_PROD_CLASS_CD = #{prodClassCd}
                                            CONNECT BY  tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD
                  )
              </if>
              <if test='prodCd != null and prodCd != ""'>
                 AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
              </if>
              <if test='prodNm != null and prodNm != "" and prodNm.toString() != "선택"'>
                 AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
              </if>
          </when>
        </choose>
    </select>
	
    <!-- 상품별 결제수단별 상세 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_DTL_PAY
        PARAM    : saleComPopupVO
        COMMENTS : 상품별 - 결제수단별탭을 상세 조회한다.
    -->
    <select id="getPayFgList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getPayFgList */
        
		SELECT SUBSTR(TSSDP.SALE_DATE, 1, 4)||'-'||SUBSTR(TSSDP.SALE_DATE, 5, 2)||'-'||SUBSTR(TSSDP.SALE_DATE, 7, 2) AS SALE_DATE
		    , TSSH.STORE_CD
		    , TMS.STORE_NM
		    , TSSH.SALE_FG
     		, TSSDP.POS_NO
     		, TSSDP.BILL_NO
     		, TSSDP.PAY_AMT
     		, TO_CHAR(TO_DATE(TSSH.BILL_DT, 'YYYY.MM.DD HH24:MI:SS'),'yyyy.mm.dd hh24:mi:ss') AS BILL_DT
  		FROM TB_SL_SALE_HDR TSSH
     		, TB_SL_SALE_DTL_PAY TSSDP
     		, TB_MS_STORE TMS
 		WHERE TSSH.HQ_OFFICE_CD = TSSDP.HQ_OFFICE_CD
   			AND TSSH.HQ_BRAND_CD = TSSDP.HQ_BRAND_CD
  	 		AND TSSH.STORE_CD = TSSDP.STORE_CD
  	 		AND TSSH.SALE_DATE = TSSDP.SALE_DATE
  	 		AND TSSH.POS_NO = TSSDP.POS_NO
   			AND TSSH.BILL_NO = TSSDP.BILL_NO
   			AND TSSH.STORE_CD = TMS.STORE_CD
		<choose>
            <when test='orgnFg != null and orgnFg == "H"'>
            	<if test='storeCd != null and storeCd != ""'>
                 	AND TSSDP.STORE_CD IN
                 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                   		#{item}
               		</foreach>
               	</if>
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                AND TSSDP.STORE_CD  = #{storeCd}
            </when>
        </choose>
        	<if test='startDate != null and startDate != ""'>
        		AND TSSDP.SALE_DATE <![CDATA[ >= ]]> #{startDate}
        	</if>
        	<if test='endDate != null and endDate != ""'>
        		AND TSSDP.SALE_DATE <![CDATA[ <= ]]> #{endDate}
        	</if>
        		AND TSSDP.PROD_CD = #{prodCd}
        	<if test='payCd != null and payCd != ""'>
        		AND TSSDP.PAY_CD = #{payCd}
        	</if>
         ORDER BY TSSDP.SALE_DATE DESC, TSSDP.POS_NO, TSSDP.BILL_NO
    </select>
    
    <!-- 결제수단 컬럼 리스트 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        PARAM    : ProdPayFgVO
        COMMENTS : 일자별 - 결제수단 컬럼 리스트를 조회한다.
    -->
    <select id="getPayColList" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.getPayColList */
        <![CDATA[
        SELECT  TCN.NMCODE_CD AS PAY_CD, TCN.NMCODE_NM AS PAY_NM, TCN.NMCODE_ITEM_1 AS PAY_METHOD
        FROM    TB_CM_NMCODE TCN
        WHERE   TCN.NMCODE_GRP_CD   =   '024'
        ORDER
        BY      TCN.NMCODE_CD
        ]]>
    </select>
    
    <!-- 영수증 팝업(매장정보,매출종합내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_MS_STORE
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 매장정보,매출종합내역 조회한다.
    -->
    <select id="selectBillSalePop1" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePop1 */
        
        SELECT A.STORE_CD
		    , B.STORE_NM
		    , TO_CHAR(TO_DATE(A.SALE_DATE), 'YYYY.MM.DD')SALE_DATE
		    , A.POS_NO
		    , A.BILL_NO
		    , A.TOT_SALE_AMT
		    , A.TOT_DC_AMT
		    , A.REAL_SALE_AMT
		    , A.NET_SALE_AMT
		    , A.NO_TAX_SALE_AMT
		    , A.TAX_SALE_AMT
		    , A.VAT_AMT
		    , A.TOT_TIP_AMT
		FROM TB_SL_SALE_HDR A,
		      TB_MS_STORE B    
		WHERE A.STORE_CD  = B.STORE_CD
		  AND A.STORE_CD  = #{storeCd}
		  AND A.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND A.POS_NO 	  = #{posNo}
		  AND A.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(결제내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 결제내역 조회한다.
    -->
    <select id="selectBillSalePop3" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePop3 */        		  
		SELECT PAY_CD
		    ${sQuery1}
		FROM TB_SL_SALE_HDR_PAY A
		WHERE 1 = 1
		  AND A.STORE_CD  = #{storeCd}
		  AND A.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND A.POS_NO 	  = #{posNo}
		  AND A.BILL_NO   = #{billNo}
		GROUP BY PAY_CD
    </select>
    
    <!-- 영수증 팝업(회원정보) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR_MEMBR
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 결제내역 조회한다.
    -->
    <select id="selectBillSalePop4" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePop4 */        		  
		SELECT A.MEMBR_NO
		    , A.MEMBR_NM
		    , A.MEMBR_CARD_NO
		    , A.SALE_SAVE_POINT
  		FROM TB_SL_SALE_HDR_MEMBR A
 		WHERE 1 = 1
		  AND A.STORE_CD  = #{storeCd}
		  AND A.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND A.POS_NO 	  = #{posNo}
		  AND A.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(신용카드결제내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_PAY_CARD
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 신용카드결제내역 조회한다.
    -->
    <select id="selectBillSalePopCard" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePopCard */        		  		  
		SELECT (SELECT CORNR_NM FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd} AND CORNR_CD = TSSPC.CORNR_CD) AS CORNR_NM                                             
		    , DECODE(TSSPC.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
		    , TSSPC.CARD_NO
		    , TSSPC.INST_CNT
		    , TSSPC.APPR_AMT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS APPR_DT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS APPR_TIME
		    , TSSPC.APPR_NO
<!-- 		    , (SELECT VAN_CARDCO_NM FROM TB_CM_VAN_CARD WHERE VAN_CD = TSSPC.VAN_CD AND CARDCO_CD = TSSPC.CMN_CARD_CORP_CD) AS VAN_CARDCO_NM -->
		    , TSSPC.ISSUE_NM
		    , TSSPC.ACQUIRE_NM
		FROM TB_SL_SALE_PAY_CARD  TSSPC
		WHERE 1 = 1
		  AND TSSPC.STORE_CD  = #{storeCd}
		  AND TSSPC.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND TSSPC.POS_NO 	 = #{posNo}
		  AND TSSPC.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(현금결제내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 현금결제내역 조회한다.
    -->
    <select id="selectBillSalePopCash" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePopCash */        		  		  
		SELECT (SELECT CORNR_NM FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd} AND CORNR_CD = TSSPC.CORNR_CD) AS CORNR_NM                                            
		    , DECODE(TSSPC.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
		    , TSSPC.CASH_BILL_CARD_NO
		    , TSSPC.APPR_NO
		    , TSSPC.SALE_AMT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS APPR_DT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS APPR_NO
<!-- 		    , (SELECT VAN_CARDCO_NM FROM TB_CM_VAN_CARD WHERE VAN_CD = TSSPC.VAN_CD AND CARDCO_CD = TSSPC.CASH_BILL_CARD_NO) AS VAN_CARDCO_NM -->
  		FROM TB_SL_SALE_PAY_CASH TSSPC
		WHERE 1 = 1
		  AND TSSPC.STORE_CD  = #{storeCd}
		  AND TSSPC.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND TSSPC.POS_NO 	 = #{posNo}
		  AND TSSPC.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(상품내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 상품내역 조회한다.
    -->
    <select id="selectBillSalePop6" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePop4 */        		  		  
		SELECT TSSD.PROD_CD
    		, TSSD.SALE_QTY
		    , TSSD.SALE_UPRC
		    , TSSD.SALE_AMT
		    , TSSD.DC_AMT
		    , TSSD.REAL_SALE_AMT
		    , (TSSD.SALE_AMT - TSSD.VAT_AMT) AS TAX_SALE_AMT
		    , TSSD.VAT_AMT
  		FROM TB_SL_SALE_DTL TSSD
 		WHERE 1 = 1
		  AND TSSD.STORE_CD  = #{storeCd}
		  AND TSSD.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND TSSD.POS_NO 	 = #{posNo}
		  AND TSSD.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(신용카드결제취소내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_PAY_CARD
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 신용카드결제취소내역 조회한다.
    -->
    <select id="selectBillRtnPopCard" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillRtnPopCard */        		  		  
		SELECT (SELECT CORNR_NM FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd} AND CORNR_CD = TSSPC.CORNR_CD) AS CORNR_NM                                             
		    , DECODE(TSSPC.APPR_PROC_FG, 1, '포스취소', 2, '단말기취소') AS APPR_PROC_FG
		    , TSSPC.CARD_NO
		    , TSSPC.INST_CNT
		    , TSSPC.SALE_AMT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS APPR_DT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS APPR_TIME
		    , TSSPC.APPR_NO
<!-- 		    , (SELECT VAN_CARDCO_NM FROM TB_CM_VAN_CARD WHERE VAN_CD = TSSPC.VAN_CD AND CARDCO_CD = TSSPC.CMN_CARD_CORP_CD) AS VAN_CARDCO_NM -->
		    , TSSPC.ISSUE_NM
		    , TSSPC.ACQUIRE_NM
		FROM TB_SL_SALE_PAY_CARD  TSSPC
		WHERE 1 = 1
		  AND TSSPC.STORE_CD  = #{storeCd}
		  AND TSSPC.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND TSSPC.POS_NO 	 = #{posNo}
		  AND TSSPC.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(현금결제취소내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 현금결제취소내역 조회한다.
    -->
    <select id="selectBillRtnPopCash" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillRtnPopCash */        		  		  
		SELECT (SELECT CORNR_NM FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd} AND CORNR_CD = TSSPC.CORNR_CD) AS CORNR_NM                                            
		    , DECODE(TSSPC.APPR_PROC_FG, 1, '포스취소', 2, '단말기취소') AS APPR_PROC_FG
		    , TSSPC.CASH_BILL_CARD_NO
		    , TSSPC.APPR_NO
		    , TSSPC.SALE_AMT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS APPR_DT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS APPR_NO
<!-- 		    , (SELECT VAN_CARDCO_NM FROM TB_CM_VAN_CARD WHERE VAN_CD = TSSPC.VAN_CD AND CARDCO_CD = TSSPC.CASH_BILL_CARD_NO) AS VAN_CARDCO_NM -->
  		FROM TB_SL_SALE_PAY_CASH TSSPC
		WHERE 1 = 1
		  AND TSSPC.STORE_CD  = #{storeCd}
		  AND TSSPC.SALE_DATE = REPLACE(#{saleDate}, '-', '')
		  AND TSSPC.POS_NO 	 = #{posNo}
		  AND TSSPC.BILL_NO   = #{billNo}
    </select>
    
    <!-- 영수증 팝업(원거래매출정보) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_MS_STORE
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 원거래매출정보 조회한다.
    -->
    <select id="selectBillSalePop7" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillSalePop7 */
        
        SELECT TO_CHAR(TO_DATE(A.SALE_DATE), 'YYYY.MM.DD')SALE_DATE
		    , A.POS_NO
		    , A.BILL_NO		    
		FROM TB_SL_SALE_HDR A,
		      TB_MS_STORE B    
		WHERE A.STORE_CD  = B.STORE_CD
		  AND A.STORE_CD  = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),0,7)     
		  AND A.SALE_DATE = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),8,8)
		  AND A.POS_NO 	  = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),16,2)
		  AND A.BILL_NO   = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),18)
    </select>
    
    <!-- 영수증 팝업(원 신용카드결제내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_PAY_CARD
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 원 신용카드결제내역 조회한다.
    -->
    <select id="selectBillRealRtnPopCard" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillRealRtnPopCard */        		  		  
		SELECT (SELECT CORNR_NM FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd} AND CORNR_CD = TSSPC.CORNR_CD) AS CORNR_NM                                             
		    , DECODE(TSSPC.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
		    , TSSPC.CARD_NO
		    , TSSPC.INST_CNT
		    , TSSPC.APPR_AMT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS APPR_DT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS APPR_TIME
		    , TSSPC.APPR_NO
<!-- 		    , (SELECT VAN_CARDCO_NM FROM TB_CM_VAN_CARD WHERE VAN_CD = TSSPC.VAN_CD AND CARDCO_CD = TSSPC.CMN_CARD_CORP_CD) AS VAN_CARDCO_NM -->
		    , TSSPC.ISSUE_NM
		    , TSSPC.ACQUIRE_NM
		FROM TB_SL_SALE_PAY_CARD  TSSPC
		WHERE 1 = 1
		  AND TSSPC.STORE_CD  = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),0,7)     
		  AND TSSPC.SALE_DATE = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),8,8)
		  AND TSSPC.POS_NO 	  = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),16,2)
		  AND TSSPC.BILL_NO   = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),18)
    </select>
    
    <!-- 영수증 팝업(원 현금결제내역) 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR
        PARAM    : saleComPopupVO
        COMMENTS : 영수증 - 원 현금결제내역 조회한다.
    -->
    <select id="selectBillRealRtnPopCash" parameterType="saleComPopupVO" resultType="DefaultMap">
        /* USE : SaleComPopupMapper.selectBillRealRtnPopCash */        		  		  
		SELECT (SELECT CORNR_NM FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd} AND CORNR_CD = TSSPC.CORNR_CD) AS CORNR_NM                                            
		    , DECODE(TSSPC.APPR_PROC_FG, 1, '포스승인', 2, '단말기승인') AS APPR_PROC_FG
		    , TSSPC.CASH_BILL_CARD_NO
		    , TSSPC.APPR_NO
		    , TSSPC.SALE_AMT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'YYYY.MM.DD') AS APPR_DT
		    , TO_CHAR(TO_DATE(TSSPC.APPR_DT, 'YYYYMMDDHH24MISS'),'HH24:MI:SS') AS APPR_NO
<!-- 		    , (SELECT VAN_CARDCO_NM FROM TB_CM_VAN_CARD WHERE VAN_CD = TSSPC.VAN_CD AND CARDCO_CD = TSSPC.CASH_BILL_CARD_NO) AS VAN_CARDCO_NM -->
  		FROM TB_SL_SALE_PAY_CASH TSSPC
		WHERE 1 = 1
		  AND TSSPC.STORE_CD  = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),0,7)     
		  AND TSSPC.SALE_DATE = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),8,8)
		  AND TSSPC.POS_NO 	  = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),16,2)
		  AND TSSPC.BILL_NO   = SUBSTR((SELECT ORG_BILL_NO FROM TB_SL_SALE_HDR WHERE STORE_CD = #{storeCd} AND SALE_DATE = REPLACE(#{saleDate}, '-', '') AND POS_NO = #{posNo} AND BILL_NO = #{billNo}),18)
    </select>
</mapper>
