<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    KioskKeyMap.xml
    키오스크키맵관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2020.09.03     최초작성
-->

<mapper namespace="kr.co.solbipos.base.prod.kioskKeyMap.service.impl.KioskKeyMapMapper">
    <!-- 키오스크용 포스 조회 -->
    <!--
        TABLE    : TB_MS_POS_ENVST, TB_MS_POS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크용도로 사용중인 포스를 조회한다.
    -->
    <select id="getKioskPosList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
      /* USE : KioskKeyMapMapper.getKioskPosList */
      SELECT tmp.POS_NO AS NAME,
              tmp.POS_NO AS VALUE
        FROM TB_MS_POS_ENVST tmpe,
              TB_MS_POS tmp
       WHERE tmpe.STORE_CD = #{storeCd}
         AND tmp.STORE_CD = tmpe.STORE_CD
         AND tmp.POS_NO = tmpe.POS_NO
         AND tmpe.ENVST_CD = '4019'  <!-- 포스용도 -->
         AND tmpe.ENVST_VAL = '6'    <!-- 6: KIOSK -->
    </select>

    <!-- 키오스크 키맵그룹 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵그룹을 가져온다.
    -->
    <select id="getKioskTuClsTypeList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskTuClsTypeList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  DISTINCT thkc.TU_CLS_TYPE AS VALUE
                ,       NVL(thkg.TU_CLS_TYPE_NM, thkc.TU_CLS_TYPE)AS NAME
                FROM    TB_HQ_KIOSK_CLS thkc
                ,       TB_HQ_KIOSK_GROUP thkg
                WHERE   thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                ORDER BY thkc.TU_CLS_TYPE
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  DISTINCT thkc.TU_CLS_TYPE AS VALUE
                ,       NVL(thkg.TU_CLS_TYPE_NM, thkc.TU_CLS_TYPE)AS NAME
                FROM    TB_MS_KIOSK_CLS thkc
                ,       TB_MS_KIOSK_GROUP thkg
                WHERE   thkc.STORE_CD = #{storeCd}
                AND     thkc.POS_NO = #{posNo}
                AND     thkc.STORE_CD = thkg.STORE_CD(+)
                AND     thkc.POS_NO = thkg.POS_NO(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                ORDER BY thkc.TU_CLS_TYPE
            </when>
        </choose>
    </select>

    <!-- 매장수정허용분류 조회 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY_CLASS, TB_HQ_NMCODE
        PARAM    : touchKeyVO
        COMMENTS : 매장수정허용분류를 조회한다.
    -->
    <select id="getStoreModGrpList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getStoreModGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thkc.TU_CLS_TYPE
                ,       thkg.TU_CLS_TYPE_NM
                ,		thkc.TU_CLS_CD
                ,		thkc.TU_CLS_NM
                ,		NVL(thn.NMCODE_ITEM_2, 'N') AS STORE_MOD_YN
                FROM 	TB_HQ_KIOSK_CLS thkc
                ,       TB_HQ_KIOSK_GROUP thkg
                ,		TB_HQ_NMCODE thn
                WHERE 	thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                AND 	thkc.HQ_OFFICE_CD = thn.HQ_OFFICE_CD(+)
                AND 	thkc.TU_CLS_TYPE = thn.NMCODE_NM(+)
                AND 	thkc.TU_CLS_CD = thn.NMCODE_ITEM_1(+)
                AND 	'229' = thn.NMCODE_GRP_CD(+)
                <if test='tuClsType != null and tuClsType != ""'>
                    AND thkc.TU_CLS_TYPE = #{tuClsType}
                </if>
                <if test='storeModYn != null and storeModYn == "Y"'>
                    AND thn.NMCODE_ITEM_2 = 'Y'
                </if>
                <if test='storeModYn != null and storeModYn == "N"'>
                    AND (thn.NMCODE_ITEM_2 = 'N' OR thn.NMCODE_ITEM_2 IS NULL)
                </if>
                ORDER BY thkc.TU_CLS_TYPE, thkc.TU_CLS_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	thkc.TU_CLS_TYPE
                ,       thkg.TU_CLS_TYPE_NM
                ,		thkc.TU_CLS_CD
                ,		thkc.TU_CLS_NM
                ,		NVL(thn.NMCODE_ITEM_2, 'N') AS STORE_MOD_YN
                FROM 	TB_HQ_KIOSK_CLS thkc
                ,       TB_HQ_KIOSK_GROUP thkg
                ,		TB_HQ_NMCODE thn
                WHERE 	thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                AND 	thkc.HQ_OFFICE_CD = thn.HQ_OFFICE_CD(+)
                AND 	thkc.TU_CLS_TYPE = thn.NMCODE_NM(+)
                AND 	thkc.TU_CLS_CD = thn.NMCODE_ITEM_1(+)
                AND 	'229' = thn.NMCODE_GRP_CD(+)
                <if test='tuClsType != null and tuClsType != ""'>
                    AND thtkc.TU_CLS_TYPE = #{tuClsType}
                </if>
                AND thn.NMCODE_ITEM_2 = 'Y'
                ORDER BY thkc.TU_CLS_TYPE, thkc.TU_CLS_CD
            </when>
        </choose>
    </select>


    <!-- 매장수정허용분류 저장 -->
    <!--
        TABLE    : TB_MS_STORE
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장수정허용분류를 저장한다.
    -->
    <insert id="saveStoreModGrp" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveStoreModGrp */
        <selectKey keyProperty="nmcodeCd" resultType="String" order="BEFORE">
            SELECT  LPAD(NVL(MAX(TO_NUMBER(NMCODE_CD)), 0) + 1, 4, '0')
            FROM    TB_HQ_NMCODE
            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
            AND     NMCODE_GRP_CD = '229'
        </selectKey>
        MERGE INTO TB_HQ_NMCODE thn
        USING DUAL
        ON (
            HQ_OFFICE_CD = #{hqOfficeCd}
        AND NMCODE_GRP_CD = '229'
        AND NMCODE_NM = #{tuClsType}
        AND NMCODE_ITEM_1 = #{tuClsCd}
        )
        WHEN MATCHED THEN
        UPDATE
        SET
            NMCODE_ITEM_2   = #{storeModYn}
        ,   MOD_DT          = #{modDt}
        ,   MOD_ID          = #{modId}
        WHEN NOT MATCHED THEN
        INSERT
        (
            HQ_OFFICE_CD
        ,   NMCODE_GRP_CD
        ,   NMCODE_CD
        ,   PARENT_CD
        ,   NMCODE_NM
        ,   NMCODE_ITEM_1
        ,   NMCODE_ITEM_2
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd}
        ,   '229'
        ,   #{nmcodeCd}
        ,   '229'
        ,   #{tuClsType}
        ,   #{tuClsCd}
        ,   #{storeModYn}
        ,   #{regDt}
        ,   #{regId}
        ,   #{modDt}
        ,   #{modId}
        )
    </insert>


    <!-- 터치키그룹_조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_GROUP, TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 터치키그룹을 조회한다.
    -->
    <select id="getClsTypeList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getClsTypeList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	DISTINCT thkc.TU_CLS_TYPE
                ,       thkg.TU_CLS_TYPE_NM
                FROM 	TB_HQ_KIOSK_CLS thkc
                ,		TB_HQ_KIOSK_GROUP thkg
                WHERE	thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD (+)
                AND 	thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE (+)
                AND     thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                ORDER BY thkc.TU_CLS_TYPE
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT	DISTINCT tmkc.TU_CLS_TYPE
                ,       tmkg.TU_CLS_TYPE_NM
                ,       tmkc.POS_NO
                FROM 	TB_MS_KIOSK_CLS tmkc
                ,		TB_MS_KIOSK_GROUP tmkg
                WHERE	tmkc.STORE_CD = tmkg.STORE_CD (+)
                AND 	tmkc.POS_NO = tmkg.POS_NO (+)
                AND 	tmkc.TU_CLS_TYPE = tmkg.TU_CLS_TYPE (+)
                AND     tmkc.STORE_CD = #{storeCd}
                AND     tmkc.POS_NO = #{posNo}
                ORDER BY tmkc.TU_CLS_TYPE
            </when>
        </choose>
    </select>

    <!-- 터치키그룹 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_GROUP, TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 터치키그룹을 저장한다.
    -->
    <insert id="saveClsType" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveClsType */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_KIOSK_GROUP thkg
                USING DUAL
                ON (
                    HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                    TU_CLS_TYPE_NM  = #{tuClsTypeNm}
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                    HQ_OFFICE_CD
                ,   TU_CLS_TYPE
                ,   TU_CLS_TYPE_NM
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES
                (
                    #{hqOfficeCd}
                ,   #{tuClsType}
                ,   #{tuClsTypeNm}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_GROUP tmkg
                USING DUAL
                ON (
                    STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                TU_CLS_TYPE_NM   = #{tuClsTypeNm}
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                STORE_CD
                ,   POS_NO
                ,   TU_CLS_TYPE
                ,   TU_CLS_TYPE_NM
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES
                (
                #{storeCd}
                ,   #{posNo}
                ,   #{tuClsType}
                ,   #{tuClsTypeNm}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 터치키그룹 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_GROUP, TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 터치키그룹을 저장한다.
    -->
    <insert id="copyKioskTuClsTypeNm" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskTuClsTypeNm */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_GROUP
                (
                    HQ_OFFICE_CD
                ,   TU_CLS_TYPE
                ,   TU_CLS_TYPE_NM
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                SELECT  HQ_OFFICE_CD
                ,       #{tuClsType}
                ,       TU_CLS_TYPE_NM
                ,       REG_DT
                ,       REG_ID
                ,       MOD_DT
                ,       MOD_ID
                FROM    TB_HQ_KIOSK_GROUP
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_GROUP
                (
                    STORE_CD
                ,   POS_NO
                ,   TU_CLS_TYPE
                ,   TU_CLS_TYPE_NM
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                SELECT  STORE_CD
                ,       #{posNo}
                ,       TU_CLS_TYPE
                ,       TU_CLS_TYPE_NM
                ,       REG_DT
                ,       REG_ID
                ,       MOD_DT
                ,       MOD_ID
                FROM    TB_MS_KIOSK_GROUP
                WHERE   STORE_CD = #{storeCd}
                AND     POS_NO = #{orgPosNo}
                AND     TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵그룹코드 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 키맵그룹 생성 시 키맵그룹코드를 생성한다.
    -->
    <select id="getKiosTuClsTypeCode" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getKiosTuClsTypeCode */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(TU_CLS_TYPE), '0') + 1, 2, '0')
                  FROM TB_HQ_KIOSK_CLS
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(TU_CLS_TYPE), '0') + 1, 2, '0')
                  FROM TB_MS_KIOSK_CLS
                 WHERE STORE_CD = #{storeCd}
                   AND  POS_NO = #{posNo}
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(분류) 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류)를 가져온다.
    -->
    <select id="getKioskCategory" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    SELECT HQ_OFFICE_CD,
                            TU_CLS_TYPE,
                            TU_CLS_CD,
                            TU_CLS_NM,
                            TU_PAGE,
                            X,
                            Y,
                            WIDTH,
                            HEIGHT,
                            INDEX_NO,
                            CLS_FG,
                            REG_DT,
                            REG_ID,
                            MOD_DT,
                            MOD_ID,
                            CLS_MEMO,
                            TU_M_CLS_FG,
                            NVL((
                            SELECT  NMCODE_ITEM_2
                            FROM    TB_HQ_NMCODE thn
                            WHERE   thn.HQ_OFFICE_CD = tmkc.HQ_OFFICE_CD
                            AND     thn.NMCODE_GRP_CD = '229'
                            AND     thn.NMCODE_NM = tmkc.TU_CLS_TYPE
                            AND     thn.NMCODE_ITEM_1 = tmkc.TU_CLS_CD
                            ), 'N') AS STORE_MOD_YN
                     FROM TB_HQ_KIOSK_CLS tmkc
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                      AND TU_CLS_TYPE = #{tuClsType}
                ORDER BY INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                    SELECT STORE_CD,
                            POS_NO,
                            TU_CLS_TYPE,
                            TU_CLS_CD,
                            TU_CLS_NM,
                            TU_PAGE,
                            X,
                            Y,
                            WIDTH,
                            HEIGHT,
                            INDEX_NO,
                            CLS_FG,
                            REG_DT,
                            REG_ID,
                            MOD_DT,
                            MOD_ID,
                            CLS_MEMO,
                            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tmkc.STORE_CD AND POS_NO = tmkc.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG,
                            NVL((
                            SELECT  NMCODE_ITEM_2
                            FROM    TB_HQ_NMCODE thn
                            WHERE   thn.HQ_OFFICE_CD = #{hqOfficeCd}
                            AND     thn.NMCODE_GRP_CD = '229'
                            AND     thn.NMCODE_NM = tmkc.TU_CLS_TYPE
                            AND     thn.NMCODE_ITEM_1 = tmkc.TU_CLS_CD
                            ), 'N') AS STORE_MOD_YN
                    FROM TB_MS_KIOSK_CLS tmkc
                   WHERE STORE_CD = #{storeCd}
                     AND POS_NO = #{posNo}
                     AND TU_CLS_TYPE = #{tuClsType}
               ORDER BY INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(분류) 저장 - 생성 시 카테고리 코드 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성 시 카테고리 코드를 생성한다.
    -->
    <select id="getKioskCategoryCode" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getKioskCategoryCode */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              SELECT LPAD(NVL(MAX(TU_CLS_CD), '0') + 1, 2, '0')
                FROM TB_HQ_KIOSK_CLS
               WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                 AND TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
              SELECT LPAD(NVL(MAX(TU_CLS_CD), '0') + 1, 2, '0')
                FROM TB_MS_KIOSK_CLS
               WHERE STORE_CD = #{storeCd}
                 AND POS_NO = #{posNo}
                 AND TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(분류) 저장 - 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성한다.
    -->
    <insert id="insertKioskCategory" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.insertKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    INSERT INTO TB_HQ_KIOSK_CLS
                    (
                        HQ_OFFICE_CD,
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_CLS_NM,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID,
                        CLS_MEMO,
                        TU_M_CLS_FG
                    )
                    VALUES
                    (
                        #{hqOfficeCd},
                        #{tuClsType},
                        #{tuClsCd},
                        #{tuClsNm},
                        #{tuPage},
                        #{x},
                        #{y},
                        #{width},
                        #{height},
                        #{indexNo},
                        #{clsFg},
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        #{clsMemo},
                        #{tuMClsFg}
                    )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                  INSERT INTO TB_MS_KIOSK_CLS
                  (
                        STORE_CD,
                        POS_NO,
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_CLS_NM,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID,
                        CLS_MEMO
                  )
                  VALUES
                  (
                        #{storeCd},
                        #{posNo},
                        #{tuClsType},
                        #{tuClsCd},
                        #{tuClsNm},
                        #{tuPage},
                        #{x},
                        #{y},
                        #{width},
                        #{height},
                        #{indexNo},
                        #{clsFg},
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        #{clsMemo}
                  )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 카테고리(분류) 저장 - 수정 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 수정한다.
    -->
    <update id="updateKioskCategory" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.updateKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                 UPDATE TB_HQ_KIOSK_CLS
                    SET TU_CLS_NM = #{tuClsNm},
                         TU_PAGE = #{tuPage},
                         X = #{x},
                         Y = #{y},
                         WIDTH = #{width},
                         HEIGHT = #{height},
                         INDEX_NO = #{indexNo},
                         CLS_FG = #{clsFg},
                         MOD_DT = #{modDt},
                         MOD_ID = #{modId},
                         CLS_MEMO = #{clsMemo}
                  WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    AND TU_CLS_TYPE = #{tuClsType}
                    AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                  UPDATE TB_MS_KIOSK_CLS
                     SET TU_CLS_NM = #{tuClsNm},
                          TU_PAGE = #{tuPage},
                          X = #{x},
                          Y = #{y},
                          WIDTH = #{width},
                          HEIGHT = #{height},
                          INDEX_NO = #{indexNo},
                          CLS_FG = #{clsFg},
                          MOD_DT = #{modDt},
                          MOD_ID = #{modId},
                          CLS_MEMO = #{clsMemo}
                   WHERE STORE_CD = #{storeCd}
                     AND POS_NO = #{posNo}
                     AND TU_CLS_TYPE = #{tuClsType}
                     AND TU_CLS_CD = #{tuClsCd}
            </when>
        </choose>
    </update>

    <!-- 키오스크 카테고리(분류) 저장 - 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제한다.
    -->
    <delete id="deleteKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_CLS
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_CLS
                 WHERE STORE_CD = #{storeCd}
                   AND POS_NO = #{posNo}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 카테고리(분류) 저장 - 카테고리 삭제 시, 카테고리에 속한 키맵도 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제 시, 카테고리에 속한 키맵도 삭제한다.
    -->
    <delete id="deleteAllKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_KEY
                 WHERE STORE_CD = #{storeCd}
                   AND POS_NO = #{posNo}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 키맵 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키를 가져온다.
    -->
    <select id="getKioskKeyMap" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    SELECT thkk.HQ_OFFICE_CD,
                            thkk.TU_CLS_TYPE,
                            thkk.TU_CLS_CD,
                            thkk.TU_KEY_CD,
                            thkk.PROD_CD,
                            thp.PROD_NM,
                            thkk.TU_PAGE,
                            thkk.X,
                            thkk.Y,
                            thkk.WIDTH,
                            thkk.HEIGHT,
                            thkk.INDEX_NO,
                            thkk.CLS_FG,
                            thkk.REG_DT,
                            thkk.REG_ID,
                            thkk.MOD_DT,
                            thkk.MOD_ID,
                (SELECT PROD_NM FROM TB_HQ_PRODUCT tmp2 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = thp.GROUP_PROD_CD) AS GROUP_PROD_NM
                      FROM TB_HQ_KIOSK_KEY thkk,
                            TB_HQ_PRODUCT thp
                     WHERE thp.HQ_OFFICE_CD (+)= thkk.HQ_OFFICE_CD
                       AND thp.PROD_CD (+)= thkk.PROD_CD
                       AND thkk.HQ_OFFICE_CD = #{hqOfficeCd}
                       AND thkk.TU_CLS_TYPE = #{tuClsType}
                       AND thkk.TU_CLS_CD = #{tuClsCd}
                 ORDER BY thkk.INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                    SELECT tmkk.STORE_CD,
                            tmkk.POS_NO,
                            tmkk.TU_CLS_CD,
                            tmkk.TU_KEY_CD,
                            tmkk.PROD_CD,
                            tmp.PROD_NM,
                            tmkk.TU_PAGE,
                            tmkk.X,
                            tmkk.Y,
                            tmkk.WIDTH,
                            tmkk.HEIGHT,
                            tmkk.INDEX_NO,
                            tmkk.CLS_FG,
                            tmkk.REG_DT,
                            tmkk.REG_ID,
                            tmkk.MOD_DT,
                            tmkk.MOD_ID,
                (SELECT PROD_NM FROM TB_MS_PRODUCT tmp2 WHERE STORE_CD = #{storeCd} AND PROD_CD = tmp.GROUP_PROD_CD) AS GROUP_PROD_NM
                      FROM TB_MS_KIOSK_KEY tmkk,
                            TB_MS_PRODUCT tmp
                     WHERE tmp.STORE_CD (+)= tmkk.STORE_CD
                       AND tmp.PROD_CD (+)= tmkk.PROD_CD
                       AND tmkk.STORE_CD = #{storeCd}
                       AND tmkk.POS_NO = #{posNo}
                       AND tmkk.TU_CLS_TYPE = #{tuClsType}
                       AND tmkk.TU_CLS_CD = #{tuClsCd}
                  ORDER BY tmkk.INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 수정 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 수정한다.
    -->
    <update id="updateKioskKeyMap" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.updateKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    UPDATE TB_HQ_KIOSK_KEY
                       SET TU_PAGE = #{tuPage},
                            X = #{x},
                            Y = #{y},
                            WIDTH = #{width},
                            HEIGHT = #{height},
                            INDEX_NO = #{indexNo},
                            CLS_FG = #{clsFg},
                            MOD_DT = #{modDt},
                            MOD_ID = #{modId}
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                      AND TU_CLS_TYPE = #{tuClsType}
                      AND TU_CLS_CD = #{tuClsCd}
                      AND TU_KEY_CD = #{tuKeyCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                  UPDATE TB_MS_KIOSK_KEY
                     SET TU_PAGE = #{tuPage},
                          X = #{x},
                          Y = #{y},
                          WIDTH = #{width},
                          HEIGHT = #{height},
                          INDEX_NO = #{indexNo},
                          CLS_FG = #{clsFg},
                          MOD_DT = #{modDt},
                          MOD_ID = #{modId}
                   WHERE STORE_CD = #{storeCd}
                     AND POS_NO = #{posNo}
                     AND TU_CLS_TYPE = #{tuClsType}
                     AND TU_CLS_CD = #{tuClsCd}
                     AND TU_KEY_CD = #{tuKeyCd}
            </when>
        </choose>
    </update>

    <!-- 키오스크 키맵 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 삭제한다.
    -->
    <delete id="deleteKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
                   AND TU_KEY_CD = #{tuKeyCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_KEY
                 WHERE STORE_CD = #{storeCd}
                   AND POS_NO = #{posNo}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
                   AND TU_KEY_CD = #{tuKeyCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_KIOSK_KEY
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵으로 등록할 상품을 조회한다. ( 본사/매장 )
    -->
    <select id="getKioskProdList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT thp.PROD_CD,
                        thp.PROD_NM,
                        NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                        (CASE WHEN thkk.PROD_CD IS NULL THEN 'N' ELSE 'Y' END) AS REG_YN,
                        (SELECT PROD_NM FROM TB_HQ_PRODUCT thp2 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = thp.GROUP_PROD_CD) AS GROUP_PROD_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_HQ_PRODUCT thp
                  LEFT OUTER JOIN (
                                        SELECT HQ_OFFICE_CD,
                                                PROD_CD,
                                                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                                          FROM TB_HQ_PRODUCT_SALE_PRICE
                                         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                        <![CDATA[
                                           AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                           AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                        ]]>
                                           AND SALE_PRC_FG = '1'
                                     GROUP BY HQ_OFFICE_CD, PROD_CD
                                    ) thpsp ON thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                                           AND thp.PROD_CD = thpsp.PROD_CD
                INNER JOIN TB_HQ_OFFICE tho ON tho.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                LEFT OUTER JOIN (
                                        SELECT HQ_OFFICE_CD,
                                                PROD_CD
                                          FROM TB_HQ_KIOSK_KEY
                                         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                           AND TU_CLS_TYPE = #{tuClsType}
                                           AND TU_CLS_CD = #{tuClsCd}
                                     GROUP BY HQ_OFFICE_CD, PROD_CD
                ) thkk ON thp.HQ_OFFICE_CD = thkk.HQ_OFFICE_CD
                AND thp.PROD_CD = thkk.PROD_CD
                WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_HQ_PRODUCT_CLASS
                                                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                        SELECT 1
                          FROM TB_HQ_PRODUCT_BARCD
                         WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                           AND PROD_CD = thp.PROD_CD
                           AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND thp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <choose>
                    <when test='regYn != null and regYn == "Y"'>
                        AND thkk.PROD_CD IS NOT NULL
                    </when>
                    <when test='regYn != null and regYn == "N"'>
                        AND thkk.PROD_CD IS NULL
                    </when>
                    <otherwise></otherwise>
                </choose>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD,
                        tmp.PROD_NM,
                        NVL(tmpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                        (CASE WHEN tmkk.PROD_CD IS NULL THEN 'N' ELSE 'Y' END) AS REG_YN,
                        (SELECT PROD_NM FROM TB_MS_PRODUCT tmp2 WHERE STORE_CD = #{storeCd} AND PROD_CD = tmp.GROUP_PROD_CD) AS GROUP_PROD_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_MS_PRODUCT tmp
                  LEFT OUTER JOIN (
                                          SELECT STORE_CD,
                                                  PROD_CD,
                                                  MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                                            FROM TB_MS_PRODUCT_SALE_PRICE
                                           WHERE STORE_CD = #{storeCd}
                                          <![CDATA[
                                             AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                             AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                          ]]>
                                             AND SALE_PRC_FG = '1'
                                       GROUP BY STORE_CD, PROD_CD
                                    ) tmpsp ON tmp.STORE_CD = tmpsp.STORE_CD
                                           AND tmp.PROD_CD = tmpsp.PROD_CD
                  INNER JOIN TB_MS_STORE tms ON tms.STORE_CD  = tmp.STORE_CD
                  LEFT OUTER JOIN (
                                            SELECT STORE_CD,
                                                    PROD_CD
                                              FROM TB_MS_KIOSK_KEY
                                             WHERE STORE_CD = #{storeCd}
                                               AND POS_NO = #{posNo}
                                               AND TU_CLS_TYPE = #{tuClsType}
                                               AND TU_CLS_CD = #{tuClsCd}
                                         GROUP BY STORE_CD, PROD_CD
                                    ) tmkk ON tmp.STORE_CD = tmkk.STORE_CD
                                          AND tmp.PROD_CD = tmkk.PROD_CD
                   WHERE tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_MS_PRODUCT_CLASS
                                                  WHERE STORE_CD = #{storeCd}
                                             START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                     CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND STORE_CD = #{storeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                                    SELECT 1
                                      FROM TB_MS_PRODUCT_BARCD
                                     WHERE STORE_CD = tmp.STORE_CD
                                       AND PROD_CD = tmp.PROD_CD
                                       AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND tmp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <choose>
                    <when test='regYn != null and regYn == "Y"'>
                        AND tmkk.PROD_CD IS NOT NULL
                    </when>
                    <when test='regYn != null and regYn == "N"'>
                        AND tmkk.PROD_CD IS NULL
                    </when>
                    <otherwise></otherwise>
                </choose>
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 관련 코드 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키를 등록하기 위한 코드값 조회한다. ( 본사/매장 )
    -->
    <select id="getKioskKeyMapCode" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMapCode */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(TU_KEY_CD),0)+1, 3, 0) AS TU_KEY_CD,
                        NVL(MAX(INDEX_NO),0)+1 AS INDEX_NO
                  FROM TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                 SELECT LPAD(NVL(MAX(TU_KEY_CD),0)+1, 3, 0) AS TU_KEY_CD,
                         NVL(MAX(INDEX_NO),0)+1 AS INDEX_NO
                   FROM TB_MS_KIOSK_KEY
                  WHERE STORE_CD = #{storeCd}
                    AND POS_NO = #{posNo}
                    AND TU_CLS_TYPE = #{tuClsType}
                    AND TU_CLS_CD = #{tuClsCd}
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 등록 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 상품을 키맵에 등록한다. ( 본사/매장 )
    -->
    <insert id="saveKioskKeyMap" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.saveKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    INSERT INTO TB_HQ_KIOSK_KEY
                    (
                        HQ_OFFICE_CD,
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                    )
                    VALUES
                    (
                        #{hqOfficeCd},
                        #{tuClsType},
                        #{tuClsCd},
                        #{tuKeyCd},
                        #{prodCd},
                        #{tuPage},
                        #{x},
                        #{y},
                        #{width},
                        #{height},
                        #{indexNo},
                        #{clsFg},
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                    )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                  INSERT INTO TB_MS_KIOSK_KEY
                  (
                        STORE_CD,
                        POS_NO,
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                  )
                  VALUES
                  (
                        #{storeCd},
                        #{posNo},
                        #{tuClsType},
                        #{tuClsCd},
                        #{tuKeyCd},
                        #{prodCd},
                        #{tuPage},
                        #{x},
                        #{y},
                        #{width},
                        #{height},
                        #{indexNo},
                        #{clsFg},
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                  )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵 그룹복제 - 기존 카테고리(분류) 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 기존 카테고리(분류)를 복사한다. ( 본사/매장 )
    -->
    <insert id="copyKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_CLS
                (
                    HQ_OFFICE_CD,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    CLS_MEMO,
                    TU_M_CLS_FG
                )
                SELECT HQ_OFFICE_CD,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_CLS_NM,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        CLS_MEMO,
                        TU_M_CLS_FG
                  FROM TB_HQ_KIOSK_CLS
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_CLS
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    CLS_MEMO
                )
                SELECT STORE_CD,
                        POS_NO,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_CLS_NM,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        CLS_MEMO
                  FROM TB_MS_KIOSK_CLS
                 WHERE STORE_CD = #{storeCd}
                   AND POS_NO = #{posNo}
                   AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵 그룹복제 - 기존 키맵그룹에 엮여있는 상품 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵그룹 복제 시, 기존 키맵그룹에 엮여있는 상품들도 복사한다. ( 본사/매장 )
    -->
    <insert id="copyKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_KEY
                (
                        HQ_OFFICE_CD,
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                )
                SELECT HQ_OFFICE_CD,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                  FROM TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_KEY
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_KEY_CD,
                    PROD_CD,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                SELECT STORE_CD,
                        POS_NO,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                FROM TB_MS_KIOSK_KEY
                WHERE STORE_CD = #{storeCd}
                  AND POS_NO = #{posNo}
                  AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵 그룹복제(다른 포스로 복제) - 기존 카테고리(분류) 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 기존 카테고리(분류)를 복사한다. ( 매장 )
    -->
    <insert id="copyPosKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyPosKioskCategory */
        INSERT INTO TB_MS_KIOSK_CLS
        (
        STORE_CD,
        POS_NO,
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        REG_DT,
        REG_ID,
        MOD_DT,
        MOD_ID
        )
        SELECT STORE_CD,
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_MS_KIOSK_CLS
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{orgTuClsType}
    </insert>

    <!-- 키오스크 키맵 그룹복제(다른 포스로 복제) - 기존 키맵그룹에 엮여있는 상품 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵그룹 복제 시, 기존 키맵그룹에 엮여있는 상품들도 복사한다. ( 매장 )
    -->
    <insert id="copyPosKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyPosKioskKeyMap */
        INSERT INTO TB_MS_KIOSK_KEY
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT STORE_CD,
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_KEY_CD,
        PROD_CD,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_MS_KIOSK_KEY
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{orgTuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 매장리스트 조회 -->
    <!--
          TABLE    : TB_MS_STORE
          PARAM    : kioskKeyMapVO
          COMMENTS : 키오스크 키맵 매장선택팝업에서 매장리스트를 조회한다.
    -->
    <select id="getStoreList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getStoreList */
        SELECT *
        FROM
        (
            SELECT
            tms.HQ_OFFICE_CD,
            tms.STORE_CD,
            tms.STORE_NM,
            tms.SYS_STAT_FG,
            (SELECT COUNT(*) FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND ENVST_CD = '4019' AND ENVST_VAL = '6') AS KIOSK_POS_CNT,
            tmp.POS_NO,
            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG
            FROM TB_MS_STORE tms,
            (
                SELECT
                tmp.STORE_CD,
                tmp.POS_NO
                FROM TB_MS_POS_ENVST tmpe,
                TB_MS_POS tmp
                WHERE tmpe.STORE_CD = tmp.STORE_CD
                AND tmpe.POS_NO = tmp.POS_NO
                AND tmpe.ENVST_CD = '4019'
                AND tmpe.ENVST_VAL = '6'
            ) tmp
            WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tmp.STORE_CD = tms.STORE_CD
            <if test="storeCd != null and storeCd != ''">
                AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
            </if>
            <if test="storeNm != null and storeNm != ''">
                AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
            </if>
            <if test="sysStatFg != null and sysStatFg != ''">
                AND tms.SYS_STAT_FG = #{sysStatFg} --매장상태구분
            </if>
            <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
                AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
            </if>
            <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
                <if test='userBrands != null and userBrands != ""'>
                    -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                    AND tms.HQ_BRAND_CD IN
                    <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
            </if>
            ORDER BY tms.STORE_CD, tmp.POS_NO ASC
        )
        WHERE 1=1
        <if test="tuMClsFg != null and tuMClsFg != ''">
            AND TU_M_CLS_FG = #{tuMClsFg}
        </if>
    </select>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsType" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsType */
        DELETE TB_MS_KIOSK_CLS
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹명 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsTypeNm" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsTypeNm */
        DELETE TB_MS_KIOSK_GROUP
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 키맵 매장적용 전 기존 키맵그룹에 엮어있는 상품 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵 매장적용 전 기존 키맵그룹에 엮어있는 상품을 삭제한다.(카테고리(분류)기준)
    -->
    <delete id="deleteKioskKeyMapByTuClsCd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteKioskKeyMapByTuClsCd */
        DELETE TB_MS_KIOSK_KEY
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deletePosStoreKioskCategory" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deletePosStoreKioskCategory */
        DELETE  TB_MS_KIOSK_CLS
        WHERE   STORE_CD = #{storeCd}
        AND     POS_NO = #{posNo}
        AND     TU_CLS_TYPE = #{orgTuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deletePosStoreTuClsType" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deletePosStoreTuClsType */
        DELETE  TB_MS_KIOSK_KEY
        WHERE   STORE_CD = #{storeCd}
        AND     POS_NO = #{posNo}
        AND     TU_CLS_TYPE = #{orgTuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreReg" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreReg */
        INSERT INTO TB_MS_KIOSK_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            TU_M_CLS_FG
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        #{tuMClsFg} -- 매장 적용시에만 UPDATE / 매장 해당컬럼 사용안함 / 수정 기록 확인용 / 매장은 [4101 KIOSK중분류사용] 사용
        FROM TB_HQ_KIOSK_CLS tmkc
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵명매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskStoreTuClsTypeNm" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskStoreTuClsTypeNm */
            INSERT INTO TB_MS_KIOSK_GROUP
             (
                STORE_CD,
                POS_NO,
                TU_CLS_TYPE,
                TU_CLS_TYPE_NM,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
             )
                SELECT #{storeCd},
                        #{posNo},
                        TU_CLS_TYPE,
                        TU_CLS_TYPE_NM,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                  FROM TB_HQ_KIOSK_GROUP
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskKeyMapStoreReg" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskKeyMapStoreReg */
            INSERT INTO TB_MS_KIOSK_KEY
             (
                STORE_CD,
                POS_NO,
                TU_CLS_TYPE,
                TU_CLS_CD,
                TU_KEY_CD,
                PROD_CD,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                CLS_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
             )
                SELECT #{storeCd},
                        #{posNo},
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                  FROM TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 매장적용(매장/포장) - 매장 키오스크 포스 리스트 조회 -->
    <!--
          TABLE    : TB_MS_STORE
          PARAM    : kioskKeyMapVO
          COMMENTS : 키오스크 매장적용(매장/포장) 시 매장 키오스크 포스 리스트를 조회한다.
    -->
    <select id="getStoreKioskPosList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getStoreKioskPosList */
        SELECT *
        FROM
        (
            SELECT
            tms.STORE_NM,
            tms.STORE_CD,
            tmp.POS_NO,
            tms.SYS_STAT_FG,
            (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4068') AS ENV_4068,
            (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4069') AS ENV_4069,
            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG
            FROM TB_MS_STORE tms,
            (
                SELECT tmp.STORE_CD,
                tmp.POS_NO
                FROM TB_MS_POS_ENVST tmpe,
                TB_MS_POS tmp
                WHERE tmpe.STORE_CD = tmp.STORE_CD
                AND tmpe.POS_NO = tmp.POS_NO
                AND tmpe.ENVST_CD = '4019'
                AND tmpe.ENVST_VAL = '6'
            ) tmp
            WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tmp.STORE_CD = tms.STORE_CD
            <if test="storeCd != null and storeCd != ''">
                AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
            </if>
            <if test="storeNm != null and storeNm != ''">
                AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
            </if>
            <if test="sysStatFg != null and sysStatFg != ''">
                AND tms.SYS_STAT_FG = #{sysStatFg} --매장상태구분
            </if>
            ORDER BY tms.STORE_CD, tmp.POS_NO ASC
        )
        WHERE 1=1
        <if test="tuMClsFg != null and tuMClsFg != ''">
            AND TU_M_CLS_FG = #{tuMClsFg}
        </if>
    </select>

    <!-- 키오스크 매장적용(매장/포장) - 본사 환경설정값 저장 -->
    <!--
        TABLE    : TB_HQ_ENVST
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 매장적용(매장/포장) 시 본사 환경설정값(매장:4068/포장:4069)을 일괄 저장한다.
    -->
    <insert id="insertHqKioskEnv" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertHqKioskEnv */
        MERGE INTO TB_HQ_ENVST
        USING DUAL ON
        (
            HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = #{envstCd}
        )
        WHEN MATCHED THEN
        UPDATE
           SET ENVST_VAL = #{envstVal},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
        WHEN NOT MATCHED THEN
        INSERT
         (
                HQ_OFFICE_CD,
                ENVST_CD,
                ENVST_VAL,
                DIRCT_IN_YN,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
          )
          VALUES
          (
                #{hqOfficeCd},
                #{envstCd},
                #{envstVal},
                #{dirctInYn},
                #{useYn},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
           )
    </insert>

    <!-- 키오스크 매장적용(매장/포장) - 매장 키오스크 포스 환경설정값 일괄 저장 -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 매장적용(매장/포장) 시 매장 포스 환경설정값(매장:4068/포장:4069)을 일괄 저장한다.
    -->
    <insert id="insertStoreKioskPosEnv" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertStoreKioskPosEnv */
        MERGE INTO TB_MS_POS_ENVST
        USING DUAL ON
        (
            STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = #{envstCd}
        )
        WHEN MATCHED THEN
        UPDATE
           SET ENVST_VAL = #{envstVal},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
        WHEN NOT MATCHED THEN
        INSERT
         (
                STORE_CD,
                POS_NO,
                ENVST_CD,
                ENVST_VAL,
                DIRCT_IN_YN,
                POS_FG,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
          )
        VALUES
         (
                #{storeCd},
                #{posNo},
                #{envstCd},
                #{envstVal},
                #{dirctInYn},
                #{posFg},
                #{useYn},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
         )
    </insert>

    <!-- 키오스크 매장적용(매장/포장) - 키오스크 환경설정 값 가져오기 -->
    <!--
        TABLE    : TB_HQ_ENVST, TB_MS_POS_ENVST
        COMMENTS : 키오스크 매장적용(매장/포장) 시 키오스크 환경설정 값을 가져온다.
    -->
    <select id="getKioskEnv" parameterType="kioskKeyMapVO" resultType="String">
      /* USE : KioskKeyMapMapper.getKioskEnv */
        <choose>
        <!-- 본사 -->
        <when test='orgnFg != null and orgnFg == "H"'>
            SELECT ENVST_VAL
              FROM TB_HQ_ENVST
             WHERE HQ_OFFICE_CD = #{hqOfficeCd}
               AND ENVST_CD = #{envstCd}
        </when>
        <!-- 매장 -->
        <when test='orgnFg != null and orgnFg == "S"'>
            SELECT ENVST_VAL
              FROM TB_MS_POS_ENVST
             WHERE STORE_CD = #{storeCd}
               AND POS_NO = #{posNo}
               AND ENVST_CD = #{envstCd}
        </when>
        </choose>
    </select>


    <!--  키오스크 추천메뉴 - 추천메뉴코드 가져오기  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴를 가져온다.
    -->
    <select id="getRecmd" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  RECMD_CD,
                        RECMD_TYPE,
                        CASE WHEN RECMD_TYPE = '0' THEN '선택불가'
                        WHEN RECMD_TYPE = '1' AND PROD_CD IS NULL THEN '선택'
                        ELSE PROD_CD
                        END AS RECMD_PROD_CD,
                        CASE WHEN PROD_CD IS NOT NULL THEN (SELECT  PROD_NM
                                                            FROM    TB_HQ_PRODUCT thp
                                                            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                                            AND     thp.PROD_CD = thkr.PROD_CD)
                        ELSE ''
                        END AS PROD_NM,
                        DISP_TYPE,
                        ADD_TYPE,
                        USE_YN
                FROM    TB_HQ_KIOSK_RECMD thkr
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                ORDER BY RECMD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  RECMD_CD,
                        RECMD_TYPE,
                        CASE WHEN RECMD_TYPE = '0' THEN '선택불가'
                        WHEN RECMD_TYPE = '1' AND PROD_CD IS NULL THEN '선택'
                        ELSE PROD_CD
                        END AS RECMD_PROD_CD,
                        CASE WHEN PROD_CD IS NOT NULL THEN (SELECT  PROD_NM
                                                            FROM    TB_MS_PRODUCT tmp
                                                            WHERE   STORE_CD = #{storeCd}
                                                            AND     tmp.PROD_CD = tmkr.PROD_CD)
                        ELSE ''
                        END AS PROD_NM,
                        DISP_TYPE,
                        ADD_TYPE,
                        USE_YN
                FROM    TB_MS_KIOSK_RECMD tmkr
                WHERE   STORE_CD = #{storeCd}
                ORDER BY RECMD_CD
            </when>
        </choose>
    </select>

    <!--  키오스크 추천메뉴 - 추천메뉴코드 자동채번  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 자동채번
    -->
    <select id="getRecmdCd" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getRecmdCd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  LPAD((NVL(MAX(RECMD_CD), 0) + 1), 4, '0')
                FROM    TB_HQ_KIOSK_RECMD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  LPAD((NVL(MAX(RECMD_CD), 0) + 1), 4, '0')
                FROM    TB_MS_KIOSK_RECMD
                WHERE   STORE_CD = #{storeCd}
            </when>
        </choose>
    </select>

    <!-- 키오스크 추천메뉴 - 추천메뉴코드 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 저장
    -->
    <insert id="saveRecmd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_KIOSK_RECMD
                USING DUAL ON
                (
                HQ_OFFICE_CD = #{hqOfficeCd} AND RECMD_CD = #{recmdCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET RECMD_TYPE = #{recmdType},
                PROD_CD = #{recmdProdCd},
                DISP_TYPE = #{dispType},
                ADD_TYPE = #{addType},
                USE_YN = #{useYn},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                HQ_OFFICE_CD,
                RECMD_CD,
                RECMD_TYPE,
                PROD_CD,
                DISP_TYPE,
                ADD_TYPE,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{hqOfficeCd},
                #{recmdCd},
                #{recmdType},
                #{recmdProdCd},
                #{dispType},
                #{addType},
                #{useYn},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_RECMD
                USING DUAL ON
                (
                STORE_CD = #{storeCd} AND RECMD_CD = #{recmdCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET RECMD_TYPE = #{recmdType},
                PROD_CD = #{recmdProdCd},
                DISP_TYPE = #{dispType},
                ADD_TYPE = #{addType},
                USE_YN = #{useYn},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                STORE_CD,
                RECMD_CD,
                RECMD_TYPE,
                PROD_CD,
                DISP_TYPE,
                ADD_TYPE,
                USE_YN,
                REG_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{storeCd},
                #{recmdCd},
                #{recmdType},
                #{recmdProdCd},
                #{dispType},
                #{addType},
                #{useYn},
                #{regFg},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 추천메뉴 - 추천메뉴코드 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴코드 삭제
    -->
    <delete id="deleteRecmd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_RECMD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_RECMD
                WHERE   STORE_CD = #{storeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
        </choose>
    </delete>

    <!--  키오스크 추천메뉴 - 추천상품 조회  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천상품을 가져온다.
    -->
    <select id="getRecmdProd" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  thkrp.INDEX_NO,
                        thkrp.RECMD_PROD_CD,
                        thp.PROD_NM
                FROM    TB_HQ_KIOSK_RECMD_PROD thkrp,
                        TB_HQ_PRODUCT thp
                WHERE   thkrp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkrp.RECMD_CD = #{recmdCd}
                AND		thp.HQ_OFFICE_CD = thkrp.HQ_OFFICE_CD
                AND		thp.PROD_CD = thkrp.RECMD_PROD_CD
                ORDER BY INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  tmkrp.INDEX_NO,
                        tmkrp.RECMD_PROD_CD,
                        tmp.PROD_NM
                FROM    TB_MS_KIOSK_RECMD_PROD tmkrp,
                        TB_MS_PRODUCT tmp
                WHERE   tmkrp.STORE_CD = #{storeCd}
                AND     tmkrp.RECMD_CD = #{recmdCd}
                AND		tmp.STORE_CD = tmkrp.STORE_CD
                AND		tmp.PROD_CD = tmkrp.RECMD_PROD_CD
                ORDER BY INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 추천메뉴 - 추천상품 조회  -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_KIOSK_RECMD_PROD
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 추천상품으로 등록할 상품을 조회한다. ( 본사/매장 )
    -->
    <select id="getRecmdProdList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getRecmdProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT thp.PROD_CD AS RECMD_PROD_CD,
                thp.PROD_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_HQ_PRODUCT thp
                INNER JOIN TB_HQ_OFFICE tho ON tho.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                LEFT OUTER JOIN (
                SELECT RECMD_PROD_CD, HQ_OFFICE_CD
                FROM TB_HQ_KIOSK_RECMD_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND RECMD_CD = #{recmdCd}
                ) thkk ON thp.HQ_OFFICE_CD = thkk.HQ_OFFICE_CD
                AND thp.PROD_CD = thkk.RECMD_PROD_CD
                WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_HQ_PRODUCT_CLASS
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM TB_HQ_PRODUCT_BARCD
                    WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND PROD_CD = thp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND thp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                AND thkk.RECMD_PROD_CD IS NULL
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD AS RECMD_PROD_CD,
                tmp.PROD_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_MS_PRODUCT tmp
                INNER JOIN TB_MS_STORE tms ON tms.STORE_CD  = tmp.STORE_CD
                LEFT OUTER JOIN (
                SELECT RECMD_PROD_CD, STORE_CD
                FROM TB_MS_KIOSK_RECMD_PROD
                WHERE STORE_CD = #{storeCd}
                AND RECMD_CD = #{recmdCd}
                ) tmkk ON tmp.STORE_CD = tmkk.STORE_CD
                AND tmp.PROD_CD = tmkk.RECMD_PROD_CD
                WHERE tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND STORE_CD = #{storeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM TB_MS_PRODUCT_BARCD
                    WHERE STORE_CD = tmp.STORE_CD
                    AND PROD_CD = tmp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND tmp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                AND tmkk.RECMD_PROD_CD IS NULL
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!--  키오스크 추천메뉴 - 추천메뉴 순번  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD_PROD, TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 순번
    -->
    <select id="getIndex" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getIndex */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  (NVL(MAX(INDEX_NO), 0) + 1 )
                FROM    TB_HQ_KIOSK_RECMD_PROD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  (NVL(MAX(INDEX_NO), 0) + 1 )
                FROM    TB_MS_KIOSK_RECMD_PROD
                WHERE   STORE_CD = #{storeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
        </choose>
    </select>

    <!--  키오스크 추천메뉴 - 추천메뉴 삭제  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD_PROD, TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 삭제
    -->
    <delete id="deleteRecmdProd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_RECMD_PROD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_RECMD_PROD
                WHERE   STORE_CD = #{storeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 추천메뉴 - 추천메뉴 저장 -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 저장
    -->
    <insert id="addRecmdProd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.addRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_RECMD_PROD
                (
                HQ_OFFICE_CD,
                RECMD_CD,
                RECMD_PROD_CD,
                INDEX_NO,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{hqOfficeCd},
                #{recmdCd},
                #{recmdProdCd},
                #{index},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_RECMD_PROD
                (
                STORE_CD,
                RECMD_CD,
                RECMD_PROD_CD,
                INDEX_NO,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{storeCd},
                #{recmdCd},
                #{recmdProdCd},
                #{index},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 추천메뉴 매장적용 - 매장에서 사용중인 기존 메뉴추천정보 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 메뉴추천정보를 삭제한다.
    -->
    <delete id="deleteStoreRecmd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreRecmd */
        DELETE
          FROM TB_MS_KIOSK_RECMD
         WHERE STORE_CD = #{storeCd}
    </delete>

    <!-- 키오스크 추천메뉴 매장적용 - 매장에서 사용중인 기존 메뉴추천리스트 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 메뉴추천리스트를 삭제한다.
    -->
    <delete id="deleteStoreRecmdProd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreRecmdProd */
        DELETE
          FROM TB_MS_KIOSK_RECMD_PROD
         WHERE STORE_CD = #{storeCd}
    </delete>

    <!-- 키오스크 추천메뉴 매장적용 - 본사에서 사용중인 메뉴추천정보 매장등록 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD, TB_HQ_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사에서 사용중인 메뉴추천정보를 매장에 등록한다.
    -->
    <insert id="insertStoreHqRecmd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertStoreHqRecmd */
                INSERT INTO TB_MS_KIOSK_RECMD
                  (
                        STORE_CD,
                        RECMD_CD,
                        RECMD_TYPE,
                        PROD_CD,
                        DISP_TYPE,
                        REG_FG,
                        ADD_TYPE,
                        USE_YN,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                  )
                    SELECT #{storeCd},
                            RECMD_CD,
                            RECMD_TYPE,
                            PROD_CD,
                            DISP_TYPE,
                            'H',
                            ADD_TYPE,
                            USE_YN,
                            #{regDt},
                            #{regId},
                            #{modDt},
                            #{modId}
                     FROM TB_HQ_KIOSK_RECMD thkr
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}

    </insert>

    <!-- 키오스크 추천메뉴 매장적용 - 본사에서 사용중인 메뉴추천리스트 매장등록 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD_PROD, TB_HQ_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사에서 사용중인 메뉴추천리스트를 매장에 등록한다.
    -->
    <insert id="insertStoreHqRecmdProd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertStoreHqRecmdProd */
                INSERT INTO TB_MS_KIOSK_RECMD_PROD
                  (
                        STORE_CD,
                        RECMD_CD,
                        RECMD_PROD_CD,
                        INDEX_NO,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                  )
                    SELECT #{storeCd},
                            RECMD_CD,
                            RECMD_PROD_CD,
                            INDEX_NO,
                            #{regDt},
                            #{regId},
                            #{modDt},
                            #{modId}
                     FROM TB_HQ_KIOSK_RECMD_PROD thkrp
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}

    </insert>


    <!-- 키오스크 카테고리(중분류) 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류)를 가져온다.
    -->
    <select id="getKioskCategoryM" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                HQ_OFFICE_CD,
                TU_CLS_TYPE,
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO AS MM_CLS_MEMO,
                CLS_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                FROM TB_HQ_KIOSK_M_CLS tmkmc
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                ORDER BY INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                STORE_CD,
                POS_NO,
                TU_CLS_TYPE,
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO AS MM_CLS_MEMO,
                CLS_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                FROM TB_MS_KIOSK_M_CLS tmkmc
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                ORDER BY INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(중분류) 저장 - 생성 시 카테고리 코드 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(중분류) 생성 시 카테고리 코드를 생성한다.
    -->
    <select id="getKioskCategoryCodeM" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getKioskCategoryCodeM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(TU_M_CLS_CD), '0') + 1, 2, '0')
                FROM TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(TU_M_CLS_CD), '0') + 1, 2, '0')
                FROM TB_MS_KIOSK_M_CLS
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(중분류) 저장 - 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성한다.
    -->
    <insert id="insertKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_M_CLS
                (
                    HQ_OFFICE_CD,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_M_CLS_CD,
                    TU_M_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    M_CLS_MEMO
                )
                VALUES
                (
                    #{hqOfficeCd},
                    #{tuClsType},
                    #{tuClsCd},
                    #{tuMClsCd},
                    #{tuMClsNm},
                    #{tuPage},
                    #{x},
                    #{y},
                    #{width},
                    #{height},
                    #{indexNo},
                    #{clsFg},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{mmClsMemo}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_M_CLS
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_M_CLS_CD,
                    TU_M_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    M_CLS_MEMO
                )
                VALUES
                (
                    #{storeCd},
                    #{posNo},
                    #{tuClsType},
                    #{tuClsCd},
                    #{tuMClsCd},
                    #{tuMClsNm},
                    #{tuPage},
                    #{x},
                    #{y},
                    #{width},
                    #{height},
                    #{indexNo},
                    #{clsFg},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{mmClsMemo}
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 카테고리(중분류) 저장 - 수정 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류) 수정한다.
    -->
    <update id="updateKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.updateKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_KIOSK_M_CLS
                SET TU_M_CLS_NM = #{tuMClsNm},
                TU_PAGE = #{tuPage},
                X = #{x},
                Y = #{y},
                WIDTH = #{width},
                HEIGHT = #{height},
                INDEX_NO = #{indexNo},
                CLS_FG = #{clsFg},
                MOD_DT = #{modDt},
                MOD_ID = #{modId},
                M_CLS_MEMO = #{mmClsMemo}
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_KIOSK_M_CLS
                SET TU_M_CLS_NM = #{tuMClsNm},
                TU_PAGE = #{tuPage},
                X = #{x},
                Y = #{y},
                WIDTH = #{width},
                HEIGHT = #{height},
                INDEX_NO = #{indexNo},
                CLS_FG = #{clsFg},
                MOD_DT = #{modDt},
                MOD_ID = #{modId},
                M_CLS_MEMO = #{mmClsMemo}
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
        </choose>
    </update>

    <!-- 키오스크 카테고리(중분류) 저장 - 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류) 삭제한다.
    -->
    <delete id="deleteKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_M_CLS
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키맵그룹에 KIOSK중분류사용 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getKioskKeyMapGroupTuMClsFg" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMapGroupTuMClsFg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL(TU_M_CLS_FG, 0) AS TU_M_CLS_FG
                FROM TB_HQ_KIOSK_CLS tmkc
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                GROUP BY TU_M_CLS_FG
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG
                FROM dual
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 키맵그룹에 KIOSK중분류사용 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getCopyKioskKeyMapGroupTuMClsFg" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getCopyKioskKeyMapGroupTuMClsFg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT TU_M_CLS_FG
                FROM TB_HQ_KIOSK_CLS tmkc
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
                GROUP BY TU_M_CLS_FG
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = '4101') AS TU_M_CLS_FG
                FROM dual
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 중분류 키맵그룹 rowCount 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getKioskMClsCount" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskMClsCount */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
                FROM TB_HQ_KIOSK_M_CLS
                WHERE 1=1
                AND HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
                FROM TB_MS_KIOSK_M_CLS
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 기존 카테고리(중분류) 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 기존 카테고리(중분류)를 복사한다. ( 본사/매장 )
    -->
    <insert id="copyKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_M_CLS
                (
                    HQ_OFFICE_CD,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_M_CLS_CD,
                    TU_M_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    M_CLS_MEMO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                SELECT
                HQ_OFFICE_CD,
                #{tuClsType},
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO,
                CLS_FG,
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                FROM TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_M_CLS
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_M_CLS_CD,
                    TU_M_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    M_CLS_MEMO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                SELECT
                STORE_CD,
                POS_NO,
                #{tuClsType},
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO,
                CLS_FG,
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                FROM TB_MS_KIOSK_M_CLS
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreRegM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreRegM */
        INSERT INTO TB_MS_KIOSK_M_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_M_CLS_CD,
            TU_M_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            M_CLS_MEMO
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_M_CLS_CD,
        TU_M_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        M_CLS_MEMO
        FROM TB_HQ_KIOSK_M_CLS tmkc
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제(중분류) -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsTypeM" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsTypeM */
        DELETE TB_MS_KIOSK_M_CLS
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

</mapper>