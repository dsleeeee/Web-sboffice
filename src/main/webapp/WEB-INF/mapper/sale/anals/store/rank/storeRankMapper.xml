<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.anals.store.rank.service.impl.StoreRankMapper">
    <!-- 매장별매출분석 - 매장순위 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_TOTAL, TB_SL_DAILY_PAY, TB_MS_STORE
        PARAM    : storeRankVO
        COMMENTS : 매장별매출분석 - 매장순위 리스트를 조회한다.
    -->
    <select id="getStoreRankList" parameterType="storeRankVO" resultType="DefaultMap">
        /* USE : storeRankMapper.getStoreRankList */
        SELECT 	*
        FROM
        (
		SELECT M2.STORE_CD
		      , M2.STORE_NM
		      , NVL(M1.TOT_SALE_AMT, 0) AS TOT_SALE_AMT
		      , NVL(M1.TOT_DC_AMT, 0) AS TOT_DC_AMT
		      , NVL(M1.REAL_SALE_AMT, 0) AS REAL_SALE_AMT
		      , NVL(M2.SALE_DATE_CNT, 0) AS SALE_DATE_CNT
              , DECODE(NVL(M2.SALE_DATE_CNT, 0), 0, 0, ROUND(M1.REAL_SALE_AMT / M2.SALE_DATE_CNT)) AS REAL_SALE_AMT_AVG
		      , NVL(M1.BILL_CNT, 0) AS BILL_CNT
			  , DECODE(NVL(M1.BILL_CNT, 0), 0, 0, ROUND(M1.REAL_SALE_AMT/M1.BILL_CNT)) AS BILL_UPRC
		      , NVL(M1.TOT_GUEST_CNT, 0) AS TOT_GUEST_CNT
		      , NVL(ROUND(RATIO_TO_REPORT(M1.REAL_SALE_AMT) OVER(), 2) *100, 0) AS STORE_RAT
		      , M2.INDEX_NO
			  ${sQuery1}
		FROM (
			SELECT TSDT.STORE_CD
			     , SUM(TSDT.TOT_SALE_AMT) AS TOT_SALE_AMT
			     , SUM(TSDT.TOT_DC_AMT) AS TOT_DC_AMT
			     , SUM(TSDT.REAL_SALE_AMT) AS REAL_SALE_AMT
			     , SUM(TSDT.REAL_SALE_CNT) AS BILL_CNT
			     , SUM(TSDT.TOT_GUEST_CNT) AS TOT_GUEST_CNT
			  FROM TB_SL_DAILY_TOTAL TSDT
			 WHERE TSDT.HQ_OFFICE_CD = #{hqOfficeCd}
			<if test='startDate != null and startDate != ""'>
			   AND TSDT.SALE_DATE >= #{startDate}
			</if>
			<if test='endDate != null and endDate != ""'>
			   AND TSDT.SALE_DATE <![CDATA[<= ]]> #{endDate}
			</if>
            <if test='storeCdQuery != null and storeCdQuery != ""'>
                AND TSDT.STORE_CD IN (${storeCdQuery})
            </if>
			<if test='orgnFg != null and orgnFg == "H"'>
				AND (
						'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
					OR	TSDT.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
					)
			</if>
			 GROUP BY TSDT.STORE_CD
		 ) M1,
		 (
		SELECT 	TMS.STORE_CD
		, 		TMS.STORE_NM
		,		TMS.SYS_STAT_FG
		, 		(SELECT COUNT(*) FROM TB_SL_DAILY_TOTAL Z
				WHERE Z.STORE_CD = TMS.STORE_CD
				AND Z.HQ_OFFICE_CD = #{hqOfficeCd}
				<if test='startDate != null and startDate != ""'>
					AND Z.SALE_DATE >= #{startDate}
				</if>
				<if test='endDate != null and endDate != ""'>
					AND Z.SALE_DATE <![CDATA[<= ]]> #{endDate}
				</if>
				) AS SALE_DATE_CNT
		,		TMSI.INDEX_NO
		FROM 	TB_MS_STORE TMS,
		     	TB_MS_STORE_INFO TMSI
		WHERE 	TMS.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND TMS.STORE_CD IN (${storeCdQuery})
        </if>
		<if test='orgnFg != null and orgnFg == "H"'>
			AND (
					'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
				OR	TMS.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
				)
		</if>
		     AND TMSI.STORE_CD (+)= TMS.STORE_CD
		) M2,
		(
			SELECT STORE_CD
				  ${sQuery2}
			  FROM TB_SL_DAILY_PAY TSDP
			 WHERE TSDP.HQ_OFFICE_CD = #{hqOfficeCd}
				<if test='startDate != null and startDate != ""'>
					AND TSDP.SALE_DATE >= #{startDate}
				</if>
				<if test='endDate != null and endDate != ""'>
					AND TSDP.SALE_DATE <![CDATA[<= ]]> #{endDate}
				</if>
                <if test='storeCdQuery != null and storeCdQuery != ""'>
                    AND TSDP.STORE_CD IN (${storeCdQuery})
                </if>
				<if test='orgnFg != null and orgnFg == "H"'>
					AND (
							'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
						OR	TSDP.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
						)
				</if>
			GROUP BY TSDP.STORE_CD
		) N
		WHERE 	M2.STORE_CD = M1.STORE_CD(+)
		AND		M2.STORE_CD = N.STORE_CD(+)
		AND 	(M2.SYS_STAT_FG = '1' OR M1.TOT_SALE_AMT != 0)
		<if test='chkSort == "1"'>
			ORDER BY TOT_SALE_AMT DESC
		</if>
		<if test='chkSort == "2"'>
			ORDER BY TOT_SALE_AMT ASC
		</if>
		)
		<if test='rowNum != null and rowNum != "" and chkRank == "N"'>
			WHERE ROWNUM <![CDATA[<= ]]> #{rowNum}
		</if>
    </select>

	<!-- 매장별매출분석 - 결제수단 컬럼 리스트 조회 -->
    <!--
        TABLE    : TB_CM_NMCODE
        PARAM    : storeRankVO
        COMMENTS : 결제수단 컬럼 리스트 조회한다.
    -->
    <select id="getPayColList" parameterType="storeRankVO" resultType="DefaultMap">
        /* USE : storeRankMapper.getPayColList */
        <![CDATA[
        SELECT  TCN.NMCODE_CD AS PAY_CD, TCN.NMCODE_NM AS PAY_NM, TCN.NMCODE_ITEM_1 AS PAY_METHOD
        FROM    TB_CM_NMCODE TCN
        WHERE   TCN.NMCODE_GRP_CD   =   '024'
        ORDER
        BY      TCN.NMCODE_CD
        ]]>
    </select>

	<!-- 매장별매출분석 - 결제수단 컬럼 리스트 조회 -->
	<!--
        TABLE    : TB_CM_NMCODE
        PARAM    : storeRankVO
        COMMENTS : 결제수단 컬럼 리스트 조회한다.
    -->
	<select id="getPayColAllList" parameterType="storeRankVO" resultType="DefaultMap">
        /* USE : storeRankMapper.getPayColAllList */
        <![CDATA[
		SELECT *
		FROM
		(
			SELECT *
			FROM
			(
				SELECT  TCN.NMCODE_CD AS PAY_CD, TCN.NMCODE_NM AS PAY_NM, TCN.NMCODE_ITEM_1 AS PAY_METHOD
				FROM    TB_CM_NMCODE TCN
				WHERE   TCN.NMCODE_GRP_CD   =   '024'
				ORDER
				BY      TCN.NMCODE_CD
			)
			UNION ALL
			(
				 SELECT
				'00' AS PAY_CD,
				'결제합계' AS PAY_NM,
				'' AS PAY_METHOD
				 FROM dual
			)
		)
		ORDER BY PAY_CD
        ]]>
	</select>

	<!-- 매장별매출분석 - 매장 리스트 조회 -->
	<!--
        TABLE    : TB_CM_NMCODE
        PARAM    : storeRankVO
        COMMENTS : 매장 리스트 조회한다.
    -->
	<select id="getStoreList" parameterType="storeRankVO" resultType="DefaultMap">
		/* USE : storeRankMapper.getStoreList */
		SELECT  tms.STORE_CD,
		       	tms.STORE_NM,
		       	tmsi.INDEX_NO
		FROM    TB_MS_STORE tms,
				TB_MS_STORE_INFO tmsi
		WHERE   tms.HQ_OFFICE_CD = #{hqOfficeCd}
		AND 	tmsi.STORE_CD (+)= tms.STORE_CD
		ORDER BY tmsi.INDEX_NO, tms.STORE_CD
	</select>


	<!-- 매장순위 - 매장인덱스저장 -->
	<!--
        TABLE    : TB_CM_NMCODE
        PARAM    : storeRankVO
        COMMENTS : 매장 리스트 조회한다.
    -->
	<insert id="saveStoreIndexNo" parameterType="DefaultMap">
		MERGE INTO TB_MS_STORE_INFO A
			USING   DUAL
			ON      (
					A.STORE_CD  =   #{storeCd}
				)
			WHEN MATCHED THEN
				UPDATE
					SET     A.INDEX_NO    =   #{indexNo}
					,       A.MOD_DT    =   #{regDt}
					,       A.MOD_ID    =   #{regId}
			WHEN NOT MATCHED THEN
				INSERT
					(
					 		A.STORE_CD
					,		A.INDEX_NO
					,       A.MOD_DT
					,       A.MOD_ID
					,       A.REG_DT
					,       A.REG_ID
					)
					VALUES
					(
							#{storeCd}
					,		#{indexNo}
					,       #{modDt}
					,       #{modId}
					,       #{regDt}
					,       #{regId}
					)
	</insert>
</mapper>
