<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    PosTemplate.xml
    포스출력물관리 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       노현수     2018.10.04      최초작성
-->
<mapper namespace="kr.co.solbipos.base.output.postemplate.service.impl.PosTemplateMapper">

    <!-- 출력물종류 목록 조회 -->
    <!--
        TABLE    : TB_CM_PRINT
        PARAM    : posTemplateVO
        COMMENTS : 출력물종류 목록을 조회한다.
    -->
    <select id="getPrintTypeList" parameterType="posTemplateVO" resultType="defaultMap">
        /* USE : PosServiceMapper.getPrintTypeList */
        SELECT
            tcp.PRT_CLASS_CD AS VALUE,
            tcp.PRT_CLASS_NM AS NAME
        FROM
            TB_CM_PRINT tcp
        ORDER BY
            tcp.PRT_CLASS_CD
    </select>

    <!-- 출력물코드 목록 조회 -->
    <!--
        TABLE    : TB_CM_PRINT_DTL
        PARAM    : posTemplateVO
        COMMENTS : 출력물코드 목록을 조회한다.
    -->
    <select id="getPrintCodeList" parameterType="posTemplateVO" resultType="defaultMap">
        /* USE : PosServiceMapper.getPrintCodeList */
        SELECT
            tcpd.PRT_CD,
            tcpc.CONTENT,
            tcpc.SAMPL_YN
        FROM
            TB_CM_PRINT_DTL tcpd
        LEFT OUTER JOIN TB_CM_PRINT_CODE tcpc ON
            tcpd.PRT_CD = tcpc.PRT_CD
        WHERE
            tcpd.PRT_CLASS_CD = #{prtClassCd}
        ORDER BY
            tcpd.DISP_SEQ
    </select>

    <!-- 출력물템플릿 목록 조회 -->
    <!--
        TABLE    : TB_HQ_PRINT_TEMPL, TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 출력물코드 목록을 조회한다.
    -->
    <select id="getPosTemplateList" parameterType="posTemplateVO" resultType="defaultMap">
        /* USE : PosServiceMapper.getPosTemplateList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                    thpt.PRT_CLASS_CD,
                    thpt.TEMPLT_REG_FG,
                    thpt.TEMPLT_CD,
                    thpt.TEMPLT_NM,
                    thpt.PRT_FORM,
                    thpt.TEMPLT_CD AS APPLY_TEMPLT_CD,
                    thpt.TEMPLT_REG_FG AS APPLY_TEMPLT_REG_FG
                FROM
                    TB_HQ_PRINT_TEMPL thpt
                WHERE
                    thpt.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpt.PRT_CLASS_CD = #{prtClassCd}
                ORDER BY
                    thpt.TEMPLT_REG_FG, thpt.TEMPLT_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                    sub.PRT_CLASS_CD,
                    sub.TEMPLT_REG_FG,
                    sub.TEMPLT_CD,
                    sub.TEMPLT_NM,
                    sub.PRT_FORM,
                    sub.APPLY_TEMPLT_CD,
                    sub.APPLY_TEMPLT_REG_FG
                FROM
                    (
                    SELECT
                        tmp.PRT_CLASS_CD,
                        'S' AS TEMPLT_REG_FG,
                        '000' AS TEMPLT_CD,
                        '실제출력물' AS TEMPLT_NM,
                        tmp.PRT_FORM,
                        tmp.TEMPLT_CD AS APPLY_TEMPLT_CD,
                        tmp.TEMPLT_REG_FG AS APPLY_TEMPLT_REG_FG
                    FROM
                        TB_MS_PRINT tmp
                    WHERE
                        tmp.STORE_CD = #{storeCd}
                        AND tmp.PRT_CLASS_CD = #{prtClassCd}
                    UNION ALL
                    SELECT
                        tmpt.PRT_CLASS_CD,
                        tmpt.TEMPLT_REG_FG,
                        tmpt.TEMPLT_CD,
                        tmpt.TEMPLT_NM,
                        tmpt.PRT_FORM,
                        tmpt.TEMPLT_CD AS APPLY_TEMPLT_CD,
                        tmpt.TEMPLT_REG_FG AS APPLY_TEMPLT_REG_FG
                    FROM
                        TB_MS_PRINT_TEMPL tmpt
                    WHERE
                        tmpt.STORE_CD = #{storeCd}
                        AND tmpt.PRT_CLASS_CD = #{prtClassCd}
                    ) sub
                ORDER BY
                    sub.TEMPLT_REG_FG, sub.TEMPLT_CD
            </when>
        </choose>
    </select>

    <!-- 출력물템플릿 생성 -->
    <!--
        TABLE    : TB_HQ_PRINT_TEMPL, TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 출력물템플릿을 생성한다.
    -->
    <insert id="insertPosTemplateList" parameterType="posTemplateVO">
        /* USE : PosServiceMapper.insertPosTemplateList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRINT_TEMPL
                (
                    HQ_OFFICE_CD,
                    PRT_CLASS_CD,
                    TEMPLT_REG_FG,
                    TEMPLT_CD,
                    TEMPLT_NM,
                    PRT_FORM,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{hqOfficeCd},
                    #{prtClassCd},
                    'H',
                    (
                        SELECT
                            NVL(TRIM(TO_CHAR(MAX(thpt.TEMPLT_CD) + 1, '000')), '001')
                        FROM
                            TB_HQ_PRINT_TEMPL thpt
                        WHERE
                            thpt.HQ_OFFICE_CD = #{hqOfficeCd}
                            AND thpt.PRT_CLASS_CD = #{prtClassCd}
                            AND thpt.TEMPLT_REG_FG = 'H'
                    ),
                    #{templtNm},
                    #{prtForm, jdbcType=VARCHAR},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRINT_TEMPL
                (
                    STORE_CD,
                    PRT_CLASS_CD,
                    TEMPLT_REG_FG,
                    TEMPLT_CD,
                    TEMPLT_NM,
                    PRT_FORM,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{storeCd},
                    #{prtClassCd},
                    'S',
                    (
                        SELECT
                            NVL(TRIM(TO_CHAR(MAX(tmpt.TEMPLT_CD) + 1, '000')), '001')
                        FROM
                            TB_MS_PRINT_TEMPL tmpt
                        WHERE
                            tmpt.STORE_CD = #{storeCd}
                            AND tmpt.PRT_CLASS_CD = #{prtClassCd}
                            AND tmpt.TEMPLT_REG_FG = 'S'
                    ),
                    #{templtNm},
                    #{prtForm, jdbcType=VARCHAR},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 출력물템플릿 수정 -->
    <!--
        TABLE    : TB_HQ_PRINT_TEMPL, TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 출력물템플릿을 수정한다.
    -->
    <update id="updatePosTemplateList" parameterType="posTemplateVO">
        /* USE : PosServiceMapper.updatePosTemplateList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE
                    TB_HQ_PRINT_TEMPL
                SET
                    TEMPLT_NM = #{templtNm},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND PRT_CLASS_CD = #{prtClassCd}
                    AND TEMPLT_REG_FG = 'H'
                    AND TEMPLT_CD = #{templtCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE
                    TB_MS_PRINT_TEMPL
                SET
                    TEMPLT_NM = #{templtNm},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND PRT_CLASS_CD = #{prtClassCd}
                    AND TEMPLT_REG_FG = 'S'
                    AND TEMPLT_CD = #{templtCd}
            </when>
        </choose>
    </update>

    <!-- 출력물템플릿 삭제 -->
    <!--
        TABLE    : TB_HQ_PRINT_TEMPL, TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 출력물템플릿을 삭제한다.
    -->
    <delete id="deletePosTemplateList" parameterType="posTemplateVO">
        /* USE : PosServiceMapper.deletePosTemplateList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM
                    TB_HQ_PRINT_TEMPL
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND PRT_CLASS_CD = #{prtClassCd}
                    AND TEMPLT_REG_FG = 'H'
                    AND TEMPLT_CD = #{templtCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM
                    TB_MS_PRINT_TEMPL
                WHERE
                    STORE_CD = #{storeCd}
                    AND PRT_CLASS_CD = #{prtClassCd}
                    AND TEMPLT_REG_FG = 'S'
                    AND TEMPLT_CD = #{templtCd}
            </when>
        </choose>

    </delete>

    <!-- 출력물템플릿 저장 -->
    <!--
        TABLE    : TB_HQ_PRINT_TEMPL, TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 출력물템플릿을 저장/수정한다.
    -->
    <insert id="savePosTemplate" parameterType="posTemplateVO">
        /* USE : PosServiceMapper.savePosTemplate */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRINT_TEMPL thpt
                USING DUAL
                ON (
                    thpt.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpt.PRT_CLASS_CD = #{prtClassCd}
                    AND thpt.TEMPLT_REG_FG = 'H'
                    AND thpt.TEMPLT_CD = #{templtCd}
                )
                WHEN MATCHED THEN
                    UPDATE
                    SET
                        thpt.TEMPLT_NM = #{templtNm},
                        thpt.PRT_FORM = #{prtForm},
                        thpt.MOD_DT = #{modDt},
                        thpt.MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        HQ_OFFICE_CD,
                        PRT_CLASS_CD,
                        TEMPLT_REG_FG,
                        TEMPLT_CD,
                        TEMPLT_NM,
                        PRT_FORM,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                    ) VALUES (
                        #{hqOfficeCd},
                        #{prtClassCd},
                        'H',
                        (
                            SELECT
                                NVL(TRIM(TO_CHAR(MAX(thpt.TEMPLT_CD) + 1, '000')), '001')
                            FROM
                                TB_HQ_PRINT_TEMPL thpt
                            WHERE
                                thpt.HQ_OFFICE_CD = #{hqOfficeCd}
                                AND thpt.PRT_CLASS_CD = #{prtClassCd}
                                AND thpt.TEMPLT_REG_FG = 'H'
                        ),
                        #{templtNm},
                        #{prtForm},
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                    )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRINT_TEMPL tmpt
                USING DUAL
                ON (
                    tmpt.STORE_CD = #{storeCd}
                    AND tmpt.PRT_CLASS_CD = #{prtClassCd}
                    AND tmpt.TEMPLT_REG_FG = 'S'
                    AND tmpt.TEMPLT_CD = #{templtCd}
                )
                WHEN MATCHED THEN
                    UPDATE
                    SET
                        tmpt.TEMPLT_NM = #{templtNm},
                        tmpt.PRT_FORM = #{prtForm},
                        tmpt.MOD_DT = #{modDt},
                        tmpt.MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        STORE_CD,
                        PRT_CLASS_CD,
                        TEMPLT_REG_FG,
                        TEMPLT_CD,
                        TEMPLT_NM,
                        PRT_FORM,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                    ) VALUES (
                        #{storeCd},
                        #{prtClassCd},
                        'S',
                        (
                            SELECT
                                NVL(TRIM(TO_CHAR(MAX(tmpt.TEMPLT_CD) + 1, '000')), '001')
                            FROM
                                TB_MS_PRINT_TEMPL tmpt
                            WHERE
                                tmpt.STORE_CD = #{storeCd}
                                AND tmpt.PRT_CLASS_CD = #{prtClassCd}
                                AND tmpt.TEMPLT_REG_FG = 'S'
                        ),
                        #{templtNm},
                        #{prtForm},
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                    )
            </when>
        </choose>

    </insert>

    <!-- 실제출력물템플릿 저장 -->
    <!--
        TABLE    : TB_HQ_PRINT_TEMPL, TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 출력물템플릿을 저장/수정한다.
    -->
<!--    <select id="applyToStoreReal" statementType="CALLABLE"  parameterType="posTemplateVO">-->
<!--        /* USE : PosServiceMapper.applyToStoreReal */-->
<!--        {-->
<!--            CALL PKG_HQ_PRINT_TEMPL.SP_STORE_PRINT_FROM_HQ_U-->
<!--            (-->
<!--                #{hqOfficeCd},-->
<!--                #{prtClassCd},-->
<!--                #{templtRegFg},-->
<!--                #{templtCd},-->
<!--                #{modId},-->
<!--                #{result, mode=OUT, jdbcType=VARCHAR}-->
<!--            )-->
<!--        }-->
<!--    </select>-->
    <update id="applyToStoreReal" parameterType="posTemplateVO">
        MERGE INTO TB_MS_PRINT tmp
            USING DUAL
            ON (
                    tmp.STORE_CD = #{storeCd}
                    AND tmp.PRT_CLASS_CD = #{prtClassCd}
                )
            WHEN NOT MATCHED THEN
                INSERT(
                       STORE_CD,
                       PRT_CLASS_CD,
                       TEMPLT_REG_FG,
                       TEMPLT_CD,
                       PRT_FORM,
                       REG_DT,
                       REG_ID,
                       MOD_DT,
                       MOD_ID
                    ) VALUES (
                                 #{storeCd},
                                 #{prtClassCd},
                                 #{templtRegFg},
                                 #{templtCd},
                                 (SELECT PRT_FORM
                                  FROM TB_hq_PRINT_TEMPL
                                  WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                    AND PRT_CLASS_CD = #{prtClassCd}
                                    AND TEMPLT_CD = #{templtCd}
                                    AND TEMPLT_REG_FG='H'),
                                 #{modDt},
                                 #{modId},
                                 #{modDt},
                                 #{modId}
                             )
            WHEN MATCHED THEN
                UPDATE
                    SET TEMPLT_REG_FG = #{templtRegFg},
                        TEMPLT_CD = #{templtCd},
                        PRT_FORM = (SELECT PRT_FORM
                                    FROM TB_hq_PRINT_TEMPL
                                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                      AND PRT_CLASS_CD = #{prtClassCd}
                                      AND TEMPLT_CD = #{templtCd}
                                      AND TEMPLT_REG_FG='H'),
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
            WHERE STORE_CD = #{storeCd}
            AND PRT_CLASS_CD = #{prtClassCd}
    </update>


    <!-- 실제출력물 템플릿 생성 -->
    <!--
        TABLE    : TB_MS_PRINT
        PARAM    : posTemplateVO
        COMMENTS : 실제출력물 템플릿을 생성한다.
    -->
    <insert id="insertPosTemplatePrint" parameterType="posTemplateVO">
        /* USE : PosServiceMapper.insertPosTemplatePrint */
        MERGE INTO TB_MS_PRINT tmp
        USING DUAL
        ON (
            tmp.STORE_CD = #{storeCd}
            AND tmp.PRT_CLASS_CD = #{prtClassCd}
        )
        WHEN NOT MATCHED THEN
            INSERT
            (
                STORE_CD,
                PRT_CLASS_CD,
                TEMPLT_REG_FG,
                TEMPLT_CD,
                PRT_FORM,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
            ) VALUES (
                #{storeCd},
                #{prtClassCd},
                #{templtRegFg},
                #{templtCd},
                '',
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
            )
    </insert>

    <!-- 실제출력물 템플릿 수정 -->
    <!--
        TABLE    : TB_HQ_PRINT, TB_MS_PRINT
        PARAM    : posTemplateVO
        COMMENTS : 실제출력물 템플릿을 수정한다.
    -->
    <update id="updatePosTemplatePrint" parameterType="posTemplateVO">
        /* USE : PosServiceMapper.updatePosTemplatePrint */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE
                    TB_HQ_PRINT
                SET
                <if test='templtCd != "000"'>
                    TEMPLT_REG_FG = #{templtRegFg},
                    TEMPLT_CD = #{templtCd},
                </if>
                    PRT_FORM = #{prtForm},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND PRT_CLASS_CD = #{prtClassCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE
                    TB_MS_PRINT
                SET
                <if test='templtCd != "000"'>
                    TEMPLT_REG_FG = #{templtRegFg},
                    TEMPLT_CD = #{templtCd},
                </if>
                    PRT_FORM = #{prtForm},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND PRT_CLASS_CD = #{prtClassCd}
            </when>
        </choose>
    </update>

    <!-- 매장 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        PARAM    : posTemplateVO
        COMMENTS : 매장을 조회한다.
    -->
    <select id="getRegStoreList" parameterType="posTemplateVO" resultType="DefaultMap">
        /* USE : PosServiceMapper.getRegStoreList */
        SELECT tms.STORE_CD,
               tms.STORE_NM,
               tms.SYS_STAT_FG
          FROM TB_MS_STORE tms
         WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='sysStatFg != null and sysStatFg.toString() != ""'>
            AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        <if test='storeCd != null and storeCd.toString() != ""'>
            AND tms.STORE_CD = #{storeCd}
        </if>
        <if test='storeNm != null and storeNm.toString() != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        ORDER BY tms.STORE_CD ASC
    </select>

    <!-- 매장 출력물템플릿 수정 : 프로시저 호출 -->
    <!--
        TABLE    : TB_MS_PRINT_TEMPL
        PARAM    : posTemplateVO
        COMMENTS : 매장 출력물템플릿을 저장/수정한다.
    -->
    <select id="updatePosTemplateForStoreFromHq" statementType="CALLABLE"  parameterType="posTemplateVO">
        /* USE : PosServiceMapper.updatePosTemplateForStoreFromHq */
        {
          CALL PKG_HQ_PRINT_TEMPL.SP_STORE_PRINT_TEMPL_FROM_HQ_U
          (
            #{hqOfficeCd},
            #{prtClassCd},
            #{templtRegFg},
            #{templtCd},
            #{modId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

</mapper>
