<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.rtnStatus.day.service.impl.RtnStatusDayMapper">

    <!-- 코너별매출일자별 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_CORNR_PROD, TB_MS_CORNER, TB_MS_PRODUCT
        PARAM    : cornerDayVO
        COMMENTS : 코너별매출일자별 - 리스트를 조회한다.
    -->
    <select id="getRtnStatusDayList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
      <include refid="CmmSQL.PagingTemplateHeader"/>
       <![CDATA[
       SELECT M.STORE_CD
             , M.STORE_NM
		     , SUM(DECODE(M.SALE_YN,'Y', M.CNT, 0)) AS CNT_Y
		     , SUM(DECODE(M.SALE_YN,'Y', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_Y
		     , SUM(DECODE(M.SALE_YN,'N', M.CNT, 0)) AS CNT_N
		     , SUM(DECODE(M.SALE_YN,'N', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_N
		     , SUM(M.CNT) AS CNT
		     , SUM(M.REAL_SALE_AMT) AS REAL_SALE_AMT
       ]]>
       <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM (
             SELECT TSSH.STORE_CD, TMS.STORE_NM, TSSH.SALE_YN, SUM(TSSH.REAL_SALE_AMT) REAL_SALE_AMT, COUNT(*) CNT
               FROM TB_SL_SALE_HDR TSSH, TB_MS_STORE TMS
              WHERE TSSH.HQ_OFFICE_CD = #{hqOfficeCd}
                AND TSSH.STORE_CD = TMS.STORE_CD
        ]]>
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND TSSH.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='startDate != null and startDate != ""'>
           AND TSSH.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND TSSH.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        <![CDATA[
	         GROUP BY TSSH.STORE_CD, TMS.STORE_NM, TSSH.SALE_YN
	            ) M
        GROUP BY M.STORE_CD, M.STORE_NM
        ORDER BY M.STORE_CD
        ]]>
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
    
    
    <!-- 코너별매출일자별 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_CORNR_PROD, TB_MS_CORNER, TB_MS_PRODUCT
        PARAM    : cornerDayVO
        COMMENTS : 코너별매출일자별 - 리스트를 조회한다.
    -->
    <select id="getRtnStatusDayDtlList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
      <include refid="CmmSQL.PagingTemplateHeader"/>
       <![CDATA[
       SELECT M.STORE_CD
		     , TO_CHAR(TO_DATE(M.SALE_DATE, 'YYYYMMDD'),'YYYY-MM-DD') SALE_DATE
		     , SUM(DECODE(M.SALE_YN,'Y', M.CNT, 0)) AS CNT_Y
		     , SUM(DECODE(M.SALE_YN,'Y', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_Y
		     , SUM(DECODE(M.SALE_YN,'N', M.CNT, 0)) AS CNT_N
		     , SUM(DECODE(M.SALE_YN,'N', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_N
		     , SUM(M.CNT) AS CNT
		     , SUM(M.REAL_SALE_AMT) AS REAL_SALE_AMT
       ]]>
       <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM (
	        SELECT STORE_CD, SALE_YN, SALE_DATE, SUM(REAL_SALE_AMT) REAL_SALE_AMT, COUNT(*) CNT
	          FROM TB_SL_SALE_HDR TSSH 
	         WHERE TSSH.HQ_OFFICE_CD = #{hqOfficeCd}
        ]]>
        <if test='startDate != null and startDate != ""'>
           AND TSSH.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND TSSH.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        <if test='storeCd != null and storeCd != ""'>
           AND TSSH.STORE_CD = #{storeCd}
        </if>
        <![CDATA[
             GROUP BY STORE_CD, SALE_YN, SALE_DATE
		       ) M
		 GROUP BY M.STORE_CD, M.SALE_DATE
		 ORDER BY M.STORE_CD, M.SALE_DATE DESC
        ]]>
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
    
    
    <!-- 코너별매출일자별 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_CORNR_PROD, TB_MS_CORNER, TB_MS_PRODUCT
        PARAM    : cornerDayVO
        COMMENTS : 코너별매출일자별 - 리스트를 조회한다.
    -->
    <select id="getRtnStatusPosDtlList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
      <include refid="CmmSQL.PagingTemplateHeader"/>
       <![CDATA[
       SELECT STORE_CD
             , SALE_DATE
             , POS_NO, BILL_NO
             , DECODE(SALE_YN,'Y','매출','반품') AS SALE_YN
             , TOT_SALE_AMT
             , TOT_DC_AMT
             , REAL_SALE_AMT
       ]]>
       <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM TB_SL_SALE_HDR TSSH
             WHERE TSSH.HQ_OFFICE_CD = #{hqOfficeCd}
        ]]>
        <if test='saleDate != null and saleDate != ""'>
           AND TSSH.SALE_DATE = REPLACE(#{saleDate},'-','')
        </if>
        <if test='storeCd != null and storeCd != ""'>
           AND TSSH.STORE_CD = #{storeCd}
        </if>
        <if test='saleYn != null and saleYn != ""'>
           AND TSSH.SALE_YN = #{saleYn}
        </if>
        <![CDATA[
             ORDER BY TSSH.POS_NO, TSSH.BILL_NO
        ]]>
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
    
    
    
    <!-- 코너별매출일자별 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_CORNR_PROD, TB_MS_CORNER, TB_MS_PRODUCT
        PARAM    : cornerDayVO
        COMMENTS : 코너별매출일자별 - 리스트를 조회한다.
    -->
    <select id="getRtnStatusProdList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
      <include refid="CmmSQL.PagingTemplateHeader"/>
       SELECT  A.LV1_CD
        ,A.LV1_NM
        ,A.LV2_CD
        ,A.LV2_NM
        ,A.LV3_CD
        ,A.LV3_NM
        ,C.PROD_CD
        ,B.PROD_NM
        ,SUM(C.REAL_SALE_AMT) AS REAL_SALE_AMT
        ,SUM(C.CNT) AS CNT
      <include refid="CmmSQL.PagingTemplateCount"/>
        <choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
         FROM    (
           		 <![CDATA[	    			 
							SELECT  A.HQ_OFFICE_CD
							,       A.PROD_CLASS_CD
							,		NULL	LV1_CD
							,		NULL	LV2_CD
							,		NULL	LV3_CD
							,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
							                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
							             	)  AS  LV1_NM
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
							              	)  AS  LV2_NM
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,NULL
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
							             	)  AS  LV3_NM                    
							FROM    (
							        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
							        FROM    (
							                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
							                    FROM    TB_HQ_PRODUCT_CLASS				
							                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
							                )
							        START WITH  P_PROD_CLASS_CD ='00000'
							        CONNECT BY 
							        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
							        )   A					
				    ]]>
            ) A
            ,TB_HQ_PRODUCT B
         </when>
         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
         FROM    (
             <![CDATA[
        				SELECT  A.STORE_CD
						,       A.PROD_CLASS_CD
						,		NULL	LV1_CD
						,		NULL	LV2_CD
						,		NULL	LV3_CD
						,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
						                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
						,       DECODE(A.LV ,1  ,NULL
						                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
						              )  AS  LV2_NM
						,       DECODE(A.LV ,1  ,NULL
						                    ,2  ,NULL
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM                    
						FROM    (
						        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
						        FROM    (
						                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
						                    FROM    TB_MS_PRODUCT_CLASS						
						                    WHERE   STORE_CD    =  #{storeCd} 
						                )
						        START WITH  P_PROD_CLASS_CD ='00000'
						        CONNECT BY 
						        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
						        )   A
        			]]>
            ) A
         ,TB_MS_PRODUCT B      
         </when> 
        </choose>                                            
        , (SELECT TSSH.STORE_CD, TSSH.PROD_CD, SUM(TSSH.REAL_SALE_AMT) AS REAL_SALE_AMT, COUNT(*) AS CNT
            FROM TB_SL_SALE_DTL TSSH
            WHERE 1=1
		<if test='startDate != null and startDate != ""'>
		   AND TSSH.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
		   AND TSSH.SALE_DATE <![CDATA[<= ]]> #{endDate}
		</if>
            AND TSSH.SALE_YN = 'N'
            AND TSSH.HQ_OFFICE_CD  = #{hqOfficeCd}
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND TSSH.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
           GROUP BY TSSH.STORE_CD, TSSH.PROD_CD
           ) C
         WHERE   
         <choose>
	         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
	            B.HQ_OFFICE_CD   = #{hqOfficeCd}
	            AND
	         </when>
         </choose>     
         B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
         AND     B.PROD_CD       = C.PROD_CD               
         GROUP BY    A.LV1_CD
                     ,A.LV2_CD
                     ,A.LV2_NM
                     ,A.LV3_CD
                     ,A.LV3_NM
                     ,A.LV1_NM
                     ,C.PROD_CD
                     ,B.PROD_NM
         ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD   
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
    
    <select id="getRtnstatusDayExcelList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
       <![CDATA[
       SELECT M.STORE_CD
             , M.STORE_NM
		     , SUM(DECODE(M.SALE_YN,'Y', M.CNT, 0)) AS CNT_Y
		     , SUM(DECODE(M.SALE_YN,'Y', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_Y
		     , SUM(DECODE(M.SALE_YN,'N', M.CNT, 0)) AS CNT_N
		     , SUM(DECODE(M.SALE_YN,'N', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_N
		     , SUM(M.CNT) AS CNT
		     , SUM(M.REAL_SALE_AMT) AS REAL_SALE_AMT
       ]]>
        <![CDATA[
        FROM (
             SELECT TSSH.STORE_CD, TMS.STORE_NM, TSSH.SALE_YN, SUM(TSSH.REAL_SALE_AMT) REAL_SALE_AMT, COUNT(*) CNT
               FROM TB_SL_SALE_HDR TSSH, TB_MS_STORE TMS
              WHERE TSSH.HQ_OFFICE_CD = #{hqOfficeCd}
                AND TSSH.STORE_CD = TMS.STORE_CD
        ]]>
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND TSSH.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='startDate != null and startDate != ""'>
           AND TSSH.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND TSSH.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        <![CDATA[
	         GROUP BY TSSH.STORE_CD, TMS.STORE_NM, TSSH.SALE_YN
	            ) M
        GROUP BY M.STORE_CD, M.STORE_NM
        ORDER BY M.STORE_CD
        ]]>
    </select>
    
    <select id="getRtnstatusDayDtlExcelList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
       <![CDATA[
       SELECT M.STORE_CD
		     , TO_CHAR(TO_DATE(M.SALE_DATE, 'YYYYMMDD'),'YYYY-MM-DD') SALE_DATE
		     , SUM(DECODE(M.SALE_YN,'Y', M.CNT, 0)) AS CNT_Y
		     , SUM(DECODE(M.SALE_YN,'Y', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_Y
		     , SUM(DECODE(M.SALE_YN,'N', M.CNT, 0)) AS CNT_N
		     , SUM(DECODE(M.SALE_YN,'N', M.REAL_SALE_AMT, 0)) AS REAL_SALE_AMT_N
		     , SUM(M.CNT) AS CNT
		     , SUM(M.REAL_SALE_AMT) AS REAL_SALE_AMT
       ]]>
        <![CDATA[
        FROM (
	        SELECT STORE_CD, SALE_YN, SALE_DATE, SUM(REAL_SALE_AMT) REAL_SALE_AMT, COUNT(*) CNT
	          FROM TB_SL_SALE_HDR TSSH 
	         WHERE TSSH.HQ_OFFICE_CD = #{hqOfficeCd}
        ]]>
        <if test='startDate != null and startDate != ""'>
           AND TSSH.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND TSSH.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        <if test='storeCd != null and storeCd != ""'>
           AND TSSH.STORE_CD = #{storeCd}
        </if>
        <![CDATA[
             GROUP BY STORE_CD, SALE_YN, SALE_DATE
		       ) M
		 GROUP BY M.STORE_CD, M.SALE_DATE
		 ORDER BY M.STORE_CD, M.SALE_DATE DESC
        ]]>
    </select>
    
    <select id="getRtnStatusPosDtlExcelList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
       <![CDATA[
       SELECT STORE_CD
             , SALE_DATE
             , POS_NO, BILL_NO
             , DECODE(SALE_YN,'Y','매출','반품') AS SALE_YN
             , TOT_SALE_AMT
             , TOT_DC_AMT
             , REAL_SALE_AMT
       ]]>
        <![CDATA[
        FROM TB_SL_SALE_HDR TSSH
             WHERE TSSH.HQ_OFFICE_CD = #{hqOfficeCd}
        ]]>
        <if test='saleDate != null and saleDate != ""'>
           AND TSSH.SALE_DATE = REPLACE(#{saleDate},'-','')
        </if>
        <if test='storeCd != null and storeCd != ""'>
           AND TSSH.STORE_CD = #{storeCd}
        </if>
        <if test='saleYn != null and saleYn != ""'>
           AND TSSH.SALE_YN = #{saleYn}
        </if>
        <![CDATA[
             ORDER BY TSSH.POS_NO, TSSH.BILL_NO
        ]]>
    </select>
    
    <select id="getRtnStatusProdExcelList" parameterType="rtnStatusDayVO" resultType="DefaultMap">
       SELECT  A.LV1_CD
        ,A.LV1_NM
        ,A.LV2_CD
        ,A.LV2_NM
        ,A.LV3_CD
        ,A.LV3_NM
        ,C.PROD_CD
        ,B.PROD_NM
        ,SUM(C.REAL_SALE_AMT) AS REAL_SALE_AMT
        ,SUM(C.CNT) AS CNT
        <choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
         FROM    (
            <![CDATA[	    			 
							SELECT  A.HQ_OFFICE_CD
							,       A.PROD_CLASS_CD
							,		NULL	LV1_CD
							,		NULL	LV2_CD
							,		NULL	LV3_CD
							,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
							                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
							             	)  AS  LV1_NM
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
							              	)  AS  LV2_NM
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,NULL
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
							             	)  AS  LV3_NM                    
							FROM    (
							        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
							        FROM    (
							                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
							                    FROM    TB_HQ_PRODUCT_CLASS				
							                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
							                )
							        START WITH  P_PROD_CLASS_CD ='00000'
							        CONNECT BY 
							        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
							        )   A					
				    ]]>
            ) A
            ,TB_HQ_PRODUCT B
         </when>
         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
         FROM    (
             <![CDATA[
        				SELECT  A.STORE_CD
						,       A.PROD_CLASS_CD
						,		NULL	LV1_CD
						,		NULL	LV2_CD
						,		NULL	LV3_CD
						,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
						                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
						,       DECODE(A.LV ,1  ,NULL
						                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
						              )  AS  LV2_NM
						,       DECODE(A.LV ,1  ,NULL
						                    ,2  ,NULL
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM                    
						FROM    (
						        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
						        FROM    (
						                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
						                    FROM    TB_MS_PRODUCT_CLASS						
						                    WHERE   STORE_CD    =  #{storeCd} 
						                )
						        START WITH  P_PROD_CLASS_CD ='00000'
						        CONNECT BY 
						        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
						        )   A
        			]]>
            ) A
         ,TB_MS_PRODUCT B      
         </when> 
        </choose>                                            
        , (SELECT TSSH.STORE_CD, TSSH.PROD_CD, SUM(TSSH.REAL_SALE_AMT) AS REAL_SALE_AMT, COUNT(*) AS CNT
            FROM TB_SL_SALE_DTL TSSH
            WHERE 1=1
		<if test='startDate != null and startDate != ""'>
		   AND TSSH.SALE_DATE >= #{startDate}
		</if>
		<if test='endDate != null and endDate != ""'>
		   AND TSSH.SALE_DATE <![CDATA[<= ]]> #{endDate}
		</if>
            AND TSSH.SALE_YN = 'N'
            AND TSSH.HQ_OFFICE_CD  = #{hqOfficeCd}
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND TSSH.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
           GROUP BY TSSH.STORE_CD, TSSH.PROD_CD
           ) C
         WHERE   
         <choose>
	         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
	            B.HQ_OFFICE_CD   = #{hqOfficeCd}
	            AND
	         </when>
         </choose>     
         B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
         AND     B.PROD_CD       = C.PROD_CD               
         GROUP BY    A.LV1_CD
                     ,A.LV2_CD
                     ,A.LV2_NM
                     ,A.LV3_CD
                     ,A.LV3_NM
                     ,A.LV1_NM
                     ,C.PROD_CD
                     ,B.PROD_NM
         ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD
    </select>
</mapper>
