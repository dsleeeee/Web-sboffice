<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.anals.versusPeriod.cls.service.impl.VersusPeriodClassMapper">
	<!--
	화면 ID : 대비기간매출분석-분류별대비탭
	화면 PAGE : 87P
	PARAM : STORE_CD, SALE_DATE(FR,TO)
	-->

    <select id="getVersusPeriodClassList" parameterType="versusPeriodClassVO" resultType="DefaultMap">

        SELECT DM.LV1_CD
     		 , DM.LV1_NM
     		 , DM.LV2_CD
     		 , DM.LV2_NM
     		 , DM.LV3_CD
     		 , DM.LV3_NM
     		 , SUM(DM.REAL_SALE_AMT_A)  AS REAL_SALE_AMT_A
     		 , SUM(DM.SALE_CNT_A)   	AS SALE_CNT_A
     		 , SUM(DM.REAL_SALE_AMT_B)  AS REAL_SALE_AMT_B
     		 , SUM(DM.SALE_CNT_B)       AS SALE_CNT_B
     		 , ROUND(NVL((SUM(DM.REAL_SALE_AMT_A)-SUM(DM.REAL_SALE_AMT_B))/ DECODE(SUM(DM.REAL_SALE_AMT_B), 0, NULL, SUM(DM.REAL_SALE_AMT_B)),0) *100,2) AS SIN_AMT
     		 , ROUND(NVL((SUM(DM.SALE_CNT_A)-SUM(DM.SALE_CNT_B))/ DECODE(SUM(DM.SALE_CNT_B), 0, NULL, SUM(DM.SALE_CNT_B)),0) *100,2) AS SIN_CNT
     	FROM (
     		   SELECT UM.LV1_CD
		     		, UM.LV1_NM
		     		, UM.LV2_CD
		     		, UM.LV2_NM
		     		, UM.LV3_CD
		     		, UM.LV3_NM
		     		, DECODE(UM.GBN,'A',UM.REAL_SALE_AMT,'')  REAL_SALE_AMT_A
		     		, DECODE(UM.GBN,'A',UM.TOT_SALE_QTY,'')      SALE_CNT_A
		     		, DECODE(UM.GBN,'B',UM.REAL_SALE_AMT,'') REAL_SALE_AMT_B
		     		, DECODE(UM.GBN,'B',UM.TOT_SALE_QTY,'')      SALE_CNT_B
		       FROM (
		       		  SELECT 'A' GBN
		       		  		, A.LV1_CD
		       		  		, A.LV1_NM
		       		  		, A.LV2_CD
		       		  		, A.LV2_NM
		       		  		, A.LV3_CD
		       		  		, A.LV3_NM
		       		  		, SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
		       		  		, SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
			 <choose>
	         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
	         			FROM    (
                               <![CDATA[
				                SELECT  A.HQ_OFFICE_CD
				                ,       A.PROD_CLASS_CD
				                ,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
								              	)  AS  LV2_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
								             	)  AS  LV3_CD
				                ,       DECODE  (A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
				                                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
				                                )  AS  LV1_NM
				                ,       DECODE  (A.LV ,1  ,NULL
				                                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
				                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
				                                )  AS  LV2_NM
				                ,       DECODE  (A.LV ,1  ,NULL
				                                    ,2  ,NULL
				                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
				                                )  AS  LV3_NM
				                FROM    (
				                        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC, SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
				                        FROM    (
				                                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
				                                    FROM    TB_HQ_PRODUCT_CLASS
				                                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
				                                )
				                        START WITH  P_PROD_CLASS_CD ='00000'
				                        CONNECT BY
				                        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
				                        )   A

				                ]]>
	                     )  A
	         </when>
         	 <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
		       		   FROM (
		       		   		  <![CDATA[
		                        SELECT  A.STORE_CD
		                        ,       A.PROD_CLASS_CD
		                        ,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
								              	)  AS  LV2_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
								             	)  AS  LV3_CD
		                        ,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
		                                            ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
		                        ,       DECODE(A.LV ,1  ,NULL
		                                            ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
		                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
		                                      )  AS  LV2_NM
		                        ,       DECODE(A.LV ,1  ,NULL
		                                            ,2  ,NULL
		                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
		                        FROM    (
		                                SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC,   SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
		                                FROM    (
		                                            SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
		                                            FROM    TB_MS_PRODUCT_CLASS
		                                            WHERE   STORE_CD    =  #{storeCd}
		                                        )
		                                START WITH  P_PROD_CLASS_CD ='00000'
		                                CONNECT BY
		                                PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
		                                )   A
		                    ]]>
							  ) A
							  
							  
				</when>
    			</choose>
		       		  		, (
							  SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
							  FROM (
								   SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
									 FROM TB_MS_PRODUCT B
									WHERE 1=1
									AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
									<if test='arrStoreCd != null and arrStoreCd != ""'>
										AND B.STORE_CD IN
										<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
											#{item}
										</foreach>
									</if>
									<if test='brandCd != null and brandCd != ""'>
                                       AND B.HQ_BRAND_CD = #{brandCd}
                                    </if>
								   ) B
								   , (
									  SELECT C.STORE_CD
									  	   , C.PROD_CD
										   , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
								 	 	   , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
									    FROM TB_SL_DAILY_PROD C
									   WHERE C.HQ_OFFICE_CD = #{hqOfficeCd}
									   	 <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
									   	 	AND C.SALE_DATE BETWEEN REPLACE(#{startDate}, '-', '') AND REPLACE(#{endDate}, '-', '')
										 </if>
										 <if test='arrStoreCd != null and arrStoreCd != ""'>
											AND C.STORE_CD IN
											<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
												#{item}
											</foreach>
										 </if>
										 <if test='brandCd != null and brandCd != ""'>
                                            AND C.HQ_BRAND_CD = #{brandCd}
                                         </if>
									GROUP BY C.STORE_CD
									  	   , C.PROD_CD
									  ) C
							  WHERE B.STORE_CD = C.STORE_CD(+) 
							  AND	B.PROD_CD = C.PROD_CD(+)
							  GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
							  ) B
		       		   WHERE B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
		       		   GROUP BY A.LV1_CD,
								A.LV2_CD,
								A.LV2_NM,
								A.LV3_CD,
								A.LV3_NM,
								A.LV1_NM
		       		  UNION ALL
		       		  SELECT 'B' GBN
		       		  	    , A.LV1_CD
		       		  	    , A.LV1_NM
		       		  	    , A.LV2_CD
		       		  	    , A.LV2_NM
		       		  	    , A.LV3_CD
		       		  	    , A.LV3_NM
		       		  	    , SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
		       		  	    , SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
			 <choose>
	         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
	         			FROM    (
	                         <![CDATA[
				                SELECT  A.HQ_OFFICE_CD
				                ,       A.PROD_CLASS_CD
				                ,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
								              	)  AS  LV2_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
								             	)  AS  LV3_CD
				                ,       DECODE  (A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
				                                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
				                                )  AS  LV1_NM
				                ,       DECODE  (A.LV ,1  ,NULL
				                                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
				                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
				                                )  AS  LV2_NM
				                ,       DECODE  (A.LV ,1  ,NULL
				                                    ,2  ,NULL
				                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
				                                )  AS  LV3_NM
				                FROM    (
				                        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC, SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
				                        FROM    (
				                                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
				                                    FROM    TB_HQ_PRODUCT_CLASS
				                                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
				                                )
				                        START WITH  P_PROD_CLASS_CD ='00000'
				                        CONNECT BY
				                        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
				                        )   A

				                ]]>
	                     ) A
	         </when>
         	 <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
		       		   FROM (
		       		   		  <![CDATA[
		                        SELECT  A.STORE_CD
		                        ,       A.PROD_CLASS_CD
		                        ,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
								              	)  AS  LV2_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
								             	)  AS  LV3_CD
		                        ,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
		                                            ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
		                        ,       DECODE(A.LV ,1  ,NULL
		                                            ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
		                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
		                                      )  AS  LV2_NM
		                        ,       DECODE(A.LV ,1  ,NULL
		                                            ,2  ,NULL
		                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
		                        FROM    (
		                                SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC,   SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
		                                FROM    (
		                                            SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
		                                            FROM    TB_MS_PRODUCT_CLASS
		                                            WHERE   STORE_CD    =  #{storeCd}
		                                        )
		                                START WITH  P_PROD_CLASS_CD ='00000'
		                                CONNECT BY
		                                PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
		                                )   A
		                    ]]>
							  ) A
				</when>
    			</choose>
						   , (
							   SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
								 FROM (
									  SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
									    FROM TB_MS_PRODUCT B
									   WHERE 1=1
									   AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
									   <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   AND B.STORE_CD IN
										   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
												#{item}
										   </foreach>
									   </if>
									   <if test='brandCd != null and brandCd != ""'>
                                          AND B.HQ_BRAND_CD = #{brandCd}
                                       </if>
								       ) B
									 , (
									     SELECT C.STORE_CD
									     	  , C.PROD_CD
									          , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											  , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
										   FROM TB_SL_DAILY_PROD C
										  WHERE C.HQ_OFFICE_CD = #{hqOfficeCd}
										  <if test="compStartDate != null and compStartDate != '' and compEndDate != null and compEndDate != ''">
									   	 	AND C.SALE_DATE BETWEEN REPLACE(#{compStartDate}, '-', '') AND REPLACE(#{compEndDate}, '-', '')
										 </if>
										  <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  AND C.STORE_CD IN
										      <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
												#{item}
										      </foreach>
									   	  </if>
									   	  <if test='brandCd != null and brandCd != ""'>
                                             AND C.HQ_BRAND_CD = #{brandCd}
                                          </if>
									   GROUP BY C.STORE_CD
									   ,		C.PROD_CD
									    ) C
								WHERE  	B.STORE_CD = C.STORE_CD(+)
								AND		B.PROD_CD = C.PROD_CD(+)
								GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
							  ) B
		       		    WHERE B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
					 GROUP BY A.LV1_CD,
							  A.LV2_CD,
							  A.LV2_NM,
							  A.LV3_CD,
							  A.LV3_NM,
							  A.LV1_NM
		       		 ) UM
     		   ) DM
		GROUP BY DM.LV1_CD
     		   , DM.LV1_NM
     		   , DM.LV2_CD
     		   , DM.LV2_NM
     		   , DM.LV3_CD
     		   , DM.LV3_NM
		ORDER BY DM.LV1_CD
        		,DM.LV1_NM
        		,DM.LV2_NM
        		,DM.LV3_NM
    </select>

    <select id="getVersusPeriodClassDtlList" parameterType="versusPeriodClassVO" resultType="DefaultMap">
	<include refid="CmmSQL.PagingTemplateHeader"/>
		SELECT DM.PROD_CD
		     , DM.PROD_NM
			 , SUM(DM.REAL_SALE_AMT_A)  AS REAL_SALE_AMT_A
			 , SUM(DM.SALE_CNT_A)   	AS SALE_CNT_A
			 , SUM(DM.REAL_SALE_AMT_B)  AS REAL_SALE_AMT_B
			 , SUM(DM.SALE_CNT_B)       AS SALE_CNT_B
		     , ROUND(NVL((SUM(DM.REAL_SALE_AMT_A)-SUM(DM.REAL_SALE_AMT_B))/ DECODE(SUM(DM.REAL_SALE_AMT_B), 0, NULL, SUM(DM.REAL_SALE_AMT_B)),0) *100,2) AS SIN_AMT
		     , ROUND(NVL((SUM(DM.SALE_CNT_A)-SUM(DM.SALE_CNT_B))/ DECODE(SUM(DM.SALE_CNT_B), 0, NULL, SUM(DM.SALE_CNT_B)),0) *100,2) AS SIN_CNT
		     <include refid="CmmSQL.PagingTemplateCount"/>
		  FROM (
				SELECT UM.PROD_CD
				     , UM.PROD_NM
					 , DECODE(UM.GBN,'A',UM.REAL_SALE_AMT,'')  REAL_SALE_AMT_A
					 , DECODE(UM.GBN,'A',UM.TOT_SALE_QTY,'')      SALE_CNT_A
					 , DECODE(UM.GBN,'B',UM.REAL_SALE_AMT,'') REAL_SALE_AMT_B
					 , DECODE(UM.GBN,'B',UM.TOT_SALE_QTY,'')      SALE_CNT_B
				  FROM (
						SELECT  'A' GBN
							 ,  B.PROD_CD
							 ,  B.PROD_NM
						     ,  SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
						     ,  SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
						  FROM  (
									SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
									  FROM (
											SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
											  FROM TB_MS_PRODUCT       B
											 WHERE 1=1
											 AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND B.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
									   	  	<if test='prodClassCd != null and prodClassCd != ""'>
											   AND B.PROD_CLASS_CD = #{prodClassCd}
											</if>
											<if test='brandCd != null and brandCd != ""'>
                                                AND B.HQ_BRAND_CD = #{brandCd}
                                             </if>
									       ) B
									     , (
											SELECT C.STORE_CD
												 , C.PROD_CD
											     , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											     , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
											  FROM TB_SL_DAILY_PROD    C
											 WHERE 1=1
											 AND	C.HQ_OFFICE_CD = #{hqOfficeCd}
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND C.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
											<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
											   	  AND C.SALE_DATE BETWEEN REPLACE(#{startDate}, '-', '') AND REPLACE(#{endDate}, '-', '')
										 	 </if>
										 	 <if test='brandCd != null and brandCd != ""'>
                                                AND C.HQ_BRAND_CD = #{brandCd}
                                             </if>
											 GROUP BY C.STORE_CD
											 ,		  C.PROD_CD
									       ) C
									 WHERE  B.STORE_CD = C.STORE_CD(+)
									 AND	B.PROD_CD = C.PROD_CD(+)
									 <if test='storeCd != null and storeCd != "" and prodClassCd != null and prodClassCd != ""'>
									   AND EXISTS (SELECT * FROM TB_MS_PRODUCT_CLASS Z
									   	 <if test='arrStoreCd != null and arrStoreCd != ""'>
									  	  WHERE Z.STORE_CD IN
									  	 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
									  	  		#{item}
									  	  	</foreach>
	                                     </if>
									   AND Z.PROD_CLASS_CD = B.PROD_CLASS_CD)
									 </if>
									 GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
						         ) B
						  GROUP BY B.PROD_CD
								 , B.PROD_NM
						UNION ALL
						SELECT  'B' GBN
							 ,  B.PROD_CD
							 ,  B.PROD_NM
						     ,  SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
						     ,  SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
						  FROM  (
									SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
									  FROM (
											SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
											  FROM TB_MS_PRODUCT       B
											 WHERE 1=1
											 AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND B.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
									   	  	<if test='prodClassCd != null and prodClassCd != ""'>
											   AND B.PROD_CLASS_CD = #{prodClassCd}
											</if>
											<if test='brandCd != null and brandCd != ""'>
                                                AND B.HQ_BRAND_CD = #{brandCd}
                                             </if>
									       ) B
									     , (
											SELECT C.STORE_CD
												 , C.PROD_CD
											     , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											     , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
											  FROM TB_SL_DAILY_PROD    C
											 WHERE  C.HQ_OFFICE_CD = #{hqOfficeCd}											
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND C.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	 </if>
											 <if test="compStartDate != null and compStartDate != '' and compEndDate != null and compEndDate != ''">
											   	AND C.SALE_DATE BETWEEN REPLACE(#{compStartDate}, '-', '') AND REPLACE(#{compEndDate}, '-', '')
										 	 </if>
										 	 <if test='brandCd != null and brandCd != ""'>
										 	    AND C.HQ_BRAND_CD = #{brandCd}
										 	 </if>
											 GROUP BY C.STORE_CD, C.PROD_CD
									       ) C
									 WHERE  B.STORE_CD = C.STORE_CD(+)
									 AND	B.PROD_CD = C.PROD_CD(+)
									 <if test='storeCd != null and storeCd != "" and prodClassCd != null and prodClassCd != ""'>
									   AND EXISTS (SELECT * FROM TB_MS_PRODUCT_CLASS Z
							             <if test='arrStoreCd != null and arrStoreCd != ""'>
									  	  WHERE Z.STORE_CD IN
									  	 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
									  	  		#{item}
									  	  	</foreach>
	                                     </if>
									   		AND Z.PROD_CLASS_CD = B.PROD_CLASS_CD)
									 </if>
									 GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
						         ) B
						  GROUP BY B.PROD_CD
								 , B.PROD_NM
						) UM
		       ) DM
		GROUP BY DM.PROD_CD
		     , DM.PROD_NM
		ORDER BY SUM(DM.REAL_SALE_AMT_A) DESC
	<include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

	<select id="getVersusPeriodClassDtlExcelList" parameterType="versusPeriodClassVO" resultType="DefaultMap">
		SELECT DM.PROD_CD
		     , DM.PROD_NM
			 , SUM(DM.REAL_SALE_AMT_A)  AS REAL_SALE_AMT_A
			 , SUM(DM.SALE_CNT_A)   	AS SALE_CNT_A
			 , SUM(DM.REAL_SALE_AMT_B)  AS REAL_SALE_AMT_B
			 , SUM(DM.SALE_CNT_B)       AS SALE_CNT_B
		     , ROUND(NVL((SUM(DM.REAL_SALE_AMT_A)-SUM(DM.REAL_SALE_AMT_B))/ DECODE(SUM(DM.REAL_SALE_AMT_B), 0, NULL, SUM(DM.REAL_SALE_AMT_B)),0) *100,2) AS SIN_AMT
		     , ROUND(NVL((SUM(DM.SALE_CNT_A)-SUM(DM.SALE_CNT_B))/ DECODE(SUM(DM.SALE_CNT_B), 0, NULL, SUM(DM.SALE_CNT_B)),0) *100,2) AS SIN_CNT
		  FROM (
				SELECT UM.PROD_CD
				     , UM.PROD_NM
					 , DECODE(UM.GBN,'A',UM.REAL_SALE_AMT,'')  REAL_SALE_AMT_A
					 , DECODE(UM.GBN,'A',UM.TOT_SALE_QTY,'')      SALE_CNT_A
					 , DECODE(UM.GBN,'B',UM.REAL_SALE_AMT,'') REAL_SALE_AMT_B
					 , DECODE(UM.GBN,'B',UM.TOT_SALE_QTY,'')      SALE_CNT_B
				  FROM (
						SELECT  'A' GBN
							 ,  B.PROD_CD
							 ,  B.PROD_NM
						     ,  SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
						     ,  SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
						  FROM  (
									SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
									  FROM (
											SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
											  FROM TB_MS_PRODUCT       B
											 WHERE 1=1
											 AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND B.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
									   	  	<if test='prodClassCd != null and prodClassCd != ""'>
											   AND B.PROD_CLASS_CD = #{prodClassCd}
											</if>
											<if test='brandCd != null and brandCd != ""'>
                                                AND B.HQ_BRAND_CD = #{brandCd}
                                             </if>
									       ) B
									     , (
											SELECT C.STORE_CD
												 , C.PROD_CD
											     , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											     , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
											  FROM TB_SL_DAILY_PROD    C
											 WHERE  C.HQ_OFFICE_CD = #{hqOfficeCd}
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND C.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
											<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
											   	  AND C.SALE_DATE BETWEEN REPLACE(#{startDate}, '-', '') AND REPLACE(#{endDate}, '-', '')
										 	 </if>
										 	 <if test='brandCd != null and brandCd != ""'>
                                                AND C.HQ_BRAND_CD = #{brandCd}
                                             </if>
											 GROUP BY C.STORE_CD, C.PROD_CD
									       ) C
									 WHERE  B.STORE_CD = C.STORE_CD(+)
									 AND	B.PROD_CD = C.PROD_CD(+)
									 <if test='storeCd != null and storeCd != "" and prodClassCd != null and prodClassCd != ""'>
									   AND EXISTS (SELECT * FROM TB_MS_PRODUCT_CLASS Z
									   	 <if test='arrStoreCd != null and arrStoreCd != ""'>
									  	  WHERE Z.STORE_CD IN
									  	 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
									  	  		#{item}
									  	  	</foreach>
	                                     </if>
									   AND Z.PROD_CLASS_CD = B.PROD_CLASS_CD)
									 </if>
									 GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
						         ) B
						  GROUP BY B.PROD_CD
								 , B.PROD_NM
						UNION ALL
						SELECT  'B' GBN
							 ,  B.PROD_CD
							 ,  B.PROD_NM
						     ,  SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
						     ,  SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
						  FROM  (
									SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
									  FROM (
											SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
											  FROM TB_MS_PRODUCT       B
											 WHERE 1=1
											 AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND B.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
									   	  	<if test='prodClassCd != null and prodClassCd != ""'>
											   AND B.PROD_CLASS_CD = #{prodClassCd}
											</if>
											<if test='brandCd != null and brandCd != ""'>
                                                AND B.HQ_BRAND_CD = #{brandCd}
                                             </if>
									       ) B
									     , (
											SELECT C.STORE_CD
												 , C.PROD_CD
											     , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											     , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
											  FROM TB_SL_DAILY_PROD    C
											 WHERE C.HQ_OFFICE_CD = #{hqOfficeCd}
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND C.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	 </if>
											 <if test="compStartDate != null and compStartDate != '' and compEndDate != null and compEndDate != ''">
											   	AND C.SALE_DATE BETWEEN REPLACE(#{compStartDate}, '-', '') AND REPLACE(#{compEndDate}, '-', '')
										 	 </if>
										 	 <if test='brandCd != null and brandCd != ""'>
										 	    AND C.HQ_BRAND_CD = #{brandCd}
										 	 </if>
											 GROUP BY C.STORE_CD, C.PROD_CD
									       ) C
									 WHERE  B.STORE_CD = C.STORE_CD(+)
									 AND	B.PROD_CD = C.PROD_CD(+)
									 <if test='storeCd != null and storeCd != "" and prodClassCd != null and prodClassCd != ""'>
									   AND EXISTS (SELECT * FROM TB_MS_PRODUCT_CLASS Z
							             <if test='arrStoreCd != null and arrStoreCd != ""'>
									  	  WHERE Z.STORE_CD IN
									  	 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
									  	  		#{item}
									  	  	</foreach>
	                                     </if>
									   		AND Z.PROD_CLASS_CD = B.PROD_CLASS_CD)
									 </if>
									 GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
						         ) B
						  GROUP BY B.PROD_CD
								 , B.PROD_NM
						) UM
		       ) DM
		GROUP BY DM.PROD_CD
		     , DM.PROD_NM
		ORDER BY SUM(DM.REAL_SALE_AMT_A) DESC
    </select>

    <select id="getVersusPeriodClassDtlChartList" parameterType="versusPeriodClassVO" resultType="DefaultMap">
		SELECT DM.PROD_CD
		     , DM.PROD_NM
			 , SUM(DM.REAL_SALE_AMT_A)  AS REAL_SALE_AMT_A
			 , SUM(DM.SALE_CNT_A)   	AS SALE_CNT_A
			 , SUM(DM.REAL_SALE_AMT_B)  AS REAL_SALE_AMT_B
			 , SUM(DM.SALE_CNT_B)       AS SALE_CNT_B
		     , ROUND(NVL((SUM(DM.REAL_SALE_AMT_A)-SUM(DM.REAL_SALE_AMT_B))/ DECODE(SUM(DM.REAL_SALE_AMT_B), 0, NULL, SUM(DM.REAL_SALE_AMT_B)),0) *100,2) AS SIN_AMT
		     , ROUND(NVL((SUM(DM.SALE_CNT_A)-SUM(DM.SALE_CNT_B))/ DECODE(SUM(DM.SALE_CNT_B), 0, NULL, SUM(DM.SALE_CNT_B)),0) *100,2) AS SIN_CNT
		  FROM (
				SELECT UM.PROD_CD
				     , UM.PROD_NM
					 , DECODE(UM.GBN,'A',UM.REAL_SALE_AMT,'')  REAL_SALE_AMT_A
					 , DECODE(UM.GBN,'A',UM.TOT_SALE_QTY,'')      SALE_CNT_A
					 , DECODE(UM.GBN,'B',UM.REAL_SALE_AMT,'') REAL_SALE_AMT_B
					 , DECODE(UM.GBN,'B',UM.TOT_SALE_QTY,'')      SALE_CNT_B
				  FROM (
						SELECT  'A' GBN
							 ,  B.PROD_CD
							 ,  B.PROD_NM
						     ,  SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
						     ,  SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
						  FROM  (
									SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
									  FROM (
											SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
											  FROM TB_MS_PRODUCT       B
											 WHERE 1=1
											 AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND B.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
									   	  	<if test='prodClassCd != null and prodClassCd != ""'>
											   AND B.PROD_CLASS_CD = #{prodClassCd}
											</if>
											<if test='brandCd != null and brandCd != ""'>
                                                AND B.HQ_BRAND_CD = #{brandCd}
                                             </if>
									       ) B
									     , (
											SELECT C.STORE_CD
												 , C.PROD_CD
											     , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											     , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
											  FROM TB_SL_DAILY_PROD    C
											 WHERE C.HQ_OFFICE_CD = #{hqOfficeCd}
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND C.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
											<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
											   	  AND C.SALE_DATE BETWEEN REPLACE(#{startDate}, '-', '') AND REPLACE(#{endDate}, '-', '')
										 	 </if>
										 	 <if test='brandCd != null and brandCd != ""'>
                                                AND C.HQ_BRAND_CD = #{brandCd}
                                             </if>
											 GROUP BY C.STORE_CD, C.PROD_CD
									       ) C
									 WHERE  B.STORE_CD = C.STORE_CD(+)
									 AND	B.PROD_CD = C.PROD_CD(+)
									 <if test='storeCd != null and storeCd != "" and prodClassCd != null and prodClassCd != ""'>
									   AND EXISTS (SELECT * FROM TB_MS_PRODUCT_CLASS Z
									   	 <if test='arrStoreCd != null and arrStoreCd != ""'>
									  	  WHERE Z.STORE_CD IN
									  	 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
									  	  		#{item}
									  	  	</foreach>
	                                     </if>
									   AND Z.PROD_CLASS_CD = B.PROD_CLASS_CD)
									 </if>
									 GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
						         ) B
						  GROUP BY B.PROD_CD
								 , B.PROD_NM
						UNION ALL
						SELECT  'B' GBN
							 ,  B.PROD_CD
							 ,  B.PROD_NM
						     ,  SUM(B.REAL_SALE_AMT)    AS REAL_SALE_AMT
						     ,  SUM(B.TOT_SALE_QTY)     AS TOT_SALE_QTY
						  FROM  (
									SELECT B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM, SUM(NVL(C.REAL_SALE_AMT,0)) AS REAL_SALE_AMT, SUM(NVL(C.TOT_SALE_QTY,0)) AS TOT_SALE_QTY
									  FROM (
											SELECT B.STORE_CD, B.PROD_CD, B.PROD_NM, B.PROD_CLASS_CD
											  FROM TB_MS_PRODUCT       B
											 WHERE 1=1
											 AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.HQ_OFFICE_CD = #{hqOfficeCd} AND Z.STORE_CD = B.STORE_CD)
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND B.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	</if>
									   	  	<if test='prodClassCd != null and prodClassCd != ""'>
											   AND B.PROD_CLASS_CD = #{prodClassCd}
											</if>
											<if test='brandCd != null and brandCd != ""'>
                                                AND B.HQ_BRAND_CD = #{brandCd}
                                             </if>
									       ) B
									     , (
											SELECT C.STORE_CD
												 , C.PROD_CD
											     , SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
											     , SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
											  FROM TB_SL_DAILY_PROD    C
											 WHERE C.HQ_OFFICE_CD = #{hqOfficeCd}
											 <if test='arrStoreCd != null and arrStoreCd != ""'>
									   	   	  	   AND C.STORE_CD IN
										      	   <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
														#{item}
										      	   </foreach>
									   	  	 </if>
											 <if test="compStartDate != null and compStartDate != '' and compEndDate != null and compEndDate != ''">
											   	AND C.SALE_DATE BETWEEN REPLACE(#{compStartDate}, '-', '') AND REPLACE(#{compEndDate}, '-', '')
										 	 </if>
										 	 <if test='brandCd != null and brandCd != ""'>
										 	    AND C.HQ_BRAND_CD = #{brandCd}
										 	 </if>
											 GROUP BY C.STORE_CD, C.PROD_CD
									       ) C
									 WHERE  B.STORE_CD = C.STORE_CD(+)
									 AND	B.PROD_CD = C.PROD_CD(+)
									 <if test='storeCd != null and storeCd != "" and prodClassCd != null and prodClassCd != ""'>
									   AND EXISTS (SELECT * FROM TB_MS_PRODUCT_CLASS Z
							             <if test='arrStoreCd != null and arrStoreCd != ""'>
									  	  WHERE Z.STORE_CD IN
									  	 	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
									  	  		#{item}
									  	  	</foreach>
	                                     </if>
									   		AND Z.PROD_CLASS_CD = B.PROD_CLASS_CD)
									 </if>
									 GROUP BY B.PROD_CLASS_CD, B.PROD_CD, B.PROD_NM
						         ) B
						  GROUP BY B.PROD_CD
								 , B.PROD_NM
						) UM
		       ) DM
		GROUP BY DM.PROD_CD
		     , DM.PROD_NM
		HAVING	SUM(DM.SALE_CNT_A) > 0
				OR SUM(DM.SALE_CNT_B) > 0
		ORDER BY SUM(DM.REAL_SALE_AMT_A) DESC
    </select>

    <select id="getBrandCdList" parameterType="versusPeriodClassVO" resultType="DefaultMap">

	    SELECT HQ_BRAND_CD AS NMCODE_CD
	         , HQ_BRAND_NM AS NMCODE_NM
	      FROM TB_HQ_BRAND
	     WHERE 1 = 1
	     <if test='hqOfficeCd != null and hqOfficeCd != ""'>
	        AND HQ_OFFICE_CD = #{hqOfficeCd};
	     </if>

    </select>

</mapper>
