<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.stock.status.storemonth.service.impl.StockStoreMonthMapper">
    <!-- 매장월수불 - 리스트 조회 -->
    <!--
        TABLE    : TB_ST_STORE_STOCK_MONTHLY, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD, TB_HQ_PRODUCT_CLASS
        PARAM    : stockStoreMonthVO
        COMMENTS : 매장월수불현황 - 리스트를 조회한다.
    -->
    <select id="stockStoreMonthList" parameterType="stockStoreMonthVO" resultType="DefaultMap">
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT A.*
             , (SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = A.PO_UNIT_FG)  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
             <include refid="CmmSQL.PagingTemplateCount"/>
        FROM (
                SELECT A.*
			         , TPSSM.PROD_CD
					 , TMP.PROD_NM
					 , TPSSM.STORE_CD
					 , (SELECT STORE_NM FROM TB_MS_STORE Z WHERE Z.STORE_CD = TPSSM.STORE_CD) AS STORE_NM
					 , TPSSM.PO_UNIT_QTY
					 , TMP.PO_UNIT_FG
					 , TMPB.BARCD_CD
					 <if test='unitFg == "0"'>
						 , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_QTY / TMP.PO_UNIT_QTY)         ) AS BASE_QTY            /* 기초재고수량 */
						 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_QTY / TMP.PO_UNIT_QTY)     ) AS IO_OCCR_QTY_03      /* 매장입고 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_QTY / TMP.PO_UNIT_QTY)    ) AS IO_OCCR_QTY_12      /* 매장반품 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_QTY / TMP.PO_UNIT_QTY)    ) AS IO_OCCR_QTY_06      /* 사입입고 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_QTY / TMP.PO_UNIT_QTY)   ) AS IO_OCCR_QTY_18      /* 사입반품 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_QTY / TMP.PO_UNIT_QTY)   ) AS IO_OCCR_QTY_11      /* 매장판매 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_QTY / TMP.PO_UNIT_QTY)      ) AS IO_OCCR_QTY_04      /* 매장이입 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_QTY / TMP.PO_UNIT_QTY)     ) AS IO_OCCR_QTY_14      /* 매장이출 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_QTY / TMP.PO_UNIT_QTY)       ) AS IO_OCCR_QTY_17      /* 재고폐기 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_QTY / TMP.PO_UNIT_QTY)          ) AS IO_OCCR_QTY_21      /* 재고조정 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_QTY / TMP.PO_UNIT_QTY)       ) AS IO_OCCR_QTY_22      /* 세트생성 수량*/
						 , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_QTY / TMP.PO_UNIT_QTY)        ) AS CLOSE_QTY           /* 기말재고수량 */
					 </if>
					 <if test='unitFg == "1"'>
                         , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_QTY)         ) AS BASE_QTY        /* 기초재고수량 */
                         , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_QTY)     ) AS IO_OCCR_QTY_03  /* 매장입고 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_QTY)    ) AS IO_OCCR_QTY_12  /* 매장반품 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_QTY)    ) AS IO_OCCR_QTY_06  /* 사입입고 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_QTY)   ) AS IO_OCCR_QTY_18  /* 사입반품 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_QTY)   ) AS IO_OCCR_QTY_11  /* 매장판매 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_QTY)      ) AS IO_OCCR_QTY_04  /* 매장이입 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_QTY)     ) AS IO_OCCR_QTY_14  /* 매장이출 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_QTY)       ) AS IO_OCCR_QTY_17  /* 재고폐기 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_QTY)          ) AS IO_OCCR_QTY_21  /* 재고조정 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_QTY)       ) AS IO_OCCR_QTY_22  /* 세트생성 수량*/
                         , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_QTY)        ) AS CLOSE_QTY       /* 기말재고수량 */

                    </if>
                    , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_AMT)         ) AS BASE_AMT         /* 기초재고금액 */
                    , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_TOT)     ) AS IO_OCCR_TOT_03   /* 매장입고 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_TOT)    ) AS IO_OCCR_TOT_12   /* 매장반품 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_TOT)    ) AS IO_OCCR_TOT_06   /* 사입입고 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_TOT)   ) AS IO_OCCR_TOT_18   /* 사입반품 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_TOT)   ) AS IO_OCCR_TOT_11   /* 매장판매 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_TOT)      ) AS IO_OCCR_TOT_04   /* 매장이입 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_TOT)     ) AS IO_OCCR_TOT_14   /* 매장이출 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_AMT)       ) AS IO_OCCR_TOT_17   /* 재고폐기 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_AMT)          ) AS IO_OCCR_TOT_21   /* 재고조정 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_AMT)       ) AS IO_OCCR_TOT_22   /* 세트생성 금액*/
                    , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_AMT)        ) AS CLOSE_AMT        /* 기말재고금액 */
                  FROM (
                              SELECT   A.P_PROD_CLASS_CD   AS LV1_CD
                                      ,A.PROD_CLASS_CD     AS LV2_CD
                                      ,A.PROD_CLASS_NM     AS LV2_NM
                                      ,B.PROD_CLASS_CD     AS LV3_CD
                                      ,B.PROD_CLASS_NM     AS LV3_NM
                                      ,(SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM
                              FROM    (
                                          SELECT  HQ_OFFICE_CD
                                                , P_PROD_CLASS_CD
                                                , PROD_CLASS_CD
                                                , PROD_CLASS_NM
                                          FROM    TB_HQ_PRODUCT_CLASS
                                          WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                          AND     P_PROD_CLASS_CD IN (
                                                                        SELECT  PROD_CLASS_CD
                                                                        FROM    TB_HQ_PRODUCT_CLASS
                                                                        WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                                                        AND     P_PROD_CLASS_CD = '00000'
                                                                      )
                                      )                      A,
                                      TB_HQ_PRODUCT_CLASS    B
                              WHERE   B.P_PROD_CLASS_CD IN    (
                                                                  SELECT  PROD_CLASS_CD
                                                                  FROM    TB_HQ_PRODUCT_CLASS
                                                                  WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                                                  AND     P_PROD_CLASS_CD IN (
                                                                                               SELECT  PROD_CLASS_CD
                                                                                               FROM    TB_HQ_PRODUCT_CLASS
                                                                                               WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                                                                               AND     P_PROD_CLASS_CD = '00000'
                                                                                              )
                                                              )
                              AND     A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
                              AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
                          )               A
                     , TB_ST_STORE_STOCK_MONTHLY TPSSM
				     , TB_MS_PRODUCT TMP
				     , TB_MS_PRODUCT_BARCD TMPB
                 WHERE TPSSM.STORE_CD     = TMP.STORE_CD
                   AND TPSSM.PROD_CD      = TMP.PROD_CD
                   AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.STORE_CD = TPSSM.STORE_CD AND Z.HQ_OFFICE_CD = #{hqOfficeCd})
                   AND TMP.PROD_CLASS_CD = A.LV3_CD
                   AND TPSSM.STORE_CD     = TMPB.STORE_CD(+)
                   AND TPSSM.PROD_CD      = TMPB.PROD_CD(+)
                   <if test='startDate != null and startDate != ""'>
                      AND TPSSM.IOSTOCK_YM  = #{startDate}
                   </if>
                   <if test='prodCd != null and prodCd != ""'>
                      AND TMP.PROD_CD  = #{prodCd}
                   </if>
                   <if test='arrStoreCd != null and arrStoreCd != ""'>
                      AND TPSSM.STORE_CD IN
                       <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                           #{item}
                       </foreach>
                   </if>
                   <if test='arrVendrCd != null and arrVendrCd != ""'>
                      AND TMP.PROD_CD IN    ( SELECT  PROD_CD
                                              FROM    TB_MS_VENDOR_PROD
                                              WHERE   STORE_CD = TPSSM.STORE_CD
                                              AND     VENDR_CD IN
                                              <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                                                  #{item}
                                              </foreach>
                                            )
                   </if>
                   <if test='prodClassCd != null and prodClassCd != ""'>
                      AND TMP.PROD_CLASS_CD  IN (
                                                    SELECT              PROD_CLASS_CD
                                                    FROM                TB_HQ_PRODUCT_CLASS
                                                    WHERE               HQ_OFFICE_CD    = #{hqOfficeCd}
                                                    START WITH          PROD_CLASS_CD   = #{prodClassCd}
                                                    AND                 HQ_OFFICE_CD    = #{hqOfficeCd}
                                                    CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
                                                    AND                 HQ_OFFICE_CD    = #{hqOfficeCd}
                                                )
                   </if>
                   <if test='prodNm != null and prodNm != ""'>
                      AND TMP.PROD_NM  LIKE '%'||#{prodNm}||'%'
                   </if>
                   <if test='barcdCd != null and barcdCd != ""'>
                      AND TMPB.BARCD_CD  = #{barcdCd}
                   </if>
                 GROUP BY  A.LV1_CD
                         , A.LV1_NM
                         , A.LV2_CD
                         , A.LV2_NM
                         , A.LV3_CD
                         , A.LV3_NM
                         , TPSSM.PROD_CD
                         , TMP.PROD_NM
                         , TPSSM.STORE_CD
                         , TPSSM.PO_UNIT_QTY
                         , TMP.PO_UNIT_FG
                         , TMPB.BARCD_CD
                 ORDER BY TPSSM.PROD_CD
                        , TPSSM.STORE_CD
            ) A
         <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
</mapper>