<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    Oper.xml
    운영현황
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김유승     2024.04.11     최초작성
-->
<mapper namespace="kr.co.solbipos.pos.license.runStore.service.impl.RunStoreMapper">

    <!-- 런닝매장현황 탭 - 조회-->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE, TB_MS_POS, TB_CM_INSTLL, TB_SL_SALE_HDR
        COMMENTS : [매장]매장 정보 와 [본사]본사 정보, [매장]포스 정보, 설치의뢰, [매출]헤더
    -->
    <select id="getRunStoreList" parameterType="RunStoreVO" resultType="DefaultMap">
        /* RunStoreMapper.getRunStoreList */
        SELECT  A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG, B.OWNER_NM, B.BIZ_NO
        ,       C.NMCODE_NM SYS_STAT_NM
        ,       TO_CHAR(TO_DATE(B.SYS_OPEN_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SYS_OPEN_DATE
        ,       TO_CHAR(TO_DATE(SUBSTR(B.REG_DT, 1, 8), 'yyyymmdd'), 'yyyy-mm-dd') AS REG_DATE
        ,       B.AGENCY_CD
        ,       D.AGENCY_NM
        ,       B.VAN_CD
        ,       E.VAN_NM
        ,		Q.ENVST_VAL_NM AS PROG_FG
        ,       O.POS_CNT
        ,       G.BILL_CNT
        ,       G.SALE_CNT
        ,       G.RTN_SALE_CNT
        ,       G.REAL_SALE_CNT
        ,       G.TOT_GUEST_CNT
        ,       G.TOT_DLVR_CNT
        ,       G.TOT_RESVE_CNT
        ,       G.TOT_REFUND_CNT
        ,       G.MIN_SALE_YM
        ,       G.MAX_SALE_YM
        ,       CASE WHEN G.MIN_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MIN_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MIN_SALE_DATE
        ,       CASE WHEN G.MAX_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MAX_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MAX_SALE_DATE
        ,       H.P_BILL_CNT
        ,       H.P_SALE_CNT
        ,       H.P_RTN_SALE_CNT
        ,       H.P_REAL_SALE_CNT
        ,       CASE WHEN H.P_MAX_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(H.P_MAX_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS P_MAX_SALE_DATE
        ,       I.P_CARD_CNT
        ,       J.P_CASH_CNT
        ,       J.P_CASH_APPR_CNT
        ,       K.VENDOR_TERMNL_NO
        ,       DECODE(L.SOLBI_STORE_CD, NULL, '신규', '전환') AS SHOP_MIG_FG
        ,       (SELECT AGENCY_NM FROM TB_CM_AGENCY WHERE AGENCY_CD = (SELECT DECODE(P_AGENCY_CD, '00000', AGENCY_CD, P_AGENCY_CD) FROM TB_CM_AGENCY WHERE AGENCY_CD = B.AGENCY_CD)) AS DIST
        ,       F.POS_VER_NO
        ,       CASE WHEN M.LAST_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(M.LAST_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS LAST_SALE_DATE
        ,       CASE WHEN N.INST_INS_DT IS NOT NULL THEN TO_CHAR(TO_DATE(SUBSTR(N.INST_INS_DT,0,8), 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS INST_INS_DT
        FROM    TB_HQ_OFFICE A
        ,       TB_MS_STORE B
        ,       TB_CM_NMCODE C
        ,       TB_CM_AGENCY D
        ,       TB_CM_VAN_CMPNY E
        ,       (
        SELECT  STORE_CD
        ,       COUNT(POS_NO) AS POS_CNT
        ,       MAX(POS_VER_NO) AS POS_VER_NO
        FROM    TB_MS_POS
        WHERE   USE_YN  =   'Y'
        GROUP
        BY      STORE_CD
        ) F
        ,       (
        SELECT  A.STORE_CD              STORE_CD
        ,       A.BILL_CNT              BILL_CNT
        ,       A.SALE_CNT              SALE_CNT
        ,       A.RTN_SALE_CNT          RTN_SALE_CNT
        ,       A.REAL_SALE_CNT         REAL_SALE_CNT
        ,       A.TOT_GUEST_CNT         TOT_GUEST_CNT
        ,       A.TOT_DLVR_CNT          TOT_DLVR_CNT
        ,       A.TOT_RESVE_CNT         TOT_RESVE_CNT
        ,       A.TOT_REFUND_CNT        TOT_REFUND_CNT
        ,       A.MIN_SALE_YM           MIN_SALE_YM
        ,       A.MAX_SALE_YM           MAX_SALE_YM
        ,       MIN(B.SALE_DATE)        MIN_SALE_DATE
        ,       MAX(C.SALE_DATE)        MAX_SALE_DATE
        FROM    (
        SELECT  A.STORE_CD
        ,       SUM(NVL(A.BILL_CNT      , 0))   BILL_CNT
        ,       SUM(NVL(A.SALE_CNT      , 0))   SALE_CNT
        ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   RTN_SALE_CNT
        ,       SUM(NVL(A.REAL_SALE_CNT , 0))   REAL_SALE_CNT
        ,       SUM(NVL(A.TOT_GUEST_CNT , 0))   TOT_GUEST_CNT
        ,       SUM(NVL(A.TOT_DLVR_CNT  , 0))   TOT_DLVR_CNT
        ,       SUM(NVL(A.TOT_RESVE_CNT , 0))   TOT_RESVE_CNT
        ,       SUM(NVL(A.TOT_REFUND_CNT, 0))   TOT_REFUND_CNT
        ,       MIN(A.SALE_YM)                  MIN_SALE_YM
        ,       MAX(A.SALE_YM)                  MAX_SALE_YM
        FROM    TB_SL_MONTHLY_TOTAL A
        GROUP
        BY      A.STORE_CD
        ) A
        ,       TB_SL_DAILY_TOTAL B
        ,       TB_SL_DAILY_TOTAL C
        WHERE   B.STORE_CD  (+) =   A.STORE_CD
        AND     B.SALE_DATE (+) LIKE    A.MIN_SALE_YM||'%'
        AND     C.STORE_CD  (+) =   A.STORE_CD
        AND     C.SALE_DATE (+) LIKE    A.MAX_SALE_YM||'%'
        GROUP
        BY      A.STORE_CD
        ,       A.BILL_CNT
        ,       A.SALE_CNT
        ,       A.RTN_SALE_CNT
        ,       A.REAL_SALE_CNT
        ,       A.TOT_GUEST_CNT
        ,       A.TOT_DLVR_CNT
        ,       A.TOT_RESVE_CNT
        ,       A.TOT_REFUND_CNT
        ,       A.MIN_SALE_YM
        ,       A.MAX_SALE_YM
        ) G
        ,       (
        SELECT  A.STORE_CD
        ,       SUM(NVL(A.BILL_CNT      , 0))   P_BILL_CNT
        ,       SUM(NVL(A.SALE_CNT      , 0))   P_SALE_CNT
        ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   P_RTN_SALE_CNT
        ,       SUM(NVL(A.REAL_SALE_CNT , 0))   P_REAL_SALE_CNT
        ,       MAX(A.SALE_DATE)                P_MAX_SALE_DATE
        FROM    TB_SL_DAILY_TOTAL A
        WHERE   1=1
        <choose>
            <when test='dayGubun != null and dayGubun == "D"'>
                AND A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
            </when>
            <when test='dayGubun != null and dayGubun == "M"'>
                AND A.SALE_DATE BETWEEN #{startMonth} || '01' AND #{endMonth} || '31'
            </when>
        </choose>
        GROUP
        BY      A.STORE_CD
        ) H
        ,       (
        SELECT  HQ_OFFICE_CD
        ,       STORE_CD
        ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CARD_CNT
        FROM    TB_SL_SALE_PAY_CARD
        WHERE   1=1
        <choose>
            <when test='dayGubun != null and dayGubun == "D"'>
                AND SALE_DATE BETWEEN #{startDate} AND #{endDate}
            </when>
            <when test='dayGubun != null and dayGubun == "M"'>
                AND SALE_DATE BETWEEN #{startMonth} || '01' AND #{endMonth} || '31'
            </when>
        </choose>
        GROUP
        BY      HQ_OFFICE_CD
        ,       STORE_CD
        ) I
        ,       (
        SELECT  HQ_OFFICE_CD
        ,       STORE_CD
        ,       COUNT(STORE_CD) AS CASH_CNT
        ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CASH_CNT
        ,       SUM(CASE WHEN APPR_DT IS NOT NULL THEN DECODE(SALE_YN, 'Y', 1, 'N', -1, 0) ELSE 0 END) AS P_CASH_APPR_CNT
        FROM    TB_SL_SALE_PAY_CASH
        WHERE   1=1
        <choose>
            <when test='dayGubun != null and dayGubun == "D"'>
                AND SALE_DATE BETWEEN #{startDate} AND #{endDate}
            </when>
            <when test='dayGubun != null and dayGubun == "M"'>
                AND SALE_DATE BETWEEN #{startMonth} || '01' AND #{endMonth} || '31'
            </when>
        </choose>
        GROUP
        BY      HQ_OFFICE_CD
        ,       STORE_CD
        ) J
        ,       (
        SELECT  A.STORE_CD
        ,       REGEXP_REPLACE(LISTAGG(A.VENDOR_TERMNL_NO, ',') WITHIN GROUP(ORDER BY A.VENDOR_TERMNL_NO), '([^,]+)(,\1)*(,|$)', '\1\3') VENDOR_TERMNL_NO
        FROM    TB_MS_POS_TERMNL A
        ,       TB_MS_POS B
        WHERE   A.VENDOR_FG =   '01'
        AND     B.STORE_CD  =   A.STORE_CD
        AND     B.POS_NO    =   A.POS_NO
        AND     B.USE_YN    =   'Y'
        GROUP
        BY      A.STORE_CD
        ) K
        ,       TB_MIG_DATA_MAPPING L
        ,       (
        SELECT  A.STORE_CD
        ,       MAX(A.LAST_SALE_DATE) LAST_SALE_DATE
        FROM    TB_ST_STORE_STOCK_CUR A
        GROUP
        BY      A.STORE_CD
        ) M
        ,       (
        SELECT  A.STORE_CD
        ,       MIN(A.INST_INS_DT) INST_INS_DT
        FROM    TB_CM_INSTLL A
        GROUP
        BY      A.STORE_CD
        ) N
        ,       (
        SELECT  A.STORE_CD
        ,       COUNT(DISTINCT A.POS_NO)          POS_CNT
        FROM    TB_CM_INSTLL A
        ,       TB_MS_POS B
        <![CDATA[
                    WHERE   A.INST_FG <>  '0'
                    ]]>
        AND     B.STORE_CD  =  A.STORE_CD
        AND     B.POS_NO    =  A.POS_NO
        AND     B.USE_YN    =   'Y'
        GROUP
        BY      A.STORE_CD
        ) O
        ,		(
        SELECT 	A.STORE_CD
        ,		A.ENVST_VAL
        FROM	TB_MS_STORE_ENVST A
        WHERE 	ENVST_CD = '1014'
        )P
        ,		(
        SELECT 	A.ENVST_VAL_CD
        ,		A.ENVST_VAL_NM
        FROM 	TB_CM_ENVST_DTL A
        WHERE 	A.ENVST_CD = '1014'
        )Q
        WHERE   1 = 1
        AND     B.HQ_OFFICE_CD      =   A.HQ_OFFICE_CD
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
            ]]>
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
            ]]>
        </if>
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                 AND B.STORE_CD LIKE '%'|| #{storeCd} ||'%'
            ]]>
        </if>
        <if test='storeNm != null and storeNm != ""'>
            <![CDATA[
                 AND B.STORE_NM LIKE '%'|| #{storeNm} ||'%'
            ]]>
        </if>
        <if test='manageVanCd != null and manageVanCd != ""'>
            <![CDATA[
                 AND B.VAN_CD = #{manageVanCd}
            ]]>
        </if>
        <if test='bizNo != null and bizNo != ""'>
            <![CDATA[
                 AND B.BIZ_NO = #{bizNo}
            ]]>
        </if>
        <if test='srchShopMigFg != null and srchShopMigFg != ""'>
            <![CDATA[
                 AND DECODE(L.SOLBI_STORE_CD, NULL, '0', '1') = #{srchShopMigFg}
            ]]>
        </if>
        <if test='includeFg != null and includeFg =="N"'>
            <if test="agencyCd != null and agencyCd != ''">
                AND D.AGENCY_CD = #{agencyCd}
            </if>
        </if>
        <if test='includeFg != null and includeFg =="Y"'>
            <if test="agencyCd != null and agencyCd != ''">
                AND	D.AGENCY_CD IN	(
                SELECT 	AGENCY_CD
                FROM 	TB_CM_AGENCY
                START WITH	P_AGENCY_CD = #{agencyCd}
                CONNECT BY
                PRIOR       AGENCY_CD   = P_AGENCY_CD
                UNION
                SELECT 	AGENCY_CD
                FROM 	TB_CM_AGENCY
                WHERE 	AGENCY_CD = #{agencyCd}
                )
            </if>
        </if>
        AND     C.NMCODE_GRP_CD     (+) =   '005'
        AND     C.NMCODE_CD         (+) =   B.SYS_STAT_FG
        AND     D.AGENCY_CD         (+) =   B.AGENCY_CD
        AND     E.VAN_FG            (+) =   '01'
        AND     E.VAN_CD            (+) =   B.VAN_CD
        AND     F.STORE_CD          (+) =   B.STORE_CD
        AND     G.STORE_CD          (+) =   B.STORE_CD
        AND     H.STORE_CD              =   B.STORE_CD
        AND     I.STORE_CD          (+) =   B.STORE_CD
        AND     J.STORE_CD          (+) =   B.STORE_CD
        AND     K.STORE_CD          (+) =   B.STORE_CD
        AND     L.SOLBI_STORE_CD    (+) =   B.STORE_CD
        AND     M.STORE_CD          (+) =   B.STORE_CD
        AND     N.STORE_CD          (+) =   B.STORE_CD
        AND     O.STORE_CD          (+) =   B.STORE_CD
        AND     P.STORE_CD          (+) =   B.STORE_CD
        AND     Q.ENVST_VAL_CD      (+) =   P.ENVST_VAL
        ORDER
        BY      A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG
    </select>

    <!-- 런닝COPY수 탭 - 조회-->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE, TB_MS_POS, TB_CM_INSTLL, TB_SL_SALE_HDR
        COMMENTS : [매장]매장 정보 와 [본사]본사 정보, [매장]포스 정보, 설치의뢰, [매출]헤더
    -->
    <select id="getRunCopyList" parameterType="RunStoreVO" resultType="DefaultMap">
        /* RunStoreMapper.getRunCopyList */
        SELECT  A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG, B.OWNER_NM, B.BIZ_NO
        ,       C.NMCODE_NM SYS_STAT_NM
        ,       TO_CHAR(TO_DATE(B.SYS_OPEN_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SYS_OPEN_DATE
        ,       TO_CHAR(TO_DATE(SUBSTR(B.REG_DT, 1, 8), 'yyyymmdd'), 'yyyy-mm-dd') AS REG_DATE
        ,       B.AGENCY_CD
        ,       D.AGENCY_NM
        ,       B.VAN_CD
        ,       E.VAN_NM
        ,		Q.ENVST_VAL_NM AS PROG_FG
        ,       O.POS_CNT
        ,       G.BILL_CNT
        ,       G.SALE_CNT
        ,       G.RTN_SALE_CNT
        ,       G.REAL_SALE_CNT
        ,       G.TOT_GUEST_CNT
        ,       G.TOT_DLVR_CNT
        ,       G.TOT_RESVE_CNT
        ,       G.TOT_REFUND_CNT
        ,       G.MIN_SALE_YM
        ,       G.MAX_SALE_YM
        ,       CASE WHEN G.MIN_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MIN_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MIN_SALE_DATE
        ,       CASE WHEN G.MAX_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MAX_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MAX_SALE_DATE
        ,       H.P_BILL_CNT
        ,       H.P_SALE_CNT
        ,       H.P_RTN_SALE_CNT
        ,       H.P_REAL_SALE_CNT
        ,       CASE WHEN S.P_MAX_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(S.P_MAX_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS P_MAX_SALE_DATE
        ,       CASE WHEN S.P_MIN_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(S.P_MIN_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS P_MIN_SALE_DATE
        ,       I.P_CARD_CNT
        ,       J.P_CASH_CNT
        ,       J.P_CASH_APPR_CNT
        ,       K.VENDOR_TERMNL_NO
        ,       DECODE(L.SOLBI_STORE_CD, NULL, '신규', '전환') AS SHOP_MIG_FG
        ,       (SELECT AGENCY_NM FROM TB_CM_AGENCY WHERE AGENCY_CD = (SELECT DECODE(P_AGENCY_CD, '00000', AGENCY_CD, P_AGENCY_CD) FROM TB_CM_AGENCY WHERE AGENCY_CD = B.AGENCY_CD)) AS DIST
        ,       F.POS_VER_NO
        ,       CASE WHEN M.LAST_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(M.LAST_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS LAST_SALE_DATE
        ,       CASE WHEN N.INST_INS_DT IS NOT NULL THEN TO_CHAR(TO_DATE(SUBSTR(N.INST_INS_DT,0,8), 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS INST_INS_DT
        ,		CASE
                    WHEN P_MIN_SALE_DATE BETWEEN #{startMonth}  || '01' AND #{startMonth}  || '31' THEN '신규'
                    WHEN P_MAX_SALE_DATE BETWEEN #{lastMonth}  || '01' AND #{lastMonth}  || '31' THEN '폐점'
                    WHEN P_MAX_SALE_DATE >= #{startMonth} || '01' THEN '운영'
                END 	AS RUN_FG
        FROM    TB_HQ_OFFICE A
        ,       TB_MS_STORE B
        ,       TB_CM_NMCODE C
        ,       TB_CM_AGENCY D
        ,       TB_CM_VAN_CMPNY E
        ,       (
                    SELECT  STORE_CD
                    ,       COUNT(POS_NO) AS POS_CNT
                    ,       MAX(POS_VER_NO) AS POS_VER_NO
                    FROM    TB_MS_POS
                    WHERE   USE_YN  =   'Y'
                    GROUP
                    BY      STORE_CD
                ) F
        ,       (
                    SELECT  A.STORE_CD              STORE_CD
                    ,       A.BILL_CNT              BILL_CNT
                    ,       A.SALE_CNT              SALE_CNT
                    ,       A.RTN_SALE_CNT          RTN_SALE_CNT
                    ,       A.REAL_SALE_CNT         REAL_SALE_CNT
                    ,       A.TOT_GUEST_CNT         TOT_GUEST_CNT
                    ,       A.TOT_DLVR_CNT          TOT_DLVR_CNT
                    ,       A.TOT_RESVE_CNT         TOT_RESVE_CNT
                    ,       A.TOT_REFUND_CNT        TOT_REFUND_CNT
                    ,       A.MIN_SALE_YM           MIN_SALE_YM
                    ,       A.MAX_SALE_YM           MAX_SALE_YM
                    ,       MIN(B.SALE_DATE)        MIN_SALE_DATE
                    ,       MAX(C.SALE_DATE)        MAX_SALE_DATE
                    FROM    (
                                SELECT  A.STORE_CD
                                ,       SUM(NVL(A.BILL_CNT      , 0))   BILL_CNT
                                ,       SUM(NVL(A.SALE_CNT      , 0))   SALE_CNT
                                ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   RTN_SALE_CNT
                                ,       SUM(NVL(A.REAL_SALE_CNT , 0))   REAL_SALE_CNT
                                ,       SUM(NVL(A.TOT_GUEST_CNT , 0))   TOT_GUEST_CNT
                                ,       SUM(NVL(A.TOT_DLVR_CNT  , 0))   TOT_DLVR_CNT
                                ,       SUM(NVL(A.TOT_RESVE_CNT , 0))   TOT_RESVE_CNT
                                ,       SUM(NVL(A.TOT_REFUND_CNT, 0))   TOT_REFUND_CNT
                                ,       MIN(A.SALE_YM)                  MIN_SALE_YM
                                ,       MAX(A.SALE_YM)                  MAX_SALE_YM
                                FROM    TB_SL_MONTHLY_TOTAL A
                                GROUP
                                BY      A.STORE_CD
                            ) A
                    ,       TB_SL_DAILY_TOTAL B
                    ,       TB_SL_DAILY_TOTAL C
                    WHERE   B.STORE_CD  (+) =   A.STORE_CD
                    AND     B.SALE_DATE (+) LIKE    A.MIN_SALE_YM||'%'
                    AND     C.STORE_CD  (+) =   A.STORE_CD
                    AND     C.SALE_DATE (+) LIKE    A.MAX_SALE_YM||'%'
                    GROUP
                    BY      A.STORE_CD
                    ,       A.BILL_CNT
                    ,       A.SALE_CNT
                    ,       A.RTN_SALE_CNT
                    ,       A.REAL_SALE_CNT
                    ,       A.TOT_GUEST_CNT
                    ,       A.TOT_DLVR_CNT
                    ,       A.TOT_RESVE_CNT
                    ,       A.TOT_REFUND_CNT
                    ,       A.MIN_SALE_YM
                    ,       A.MAX_SALE_YM
                ) G
        ,       (
                    SELECT  A.STORE_CD
                    ,       SUM(NVL(A.BILL_CNT      , 0))   P_BILL_CNT
                    ,       SUM(NVL(A.SALE_CNT      , 0))   P_SALE_CNT
                    ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   P_RTN_SALE_CNT
                    ,       SUM(NVL(A.REAL_SALE_CNT , 0))   P_REAL_SALE_CNT
                    FROM    TB_SL_DAILY_TOTAL A
                    WHERE   1=1
                    AND     A.SALE_DATE BETWEEN #{startMonth} || '01' AND #{startMonth} || '31'
                    GROUP
                    BY      A.STORE_CD
                ) H
        ,       (
                    SELECT  HQ_OFFICE_CD
                    ,       STORE_CD
                    ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CARD_CNT
                    FROM    TB_SL_SALE_PAY_CARD
                    WHERE   1=1
                    AND     SALE_DATE BETWEEN #{startMonth} || '01' AND #{startMonth} || '31'
                    GROUP
                    BY      HQ_OFFICE_CD
                    ,       STORE_CD
                ) I
        ,       (
                    SELECT  HQ_OFFICE_CD
                    ,       STORE_CD
                    ,       COUNT(STORE_CD) AS CASH_CNT
                    ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CASH_CNT
                    ,       SUM(CASE WHEN APPR_DT IS NOT NULL THEN DECODE(SALE_YN, 'Y', 1, 'N', -1, 0) ELSE 0 END) AS P_CASH_APPR_CNT
                    FROM    TB_SL_SALE_PAY_CASH
                    WHERE   1=1
                    AND     SALE_DATE BETWEEN #{startMonth} || '01' AND #{startMonth} || '31'
                    GROUP
                    BY      HQ_OFFICE_CD
                    ,       STORE_CD
                ) J
        ,       (
                    SELECT  A.STORE_CD
                    ,       REGEXP_REPLACE(LISTAGG(A.VENDOR_TERMNL_NO, ',') WITHIN GROUP(ORDER BY A.VENDOR_TERMNL_NO), '([^,]+)(,\1)*(,|$)', '\1\3') VENDOR_TERMNL_NO
                    FROM    TB_MS_POS_TERMNL A
                    ,       TB_MS_POS B
                    WHERE   A.VENDOR_FG =   '01'
                    AND     B.STORE_CD  =   A.STORE_CD
                    AND     B.POS_NO    =   A.POS_NO
                    AND     B.USE_YN    =   'Y'
                    GROUP
                    BY      A.STORE_CD
                ) K
        ,       TB_MIG_DATA_MAPPING L
        ,       (
                    SELECT  A.STORE_CD
                    ,       MAX(A.LAST_SALE_DATE) LAST_SALE_DATE
                    FROM    TB_ST_STORE_STOCK_CUR A
                    GROUP
                    BY      A.STORE_CD
                ) M
        ,       (
                    SELECT  A.STORE_CD
                    ,       MIN(A.INST_INS_DT) INST_INS_DT
                    FROM    TB_CM_INSTLL A
                    GROUP
                    BY      A.STORE_CD
                ) N
        ,       (
                    SELECT  A.STORE_CD
                    ,       COUNT(DISTINCT A.POS_NO)          POS_CNT
                    FROM    TB_CM_INSTLL A
                    ,       TB_MS_POS B
                    <![CDATA[
                                WHERE   A.INST_FG <>  '0'
                                ]]>
                    AND     B.STORE_CD  =  A.STORE_CD
                    AND     B.POS_NO    =  A.POS_NO
                    AND     B.USE_YN    =   'Y'
                    GROUP
                    BY      A.STORE_CD
                ) O
        ,		(
                    SELECT 	A.STORE_CD
                    ,		A.ENVST_VAL
                    FROM	TB_MS_STORE_ENVST A
                    WHERE 	ENVST_CD = '1014'
                )P
        ,		(
                    SELECT 	A.ENVST_VAL_CD
                    ,		A.ENVST_VAL_NM
                    FROM 	TB_CM_ENVST_DTL A
                    WHERE 	A.ENVST_CD = '1014'
                    )Q
        ,       (
                    SELECT  A.STORE_CD
                    ,       MAX(A.SALE_DATE)                P_MAX_SALE_DATE
                    ,       MIN(A.SALE_DATE)                P_MIN_SALE_DATE
                    FROM    TB_SL_DAILY_TOTAL A
                    WHERE   1=1
                    AND     A.SALE_DATE BETWEEN #{lastMonth} || '01' AND #{startMonth} || '31'
                    <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                        <![CDATA[
                             AND A.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                        ]]>
                    </if>
                    GROUP
                    BY      A.STORE_CD
                ) S
        WHERE   1 = 1
        AND     B.HQ_OFFICE_CD      =   A.HQ_OFFICE_CD
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
            ]]>
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
            ]]>
        </if>
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                 AND B.STORE_CD LIKE '%'|| #{storeCd} ||'%'
            ]]>
        </if>
        <if test='storeNm != null and storeNm != ""'>
            <![CDATA[
                 AND B.STORE_NM LIKE '%'|| #{storeNm} ||'%'
            ]]>
        </if>
        <if test='manageVanCd != null and manageVanCd != ""'>
            <![CDATA[
                 AND B.VAN_CD = #{manageVanCd}
            ]]>
        </if>
        <if test='bizNo != null and bizNo != ""'>
            <![CDATA[
                 AND B.BIZ_NO = #{bizNo}
            ]]>
        </if>
        <if test='srchShopMigFg != null and srchShopMigFg != ""'>
            <![CDATA[
                 AND DECODE(L.SOLBI_STORE_CD, NULL, '0', '1') = #{srchShopMigFg}
            ]]>
        </if>
        <if test='includeFg != null and includeFg =="N"'>
            <if test="agencyCd != null and agencyCd != ''">
                AND D.AGENCY_CD = #{agencyCd}
            </if>
        </if>
        <if test='includeFg != null and includeFg =="Y"'>
            <if test="agencyCd != null and agencyCd != ''">
                AND	D.AGENCY_CD IN	(
                                        SELECT 	AGENCY_CD
                                        FROM 	TB_CM_AGENCY
                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                        CONNECT BY
                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                        UNION
                                        SELECT 	AGENCY_CD
                                        FROM 	TB_CM_AGENCY
                                        WHERE 	AGENCY_CD = #{agencyCd}
                                    )
            </if>
        </if>
        AND     C.NMCODE_GRP_CD     (+) =   '005'
        AND     C.NMCODE_CD         (+) =   B.SYS_STAT_FG
        AND     D.AGENCY_CD         (+) =   B.AGENCY_CD
        AND     E.VAN_FG            (+) =   '01'
        AND     E.VAN_CD            (+) =   B.VAN_CD
        AND     F.STORE_CD          (+) =   B.STORE_CD
        AND     G.STORE_CD          (+) =   B.STORE_CD
        AND     H.STORE_CD          (+) =   B.STORE_CD
        AND     I.STORE_CD          (+) =   B.STORE_CD
        AND     J.STORE_CD          (+) =   B.STORE_CD
        AND     K.STORE_CD          (+) =   B.STORE_CD
        AND     L.SOLBI_STORE_CD    (+) =   B.STORE_CD
        AND     M.STORE_CD          (+) =   B.STORE_CD
        AND     N.STORE_CD          (+) =   B.STORE_CD
        AND     O.STORE_CD          (+) =   B.STORE_CD
        AND     P.STORE_CD          (+) =   B.STORE_CD
        AND     Q.ENVST_VAL_CD      (+) =   P.ENVST_VAL
        AND     S.STORE_CD              =   B.STORE_CD
        ORDER
        BY      A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG
    </select>

    <!-- 런닝COPY수 탭 - 런닝/신규/폐점 매장 수조회-->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getRunCopyCnt" parameterType="RunStoreVO" resultType="DefaultMap">
        /* RunStoreMapper.getRunCopyCnt */
        SELECT 	SUM(RUN_STORE_CNT)              AS RUN_STORE_CNT
        ,		SUM(RUN_POS_CNT)                AS RUN_POS_CNT
        ,		SUM(OPEN_STORE_CNT)             AS OPEN_STORE_CNT
        ,		SUM(OPEN_POS_CNT)               AS OPEN_POS_CNT
        ,		SUM(CLOSE_STORE_CNT)            AS CLOSE_STORE_CNT
        ,		SUM(CLOSE_POS_CNT)              AS CLOSE_POS_CNT
        FROM(
                SELECT 	SUM(A.RUN_STORE_CNT) 	AS RUN_STORE_CNT
                , 		SUM(B.RUN_POS_CNT) 		AS RUN_POS_CNT
                ,		SUM(C.OPEN_STORE_CNT) 	AS OPEN_STORE_CNT
                , 		SUM(D.OPEN_POS_CNT) 	AS OPEN_POS_CNT
                ,		0 						AS CLOSE_STORE_CNT
                , 		0 						AS CLOSE_POS_CNT
                FROM
                    (
                        SELECT 	COUNT(DISTINCT A.STORE_CD)	AS RUN_STORE_CNT
					    ,		A.STORE_CD
                        FROM 	TB_SL_MONTHLY_TOTAL A
                        ,		TB_CM_AGENCY B
                        ,		TB_MS_STORE	 C
                        ,       TB_HQ_OFFICE D
                        WHERE 	A.SALE_YM       = #{startMonth}
                        AND     A.STORE_CD      = C.STORE_CD
                        AND 	B.AGENCY_CD     = C.AGENCY_CD
                        AND     D.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                        <if test='includeFg != null and includeFg =="N"'>
                                <if test="agencyCd != null and agencyCd != ''">
                                AND C.AGENCY_CD = #{agencyCd}
                            </if>
                        </if>
                        <if test='includeFg != null and includeFg =="Y"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND	C.AGENCY_CD IN	(
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                                        CONNECT BY
                                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                        UNION
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        WHERE 	AGENCY_CD = #{agencyCd}
                                                    )
                            </if>
                        </if>
                        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                            <![CDATA[
                                 AND D.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                            ]]>
                        </if>
                        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                            <![CDATA[
                                 AND D.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                            ]]>
                        </if>
                        <if test='storeCd != null and storeCd != ""'>
                            <![CDATA[
                                 AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                            ]]>
                        </if>
                        <if test='storeNm != null and storeNm != ""'>
                            <![CDATA[
                                 AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                            ]]>
                        </if>
                        <if test='manageVanCd != null and manageVanCd != ""'>
                            <![CDATA[
                                 AND C.VAN_CD = #{manageVanCd}
                            ]]>
                        </if>
                        GROUP
                        BY		A.STORE_CD
                    ) A
                ,   (
                        SELECT 	COUNT(DISTINCT A.POS_NO)	AS RUN_POS_CNT
                        ,		A.STORE_CD
                        FROM 	TB_MS_POS A
                        ,		TB_CM_AGENCY B
                        ,		TB_MS_STORE	 C
                        ,		TB_SL_MONTHLY_TOTAL D
                        ,       TB_CM_INSTLL E
                        ,       TB_HQ_OFFICE F
                        WHERE 	D.SALE_YM       = #{startMonth}
                        AND 	A.USE_YN        = 'Y'
                        AND     A.STORE_CD      = C.STORE_CD
                        AND 	B.AGENCY_CD     = C.AGENCY_CD
                        AND 	D.STORE_CD      = A.STORE_CD
                        AND     E.STORE_CD      = A.STORE_CD
                        AND     E.POS_NO        = A.POS_NO
                        <![CDATA[
                            AND   E.INST_FG     <>  '0'
                        ]]>
                        AND     F.HQ_OFFICE_CD  = D.HQ_OFFICE_CD
                        <if test='includeFg != null and includeFg =="N"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND C.AGENCY_CD = #{agencyCd}
                            </if>
                        </if>
                        <if test='includeFg != null and includeFg =="Y"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND	C.AGENCY_CD IN	(
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                                        CONNECT BY
                                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                        UNION
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        WHERE 	AGENCY_CD = #{agencyCd}
                                                    )
                            </if>
                        </if>
                        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                            <![CDATA[
                                 AND F.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                            ]]>
                        </if>
                        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                            <![CDATA[
                                 AND F.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                            ]]>
                        </if>
                        <if test='storeCd != null and storeCd != ""'>
                            <![CDATA[
                                 AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                            ]]>
                        </if>
                        <if test='storeNm != null and storeNm != ""'>
                            <![CDATA[
                                 AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                            ]]>
                        </if>
                        <if test='manageVanCd != null and manageVanCd != ""'>
                            <![CDATA[
                                 AND C.VAN_CD = #{manageVanCd}
                            ]]>
                        </if>
                        GROUP
                        BY		A.STORE_CD
                    ) B
                ,   (
                        SELECT 	COUNT(DISTINCT A.STORE_CD)	AS OPEN_STORE_CNT
					    ,		A.STORE_CD
                        FROM 	TB_SL_MONTHLY_TOTAL A
                        ,		TB_CM_AGENCY B
                        ,		TB_MS_STORE	 C
                        ,       TB_HQ_OFFICE D
                        WHERE 	A.SALE_YM   = #{startMonth}
                        AND     A.STORE_CD  NOT IN  (
                                                        SELECT 	DISTINCT STORE_CD
                                                        FROM	TB_SL_MONTHLY_TOTAL
                                                        WHERE  	SALE_YM = #{lastMonth}
                                                    )
                        AND 	A.STORE_CD      = C.STORE_CD
                        AND 	B.AGENCY_CD     = C.AGENCY_CD
                        AND     D.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                        <if test='includeFg != null and includeFg =="N"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND C.AGENCY_CD = #{agencyCd}
                            </if>
                        </if>
                        <if test='includeFg != null and includeFg =="Y"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND	C.AGENCY_CD IN	(
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                                        CONNECT BY
                                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                        UNION
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        WHERE 	AGENCY_CD = #{agencyCd}
                                                    )
                            </if>
                        </if>
                        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                            <![CDATA[
                                 AND D.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                            ]]>
                        </if>
                        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                            <![CDATA[
                                 AND D.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                            ]]>
                        </if>
                        <if test='storeCd != null and storeCd != ""'>
                            <![CDATA[
                                 AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                            ]]>
                        </if>
                        <if test='storeNm != null and storeNm != ""'>
                            <![CDATA[
                                 AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                            ]]>
                        </if>
                        <if test='manageVanCd != null and manageVanCd != ""'>
                            <![CDATA[
                                 AND C.VAN_CD = #{manageVanCd}
                            ]]>
                        </if>
                        GROUP
                        BY		A.STORE_CD
                    ) C
                ,   (
                        SELECT 	COUNT(DISTINCT A.POS_NO)	AS OPEN_POS_CNT
                        ,		A.STORE_CD
                        FROM 	TB_MS_POS A
                        ,		TB_CM_AGENCY B
                        ,		TB_MS_STORE	 C
                        ,		TB_SL_MONTHLY_TOTAL D
                        ,       TB_CM_INSTLL E
                        ,       TB_HQ_OFFICE F
                        WHERE   D.SALE_YM  = #{startMonth}
                        AND     D.STORE_CD  NOT IN  (
                                                        SELECT 	DISTINCT STORE_CD
                                                        FROM	TB_SL_MONTHLY_TOTAL
                                                        WHERE  	SALE_YM = #{lastMonth}
                                                    )
                        AND 	A.STORE_CD      = C.STORE_CD
                        AND 	A.USE_YN        = 'Y'
                        AND 	B.AGENCY_CD     = C.AGENCY_CD
                        AND 	D.STORE_CD      = A.STORE_CD
                        AND     E.STORE_CD      = A.STORE_CD
                        AND     E.POS_NO        = A.POS_NO
                        <![CDATA[
                            AND   E.INST_FG     <>  '0'
                        ]]>
                        AND     F.HQ_OFFICE_CD  = D.HQ_OFFICE_CD
                        <if test='includeFg != null and includeFg =="N"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND C.AGENCY_CD = #{agencyCd}
                            </if>
                        </if>
                        <if test='includeFg != null and includeFg =="Y"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND	C.AGENCY_CD IN	(
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                                        CONNECT BY
                                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                        UNION
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        WHERE 	AGENCY_CD = #{agencyCd}
                                                    )
                            </if>
                        </if>
                        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                            <![CDATA[
                                 AND F.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                            ]]>
                        </if>
                        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                            <![CDATA[
                                 AND F.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                            ]]>
                        </if>
                        <if test='storeCd != null and storeCd != ""'>
                            <![CDATA[
                                 AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                            ]]>
                        </if>
                        <if test='storeNm != null and storeNm != ""'>
                            <![CDATA[
                                 AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                            ]]>
                        </if>
                        <if test='manageVanCd != null and manageVanCd != ""'>
                            <![CDATA[
                                 AND C.VAN_CD = #{manageVanCd}
                            ]]>
                        </if>
                        GROUP
                        BY		A.STORE_CD
                    ) D
                WHERE 	B.STORE_CD (+) = A.STORE_CD
                AND 	C.STORE_CD (+) = A.STORE_CD
                AND 	D.STORE_CD (+) = A.STORE_CD
                UNION
                SELECT 	0                           AS RUN_STORE_CNT
                ,		0                           AS RUN_POS_CNT
                ,		0                           AS OPEN_STORE_CNT
                ,		0                           AS OPEN_POS_CNT
                ,		SUM(E.CLOSE_STORE_CNT)      AS CLOSE_STORE_CNT
                ,		SUM(F.CLOSE_POS_CNT)        AS CLOSE_POS_CNT
                FROM
                    (
                        SELECT 	COUNT(DISTINCT A.STORE_CD)	AS CLOSE_STORE_CNT
					    ,		A.STORE_CD
                        FROM 	TB_SL_MONTHLY_TOTAL A
                        ,		TB_CM_AGENCY B
                        ,		TB_MS_STORE	 C
                        ,       TB_HQ_OFFICE D
                        WHERE   A.SALE_YM = #{lastMonth}
                        AND     A.STORE_CD  NOT IN  (
                                                        SELECT 	DISTINCT STORE_CD
                                                        FROM	TB_SL_MONTHLY_TOTAL
                                                        WHERE  	SALE_YM = #{startMonth}
                                                    )
                        AND 	A.STORE_CD      = C.STORE_CD
                        AND 	B.AGENCY_CD     = C.AGENCY_CD
                        AND     D.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                        <if test='includeFg != null and includeFg =="N"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND C.AGENCY_CD = #{agencyCd}
                            </if>
                        </if>
                        <if test='includeFg != null and includeFg =="Y"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND	C.AGENCY_CD IN	(
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                                        CONNECT BY
                                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                        UNION
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        WHERE 	AGENCY_CD = #{agencyCd}
                                                    )
                            </if>
                        </if>
                        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                            <![CDATA[
                                 AND D.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                            ]]>
                        </if>
                        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                            <![CDATA[
                                 AND D.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                            ]]>
                        </if>
                        <if test='storeCd != null and storeCd != ""'>
                            <![CDATA[
                                 AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                            ]]>
                        </if>
                        <if test='storeNm != null and storeNm != ""'>
                            <![CDATA[
                                 AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                            ]]>
                        </if>
                        <if test='manageVanCd != null and manageVanCd != ""'>
                            <![CDATA[
                                 AND C.VAN_CD = #{manageVanCd}
                            ]]>
                    </if>
                        GROUP
                        BY		A.STORE_CD
                    ) E
                ,   (
                        SELECT 	COUNT(DISTINCT A.POS_NO)	AS CLOSE_POS_CNT
                        ,		A.STORE_CD
                        FROM 	TB_MS_POS A
                        ,		TB_CM_AGENCY B
                        ,		TB_MS_STORE	 C
                        ,		TB_SL_MONTHLY_TOTAL D
                        ,       TB_CM_INSTLL E
                        ,       TB_HQ_OFFICE F
                        WHERE 	D.SALE_YM = #{lastMonth}
                        AND     D.STORE_CD  NOT IN  (
                                                        SELECT 	DISTINCT STORE_CD
                                                        FROM	TB_SL_MONTHLY_TOTAL
                                                        WHERE  	SALE_YM = #{startMonth}
                                                    )
                        AND 	A.STORE_CD      = C.STORE_CD
                        AND 	A.USE_YN        = 'Y'
                        AND 	B.AGENCY_CD     = C.AGENCY_CD
                        AND 	D.STORE_CD      = A.STORE_CD
                        AND     E.STORE_CD      = A.STORE_CD
                        AND     E.POS_NO        = A.POS_NO
                        <![CDATA[
                            AND   E.INST_FG     <>  '0'
                        ]]>
                        AND     F.HQ_OFFICE_CD  = D.HQ_OFFICE_CD
                        <if test='includeFg != null and includeFg =="N"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND C.AGENCY_CD = #{agencyCd}
                            </if>
                        </if>
                        <if test='includeFg != null and includeFg =="Y"'>
                            <if test="agencyCd != null and agencyCd != ''">
                                AND	C.AGENCY_CD IN	(
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        START WITH	P_AGENCY_CD = #{agencyCd}
                                                        CONNECT BY
                                                        PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                        UNION
                                                        SELECT 	AGENCY_CD
                                                        FROM 	TB_CM_AGENCY
                                                        WHERE 	AGENCY_CD = #{agencyCd}
                                                    )
                            </if>
                        </if>
                        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                            <![CDATA[
                                 AND F.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                            ]]>
                        </if>
                        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                            <![CDATA[
                                 AND F.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                            ]]>
                        </if>
                        <if test='storeCd != null and storeCd != ""'>
                            <![CDATA[
                                 AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                            ]]>
                        </if>
                        <if test='storeNm != null and storeNm != ""'>
                            <![CDATA[
                                 AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                            ]]>
                        </if>
                        <if test='manageVanCd != null and manageVanCd != ""'>
                            <![CDATA[
                                 AND C.VAN_CD = #{manageVanCd}
                            ]]>
                        </if>
                        GROUP
                        BY		A.STORE_CD
                    ) F
                WHERE   E.STORE_CD = F.STORE_CD (+)
            )
    </select>

    <!-- 런닝매장추이 탭 - 조회-->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getRunTrnsitnList" parameterType="RunStoreVO" resultType="DefaultMap">
        /* RunStoreMapper.getRunTrnsitnList */
        SELECT 	SALE_YM                                     AS SALE_MONTH
        ,       SUM(RUN_STORE_CNT)                          AS RUN_STORE_CNT
        ,		SUM(RUN_POS_CNT)                            AS RUN_POS_CNT
        ,		SUM(OPEN_STORE_CNT)                         AS OPEN_STORE_CNT
        ,		SUM(OPEN_POS_CNT)                           AS OPEN_POS_CNT
        ,		SUM(CLOSE_STORE_CNT)                        AS CLOSE_STORE_CNT
        ,		SUM(CLOSE_POS_CNT)                          AS CLOSE_POS_CNT
        ,		SUM(OPEN_STORE_CNT) - SUM(CLOSE_STORE_CNT)  AS INC_STORE_CNT
        ,		SUM(OPEN_POS_CNT)   - SUM(CLOSE_POS_CNT)    AS INC_POS_CNT
        FROM
             (
                SELECT 	A.SALE_YM
                ,       SUM(A.RUN_STORE_CNT) 	AS RUN_STORE_CNT
                , 		SUM(B.RUN_POS_CNT) 		AS RUN_POS_CNT
                ,		SUM(C.OPEN_STORE_CNT) 	AS OPEN_STORE_CNT
                , 		SUM(D.OPEN_POS_CNT) 	AS OPEN_POS_CNT
                ,		0 						AS CLOSE_STORE_CNT
                , 		0 						AS CLOSE_POS_CNT
                FROM
                (
                SELECT 	COUNT(DISTINCT A.STORE_CD)	AS RUN_STORE_CNT
                ,		A.SALE_YM
                ,       A.STORE_CD
                FROM 	TB_SL_MONTHLY_TOTAL A
                ,		TB_CM_AGENCY B
                ,		TB_MS_STORE	 C
                ,       TB_HQ_OFFICE D
                WHERE 	A.SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                AND     A.STORE_CD      = C.STORE_CD
                AND 	B.AGENCY_CD     = C.AGENCY_CD
                AND     D.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                <if test='includeFg != null and includeFg =="N"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND C.AGENCY_CD = #{agencyCd}
                    </if>
                </if>
                <if test='includeFg != null and includeFg =="Y"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND	C.AGENCY_CD IN	(
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                START WITH	P_AGENCY_CD = #{agencyCd}
                                                CONNECT BY
                                                PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                UNION
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                WHERE 	AGENCY_CD = #{agencyCd}
                                            )
                    </if>
                </if>
                <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                    <![CDATA[
                         AND D.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                    ]]>
                </if>
                <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                    <![CDATA[
                         AND D.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                    ]]>
                </if>
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                         AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                    ]]>
                </if>
                <if test='storeNm != null and storeNm != ""'>
                    <![CDATA[
                         AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                    ]]>
                </if>
                <if test='manageVanCd != null and manageVanCd != ""'>
                    <![CDATA[
                         AND C.VAN_CD = #{manageVanCd}
                    ]]>
                </if>
                GROUP
                BY		A.SALE_YM
                ,       A.STORE_CD
             ) A
        ,   (
                SELECT 	COUNT(DISTINCT A.POS_NO)	AS RUN_POS_CNT
                ,		D.SALE_YM
                ,       D.STORE_CD
                FROM 	TB_MS_POS A
                ,		TB_CM_AGENCY B
                ,		TB_MS_STORE	 C
                ,		TB_SL_MONTHLY_TOTAL D
                ,       TB_CM_INSTLL E
                ,       TB_HQ_OFFICE F
                WHERE 	D.SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                AND 	A.USE_YN        = 'Y'
                AND     A.STORE_CD      = C.STORE_CD
                AND 	B.AGENCY_CD     = C.AGENCY_CD
                AND 	D.STORE_CD      = A.STORE_CD
                AND     E.STORE_CD      = A.STORE_CD
                AND     E.POS_NO        = A.POS_NO
                <![CDATA[
                    AND   E.INST_FG     <>  '0'
                ]]>
                AND     F.HQ_OFFICE_CD  = D.HQ_OFFICE_CD
                <if test='includeFg != null and includeFg =="N"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND C.AGENCY_CD = #{agencyCd}
                    </if>
                </if>
                <if test='includeFg != null and includeFg =="Y"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND	C.AGENCY_CD IN	(
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                START WITH	P_AGENCY_CD = #{agencyCd}
                                                CONNECT BY
                                                PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                UNION
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                WHERE 	AGENCY_CD = #{agencyCd}
                                            )
                    </if>
                </if>
                <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                    <![CDATA[
                         AND F.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                    ]]>
                </if>
                <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                    <![CDATA[
                         AND F.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                    ]]>
                </if>
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                         AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                    ]]>
                </if>
                <if test='storeNm != null and storeNm != ""'>
                    <![CDATA[
                         AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                    ]]>
                </if>
                <if test='manageVanCd != null and manageVanCd != ""'>
                    <![CDATA[
                         AND C.VAN_CD = #{manageVanCd}
                    ]]>
                </if>
                GROUP
                BY		D.SALE_YM
                ,       D.STORE_CD
            ) B
        ,   (
                SELECT 	COUNT(DISTINCT A.STORE_CD)	AS OPEN_STORE_CNT
                ,		A.SALE_YM
                ,       A.STORE_CD
                FROM 	TB_SL_MONTHLY_TOTAL A
                ,		TB_CM_AGENCY B
                ,		TB_MS_STORE	 C
                ,       TB_HQ_OFFICE D
                WHERE 	A.SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                AND     A.STORE_CD  NOT IN  (
                                                SELECT 	DISTINCT B.STORE_CD
                                                FROM	TB_SL_MONTHLY_TOTAL B
                                                WHERE  	B.SALE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(A.SALE_YM, 'yyyyMM') ,-1), 'yyyyMM')
                                            )
                AND 	A.STORE_CD      = C.STORE_CD
                AND 	B.AGENCY_CD     = C.AGENCY_CD
                AND     D.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                <if test='includeFg != null and includeFg =="N"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND C.AGENCY_CD = #{agencyCd}
                    </if>
                </if>
                <if test='includeFg != null and includeFg =="Y"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND	C.AGENCY_CD IN	(
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                START WITH	P_AGENCY_CD = #{agencyCd}
                                                CONNECT BY
                                                PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                UNION
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                WHERE 	AGENCY_CD = #{agencyCd}
                                            )
                    </if>
                </if>
                <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                    <![CDATA[
                         AND D.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                    ]]>
                </if>
                <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                    <![CDATA[
                         AND D.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                    ]]>
                </if>
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                         AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                    ]]>
                </if>
                <if test='storeNm != null and storeNm != ""'>
                    <![CDATA[
                         AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                    ]]>
                </if>
                <if test='manageVanCd != null and manageVanCd != ""'>
                    <![CDATA[
                         AND C.VAN_CD = #{manageVanCd}
                    ]]>
                </if>
                GROUP
                BY		A.SALE_YM
                ,       A.STORE_CD
            ) C
        ,   (
                SELECT 	COUNT(DISTINCT A.POS_NO)	AS OPEN_POS_CNT
                ,		D.SALE_YM
                ,       D.STORE_CD
                FROM 	TB_MS_POS A
                ,		TB_CM_AGENCY B
                ,		TB_MS_STORE	 C
                ,		TB_SL_MONTHLY_TOTAL D
                ,       TB_CM_INSTLL E
                ,       TB_HQ_OFFICE F
                WHERE   D.SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                AND     D.STORE_CD  NOT IN  (
                                                SELECT 	DISTINCT B.STORE_CD
                                                FROM	TB_SL_MONTHLY_TOTAL B
                                                WHERE  	B.SALE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(D.SALE_YM, 'yyyyMM') ,-1), 'yyyyMM')
                                            )
                AND 	A.STORE_CD      = C.STORE_CD
                AND 	A.USE_YN        = 'Y'
                AND 	B.AGENCY_CD     = C.AGENCY_CD
                AND 	D.STORE_CD      = A.STORE_CD
                AND     E.STORE_CD      = A.STORE_CD
                AND     E.POS_NO        = A.POS_NO
                <![CDATA[
                    AND   E.INST_FG     <>  '0'
                ]]>
                AND     F.HQ_OFFICE_CD  = D.HQ_OFFICE_CD
                <if test='includeFg != null and includeFg =="N"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND C.AGENCY_CD = #{agencyCd}
                    </if>
                </if>
                <if test='includeFg != null and includeFg =="Y"'>
                    <if test="agencyCd != null and agencyCd != ''">
                        AND	C.AGENCY_CD IN	(
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                START WITH	P_AGENCY_CD = #{agencyCd}
                                                CONNECT BY
                                                PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                UNION
                                                SELECT 	AGENCY_CD
                                                FROM 	TB_CM_AGENCY
                                                WHERE 	AGENCY_CD = #{agencyCd}
                                            )
                    </if>
                </if>
                <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                    <![CDATA[
                         AND F.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                    ]]>
                </if>
                <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                    <![CDATA[
                         AND F.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                    ]]>
                </if>
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                         AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                    ]]>
                </if>
                <if test='storeNm != null and storeNm != ""'>
                    <![CDATA[
                         AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                    ]]>
                </if>
                <if test='manageVanCd != null and manageVanCd != ""'>
                    <![CDATA[
                         AND C.VAN_CD = #{manageVanCd}
                    ]]>
                </if>
                GROUP
                BY		D.SALE_YM
                ,       D.STORE_CD
            ) D
            WHERE 	B.SALE_YM  (+) = A.SALE_YM
            AND 	C.SALE_YM  (+) = A.SALE_YM
            AND 	D.SALE_YM  (+) = A.SALE_YM
            AND		B.STORE_CD (+) = A.STORE_CD
            AND		C.STORE_CD (+) = A.STORE_CD
            AND		D.STORE_CD (+) = A.STORE_CD
            GROUP
            BY 		A.SALE_YM
            UNION
            SELECT 	E.SALE_YM
            ,       0                           AS RUN_STORE_CNT
            ,		0                           AS RUN_POS_CNT
            ,		0                           AS OPEN_STORE_CNT
            ,		0                           AS OPEN_POS_CNT
            ,		SUM(E.CLOSE_STORE_CNT)      AS CLOSE_STORE_CNT
            ,		SUM(F.CLOSE_POS_CNT)        AS CLOSE_POS_CNT
            FROM
                (
                    SELECT 	COUNT(DISTINCT A.STORE_CD)	AS CLOSE_STORE_CNT
                    ,		TO_CHAR(ADD_MONTHS(TO_DATE(A.SALE_YM, 'yyyyMM') , +1), 'yyyyMM') AS SALE_YM
                    ,       A.STORE_CD
                    FROM 	TB_SL_MONTHLY_TOTAL A
                    ,		TB_CM_AGENCY B
                    ,		TB_MS_STORE	 C
                    ,       TB_HQ_OFFICE D
                    WHERE   A.SALE_YM BETWEEN #{lastMonth} AND #{lastMonth2}
                    AND     A.STORE_CD  NOT IN  (
                                                    SELECT 	DISTINCT E.STORE_CD
                                                    FROM	TB_SL_MONTHLY_TOTAL E
                                                    WHERE  	E.SALE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(A.SALE_YM, 'yyyyMM') , +1), 'yyyyMM')
                                                )
                    AND 	A.STORE_CD      = C.STORE_CD
                    AND 	B.AGENCY_CD     = C.AGENCY_CD
                    AND     D.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                    <if test='includeFg != null and includeFg =="N"'>
                        <if test="agencyCd != null and agencyCd != ''">
                            AND C.AGENCY_CD = #{agencyCd}
                        </if>
                    </if>
                    <if test='includeFg != null and includeFg =="Y"'>
                        <if test="agencyCd != null and agencyCd != ''">
                            AND	C.AGENCY_CD IN	(
                                                    SELECT 	AGENCY_CD
                                                    FROM 	TB_CM_AGENCY
                                                    START WITH	P_AGENCY_CD = #{agencyCd}
                                                    CONNECT BY
                                                    PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                    UNION
                                                    SELECT 	AGENCY_CD
                                                    FROM 	TB_CM_AGENCY
                                                    WHERE 	AGENCY_CD = #{agencyCd}
                                                )
                        </if>
                    </if>
                    <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                        <![CDATA[
                             AND D.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                        ]]>
                    </if>
                    <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                        <![CDATA[
                             AND D.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                        ]]>
                    </if>
                    <if test='storeCd != null and storeCd != ""'>
                        <![CDATA[
                             AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                        ]]>
                    </if>
                    <if test='storeNm != null and storeNm != ""'>
                        <![CDATA[
                             AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                        ]]>
                    </if>
                    <if test='manageVanCd != null and manageVanCd != ""'>
                        <![CDATA[
                             AND C.VAN_CD = #{manageVanCd}
                        ]]>
                    </if>
                    GROUP
                    BY		A.SALE_YM
                    ,       A.STORE_CD
                ) E
            ,   (
                    SELECT 	COUNT(DISTINCT A.POS_NO)	AS CLOSE_POS_CNT
                    ,		TO_CHAR(ADD_MONTHS(TO_DATE(D.SALE_YM, 'yyyyMM') , +1), 'yyyyMM') AS SALE_YM
                    ,       D.STORE_CD
                    FROM 	TB_MS_POS A
                    ,		TB_CM_AGENCY B
                    ,		TB_MS_STORE	 C
                    ,		TB_SL_MONTHLY_TOTAL D
                    ,       TB_CM_INSTLL E
                    ,       TB_HQ_OFFICE F
                    WHERE 	D.SALE_YM BETWEEN #{lastMonth} AND #{lastMonth2}
                    AND     D.STORE_CD  NOT IN  (
                                                    SELECT 	DISTINCT E.STORE_CD
                                                    FROM	TB_SL_MONTHLY_TOTAL E
                                                    WHERE  	E.SALE_YM = TO_CHAR(ADD_MONTHS(TO_DATE(D.SALE_YM, 'yyyyMM') , +1), 'yyyyMM')
                                                )
                    AND 	A.STORE_CD      = C.STORE_CD
                    AND 	A.USE_YN        = 'Y'
                    AND 	B.AGENCY_CD     = C.AGENCY_CD
                    AND 	D.STORE_CD      = A.STORE_CD
                    AND     E.STORE_CD      = A.STORE_CD
                    AND     E.POS_NO        = A.POS_NO
                    <![CDATA[
                        AND   E.INST_FG     <>  '0'
                    ]]>
                    AND     F.HQ_OFFICE_CD  = D.HQ_OFFICE_CD
                    <if test='includeFg != null and includeFg =="N"'>
                        <if test="agencyCd != null and agencyCd != ''">
                            AND C.AGENCY_CD = #{agencyCd}
                        </if>
                    </if>
                    <if test='includeFg != null and includeFg =="Y"'>
                        <if test="agencyCd != null and agencyCd != ''">
                            AND	C.AGENCY_CD IN	(
                                                    SELECT 	AGENCY_CD
                                                    FROM 	TB_CM_AGENCY
                                                    START WITH	P_AGENCY_CD = #{agencyCd}
                                                    CONNECT BY
                                                    PRIOR       AGENCY_CD   = P_AGENCY_CD
                                                    UNION
                                                    SELECT 	AGENCY_CD
                                                    FROM 	TB_CM_AGENCY
                                                    WHERE 	AGENCY_CD = #{agencyCd}
                                                )
                        </if>
                    </if>
                    <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                        <![CDATA[
                             AND F.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
                        ]]>
                    </if>
                    <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                        <![CDATA[
                             AND F.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
                        ]]>
                    </if>
                    <if test='storeCd != null and storeCd != ""'>
                        <![CDATA[
                             AND C.STORE_CD LIKE '%'|| #{storeCd} ||'%'
                        ]]>
                    </if>
                    <if test='storeNm != null and storeNm != ""'>
                        <![CDATA[
                             AND C.STORE_NM LIKE '%'|| #{storeNm} ||'%'
                        ]]>
                    </if>
                    <if test='manageVanCd != null and manageVanCd != ""'>
                        <![CDATA[
                             AND C.VAN_CD = #{manageVanCd}
                        ]]>
                    </if>
                    GROUP
                    BY		D.SALE_YM
                    ,       D.STORE_CD
                ) F
            WHERE   E.SALE_YM   = F.SALE_YM (+)
            AND     E.STORE_CD  = F.STORE_CD (+)
            GROUP
            BY 		E.SALE_YM
        )
        WHERE SALE_YM BETWEEN #{startMonth} AND #{endMonth}
        GROUP
        BY		SALE_YM
        ORDER
        BY      SALE_YM
    </select>


</mapper>