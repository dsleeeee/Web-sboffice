<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    MarketingSmsSend.xml
    마케팅용 SMS전송
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2021.08.10     최초작성
-->
<mapper namespace="kr.co.solbipos.adi.sms.marketingSmsSend.service.impl.MarketingSmsSendMapper">

    <!-- 메세지그룹 컬럼 리스트 조회 -->
    <!--
        TABLE    : HCS_MSGGR_T
        COMMENTS : [마스터-공용]SMS-고객메세지전송그룹정보
    -->
    <select id="getMsgGrpColList" parameterType="MarketingSmsSendVO" resultType="DefaultMap">
        /* MarketingSmsSendMapper.getMsgGrpColList */
        SELECT
        MSG_GRP_CD,
        MSG_GRP_NM
        FROM
        (
            SELECT
            hmt.MSG_GRP_CD,
            hmt.MSG_GRP_NM
            FROM HCS_MSGGR_T hmt
            WHERE 1=1
            AND hmt.OGN_CD = #{orgnCd}
            ORDER BY hmt.MSG_GRP_CD
        )
        UNION ALL
        (
            SELECT
            '00' AS MSG_GRP_CD,
            '최근이력' AS MSG_GRP_NM
            FROM dual
        )
        ORDER BY MSG_GRP_CD
    </select>

    <!-- 회원등급 리스트 조회-->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_HQ_BRAND, TB_MS_STORE
        COMMENTS : 회원정보 등록시 등록매장 콤보박스 내용 조회
    -->
    <select id="getMembrClassList" parameterType="MarketingSmsSendVO" resultType="DefaultMap">
        /* MarketingSmsSendMapper.getMembrClassList */
        SELECT
        MEMBR_CLASS_CD AS VALUE,
        MEMBR_CLASS_NM AS NAME
        FROM TB_MB_MEMBER_CLASS
        WHERE USE_YN = 'Y'
        AND MEMBR_ORGN_CD = #{orgnGrpCd}
        <choose>
            <!-- 본사 -->
            <when test='membrOrgnFg != null and membrOrgnFg.toString() == "HQ"'>
                AND REG_STORE_CD IS NULL
            </when>
            <!-- 프랜차이즈 매장 -->
            <when test='membrOrgnFg != null and membrOrgnFg.toString() == "STORE" and hqOfficeCd != "00000"'>
                <if test='membrClassManageFg != null and membrClassManageFg == "0"'>
                    AND REG_STORE_CD = #{storeCd}
                </if>
                <if test='membrClassManageFg != null and membrClassManageFg == "1"'>
                    AND REG_STORE_CD IS NULL
                </if>
            </when>
            <otherwise>
            </otherwise>
        </choose>
        ORDER BY DEFLT_YN DESC
    </select>

    <!-- 메세지관리 - 메세지서식 조회(최근이력) -->
    <!--
        TABLE    : HCS_SMS_SEND_REG_T
        COMMENTS :
    -->
    <select id="getMarketingSmsSendMsgManageDtlList" parameterType="MarketingSmsSendVO" resultType="DefaultMap">
        /* MarketingSmsSendMapper.getMarketingSmsSendMsgManageDtlList */
        SELECT
        0 AS SEQ_NO,
        NVL(TITLE, ' ') AS TITLE,
        MESSAGE
        FROM
        (
            SELECT
            0 AS SEQ_NO,
            hssrt.SUBJECT AS TITLE,
            hssrt.MSG_CONTENT AS MESSAGE
            FROM HCS_SMS_SEND_REG_T hssrt,
            (
                SELECT
                twuidv01.ORGN_FG,
                twuidv01.ORGN_CD,
                twuidv01.HQ_OFFICE_CD,
                twuidv01.STORE_CD,
                (CASE WHEN twuidv01.ORGN_FG = 'H' THEN (SELECT AGENCY_CD FROM TB_HQ_OFFICE WHERE HQ_OFFICE_CD = twuidv01.HQ_OFFICE_CD)
                       WHEN twuidv01.ORGN_FG = 'S' THEN (SELECT AGENCY_CD FROM TB_MS_STORE WHERE STORE_CD = twuidv01.STORE_CD)
                       ELSE null END
                ) AS AGENCY_CD
                FROM TB_WB_USER_INFO_DTL_V01 twuidv01
                GROUP BY twuidv01.ORGN_FG, twuidv01.ORGN_CD, twuidv01.HQ_OFFICE_CD, twuidv01.STORE_CD
            ) twuidv01
            WHERE 1=1
            <choose>
                <when test='orgnFg != null and orgnFg != ""'>
                    <!-- 시스템 -->
                    <if test='orgnFg == "M"'>
                        <![CDATA[
                        ]]>
                    </if>
                    <!-- 대리점 -->
                    <if test='orgnFg == "A"'>
                        <![CDATA[
                            AND twuidv01.AGENCY_CD = #{orgnCd}
                        ]]>
                    </if>
                    <!-- 본사 -->
                    <if test='orgnFg == "H"'>
                        <![CDATA[
                            AND twuidv01.HQ_OFFICE_CD = #{orgnCd}
                        ]]>
                    </if>
                    <!-- 매장 -->
                    <if test='orgnFg == "S"'>
                        <![CDATA[
                           AND twuidv01.STORE_CD = #{orgnCd}
                        ]]>
                    </if>
                </when>
            </choose>
            AND twuidv01.ORGN_CD = hssrt.SMS_SEND_ORGN_CD
            ORDER BY hssrt.REG_DT DESC
        )
        WHERE 1=1
        <![CDATA[
            AND ROWNUM <= 12
        ]]>
    </select>

    <!-- 마케팅용 SMS전송 - 회원 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getMarketingSmsSendList" parameterType="MarketingSmsSendVO" resultType="DefaultMap">
        /* MarketingSmsSendMapper.getMarketingSmsSendList */
        SELECT
        SUBSTR(SBPENC.D(sssemr.DEST_INFO), INSTR(SBPENC.D(sssemr.DEST_INFO), '^')+1) AS TEL_NO,
        (sssemr.ADDR || ' ' || sssemr.ADDR_DTL) AS ADDR,
        sssemr.SALE_DATE AS LAST_SALE_DATE,
        'C' AS R_OGN_FG
        FROM SDK_SMS_SEND_ENC_MEMBER_READY sssemr
        WHERE 1=1
        AND sssemr.SMS_SEND_SEQ = #{smsSendSeq}
        ORDER BY sssemr.SALE_DATE DESC
    </select>

    <!-- 마케팅용 SMS전송 - 검색 결과 저장 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getMarketingSmsSendListSaveInsert" parameterType="MarketingSmsSendVO">
        /* MarketingSmsSendMapper.getMarketingSmsSendListSaveInsert */
        INSERT INTO SDK_SMS_SEND_ENC_MEMBER_READY
        (
            SMS_SEND_SEQ,
            READY_FG,
            DEST_INFO,
            ADDR,
            ADDR_DTL,
            SALE_DATE,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT
        #{smsSendSeq} AS SMS_SEND_SEQ,
        '0' AS READY_FG,
        SBPENC.E('^' || TEL_NO) AS DEST_INFO,
        ADDR,
        ADDR_DTL,
        LAST_SALE_DATE AS SALE_DATE,
        #{regDt} AS REG_DT,
        #{regId} AS REG_ID,
        #{modDt} AS MOD_DT,
        #{modId} AS MOD_ID
        FROM
        (
            SELECT B.*
            FROM
            (
                SELECT
                ROW_NUMBER() OVER(PARTITION BY A.TEL_NO ORDER BY A.LAST_SALE_DATE DESC) AS RNUM,
                A.*
                FROM
                (
                    SELECT
                    TEL_NO,
                    ADDR,
                    ADDR_DTL,
                    LAST_SALE_DATE
                    FROM
                    (
                        SELECT
                        FN_IS_TELNO_CHK2(SBPENC.D(tmm.TEL_NO)) AS TEL_NO,
                        SBPENC.D(tmm.ADDR) AS ADDR,
                        SBPENC.D(tmm.ADDR_DTL) AS ADDR_DTL,
                        tmmp.LAST_SALE_DATE
                        FROM TB_MB_MEMBER tmm,
                        <if test='visitStoreMembr == "true" or (regUseStoreCd != null and !regUseStoreCd.equals(""))'>
                            TB_MB_MEMBER_POINT_STORE tmmps,
                        </if>
                        TB_MB_MEMBER_POINT tmmp
                        WHERE tmm.MEMBR_ORGN_CD = #{orgnGrpCd}
                        <![CDATA[
                            AND FN_IS_TELNO_CHK2(SBPENC.D(tmm.TEL_NO)) <> '0'
                        ]]>
                        AND tmmp.MEMBR_NO (+)= tmm.MEMBR_NO
                        AND tmmp.MEMBR_ORGN_CD (+)= tmm.MEMBR_ORGN_CD
                        <if test='visitStoreMembr == "true" or (regUseStoreCd != null and !regUseStoreCd.equals(""))'>
                            AND tmmps.MEMBR_ORGN_CD (+) = tmm.REG_STORE_CD
                            AND tmmps.CHG_MEMBR_ORGN_CD (+)= tmm.REG_STORE_CD
                            AND tmmps.MEMBR_NO (+)= tmm.MEMBR_NO
                            <if test='visitStoreMembr == "true"'>
                                AND tmmps.CHG_MEMBR_ORGN_CD = #{storeCd}
                            </if>
                            <if test='regUseStoreCdQuery != null and regUseStoreCdQuery != ""'>
                                AND tmmps.CHG_MEMBR_ORGN_CD IN (${regUseStoreCdQuery})
                            </if>
                        </if>
                        <if test='orgnFg != null and orgnFg == "S"'>
                            <if test='storeMembr == "true"'>
                                AND tmm.REG_STORE_CD = #{storeCd}
                            </if>
                        </if>
                        <if test='cstCardUseFg != null and cstCardUseFg != ""'>
                            AND tmm.CST_CARD_USE_FG = #{cstCardUseFg}
                        </if>
                        <if test='membrCardNo != null and membrCardNo != ""'>
                            AND tmm.MEMBR_CARD_NO LIKE '%'||#{membrCardNo}||'%'
                        </if>
                        <if test='membrNo != null and membrNo != ""'>
                            AND tmm.MEMBR_NO LIKE '%'||#{membrNo}||'%'
                        </if>
                        <if test='membrNm != null and membrNm != ""'>
                            AND SBPENC.D(tmm.MEMBR_NM) LIKE '%'||#{membrNm}||'%'
                        </if>
                        <if test='membrEngNm != null and membrEngNm != ""'>
                            AND tmm.MEMBER_ENG_NM LIKE '%'||#{membrEngNm}||'%'
                        </if>
                        <if test='telNo != null and telNo != ""'>
                            AND SBPENC.D(tmm.TEL_NO) LIKE '%'||#{telNo}||'%'
                        </if>
                        <if test='emailAddr != null and emailAddr.toString() != ""'>
                            AND tmm.EMAIL_ADDR LIKE '%'||#{emailAddr}||'%'
                        </if>
                        <if test='regStoreCdQuery != null and regStoreCdQuery != ""'>
                            AND tmm.REG_STORE_CD IN (${regStoreCdQuery})
                        </if>
                        <if test='membrClassCd != null and membrClassCd.toString() != ""'>
                            AND tmm.MEMBR_CLASS_CD = #{membrClassCd}
                        </if>
                        <if test='gendrFg != null and gendrFg.toString() != ""'>
                            AND tmm.GENDR_FG = #{gendrFg}
                        </if>
                        <if test='emailRecvYn != null and emailRecvYn.toString() != ""'>
                            AND tmm.EMAIL_RECV_YN = #{emailRecvYn}
                        </if>
                        <if test='smsRecvYn != null and smsRecvYn.toString() != ""'>
                            AND tmm.SMS_RECV_YN = #{smsRecvYn}
                        </if>
                        <if test='periodType != null and periodType.toString() != ""'>
                            <!-- 가입일 -->
                            <if test='periodType.getCode() == "reg"'>
                                AND tmm.REG_DT BETWEEN #{periodStartDate}||'000000' AND #{periodEndDate}||'999999'
                            </if>
                            <!-- 최종방문일 -->
                            <if test='periodType.getCode() == "last"'>
                                AND tmmp.LAST_SALE_DATE BETWEEN #{periodStartDate} AND #{periodEndDate}
                            </if>
                        </if>
                        <if test='anvType != null and anvType.toString() != ""'>
                            <if test='anvType.getCode() == "1"'>
                                AND tmm.BIRTHDAY BETWEEN #{anvStartDate} AND #{anvEndDate}
                            </if>
                            <if test='anvType.getCode() == "2"'>
                                AND tmm.WEDDINGDAY BETWEEN #{anvStartDate} AND #{anvEndDate}
                            </if>
                        </if>
                        <if test="useYn != null and useYn != ''">
                            AND tmm.USE_YN = #{useYn}
                        </if>
                        <if test='startSaveSale != null and startSaveSale != "" and endSaveSale != null and endSaveSale != ""'>
                            <if test='memberSaleFg == "0"'>
                                AND tmmp.POINT_ACC_CNT BETWEEN #{startSaveSale} AND #{endSaveSale}
                            </if>
                            <if test='memberSaleFg == "1"'>
                                AND tmmp.TOT_SALE_AMT BETWEEN #{startSaveSale} AND #{endSaveSale}
                            </if>
                        </if>
                        <if test='startAvablPoint != null and startAvablPoint != "" and endAvablPoint != null and endAvablPoint != ""'>
                            <if test='memberPointFg == "0"'>
                                AND tmmp.TOT_SAVE_POINT BETWEEN #{startAvablPoint} AND #{endAvablPoint}
                            </if>
                            <if test='memberPointFg == "1"'>
                                AND tmmp.TOT_USE_POINT BETWEEN #{startAvablPoint} AND #{endAvablPoint}
                            </if>
                            <if test='memberPointFg == "2"'>
                                AND tmmp.TOT_ADJ_POINT BETWEEN #{startAvablPoint} AND #{endAvablPoint}
                            </if>
                            <if test='memberPointFg == "3"'>
                                AND tmmp.AVABL_POINT BETWEEN #{startAvablPoint} AND #{endAvablPoint}
                            </if>
                        </if>
                        <if test='shortNo != null and shortNo != ""'>
                            AND tmm.SHORT_NO = #{shortNo}
                        </if>
                        <if test='weddingYn != null and weddingYn.toString() != ""'>
                            AND tmm.WEDDING_YN = #{weddingYn}
                        </if>
                        <if test='newMemberYn != null and newMemberYn != "" and newMemberYn == true'>
                            AND tmm.REG_DT BETWEEN TO_CHAR(SYSDATE - 30, 'yyyyMMdd')||'000000' AND TO_CHAR(SYSDATE, 'yyyyMMdd')||'999999'
                        </if>
                        <if test='addr != null and addr != ""'>
                            AND SBPENC.D(tmm.ADDR) LIKE '%'||#{addr}||'%'
                        </if>
                        <if test="marketingSmsGubun != null and marketingSmsGubun != ''">
                            <![CDATA[
                                AND tmmp.LAST_SALE_DATE >= TO_CHAR(ADD_MONTHS(SYSDATE, - #{marketingSmsGubun}), 'yyyyMMdd')
                            ]]>
                        </if>
                    )
                    UNION ALL
                    (
                        SELECT
                        FN_IS_TELNO_CHK2(SBPENC.D(tmm.TEL_NO)) AS TEL_NO,
                        SBPENC.D(tmm.ADDR) AS ADDR,
                        SBPENC.D(tmm.ADDR_DTL) AS ADDR_DTL,
                        tmm.LAST_SALE_DATE
                        FROM TB_PS_DLVR_MEMBER tmm
                        WHERE tmm.MEMBR_ORGN_CD = #{orgnGrpCd}
                        <![CDATA[
                            AND FN_IS_TELNO_CHK2(SBPENC.D(tmm.TEL_NO)) <> '0'
                        ]]>
                        <if test='orgnFg != null and orgnFg == "S"'>
                            <if test='storeMembr == "true"'>
                                AND tmm.REG_STORE_CD = #{storeCd}
                            </if>
                        </if>
                        <if test='cstCardUseFg != null and cstCardUseFg != ""'>
                            AND tmm.CST_CARD_USE_FG = #{cstCardUseFg}
                        </if>
                        <if test='membrCardNo != null and membrCardNo != ""'>
                            AND tmm.MEMBR_CARD_NO LIKE '%'||#{membrCardNo}||'%'
                        </if>
                        <if test='membrNo != null and membrNo != ""'>
                            AND tmm.MEMBR_NO LIKE '%'||#{membrNo}||'%'
                        </if>
                        <if test='membrNm != null and membrNm != ""'>
                            AND SBPENC.D(tmm.MEMBR_NM) LIKE '%'||#{membrNm}||'%'
                        </if>
                        <if test='membrEngNm != null and membrEngNm != ""'>
                            AND tmm.MEMBER_ENG_NM LIKE '%'||#{membrEngNm}||'%'
                        </if>
                        <if test='telNo != null and telNo != ""'>
                            AND SBPENC.D(tmm.TEL_NO) LIKE '%'||#{telNo}||'%'
                        </if>
                        <if test='emailAddr != null and emailAddr.toString() != ""'>
                            AND tmm.EMAIL_ADDR LIKE '%'||#{emailAddr}||'%'
                        </if>
                        <if test='regStoreCdQuery != null and regStoreCdQuery != ""'>
                            AND tmm.REG_STORE_CD IN (${regStoreCdQuery})
                        </if>
                        <if test='membrClassCd != null and membrClassCd.toString() != ""'>
                            AND tmm.MEMBR_CLASS_CD = #{membrClassCd}
                        </if>
                        <if test='gendrFg != null and gendrFg.toString() != ""'>
                            AND tmm.GENDR_FG = #{gendrFg}
                        </if>
                        <if test='emailRecvYn != null and emailRecvYn.toString() != ""'>
                            AND tmm.EMAIL_RECV_YN = #{emailRecvYn}
                        </if>
                        <if test='smsRecvYn != null and smsRecvYn.toString() != ""'>
                            AND tmm.SMS_RECV_YN = #{smsRecvYn}
                        </if>
                        <if test='periodType != null and periodType.toString() != ""'>
                            <!-- 가입일 -->
                            <if test='periodType.getCode() == "reg"'>
                                AND tmm.REG_DT BETWEEN #{periodStartDate}||'000000' AND #{periodEndDate}||'999999'
                            </if>
                            <!-- 최종방문일 -->
                            <if test='periodType.getCode() == "last"'>
                                AND tmm.LAST_SALE_DATE BETWEEN #{periodStartDate} AND #{periodEndDate}
                            </if>
                        </if>
                        <if test='anvType != null and anvType.toString() != ""'>
                            <if test='anvType.getCode() == "1"'>
                                AND tmm.BIRTHDAY BETWEEN #{anvStartDate} AND #{anvEndDate}
                            </if>
                            <if test='anvType.getCode() == "2"'>
                                AND tmm.WEDDINGDAY BETWEEN #{anvStartDate} AND #{anvEndDate}
                            </if>
                        </if>
                        <if test="useYn != null and useYn != ''">
                            AND tmm.USE_YN = #{useYn}
                        </if>
                        <if test='shortNo != null and shortNo != ""'>
                            AND tmm.SHORT_NO = #{shortNo}
                        </if>
                        <if test='weddingYn != null and weddingYn.toString() != ""'>
                            AND tmm.WEDDING_YN = #{weddingYn}
                        </if>
                        <if test='newMemberYn != null and newMemberYn != "" and newMemberYn == true'>
                            AND tmm.REG_DT BETWEEN TO_CHAR(SYSDATE - 30, 'yyyyMMdd')||'000000' AND TO_CHAR(SYSDATE, 'yyyyMMdd')||'999999'
                        </if>
                        <if test='addr != null and addr != ""'>
                            AND SBPENC.D(tmm.ADDR) LIKE '%'||#{addr}||'%'
                        </if>
                        <if test="marketingSmsGubun != null and marketingSmsGubun != ''">
                            <![CDATA[
                                AND tmm.LAST_SALE_DATE >= TO_CHAR(ADD_MONTHS(SYSDATE, - #{marketingSmsGubun}), 'yyyyMMdd')
                            ]]>
                        </if>
                    )
                ) A
            ) B
            WHERE 1=1
            AND B.RNUM = 1
            AND B.TEL_NO LIKE '010%'
        )
    </insert>

    <!-- 마케팅용 SMS전송 - 1000건 이상 전송시 전송테이블에 몇건 Insert 됬는지 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSmsSendInsert1000Count" parameterType="MarketingSmsSendVO" resultType="DefaultMap">
        /* MarketingSmsSendMapper.getSmsSendInsert1000Count */
        SELECT SUM(SEND_COUNT) AS SEND_COUNT
        FROM
        (
            (
                --SMS
                SELECT COUNT(A.MSG_ID) AS SEND_COUNT
                FROM SDK_SMS_SEND_ENC A
                WHERE 1=1
                AND A.RESERVED7 = #{orgnCd} --S_OGN_CD
                AND A.RESERVED9 = #{smsSendSeq} --A.SMS_SEND_SEQ
            )
            UNION ALL
            (
                --LMS
                SELECT COUNT(A.MSG_ID) AS SEND_COUNT
                FROM SDK_MMS_SEND_ENC A
                WHERE 1=1
                AND A.RESERVED7 = #{orgnCd} --S_OGN_CD
                AND A.RESERVED9 = #{smsSendSeq} --A.SMS_SEND_SEQ
            )
        )
    </select>

    <!-- 마케팅용 SMS전송 - 본인인증 여부 조회 -->
    <!--
        TABLE    :
        COMMENTS : 본인인증을 하였는지 체크, 본인인증을 한 번호인지 체크
    -->
    <select id="getVerifyChk" parameterType="MarketingSmsSendVO" resultType="Integer">
        /* MarketingSmsSendMapper.getVerifyChk */
        SELECT  COUNT(*)
        FROM    HCS_SENDM_VF_T
        WHERE   OGN_CD = #{orgnCd}
        <if test="telNo != null and telNo != ''">
            AND SBPENC.D(TEL_NO) = #{telNo}
        </if>
        AND     USE_YN = 'Y'
    </select>

    <!-- 본인인증 요청 저장 -->
    <!--
        TABLE    :
        COMMENTS : 본인인증 요청 저장
    -->
    <insert id="saveVerify" parameterType="MarketingSmsSendVO">
        /* MarketingSmsSendMapper.saveVerify */
        INSERT INTO HCS_CRTLG_VF_T
        (
            CERT_ID,
            OGN_CD,
            PROC_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{certId},
            #{orgnCd},
            '0',
            #{modDt},
            #{modId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 본인인증 결과 저장 -->
    <!--
        TABLE    :
        COMMENTS : 본인인증 결과 저장
    -->
    <update id="updateVerify" parameterType="MarketingSmsSendVO">
        /* MarketingSmsSendMapper.updateVerify */
        UPDATE
            HCS_CRTLG_VF_T
        SET
            PROC_FG = '1',
            RES_RECV_NUMBER = SBPENC.E(#{telNo}),
            RES_RESULT_CD = #{resCd},
            MOD_DT = #{modDt},
            MOD_ID = #{modId}
        WHERE 1=1
          AND CERT_ID = #{certId}
          AND OGN_CD = #{orgnCd}
    </update>

    <!-- 마케팅용 SMS전송 - 발신번호 공통코드에 등록되 있는지 확인(특수부가사업자 승인 전 임시사용) -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <!--<select id="getTelNoNmCodeChk" parameterType="MarketingSmsSendVO" resultType="DefaultMap">-->
        <!--/* MarketingSmsSendMapper.getTelNoNmCodeChk */-->
        <!--SELECT-->
        <!--COUNT(NMCODE_CD) AS TEL_NO_COUNT-->
        <!--FROM TB_CM_NMCODE txn-->
        <!--WHERE 1=1-->
        <!--AND txn.NMCODE_GRP_CD = '131'-->
        <!--AND txn.NMCODE_NM = #{telNo}-->
    <!--</select>-->

</mapper>