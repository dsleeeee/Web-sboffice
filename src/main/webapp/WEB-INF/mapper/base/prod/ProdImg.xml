<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    ProdImg.xml
    상품이미지관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2020.08.13     최초작성
-->

<mapper namespace="kr.co.solbipos.base.prod.prodImg.service.impl.ProdImgMapper">

    <!-- 상품이미지관리 - 상품목록조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE,
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE
        PARAM    : prodImgVO
        COMMENTS : 상품의 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getProdList" parameterType="prodImgVO" resultType="DefaultMap">
        /* USE : ProdImgMapper.getProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                thp.HQ_OFFICE_CD,
                thp.PROD_CD,
                thp.PROD_NM,
                thp.PROD_CLASS_CD,
                ( SELECT SF_GET_PROD_CLASSES('H', thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                thp.USE_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM
                TB_HQ_PRODUCT thp
                LEFT OUTER JOIN (
                SELECT
                HQ_OFFICE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST
                ORDER BY
                START_DATE DESC ) AS SALE_UPRC
                FROM
                TB_HQ_PRODUCT_SALE_PRICE
                WHERE
                HQ_OFFICE_CD = #{hqOfficeCd}
                <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                HQ_OFFICE_CD, PROD_CD
                ) thpsp ON
                thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                AND thp.PROD_CD = thpsp.PROD_CD
                WHERE
                thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM
                    TB_HQ_PRODUCT_BARCD
                    WHERE
                    HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND PROD_CD = thp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM
                    TB_HQ_PRODUCT_CLASS
                    WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH
                    PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY
                    PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                tmp.STORE_CD,
                tmp.PROD_CD,
                tmp.PROD_NM,
                tms.HQ_OFFICE_CD,
                tmp.PROD_CLASS_CD,
                ( SELECT SF_GET_PROD_CLASSES('S', tmp.STORE_CD, tmp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                tmp.USE_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM
                TB_MS_PRODUCT tmp
                LEFT OUTER JOIN (
                SELECT
                STORE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST
                ORDER BY
                START_DATE DESC ) AS SALE_UPRC
                FROM
                TB_MS_PRODUCT_SALE_PRICE
                WHERE
                STORE_CD = #{storeCd}
                <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                STORE_CD, PROD_CD
                ) thpsp ON
                tmp.STORE_CD = thpsp.STORE_CD
                AND tmp.PROD_CD = thpsp.PROD_CD
                INNER JOIN TB_MS_STORE tms ON
                tms.STORE_CD  = tmp.STORE_CD
                WHERE
                tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM
                    TB_MS_PRODUCT_BARCD
                    WHERE
                    STORE_CD = tmp.STORE_CD
                    AND PROD_CD = tmp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM
                    TB_MS_PRODUCT_CLASS
                    WHERE
                    STORE_CD = #{storeCd}
                    START WITH
                    PROD_CLASS_CD = #{prodClassCd}  AND STORE_CD = #{storeCd}
                    CONNECT BY
                    PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 상품이미지관리 - 상품이미지조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 상품의 이미지를 조회한다. ( 본사/매장 )
    -->
    <select id="getProdImg" parameterType="prodImgVO" resultType="DefaultMap">
        /* USE : ProdImgMapper.getProdImg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              SELECT HQ_OFFICE_CD,
                      PROD_CD,
                      IMG_FG,
                      IMG_URL,
                      IMG_FILE_NM,
                      IMG_CHG_DT,
                      REMARK,
                      REG_DT,
                      REG_ID,
                      MOD_DT,
                      MOD_ID
                FROM TB_HQ_PRODUCT_IMAGE
               WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                 AND PROD_CD = #{prodCd}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT STORE_CD,
                        PROD_CD,
                        IMG_FG,
                        IMG_URL,
                        IMG_FILE_NM,
                        IMG_CHG_DT,
                        REMARK,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                  FROM TB_MS_PRODUCT_IMAGE
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품이미지관리 - 기존 상품이미지 정보가 있는지 확인 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 기존 상품이미지 정보가 있는지 확인한다. ( 본사/매장 )
    -->
    <select id="getProdImgChk"  parameterType="prodImgVO" resultType="String">
        /* ProdImgMapper.getProdImgChk */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT IMG_FILE_NM
                  FROM TB_HQ_PRODUCT_IMAGE
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD = #{prodCd}
                   AND IMG_FG = #{imgFg}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT IMG_FILE_NM
                  FROM TB_MS_PRODUCT_IMAGE
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
                   AND IMG_FG = #{imgFg}
            </when>
        </choose>
    </select>

    <!-- 상품이미지관리 - 상품이미지저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 상품의 이미지를 저장한다. ( 본사/매장 )
    -->
    <insert id="saveProdImg" parameterType="prodImgVO">
        /* ProdImgMapper.saveProdImg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_IMAGE (
                    HQ_OFFICE_CD,
                    PROD_CD,
                    IMG_FG,
                    IMG_URL,
                    IMG_FILE_NM,
                    IMG_CHG_DT,
                    REMARK,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                VALUES
                (
                    #{hqOfficeCd},
                    #{prodCd},
                    #{imgFg},
                    #{imgUrl},
                    #{imgFileNm},
                    #{imgChgDt},
                    #{remark},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_IMAGE(
                    STORE_CD,
                    PROD_CD,
                    IMG_FG,
                    IMG_URL,
                    IMG_FILE_NM,
                    IMG_CHG_DT,
                    REMARK,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                VALUES
                (
                    #{storeCd},
                    #{prodCd},
                    #{imgFg},
                    #{imgUrl},
                    #{imgFileNm},
                    #{imgChgDt},
                    #{remark},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 상품이미지관리 - 상품이미지수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 상품의 이미지를 수정한다. ( 본사/매장 )
    -->
    <update id="updateProgImg" parameterType="prodImgVO">
        /* ProdImgMapper.updateProgImg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    UPDATE TB_HQ_PRODUCT_IMAGE
                       SET IMG_URL = #{imgUrl},
                            IMG_FILE_NM = #{imgFileNm},
                            IMG_CHG_DT = #{imgChgDt},
                            MOD_DT = #{modDt},
                            MOD_ID = #{modId}
                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                       AND PROD_CD = #{prodCd}
                       AND IMG_FG = #{imgFg}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                    UPDATE TB_MS_PRODUCT_IMAGE
                       SET IMG_URL = #{imgUrl},
                            IMG_FILE_NM = #{imgFileNm},
                            IMG_CHG_DT = #{imgChgDt},
                            MOD_DT = #{modDt},
                            MOD_ID = #{modId}
                     WHERE STORE_CD = #{storeCd}
                       AND PROD_CD = #{prodCd}
                       AND IMG_FG = #{imgFg}
            </when>
        </choose>
    </update>

    <!-- 상품이미지관리 - 상품이미지삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 상품의 이미지를 삭제한다. ( 본사/매장 )
    -->
    <delete id="delProdImg" parameterType="prodImgVO">
        /* ProdImgMapper.delProdImg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    DELETE TB_HQ_PRODUCT_IMAGE
                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                       AND PROD_CD = #{prodCd}
                       AND IMG_FG = #{imgFg}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                    DELETE TB_MS_PRODUCT_IMAGE
                     WHERE STORE_CD = #{storeCd}
                       AND PROD_CD = #{prodCd}
                       AND IMG_FG = #{imgFg}
            </when>
        </choose>
    </delete>

    <!-- 상품이미지관리 - 이미지매장적용 매장리스트 조회 -->
    <!--
          TABLE    : TB_MS_STORE
          PARAM    : prodImgVO
          COMMENTS : 이미지매장적용 팝업에서 매장리스트를 조회한다.
    -->
    <select id="getStoreList" parameterType="prodImgVO" resultType="DefaultMap">
        /* ProdImgMapper.getStoreList */
        SELECT tms.HQ_OFFICE_CD,
                tms.STORE_CD,
                tms.STORE_NM,
                tms.SYS_STAT_FG
          FROM TB_MS_STORE tms
         WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test="storeCd != null and storeCd != ''">
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
        </if>
        <if test="sysStatFg != null and sysStatFg != ''">
            AND tms.SYS_STAT_FG = #{sysStatFg} --매장상태구분
        </if>
        ORDER
           BY tms.STORE_CD ASC
    </select>

    <!-- 상품이미지관리 - 이미지매장적용 전 기존 매장상품이미지 정보 삭제 -->
    <!--
        TABLE    : TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 이미지매장적용 전 기존 매장상품이미지 정보를 삭제한다.
    -->
    <delete id="delStoreProdImg" parameterType="prodImgVO">
        /* ProdImgMapper.delStoreProdImg */
        DELETE TB_MS_PRODUCT_IMAGE
         WHERE STORE_CD = #{storeCd}
           AND IMG_FG IN
           <foreach collection="arrImgFg" item="item" open="(" close=")" separator=",">
              #{item}
           </foreach>
    </delete>

    <!-- 상품이미지관리 - 본사상품이미지 매장적용 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 본사상품 이미지를 매장에 적용한다.
    -->
    <insert id="prodImgToStore" parameterType="prodImgVO">
        /* USE : ProdImgMapper.prodImgToStore */
            INSERT INTO TB_MS_PRODUCT_IMAGE
             (
                STORE_CD,
                PROD_CD,
                IMG_FG,
                IMG_URL,
                IMG_FILE_NM,
                IMG_CHG_DT,
                REMARK,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
             )
                SELECT #{storeCd},
                        PROD_CD,
                        IMG_FG,
                        IMG_URL,
                        IMG_FILE_NM,
                        #{regDt},
                        REMARK,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                  FROM TB_HQ_PRODUCT_IMAGE
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND IMG_FG IN
                   <foreach collection="arrImgFg" item="item" open="(" close=")" separator=",">
                       #{item}
                   </foreach>
    </insert>

    <!-- 이미지 복사 -->
    <!--
          TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
          PARAM    : prodImgVO
          COMMENTS : 이미지 복사
    -->
    <insert id="prodImgCopy" parameterType="prodImgVO">
        /* USE : ProdImgMapper.prodImgCopy */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_IMAGE
                USING (
                    SELECT  REPLACE(IMG_URL, #{orgImgFg}, #{imgFg}) AS IMG_URL,
                            IMG_FILE_NM
                    FROM    TB_HQ_PRODUCT_IMAGE
                    WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                    AND     PROD_CD = #{prodCd}
                    AND     IMG_FG = #{orgImgFg}
                ) thpi
                ON (
                        HQ_OFFICE_CD    = #{hqOfficeCd}
                    AND PROD_CD         = #{prodCd}
                    AND IMG_FG          = #{imgFg}
                )
                WHEN MATCHED THEN
                UPDATE
                SET IMG_URL     = thpi.IMG_URL
                ,   IMG_FILE_NM = thpi.IMG_FILE_NM
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT (
                    HQ_OFFICE_CD
                ,   PROD_CD
                ,   IMG_FG
                ,   IMG_URL
                ,   IMG_FILE_NM
                ,   IMG_CHG_DT
                ,   REMARK
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES (
                    #{hqOfficeCd}
                ,   #{prodCd}
                ,   #{imgFg}
                ,   thpi.IMG_URL
                ,   thpi.IMG_FILE_NM
                ,   #{imgChgDt}
                ,   #{remark}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_IMAGE
                USING (
                    SELECT  REPLACE(IMG_URL, #{orgImgFg}, #{imgFg}) AS IMG_URL,
                            IMG_FILE_NM
                    FROM    TB_MS_PRODUCT_IMAGE
                    WHERE   STORE_CD = #{storeCd}
                    AND     PROD_CD = #{prodCd}
                    AND     IMG_FG = #{orgImgFg}
                ) thpi
                ON (
                        STORE_CD    = #{storeCd}
                    AND PROD_CD = #{prodCd}
                    AND IMG_FG  = #{imgFg}
                )
                WHEN MATCHED THEN
                UPDATE
                SET IMG_URL     = thpi.IMG_URL
                ,   IMG_FILE_NM = thpi.IMG_FILE_NM
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT  (
                    STORE_CD
                ,   PROD_CD
                ,   IMG_FG
                ,   IMG_URL
                ,   IMG_FILE_NM
                ,   IMG_CHG_DT
                ,   REMARK
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES (
                    #{storeCd}
                ,   #{prodCd}
                ,   #{imgFg}
                ,   thpi.IMG_URL
                ,   thpi.IMG_FILE_NM
                ,   #{imgChgDt}
                ,   #{remark}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
        </choose>
    </insert>


    <!-- 이미지 전체 복사 -->
    <!--
          TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
          PARAM    : prodImgVO
          COMMENTS : 이미지 전체 복사
    -->
    <insert id="prodImgCopyAll" parameterType="prodImgVO">
        /* USE : ProdImgMapper.prodImgCopyAll */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_IMAGE thpi1
                USING (
                SELECT  HQ_OFFICE_CD,
                        PROD_CD,
                        REPLACE(IMG_URL, #{orgImgFg}, #{imgFg}) AS IMG_URL,
                        IMG_FILE_NM
                FROM    TB_HQ_PRODUCT_IMAGE
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     IMG_FG = #{orgImgFg}
                ) thpi2
                ON (
                    thpi1.HQ_OFFICE_CD    = thpi2.HQ_OFFICE_CD
                AND thpi1.PROD_CD         = thpi2.PROD_CD
                AND thpi1.IMG_FG          = #{imgFg}
                )
                WHEN MATCHED THEN
                UPDATE
                SET IMG_URL     = thpi2.IMG_URL
                ,   IMG_FILE_NM = thpi2.IMG_FILE_NM
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT (
                    HQ_OFFICE_CD
                ,   PROD_CD
                ,   IMG_FG
                ,   IMG_URL
                ,   IMG_FILE_NM
                ,   IMG_CHG_DT
                ,   REMARK
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES (
                    thpi2.HQ_OFFICE_CD
                ,   thpi2.PROD_CD
                ,   #{imgFg}
                ,   thpi2.IMG_URL
                ,   thpi2.IMG_FILE_NM
                ,   #{imgChgDt}
                ,   #{remark}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_IMAGE tmpi1
                USING (
                SELECT  STORE_CD,
                        PROD_CD,
                        REPLACE(IMG_URL, #{orgImgFg}, #{imgFg}) AS IMG_URL,
                        IMG_FILE_NM
                FROM    TB_MS_PRODUCT_IMAGE
                WHERE   STORE_CD = #{storeCd}
                AND     IMG_FG = #{orgImgFg}
                ) tmpi2
                ON (
                    tmpi1.STORE_CD = tmpi2.STORE_CD
                AND tmpi1.PROD_CD = tmpi2.PROD_CD
                AND tmpi1.IMG_FG  = #{imgFg}
                )
                WHEN MATCHED THEN
                UPDATE
                SET IMG_URL     = tmpi2.IMG_URL
                ,   IMG_FILE_NM = tmpi2.IMG_FILE_NM
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT  (
                    STORE_CD
                ,   PROD_CD
                ,   IMG_FG
                ,   IMG_URL
                ,   IMG_FILE_NM
                ,   IMG_CHG_DT
                ,   REMARK
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES (
                    tmpi2.STORE_CD
                ,   tmpi2.PROD_CD
                ,   #{imgFg}
                ,   tmpi2.IMG_URL
                ,   tmpi2.IMG_FILE_NM
                ,   #{imgChgDt}
                ,   #{remark}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 상품이미지관리 - 상품이미지삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodImgVO
        COMMENTS : 상품의 이미지를 삭제한다. ( 본사/매장 )
    -->
    <delete id="prodImgDeleteAll" parameterType="prodImgVO">
        /* ProdImgMapper.prodImgDeleteAll */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_IMAGE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND IMG_FG = #{imgFg}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_IMAGE
                WHERE STORE_CD = #{storeCd}
                AND IMG_FG = #{imgFg}
            </when>
        </choose>
    </delete>


    <!-- 상품이미지관리 - 전체복사 기존 이미지 정보 리스트 -->
    <!--
          TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
          PARAM    : prodImgVO
          COMMENTS : 이미지매장적용 전체복사 기존 이미지 정보 리스트
    -->
    <select id="getProdImgNm" parameterType="prodImgVO" resultType="String">
        /* ProdImgMapper.getProdImgNm */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  IMG_FILE_NM AS ORG_IMG_FILE_NM
                FROM    TB_HQ_PRODUCT_IMAGE
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     IMG_FG = #{orgImgFg}
                AND     PROD_CD  = #{prodCd}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  IMG_FILE_NM AS ORG_IMG_FILE_NM
                FROM    TB_MS_PRODUCT_IMAGE
                WHERE   STORE_CD = #{storeCd}
                AND     IMG_FG = #{orgImgFg}
                AND     PROD_CD  = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품이미지관리 - 전체복사 기존 이미지 정보 리스트 -->
    <!--
          TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
          PARAM    : prodImgVO
          COMMENTS : 이미지매장적용 전체복사 기존 이미지 정보 리스트
    -->
    <select id="getProdImgList" parameterType="prodImgVO" resultType="DefaultMap">
        /* ProdImgMapper.getProdImgList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  IMG_FILE_NM AS ORG_IMG_FILE_NM
                FROM    TB_HQ_PRODUCT_IMAGE
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     IMG_FG = #{orgImgFg}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  IMG_FILE_NM AS ORG_IMG_FILE_NM
                FROM    TB_MS_PRODUCT_IMAGE
                WHERE   STORE_CD = #{storeCd}
                AND     IMG_FG = #{orgImgFg}
            </when>
        </choose>
    </select>
</mapper>