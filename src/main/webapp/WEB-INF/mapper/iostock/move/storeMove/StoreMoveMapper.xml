<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.iostock.move.storeMove.service.impl.StoreMoveMapper">
    <!-- 매장이동관리 - 매장이동관리 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_MS_EMPLOYEE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 - 매장이동관리 리스트를 조회한다.
    -->
    <select id="getStoreMoveList" parameterType="storeMoveVO" resultType="DefaultMap">
        /* USE : StoreMoveMapper.getStoreMoveList */
        <![CDATA[
        SELECT  tpsm.HQ_OFFICE_CD, tpsm.SLIP_NO, tpsm.MOVE_DATE, tpsm.DTL_CNT, tpsm.DLVR_FG, tpsm.PROC_FG
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, 'out'           , 'in'             ) AS IO_FG
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, tpsm.IN_STORE_CD, tpsm.OUT_STORE_CD) AS STORE_CD
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, tmsin.STORE_NM  , tmsout.STORE_NM  ) AS STORE_NM
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, tpsm.OUT_TOT_QTY, tpsm.IN_TOT_QTY  ) AS TOT_QTY
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, tpsm.OUT_AMT    , tpsm.IN_AMT      ) AS AMT
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, tpsm.OUT_VAT    , tpsm.IN_VAT      ) AS VAT
        ,       DECODE(tpsm.OUT_STORE_CD, #{outStoreCd}, tpsm.OUT_TOT    , tpsm.IN_TOT      ) AS TOT
        FROM    TB_PO_STORE_MOVE tpsm
        ,       TB_MS_STORE tmsout
        ,       TB_MS_STORE tmsin
        WHERE   tpsm.HQ_OFFICE_CD =       #{hqOfficeCd}
        AND     tpsm.MOVE_DATE    BETWEEN #{startDate} AND #{endDate}
        AND     tmsout.STORE_CD   =   tpsm.OUT_STORE_CD
        AND     tmsin.STORE_CD    =   tpsm.IN_STORE_CD
        ]]>
        <if test='ioFg == "in"'>
            AND tmsin.STORE_CD = #{outStoreCd}
        </if>
        <if test='ioFg == "out"'>
            AND tmsout.STORE_CD = #{outStoreCd}
        </if>
        <if test='ioFg == null or ioFg == ""'>
            AND (tmsout.STORE_CD = #{outStoreCd} OR tmsin.STORE_CD = #{outStoreCd})
        </if>
        <if test='dlvrFg != null and dlvrFg != ""'>
            AND tpsm.DLVR_FG = #{dlvrFg}
        </if>
        <if test='procFg != null and procFg != ""'>
            AND tphso.PROC_FG = #{procFg}
        </if>
        <if test='inStoreCd != null and inStoreCd != ""'>
            AND (tmsout.STORE_CD = #{inStoreCd} OR tmsin.STORE_CD = #{inStoreCd})
        </if>
        <![CDATA[
        ORDER BY tpsm.MOVE_DATE DESC, tpsm.SLIP_NO DESC
        ]]>
    </select>

    <!-- 매장이동관리 - 전표상세 조회 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE, TB_PO_STORE_MOVE_DTL, TB_HQ_PRODUCT, TB_MS_STORE_ENVST
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 - 전표상세 내역을 조회한다.
    -->
    <select id="getSlipNoInfo" parameterType="storeMoveVO" resultType="DefaultMap">
        /* USE : StoreMoveMapper.getSlipNoInfo */
        <![CDATA[
        SELECT	tpsm.MOVE_DATE
        ,		tpsm.DLVR_FG
        ,		tpsm.PROC_FG
        ,		tpsm.OUT_STORE_CD
        ,		tmsout.STORE_NM AS OUT_STORE_NM
        ,		tpsm.IN_STORE_CD
        ,		tmsin.STORE_NM AS IN_STORE_NM
        ,		tpsm.REMARK
        ,		tpsm.REG_DT
        ,		tpsm.OUT_CONFM_DT
        ,		tpsm.IN_CONFM_DT
        ,		tpsm.HQ_CONFM_DT
        ,		tpsm.OUT_SLIP_NO
        ,		tpsm.IN_SLIP_NO
        FROM    TB_PO_STORE_MOVE tpsm
        ,       TB_MS_STORE tmsout
        ,       TB_MS_STORE tmsin
        WHERE   tpsm.HQ_OFFICE_CD =   #{hqOfficeCd}
        AND     tpsm.SLIP_NO      =   #{slipNo}
        AND		tmsout.STORE_CD   =   tpsm.OUT_STORE_CD
        AND		tmsin.STORE_CD    =   tpsm.IN_STORE_CD
        ]]>
    </select>

    <!-- 매장이동관리 - 매장이동관리 상세 리스트 조회 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE, TB_PO_STORE_MOVE_DTL, TB_HQ_PRODUCT, TB_MS_STORE_ENVST
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 - 매장이동관리 상세 리스트를 조회한다.
    -->
    <select id="getStoreMoveDtlList" parameterType="storeMoveVO" resultType="DefaultMap">
        /* USE : StoreMoveMapper.getStoreMoveDtlList */
        <![CDATA[
        SELECT  tpsmd.PROD_CD, thp.PROD_NM, thp.PO_UNIT_FG, thp.PO_UNIT_QTY
        ,       thp.VAT_FG AS VAT_FG01
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tpsmd.OUT_UNIT_QTY)) AS OUT_UNIT_QTY
        ,       TO_NUMBER(SF_ZERO_TO_NULL(tpsmd.OUT_ETC_QTY))  AS OUT_ETC_QTY
        ,       tpsmd.OUT_TOT_QTY
        ,       tpsmd.OUT_TOT_QTY AS PREV_OUT_TOT_QTY
        ,       tpsmd.OUT_SPLY_UPRC
        ,       tpsmd.IN_SPLY_UPRC
        ,       TO_NUMBER(SF_ZERO_TO_NULL(DECODE(tpsm.OUT_STORE_CD, #{sessionStoreCd}, tpsmd.OUT_SPLY_UPRC , tpsmd.IN_SPLY_UPRC ))) AS SPLY_UPRC
        ,       TO_NUMBER(SF_ZERO_TO_NULL(DECODE(tpsm.OUT_STORE_CD, #{sessionStoreCd}, tpsmd.OUT_AMT       , tpsmd.IN_AMT       ))) AS AMT
        ,       TO_NUMBER(SF_ZERO_TO_NULL(DECODE(tpsm.OUT_STORE_CD, #{sessionStoreCd}, tpsmd.OUT_VAT       , tpsmd.IN_VAT       ))) AS VAT
        ,       TO_NUMBER(SF_ZERO_TO_NULL(DECODE(tpsm.OUT_STORE_CD, #{sessionStoreCd}, tpsmd.OUT_TOT       , tpsmd.IN_TOT       ))) AS TOT
        ,       tmseout.ENVST_VAL AS OUT_ENVST0011
        ,       tmsein.ENVST_VAL  AS IN_ENVST0011
        FROM    TB_PO_STORE_MOVE tpsm
        ,       TB_PO_STORE_MOVE_DTL tpsmd
        ,       TB_HQ_PRODUCT thp
        ,       TB_MS_STORE_ENVST tmseout
        ,       TB_MS_STORE_ENVST tmsein
        WHERE   tpsm.HQ_OFFICE_CD   =   #{hqOfficeCd}
        AND     tpsm.SLIP_NO        =   #{slipNo}
        AND     tpsmd.HQ_OFFICE_CD  =   tpsm.HQ_OFFICE_CD
        AND     tpsmd.SLIP_NO       =   tpsm.SLIP_NO
        AND     thp.HQ_OFFICE_CD    =   tpsmd.HQ_OFFICE_CD
        AND     thp.PROD_CD         =   tpsmd.PROD_CD
        AND     tmseout.STORE_CD    =   tpsm.OUT_STORE_CD
        AND     tmseout.ENVST_CD    =   '0011'
        AND     tmsein.STORE_CD     =   tpsm.IN_STORE_CD
        AND     tmsein.ENVST_CD     =   '0011'
        ORDER BY tpsmd.PROD_CD
        ]]>
    </select>

    <!-- 매장이동관리 - 매장이동관리 신규등록 상품 리스트 조회 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE, TB_PO_STORE_MOVE_DTL, TB_HQ_PRODUCT, TB_MS_STORE_ENVST
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 - 매장이동관리 신규등록 상품 리스트를 조회한다.
    -->
    <select id="getStoreMoveRegistList" parameterType="storeMoveVO" resultType="DefaultMap">
        /* USE : StoreMoveMapper.getStoreMoveRegistList */
        <![CDATA[
        SELECT   tmpout.PROD_CD, tmpout.PROD_NM
        ,        tmpout.VAT_FG AS VAT_FG01
        ,        tmpout.PO_UNIT_FG, tmpout.PO_UNIT_QTY
        ,        tmpout.PO_PROD_FG
        ,        tmpout.SPLY_UPRC AS OUT_SPLY_UPRC, tmseout.ENVST_VAL AS OUT_ENVST0011
        ,        tmpin.SPLY_UPRC AS IN_SPLY_UPRC, tmsein.ENVST_VAL AS IN_ENVST0011
        FROM     TB_MS_PRODUCT tmpout
        ,        TB_MS_STORE_ENVST tmseout
        ,        TB_MS_PRODUCT tmpin
        ,        TB_MS_STORE_ENVST tmsein
        WHERE    tmpout.STORE_CD  =   #{outStoreCd}
        AND      tmpin.STORE_CD   =   #{inStoreCd}
        AND      tmpin.PROD_CD    =   tmpout.PROD_CD
        AND      tmseout.STORE_CD =   tmpout.STORE_CD
        AND      tmseout.ENVST_CD =   '0011'
        AND      tmsein.STORE_CD  =   tmpin.STORE_CD
        AND      tmsein.ENVST_CD  =   '0011'
        ]]>
        <if test='prodCd != null and prodCd != ""'>
            AND tmpout.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND tmpout.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='slipNo != null and slipNo != ""'>
            AND tmpout.PROD_CD NOT IN (   SELECT  PROD_CD
                                          FROM    TB_PO_STORE_MOVE_DTL
                                          WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                          AND     SLIP_NO      = #{slipNo}
                                      )
        </if>
        ORDER BY tmpout.PROD_CD
    </select>

    <!-- 매장이동관리 - 매장이동관리 상세 리스트 DTL 수정 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 상세 리스트 DTL을 수정한다.
    -->
    <update id="updateStoreMoveDtl" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.updateStoreMoveDtl */
        UPDATE  TB_PO_STORE_MOVE_DTL
        SET     OUT_SPLY_UPRC    = #{outSplyUprc},
                OUT_UNIT_QTY     = #{outUnitQty},
                OUT_ETC_QTY      = #{outEtcQty},
                OUT_TOT_QTY      = #{outTotQty},
                OUT_AMT          = #{outAmt},
                OUT_VAT          = #{outVat},
                OUT_TOT          = #{outTot},
                IN_SPLY_UPRC     = #{inSplyUprc},
                IN_UNIT_QTY      = #{inUnitQty},
                IN_ETC_QTY       = #{inEtcQty},
                IN_TOT_QTY       = #{inTotQty},
                IN_AMT           = #{inAmt},
                IN_VAT           = #{inVat},
                IN_TOT           = #{inTot},
                MOD_DT           = #{modDt},
                MOD_ID           = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     PROD_CD       = #{prodCd}
    </update>

    <!-- 매장이동관리 - 매장이동관리 상세 리스트 HD 수정 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 상세 리스트 HD 수정한다.
    -->
    <update id="updateStoreMoveHd" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.updateStoreMoveHd */
        UPDATE  TB_PO_STORE_MOVE
        SET     (   DTL_CNT
                ,   OUT_UNIT_QTY      ,   OUT_ETC_QTY       ,   OUT_TOT_QTY       ,   OUT_AMT         ,   OUT_VAT       ,   OUT_TOT
                ,   IN_UNIT_QTY       ,   IN_ETC_QTY        ,   IN_TOT_QTY        ,   IN_AMT          ,   IN_VAT        ,   IN_TOT
                ,   DLVR_FG
                ,   REMARK            ,   REG_FG
                ,   MOD_DT            ,   MOD_ID
                )
            =   (   SELECT  COUNT(*)
                    ,       SUM(OUT_UNIT_QTY) ,   SUM(OUT_ETC_QTY)  ,   SUM(OUT_TOT_QTY)  ,   SUM(OUT_AMT)    ,   SUM(OUT_VAT)  ,   SUM(OUT_TOT)
                    ,       SUM(IN_UNIT_QTY)  ,   SUM(IN_ETC_QTY)   ,   SUM(IN_TOT_QTY )  ,   SUM(IN_AMT )    ,   SUM(IN_VAT )  ,   SUM(IN_TOT )
                    ,       #{dlvrFg}
                    ,       #{remark}         ,   #{regFg}
                    ,       #{modDt}          ,   #{modId}
                    FROM    TB_PO_STORE_MOVE_DTL
                    WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
                    AND     SLIP_NO       =   #{slipNo}
                )
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>

    <!-- 매장이동관리 - 매장이동관리 상세 DTL 삭제 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 상세 DTL 의 내용을 모두 삭제한다.
    -->
    <delete id="deleteAllStoreMoveDtl" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.deleteAllStoreMoveDtl */
        DELETE  TB_PO_STORE_MOVE_DTL
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </delete>


    <!-- 매장이동관리 - 매장이동관리 상세 HD 삭제 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 상세 HD를 삭제한다.
    -->
    <delete id="deleteStoreMoveHd" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.deleteStoreMoveHd */
        DELETE  TB_PO_STORE_MOVE
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </delete>


    <!-- 매장이동관리 - 신규전표번호 조회 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 신규전표번호를 조회한다.
    -->
    <select id="getNewSlipNo" parameterType="storeMoveVO" resultType="String">
        /* USE : StoreMoveMapper.getNewSlipNo */
        <![CDATA[
        SELECT  NVL(MAX(tpsm.SLIP_NO), #{yymm}||'000000')+1 AS SLIP_NO
        FROM    TB_PO_STORE_MOVE tpsm
        WHERE   tpsm.HQ_OFFICE_CD  =     #{hqOfficeCd}
        AND     tpsm.SLIP_NO       LIKE  #{yymm}||'%'
        ]]>
    </select>

    <!-- 매장이동관리 - 신규등록 상품 리스트 DTL 저장 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE_DTL
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 신규등록 상품 리스트를 등록한다.
    -->
    <insert id="insertStoreMoveDtl" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.insertStoreMoveDtl */
        INSERT INTO TB_PO_STORE_MOVE_DTL
        (
            HQ_OFFICE_CD,
            SLIP_NO,
            STORAGE_CD,
            HQ_BRAND_CD,
            PROD_CD,
            PO_UNIT_FG,
            PO_UNIT_QTY,
            OUT_SPLY_UPRC,
            OUT_UNIT_QTY,
            OUT_ETC_QTY,
            OUT_TOT_QTY,
            OUT_AMT,
            OUT_VAT,
            OUT_TOT,
            IN_SPLY_UPRC,
            IN_UNIT_QTY,
            IN_ETC_QTY,
            IN_TOT_QTY,
            IN_AMT,
            IN_VAT,
            IN_TOT,
            REG_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd},
            #{slipNo},
            #{storageCd},
            #{hqBrandCd},
            #{prodCd},
            #{poUnitFg},
            #{poUnitQty},
            #{outSplyUprc},
            #{outUnitQty},
            #{outEtcQty},
            #{outTotQty},
            #{outAmt},
            #{outVat},
            #{outTot},
            #{inSplyUprc},
            #{inUnitQty},
            #{inEtcQty},
            #{inTotQty},
            #{inAmt},
            #{inVat},
            #{inTot},
            #{regFg},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 매장이동관리 - 신규등록 상품 리스트 HD 저장 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 신규등록 상품 리스트를 등록한다.
    -->
    <insert id="insertStoreMoveHd" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.insertStoreMoveHd */
        INSERT INTO TB_PO_STORE_MOVE
        (       HQ_OFFICE_CD      ,   SLIP_NO           ,   MOVE_DATE         ,   OUT_STORE_CD    ,   IN_STORE_CD   ,   PROC_FG
        ,       DLVR_FG           ,   DTL_CNT
        ,       OUT_UNIT_QTY      ,   OUT_ETC_QTY       ,   OUT_TOT_QTY       ,   OUT_AMT         ,   OUT_VAT       ,   OUT_TOT
        ,       IN_UNIT_QTY       ,   IN_ETC_QTY        ,   IN_TOT_QTY        ,   IN_AMT          ,   IN_VAT        ,   IN_TOT
        ,       REMARK            ,   REG_FG
        ,       REG_DT            ,   REG_ID            ,   MOD_DT            ,   MOD_ID
        )
        SELECT  #{hqOfficeCd}     ,   #{slipNo}         ,   #{moveDate}       ,   #{outStoreCd}   ,   #{inStoreCd}  ,   '0'
        ,       #{dlvrFg}         ,   COUNT(*)
        ,       SUM(OUT_UNIT_QTY) ,   SUM(OUT_ETC_QTY)  ,   SUM(OUT_TOT_QTY)  ,   SUM(OUT_AMT)    ,   SUM(OUT_VAT)  ,   SUM(OUT_TOT)
        ,       SUM(IN_UNIT_QTY)  ,   SUM(IN_ETC_QTY)   ,   SUM(IN_TOT_QTY )  ,   SUM(IN_AMT )    ,   SUM(IN_VAT )  ,   SUM(IN_TOT )
        ,       #{remark}         ,   #{regFg}
        ,       #{regDt}          ,   #{regId}          ,   #{modDt}          ,   #{modId}
        FROM    TB_PO_STORE_MOVE_DTL
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </insert>

    <!-- 매장이동관리 - 신규등록 상품 리스트 HD 확정 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 진행구분을 수정한다.
    -->
    <update id="updateStoreMoveConfirm" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.updateStoreMoveConfirm */
        UPDATE  TB_PO_STORE_MOVE
        SET     PROC_FG      = #{procFg},
                OUT_CONFM_DT = DECODE(#{procFg}, '1', #{modDt}, OUT_CONFM_DT),
                OUT_CONFM_ID = DECODE(#{procFg}, '1', #{modId}, OUT_CONFM_ID),
                IN_CONFM_DT  = DECODE(#{procFg}, '2', #{modDt}, IN_CONFM_DT),
                IN_CONFM_ID  = DECODE(#{procFg}, '2', #{modId}, IN_CONFM_ID),
                HQ_CONFM_DT  = DECODE(#{procFg}, '3', #{modDt}, HQ_CONFM_DT),
                HQ_CONFM_ID  = DECODE(#{procFg}, '3', #{modId}, HQ_CONFM_ID),
                OUT_SLIP_NO  = #{outSlipNo},
                IN_SLIP_NO   = #{inSlipNo},
                MOD_DT       = #{modDt},
                MOD_ID       = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>


    <!-- 매장이동관리 - 출고, 반품 신규전표번호 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : volmErrVO
        COMMENTS : 매장이동관리 확정시 출고, 반품 신규전표번호를 조회한다.
    -->
    <select id="getIostockNewSlipNo" parameterType="storeMoveVO" resultType="String">
        /* USE : StoreMoveMapper.getIostockNewSlipNo */
        <![CDATA[
        SELECT  NVL(MAX(tphso.SLIP_NO), #{yymm}||'000000')+1 AS SLIP_NO
        FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
        WHERE   tphso.HQ_OFFICE_CD  =     #{hqOfficeCd}
        AND     tphso.SLIP_NO       LIKE  #{yymm}||'%'
        ]]>
    </select>


    <!-- 매장이동관리 - 매장이동관리 상품추가 리스트 HD 수정 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE
        PARAM    : storeMoveVO
        COMMENTS : 매장이동관리 상품추가 리스트 HD 수정한다.
    -->
    <update id="updateStoreMoveAddProdHd" parameterType="storeMoveVO">
        /* USE : StoreMoveMapper.updateStoreMoveAddProdHd */
        UPDATE  TB_PO_STORE_MOVE
        SET     (   DTL_CNT
                ,   OUT_UNIT_QTY      ,   OUT_ETC_QTY       ,   OUT_TOT_QTY       ,   OUT_AMT         ,   OUT_VAT       ,   OUT_TOT
                ,   IN_UNIT_QTY       ,   IN_ETC_QTY        ,   IN_TOT_QTY        ,   IN_AMT          ,   IN_VAT        ,   IN_TOT
                ,   MOD_DT            ,   MOD_ID
                )
            =   (   SELECT  COUNT(*)
                    ,       SUM(OUT_UNIT_QTY) ,   SUM(OUT_ETC_QTY)  ,   SUM(OUT_TOT_QTY)  ,   SUM(OUT_AMT)    ,   SUM(OUT_VAT)  ,   SUM(OUT_TOT)
                    ,       SUM(IN_UNIT_QTY)  ,   SUM(IN_ETC_QTY)   ,   SUM(IN_TOT_QTY )  ,   SUM(IN_AMT )    ,   SUM(IN_VAT )  ,   SUM(IN_TOT )
                    ,       #{modDt}          ,   #{modId}
                    FROM    TB_PO_STORE_MOVE_DTL
                    WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
                    AND     SLIP_NO       =   #{slipNo}
                )
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>
</mapper>
