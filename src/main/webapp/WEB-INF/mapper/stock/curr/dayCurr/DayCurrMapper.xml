<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.stock.curr.dayCurr.service.impl.DayCurrMapper">

    <!-- 현재고현황 - 본사 현재고현황 리스트 조회 -->
    <!--
        TABLE    : TB_ST_HQ_STOCK_CUR, TB_HQ_PRODUCT, TB_HQ_PRODUCT_BARCD
        PARAM    : dayCurrVO
        COMMENTS : 현재고현황 - 현재고현황 리스트를 조회한다.
    -->
    <select id="getDayCurrList" parameterType="dayCurrVO" resultType="DefaultMap">
        /* USE : DayCurrMapper.getDayCurrList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  FN_GET_PROD_CLASS_CD_NM_STR(A.HQ_OFFICE_CD, thp.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM
        ,		A.PROD_CD
        ,       thp.PROD_NM
        ,       thp.COST_UPRC
        ,       thv.VENDR_NM
        ,       thpb.BARCD_CD
        ,       thp.PO_UNIT_QTY
        ,       ROUND(A.DATE_QTY * thp.COST_UPRC / thp.PO_UNIT_QTY) AS CURR_AMT
        <if test='unitFg == "1"'>
            ,       thp.PO_UNIT_FG AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = thp.PO_UNIT_FG)  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
            ,       (thp.SAFE_STOCK_QTY / thp.PO_UNIT_QTY) AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((B.DATE_QTY                     )/ thp.PO_UNIT_QTY) AS B_CURR_QTY
            ,       SF_ZERO_TO_NULL((A.DATE_QTY                     )/ thp.PO_UNIT_QTY) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((C.VENDR_IN_QTY                 )/ thp.PO_UNIT_QTY) AS ACC_VENDR_IN_QTY
            ,       SF_ZERO_TO_NULL((C.VENDR_OUT_QTY                )/ thp.PO_UNIT_QTY) AS ACC_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.HQ_OUT_QTY                   )/ thp.PO_UNIT_QTY) AS ACC_HQ_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.HQ_IN_QTY                    )/ thp.PO_UNIT_QTY) AS ACC_HQ_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_MOVE_IN_QTY            )/ thp.PO_UNIT_QTY) AS ACC_STORE_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_MOVE_OUT_QTY           )/ thp.PO_UNIT_QTY) AS ACC_STORE_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.DISUSE_QTY                   )/ thp.PO_UNIT_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((C.ADJ_QTY                      )/ thp.PO_UNIT_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((C.SET_IN_QTY + C.SET_OUT_QTY   )/ thp.PO_UNIT_QTY) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((C.SALE_VENDR_ORDER_QTY         )/ thp.PO_UNIT_QTY) AS ACC_SALE_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.SALE_VENDR_RTN_QTY           )/ thp.PO_UNIT_QTY) AS ACC_SALE_VENDR_IN_QTY
        </if>
        <if test='unitFg == "0"'>
            ,       (CASE WHEN thp.STOCK_UNIT_FG IS NOT NULL THEN thp.STOCK_UNIT_FG ELSE thp.PO_UNIT_FG END) AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = (CASE WHEN thp.STOCK_UNIT_FG IS NOT NULL THEN thp.STOCK_UNIT_FG ELSE thp.PO_UNIT_FG END))  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
            ,       thp.SAFE_STOCK_QTY AS SAFE_STOCK_QTY
            ,       B.DATE_QTY      AS B_CURR_QTY
            ,       A.DATE_QTY      AS CURR_QTY
            ,       SF_ZERO_TO_NULL(C.VENDR_IN_QTY) AS ACC_VENDR_IN_QTY
            ,       SF_ZERO_TO_NULL(C.VENDR_OUT_QTY) AS ACC_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.HQ_OUT_QTY) AS ACC_HQ_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.HQ_IN_QTY) AS ACC_HQ_IN_QTY
            ,       SF_ZERO_TO_NULL(C.STORE_MOVE_IN_QTY) AS ACC_STORE_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL(C.STORE_MOVE_OUT_QTY) AS ACC_STORE_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.DISUSE_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL(C.ADJ_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL(C.SET_IN_QTY + C.SET_OUT_QTY ) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL(C.SALE_VENDR_ORDER_QTY) AS ACC_SALE_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.SALE_VENDR_RTN_QTY) AS ACC_SALE_VENDR_IN_QTY
        </if>
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM    TB_ST_HQ_STOCK_CUR_DATE_V01 A
        ,       TB_ST_HQ_STOCK_CUR_DATE_V01 B
        ,       TB_ST_HQ_STOCK_DAILY C
        ,       TB_HQ_PRODUCT thp
        ,       TB_HQ_PRODUCT_BARCD thpb
        ,       (   SELECT   thvp.PROD_CD
                    ,      LISTAGG((SELECT 	thv.VENDR_NM
                                    FROM	TB_HQ_VENDOR thv
                                    WHERE 	thv.HQ_OFFICE_CD  = thvp.HQ_OFFICE_CD
                                    AND		thv.VENDR_CD  = thvp.VENDR_CD), ',') WITHIN GROUP (ORDER BY thvp.VENDR_CD) AS VENDR_NM
                    FROM    TB_HQ_VENDOR_PROD thvp
                    WHERE   thvp.HQ_OFFICE_CD    =   #{hqOfficeCd}
                    GROUP
                    BY      thvp.PROD_CD
                ) thv
        WHERE   A.THE_DATE          = #{searchDate}
        AND     A.HQ_OFFICE_CD      = #{hqOfficeCd}
        AND     A.STORAGE_CD        = '999'
        AND     B.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
        AND     B.THE_DATE      (+) =   TO_CHAR(TO_DATE(A.THE_DATE, 'YYYYMMDD') -1, 'YYYYMMDD')
        AND     B.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     B.PROD_CD       (+) =   A.PROD_CD
        AND     C.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
        AND     C.IOSTOCK_DATE  (+) =   A.THE_DATE
        AND     C.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     C.PROD_CD       (+) =   A.PROD_CD
        AND     thp.HQ_OFFICE_CD      	=   A.HQ_OFFICE_CD
        AND     thp.PROD_CD           	=   A.PROD_CD
        AND     thp.STOCK_PROD_YN     	=   'Y'
        AND     thp.USE_YN            	=   'Y'
        AND     thpb.HQ_OFFICE_CD (+) 	=   A.HQ_OFFICE_CD
        AND     thpb.PROD_CD      (+) 	=   A.PROD_CD
        AND     thv.PROD_CD       (+) 	=   A.PROD_CD
        <if test='prodCd != null and prodCd != ""'>
            AND A.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND thpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='safeStockFg == "0"'>
            AND thp.SAFE_STOCK_QTY > 0 AND thp.SAFE_STOCK_QTY > A.DATE_QTY
        </if>
        <if test='weightFg == "0"'>
            AND thp.PROD_TYPE_FG IN ('1')
        </if>
        <if test='weightFg == "1"'>
            AND thp.PROD_TYPE_FG IN ('2', '3')
        </if>
        <if test="prodClassCd != null and prodClassCd != ''">
            AND thp.PROD_CLASS_CD IN  ( SELECT  #{prodClassCd} AS PROD_CLASS_CD
                                        FROM    DUAL
                                        UNION
                                        SELECT  thpc.PROD_CLASS_CD
                                        FROM    TB_HQ_PRODUCT_CLASS thpc
                                        WHERE   thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                                        START WITH  thpc.P_PROD_CLASS_CD = #{prodClassCd} AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                                        CONNECT BY  thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                                      )
        </if>
        <if test='arrVendrCd != null and arrVendrCd != ""'>
            AND thp.PROD_CD IN    ( SELECT  PROD_CD
                                    FROM    TB_HQ_VENDOR_PROD
                                    WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                    AND     VENDR_CD IN
                                    <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                                        #{item}
                                    </foreach>
                                  )
        </if>
        ORDER BY A.PROD_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 현재고현황 - 매장 현재고현황 리스트 조회 -->
    <!--
        TABLE    : TB_ST_STORE_STOCK_CUR, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD
        PARAM    : storeCurrVO
        COMMENTS : 현재고현황 - 현재고현황 리스트를 조회한다.
    -->
    <select id="getHqStoreCurrList" parameterType="dayCurrVO" resultType="DefaultMap">
        /* USE : DayCurrMapper.getHqStoreCurrList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  FN_GET_PROD_CLASS_CD_NM_STR(A.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM
		,		A.PROD_CD             ,   tmp.PROD_NM
        ,       A.STORE_CD
        ,       (SELECT STORE_NM FROM TB_MS_STORE Z WHERE Z.STORE_CD = A.STORE_CD) AS STORE_NM
        ,       tmp.COST_UPRC
        ,       tmv.VENDR_NM
        ,       tmpb.BARCD_CD
        ,       tmp.PO_UNIT_QTY
        ,       ROUND(A.DATE_QTY * tmp.COST_UPRC / tmp.PO_UNIT_QTY) AS CURR_AMT
        <if test='unitFg == "1"'>
            ,       tmp.PO_UNIT_FG AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_MS_STORE_NMCODE WHERE NMCODE_GRP_CD = '093' AND STORE_CD = #{storeCd} AND NMCODE_CD = tmp.PO_UNIT_FG)  AS PO_UNIT_FG_NM        /* 매장 가상로그인시 */
            ,       (tmp.SAFE_STOCK_QTY / tmp.PO_UNIT_QTY) AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((B.DATE_QTY                           ) / tmp.PO_UNIT_QTY) AS B_CURR_QTY
            ,       SF_ZERO_TO_NULL((A.DATE_QTY                           ) / tmp.PO_UNIT_QTY) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_IN_QTY                       ) / tmp.PO_UNIT_QTY) AS ACC_STORE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_OUT_QTY                      ) / tmp.PO_UNIT_QTY) AS ACC_STORE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_OUT_QTY                     ) / tmp.PO_UNIT_QTY) AS ACC_PURCHS_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_IN_QTY                      ) / tmp.PO_UNIT_QTY) AS ACC_PURCHS_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_IN_QTY                        ) / tmp.PO_UNIT_QTY) AS ACC_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_OUT_QTY                       ) / tmp.PO_UNIT_QTY) AS ACC_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.DISUSE_QTY                         ) / tmp.PO_UNIT_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((C.ADJ_QTY                            ) / tmp.PO_UNIT_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((C.SET_IN_QTY + C.SET_OUT_QTY         ) / tmp.PO_UNIT_QTY) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_SALE_QTY                     ) / tmp.PO_UNIT_QTY) AS ACC_STORE_SALE_QTY
        </if>
        <if test='unitFg == "0"'>
            ,       (CASE WHEN tmp.STOCK_UNIT_FG IS NOT NULL THEN tmp.STOCK_UNIT_FG ELSE tmp.PO_UNIT_FG END) AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_MS_STORE_NMCODE WHERE NMCODE_GRP_CD = '093' AND STORE_CD = #{storeCd} AND NMCODE_CD = (CASE WHEN tmp.STOCK_UNIT_FG IS NOT NULL THEN tmp.STOCK_UNIT_FG ELSE tmp.PO_UNIT_FG END))  AS PO_UNIT_FG_NM        /* 매장 가상로그인시 */
            ,       tmp.SAFE_STOCK_QTY AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((B.DATE_QTY                           )) AS B_CURR_QTY
            ,       SF_ZERO_TO_NULL((A.DATE_QTY                           )) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_IN_QTY                       )) AS ACC_STORE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_OUT_QTY                      )) AS ACC_STORE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_OUT_QTY                     )) AS ACC_PURCHS_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_IN_QTY                      )) AS ACC_PURCHS_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_IN_QTY                        )) AS ACC_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_OUT_QTY                       )) AS ACC_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.DISUSE_QTY                         )) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((C.ADJ_QTY                            )) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((C.SET_IN_QTY + C.SET_OUT_QTY         )) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_SALE_QTY                     )) AS ACC_STORE_SALE_QTY
        </if>
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM    TB_ST_STORE_STOCK_CUR_DATE_V01 A
        ,       TB_ST_STORE_STOCK_CUR_DATE_V01 B
        ,       TB_ST_STORE_STOCK_DAILY C
        ,       TB_MS_PRODUCT tmp
        ,       TB_MS_PRODUCT_BARCD tmpb
        ,       (   SELECT  tmvp.PROD_CD
                    ,   LISTAGG((   SELECT 	tmv.VENDR_NM
                                    FROM	TB_MS_VENDOR tmv
                                    WHERE 	tmv.STORE_CD  = tmvp.STORE_CD
                                    AND		tmv.VENDR_CD  = tmvp.VENDR_CD), ',') WITHIN GROUP (ORDER BY tmvp.VENDR_CD) AS VENDR_NM
                    FROM    TB_MS_VENDOR_PROD tmvp
                    WHERE   tmvp.STORE_CD    =   #{storeCd}
                    GROUP
                    BY      tmvp.PROD_CD
                ) tmv
        WHERE   A.THE_DATE          = #{searchDate}
        AND     A.STORE_CD        =   #{storeCd}
        AND     A.STORAGE_CD      =   '999'
        AND     B.STORE_CD      (+) =   A.STORE_CD
        AND     B.THE_DATE      (+) =   TO_CHAR(TO_DATE(A.THE_DATE, 'YYYYMMDD') -1, 'YYYYMMDD')
        AND     B.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     B.PROD_CD       (+) =   A.PROD_CD
        AND     C.STORE_CD      (+) =   A.STORE_CD
        AND     C.IOSTOCK_DATE  (+) =   A.THE_DATE
        AND     C.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     C.PROD_CD       (+) =   A.PROD_CD
        AND     tmp.STORE_CD          =   A.STORE_CD
        AND     tmp.PROD_CD           =   A.PROD_CD
        AND     tmp.STOCK_PROD_YN     =   'Y'
        AND     tmp.USE_YN            =   'Y'
        AND     tmpb.STORE_CD     (+) =   A.STORE_CD
        AND     tmpb.PROD_CD      (+) =   A.PROD_CD
        AND     tmv.PROD_CD       (+) =   A.PROD_CD
        <if test='prodCd != null and prodCd != ""'>
            AND A.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND tmpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='safeStockFg == "0"'>
            AND tmp.SAFE_STOCK_QTY > 0 AND tmp.SAFE_STOCK_QTY > A.DATE_QTY
        </if>
        <if test='weightFg == "0"'>
            AND tmp.PROD_TYPE_FG IN ('1')
        </if>
        <if test='weightFg == "1"'>
            AND tmp.PROD_TYPE_FG IN ('2', '3')
        </if>
        <if test='prodClassCd != null and prodClassCd != ""'>
           AND tmp.PROD_CLASS_CD IN  (
                                       SELECT              PROD_CLASS_CD
                                       FROM                TB_MS_PRODUCT_CLASS
                                       WHERE               STORE_CD        = #{storeCd}
                                       START WITH          PROD_CLASS_CD   = #{prodClassCd}
                                       AND                 STORE_CD        = #{storeCd}
                                       CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
                                       AND                 STORE_CD        = #{storeCd}
                                      )
        </if>
        <if test='arrVendrCd != null and arrVendrCd != ""'>
            AND tmp.PROD_CD IN    ( SELECT  PROD_CD
                                    FROM    TB_MS_VENDOR_PROD
                                    WHERE   STORE_CD = A.STORE_CD
                                    AND     VENDR_CD IN
                                    <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                                        #{item}
                                    </foreach>
                                  )
        </if>
        ORDER BY A.PROD_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getDayCurrExcelList" parameterType="dayCurrVO" resultType="DefaultMap">
        /* USE : DayCurrMapper.getDayCurrExcelList */
        SELECT  FN_GET_PROD_CLASS_CD_NM_STR(A.HQ_OFFICE_CD, thp.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM
        ,		A.PROD_CD
        ,       thp.PROD_NM
        ,       thp.COST_UPRC
        ,       thv.VENDR_NM
        ,       thpb.BARCD_CD
        ,       thp.PO_UNIT_QTY
        ,       ROUND(A.DATE_QTY * thp.COST_UPRC / thp.PO_UNIT_QTY) AS CURR_AMT
        <if test='unitFg == "1"'>
            ,       thp.PO_UNIT_FG AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = thp.PO_UNIT_FG)  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
            ,       (thp.SAFE_STOCK_QTY / thp.PO_UNIT_QTY) AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((B.DATE_QTY                     )/ thp.PO_UNIT_QTY) AS B_CURR_QTY
            ,       SF_ZERO_TO_NULL((A.DATE_QTY                     )/ thp.PO_UNIT_QTY) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((C.VENDR_IN_QTY                 )/ thp.PO_UNIT_QTY) AS ACC_VENDR_IN_QTY
            ,       SF_ZERO_TO_NULL((C.VENDR_OUT_QTY                )/ thp.PO_UNIT_QTY) AS ACC_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.HQ_OUT_QTY                   )/ thp.PO_UNIT_QTY) AS ACC_HQ_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.HQ_IN_QTY                    )/ thp.PO_UNIT_QTY) AS ACC_HQ_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_MOVE_IN_QTY            )/ thp.PO_UNIT_QTY) AS ACC_STORE_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_MOVE_OUT_QTY           )/ thp.PO_UNIT_QTY) AS ACC_STORE_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.DISUSE_QTY                   )/ thp.PO_UNIT_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((C.ADJ_QTY                      )/ thp.PO_UNIT_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((C.SET_IN_QTY + C.SET_OUT_QTY   )/ thp.PO_UNIT_QTY) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((C.SALE_VENDR_ORDER_QTY         )/ thp.PO_UNIT_QTY) AS ACC_SALE_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.SALE_VENDR_RTN_QTY           )/ thp.PO_UNIT_QTY) AS ACC_SALE_VENDR_IN_QTY
        </if>
        <if test='unitFg == "0"'>
            ,       (CASE WHEN thp.STOCK_UNIT_FG IS NOT NULL THEN thp.STOCK_UNIT_FG ELSE thp.PO_UNIT_FG END) AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = (CASE WHEN thp.STOCK_UNIT_FG IS NOT NULL THEN thp.STOCK_UNIT_FG ELSE thp.PO_UNIT_FG END))  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
            ,       thp.SAFE_STOCK_QTY AS SAFE_STOCK_QTY
            ,       B.DATE_QTY      AS B_CURR_QTY
            ,       A.DATE_QTY      AS CURR_QTY
            ,       SF_ZERO_TO_NULL(C.VENDR_IN_QTY) AS ACC_VENDR_IN_QTY
            ,       SF_ZERO_TO_NULL(C.VENDR_OUT_QTY) AS ACC_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.HQ_OUT_QTY) AS ACC_HQ_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.HQ_IN_QTY) AS ACC_HQ_IN_QTY
            ,       SF_ZERO_TO_NULL(C.STORE_MOVE_IN_QTY) AS ACC_STORE_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL(C.STORE_MOVE_OUT_QTY) AS ACC_STORE_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.DISUSE_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL(C.ADJ_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL(C.SET_IN_QTY + C.SET_OUT_QTY ) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL(C.SALE_VENDR_ORDER_QTY) AS ACC_SALE_VENDR_OUT_QTY
            ,       SF_ZERO_TO_NULL(C.SALE_VENDR_RTN_QTY) AS ACC_SALE_VENDR_IN_QTY
        </if>
        FROM    TB_ST_HQ_STOCK_CUR_DATE_V01 A
        ,       TB_ST_HQ_STOCK_CUR_DATE_V01 B
        ,       TB_ST_HQ_STOCK_DAILY C
        ,       TB_HQ_PRODUCT thp
        ,       TB_HQ_PRODUCT_BARCD thpb
        ,       (   SELECT   thvp.PROD_CD
        ,      LISTAGG((SELECT 	thv.VENDR_NM
        FROM	TB_HQ_VENDOR thv
        WHERE 	thv.HQ_OFFICE_CD  = thvp.HQ_OFFICE_CD
        AND		thv.VENDR_CD  = thvp.VENDR_CD), ',') WITHIN GROUP (ORDER BY thvp.VENDR_CD) AS VENDR_NM
        FROM    TB_HQ_VENDOR_PROD thvp
        WHERE   thvp.HQ_OFFICE_CD    =   #{hqOfficeCd}
        GROUP
        BY      thvp.PROD_CD
        ) thv
        WHERE   A.THE_DATE          = #{searchDate}
        AND     A.HQ_OFFICE_CD      = #{hqOfficeCd}
        AND     A.STORAGE_CD        = '999'
        AND     B.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
        AND     B.THE_DATE      (+) =   TO_CHAR(TO_DATE(A.THE_DATE, 'YYYYMMDD') -1, 'YYYYMMDD')
        AND     B.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     B.PROD_CD       (+) =   A.PROD_CD
        AND     C.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
        AND     C.IOSTOCK_DATE  (+) =   A.THE_DATE
        AND     C.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     C.PROD_CD       (+) =   A.PROD_CD
        AND     thp.HQ_OFFICE_CD      	=   A.HQ_OFFICE_CD
        AND     thp.PROD_CD           	=   A.PROD_CD
        AND     thp.STOCK_PROD_YN     	=   'Y'
        AND     thp.USE_YN            	=   'Y'
        AND     thpb.HQ_OFFICE_CD (+) 	=   A.HQ_OFFICE_CD
        AND     thpb.PROD_CD      (+) 	=   A.PROD_CD
        AND     thv.PROD_CD       (+) 	=   A.PROD_CD
        <if test='prodCd != null and prodCd != ""'>
            AND A.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND thpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='safeStockFg == "0"'>
            AND thp.SAFE_STOCK_QTY > 0 AND thp.SAFE_STOCK_QTY > A.DATE_QTY
        </if>
        <if test='weightFg == "0"'>
            AND thp.PROD_TYPE_FG IN ('1')
        </if>
        <if test='weightFg == "1"'>
            AND thp.PROD_TYPE_FG IN ('2', '3')
        </if>
        <if test="prodClassCd != null and prodClassCd != ''">
            AND thp.PROD_CLASS_CD IN  ( SELECT  #{prodClassCd} AS PROD_CLASS_CD
            FROM    DUAL
            UNION
            SELECT  thpc.PROD_CLASS_CD
            FROM    TB_HQ_PRODUCT_CLASS thpc
            WHERE   thpc.HQ_OFFICE_CD = #{hqOfficeCd}
            START WITH  thpc.P_PROD_CLASS_CD = #{prodClassCd} AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
            CONNECT BY  thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
            )
        </if>
        <if test='arrVendrCd != null and arrVendrCd != ""'>
            AND thp.PROD_CD IN    ( SELECT  PROD_CD
            FROM    TB_HQ_VENDOR_PROD
            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
            AND     VENDR_CD IN
            <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            )
        </if>
        ORDER BY A.PROD_CD
    </select>

    <select id="getHqStoreCurrExcelList" parameterType="dayCurrVO" resultType="DefaultMap">
        /* USE : DayCurrMapper.getHqStoreCurrList */
        SELECT  FN_GET_PROD_CLASS_CD_NM_STR(A.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM
        ,		A.PROD_CD             ,   tmp.PROD_NM
        ,       A.STORE_CD
        ,       (SELECT STORE_NM FROM TB_MS_STORE Z WHERE Z.STORE_CD = A.STORE_CD) AS STORE_NM
        ,       tmp.COST_UPRC
        ,       tmv.VENDR_NM
        ,       tmpb.BARCD_CD
        ,       tmp.PO_UNIT_QTY
        ,       ROUND(A.DATE_QTY * tmp.COST_UPRC / tmp.PO_UNIT_QTY) AS CURR_AMT
        <if test='unitFg == "1"'>
            ,       tmp.PO_UNIT_FG AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_MS_STORE_NMCODE WHERE NMCODE_GRP_CD = '093' AND STORE_CD = #{storeCd} AND NMCODE_CD = tmp.PO_UNIT_FG)  AS PO_UNIT_FG_NM        /* 매장 가상로그인시 */
            ,       (tmp.SAFE_STOCK_QTY / tmp.PO_UNIT_QTY) AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((B.DATE_QTY                           ) / tmp.PO_UNIT_QTY) AS B_CURR_QTY
            ,       SF_ZERO_TO_NULL((A.DATE_QTY                           ) / tmp.PO_UNIT_QTY) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_IN_QTY                       ) / tmp.PO_UNIT_QTY) AS ACC_STORE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_OUT_QTY                      ) / tmp.PO_UNIT_QTY) AS ACC_STORE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_OUT_QTY                     ) / tmp.PO_UNIT_QTY) AS ACC_PURCHS_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_IN_QTY                      ) / tmp.PO_UNIT_QTY) AS ACC_PURCHS_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_IN_QTY                        ) / tmp.PO_UNIT_QTY) AS ACC_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_OUT_QTY                       ) / tmp.PO_UNIT_QTY) AS ACC_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.DISUSE_QTY                         ) / tmp.PO_UNIT_QTY) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((C.ADJ_QTY                            ) / tmp.PO_UNIT_QTY) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((C.SET_IN_QTY + C.SET_OUT_QTY         ) / tmp.PO_UNIT_QTY) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_SALE_QTY                     ) / tmp.PO_UNIT_QTY) AS ACC_STORE_SALE_QTY
        </if>
        <if test='unitFg == "0"'>
            ,       (CASE WHEN tmp.STOCK_UNIT_FG IS NOT NULL THEN tmp.STOCK_UNIT_FG ELSE tmp.PO_UNIT_FG END) AS PO_UNIT_FG
            ,		(SELECT NMCODE_NM FROM TB_MS_STORE_NMCODE WHERE NMCODE_GRP_CD = '093' AND STORE_CD = #{storeCd} AND NMCODE_CD = (CASE WHEN tmp.STOCK_UNIT_FG IS NOT NULL THEN tmp.STOCK_UNIT_FG ELSE tmp.PO_UNIT_FG END))  AS PO_UNIT_FG_NM        /* 매장 가상로그인시 */
            ,       tmp.SAFE_STOCK_QTY AS SAFE_STOCK_QTY
            ,       SF_ZERO_TO_NULL((B.DATE_QTY                           )) AS B_CURR_QTY
            ,       SF_ZERO_TO_NULL((A.DATE_QTY                           )) AS CURR_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_IN_QTY                       )) AS ACC_STORE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_OUT_QTY                      )) AS ACC_STORE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_OUT_QTY                     )) AS ACC_PURCHS_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.PURCHS_IN_QTY                      )) AS ACC_PURCHS_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_IN_QTY                        )) AS ACC_MOVE_IN_QTY
            ,       SF_ZERO_TO_NULL((C.MOVE_OUT_QTY                       )) AS ACC_MOVE_OUT_QTY
            ,       SF_ZERO_TO_NULL((C.DISUSE_QTY                         )) AS ACC_DISUSE_QTY
            ,       SF_ZERO_TO_NULL((C.ADJ_QTY                            )) AS ACC_ADJ_QTY
            ,       SF_ZERO_TO_NULL((C.SET_IN_QTY + C.SET_OUT_QTY         )) AS ACC_SET_IN_QTY
            ,       SF_ZERO_TO_NULL((C.STORE_SALE_QTY                     )) AS ACC_STORE_SALE_QTY
        </if>
        FROM    TB_ST_STORE_STOCK_CUR_DATE_V01 A
        ,       TB_ST_STORE_STOCK_CUR_DATE_V01 B
        ,       TB_ST_STORE_STOCK_DAILY C
        ,       TB_MS_PRODUCT tmp
        ,       TB_MS_PRODUCT_BARCD tmpb
        ,       (   SELECT  tmvp.PROD_CD
        ,   LISTAGG((   SELECT 	tmv.VENDR_NM
        FROM	TB_MS_VENDOR tmv
        WHERE 	tmv.STORE_CD  = tmvp.STORE_CD
        AND		tmv.VENDR_CD  = tmvp.VENDR_CD), ',') WITHIN GROUP (ORDER BY tmvp.VENDR_CD) AS VENDR_NM
        FROM    TB_MS_VENDOR_PROD tmvp
        WHERE   tmvp.STORE_CD    =   #{storeCd}
        GROUP
        BY      tmvp.PROD_CD
        ) tmv
        WHERE   A.THE_DATE          = #{searchDate}
        AND     A.STORE_CD        =   #{storeCd}
        AND     A.STORAGE_CD      =   '999'
        AND     B.STORE_CD      (+) =   A.STORE_CD
        AND     B.THE_DATE      (+) =   TO_CHAR(TO_DATE(A.THE_DATE, 'YYYYMMDD') -1, 'YYYYMMDD')
        AND     B.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     B.PROD_CD       (+) =   A.PROD_CD
        AND     C.STORE_CD      (+) =   A.STORE_CD
        AND     C.IOSTOCK_DATE  (+) =   A.THE_DATE
        AND     C.STORAGE_CD    (+) =   A.STORAGE_CD
        AND     C.PROD_CD       (+) =   A.PROD_CD
        AND     tmp.STORE_CD          =   A.STORE_CD
        AND     tmp.PROD_CD           =   A.PROD_CD
        AND     tmp.STOCK_PROD_YN     =   'Y'
        AND     tmp.USE_YN            =   'Y'
        AND     tmpb.STORE_CD     (+) =   A.STORE_CD
        AND     tmpb.PROD_CD      (+) =   A.PROD_CD
        AND     tmv.PROD_CD       (+) =   A.PROD_CD
        <if test='prodCd != null and prodCd != ""'>
            AND A.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND tmpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='safeStockFg == "0"'>
            AND tmp.SAFE_STOCK_QTY > 0 AND tmp.SAFE_STOCK_QTY > A.DATE_QTY
        </if>
        <if test='weightFg == "0"'>
            AND tmp.PROD_TYPE_FG IN ('1')
        </if>
        <if test='weightFg == "1"'>
            AND tmp.PROD_TYPE_FG IN ('2', '3')
        </if>
        <if test='prodClassCd != null and prodClassCd != ""'>
            AND tmp.PROD_CLASS_CD IN  (
            SELECT              PROD_CLASS_CD
            FROM                TB_MS_PRODUCT_CLASS
            WHERE               STORE_CD        = #{storeCd}
            START WITH          PROD_CLASS_CD   = #{prodClassCd}
            AND                 STORE_CD        = #{storeCd}
            CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
            AND                 STORE_CD        = #{storeCd}
            )
        </if>
        <if test='arrVendrCd != null and arrVendrCd != ""'>
            AND tmp.PROD_CD IN    ( SELECT  PROD_CD
            FROM    TB_MS_VENDOR_PROD
            WHERE   STORE_CD = A.STORE_CD
            AND     VENDR_CD IN
            <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            )
        </if>
        ORDER BY A.PROD_CD
    </select>

</mapper>
