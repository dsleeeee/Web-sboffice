<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.item.item.service.impl.ItemItemMapper">

	<!-- 출력코드 ListMap -->
    <resultMap id="itemListMap" type="DefaultMap">
        <result column="SHOW_YN" property="showYn" typeHandler="CustomBooleanTypeHandler"/>
    </resultMap>

    <!-- 매출항목표시목록 조회 (본사)-->
    <!--
        TABLE    : TB_HQ_SHOW_HD
        PARAM    : ItemItemVO
        COMMENTS : 매출항목표시 목록을 조회한다.
    -->
    <select id="getHqItemList" parameterType="itemItemVO" resultMap="itemListMap">
        /* USE : ItemItemMapper.getHqItemList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  DISTINCT NVL(A.HQ_OFFICE_CD, #{hqOfficeCd}) AS HQ_OFFICE_CD
        		, #{orgnFg} AS ORGN_FG
        		, NVL(A.BUSI_FG, B.NMCODE_ITEM_1) AS BUSI_FG
        		, NVL(A.SHOW_HD_CD, B.NMCODE_CD) AS SHOW_HD_CD
        		, B.NMCODE_NM AS SHOW_HD_NM
        		, NVL(A.SHOW_YN,'N') AS SHOW_YN
        FROM    TB_HQ_SHOW_HD A
        		,(
        			SELECT  NMCODE_CD
        					,NMCODE_NM
        					,NMCODE_ITEM_1
        					,NMCODE_ITEM_2
        			FROM    TB_CM_NMCODE
        			WHERE   NMCODE_GRP_CD = '201'
        		) B
        WHERE   A.BUSI_FG(+) = B.NMCODE_ITEM_1
        		AND A.SHOW_HD_CD(+) = B.NMCODE_CD
        	<if test="hqOfficeCd != null and hqOfficeCd != ''">
        		AND A.HQ_OFFICE_CD(+) = #{hqOfficeCd}
        	</if>
        	<if test="busiFg != null and busiFg != ''">
        		AND B.NMCODE_ITEM_1 = #{busiFg}
        	</if>
        ORDER BY NVL(A.SHOW_HD_CD,B.NMCODE_CD)
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매출항목표시목록 조회 (매장)-->
    <!--
        TABLE    : TB_MS_SHOW_HD
        PARAM    : ItemItemVO
        COMMENTS : 매출항목표시 목록을 조회한다.
    -->
    <select id="getMsItemList" parameterType="itemItemVO" resultMap="itemListMap">
        /* USE : ItemItemMapper.getMsItemList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  DISTINCT NVL(A.STORE_CD, #{storeCd}) AS STORE_CD
        		, #{orgnFg} AS ORGN_FG
        		, NVL(A.BUSI_FG, B.NMCODE_ITEM_1) AS BUSI_FG
        		, NVL(A.SHOW_HD_CD, B.NMCODE_CD) AS SHOW_HD_CD
        		, B.NMCODE_NM AS SHOW_HD_NM
        		, NVL(A.SHOW_YN,'N') AS SHOW_YN
        FROM    TB_MS_SHOW_HD A
        		,(
        			SELECT  NMCODE_CD
        					,NMCODE_NM
        					,NMCODE_ITEM_1
        					,NMCODE_ITEM_2
        			FROM    TB_CM_NMCODE
        			WHERE   NMCODE_GRP_CD = '201'
        		) B
        WHERE   A.BUSI_FG(+) = B.NMCODE_ITEM_1
        		AND A.SHOW_HD_CD(+) = B.NMCODE_CD
        	<if test="storeCd != null and storeCd != ''">
        		AND A.STORE_CD(+) = #{storeCd}
        	</if>
        	<if test="busiFg != null and busiFg != ''">
        		AND B.NMCODE_ITEM_1 = #{busiFg}
        	</if>
        ORDER BY NVL(A.SHOW_HD_CD,B.NMCODE_CD)
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

	<!-- 매출항목표시 정보 수정(본사) -->
    <!--
          TABLE    : TB_HQ_SHOW_HD
          PARAM    : ItemItemVO
          COMMENTS : 매출항목표시 정보가 있으면 수정, 없으면 insert
    -->
    <update id="saveHqItemInfo" parameterType="itemItemVO">
        /* USE : ItemItemMapper.saveHqItemInfo */
        MERGE INTO TB_HQ_SHOW_HD tmsh
        USING (
        		SELECT	#{hqOfficeCd} AS HQ_OFFICE_CD
        				, #{busiFg} AS BUSI_FG
        				, #{showHdCd} AS SHOW_HD_CD
        		FROM	DUAL
               ) org
           ON (
           		tmsh.HQ_OFFICE_CD = org.HQ_OFFICE_CD
           		AND tmsh.BUSI_FG = org.BUSI_FG
           		AND tmsh.SHOW_HD_CD = org.SHOW_HD_CD
           	  )
        WHEN MATCHED THEN
        	UPDATE SET
        		tmsh.SHOW_YN = #{showYn}
        		, tmsh.MOD_DT = #{modDt}
        		, tmsh.MOD_ID = #{modId}
       	WHEN NOT MATCHED THEN
       		INSERT (
       			tmsh.HQ_OFFICE_CD
       			, tmsh.BUSI_FG
       			, tmsh.SHOW_HD_CD
       			, tmsh.SHOW_YN
       			, tmsh.REG_DT
       			, tmsh.REG_ID
       			, tmsh.MOD_DT
       			, tmsh.MOD_ID
       		) VALUES (
       			#{hqOfficeCd}
       			, #{busiFg}
       			, #{showHdCd}
       			, #{showYn}
       			, #{regDt}
       			, #{regId}
       			, #{modDt}
       			, #{modId}
       		)
    </update>

    <!-- 매출항목표시 정보 수정(매장) -->
    <!--
          TABLE    : TB_MS_SHOW_HD
          PARAM    : ItemItemVO
          COMMENTS : 매출항목표시 정보가 있으면 수정, 없으면 insert
    -->
    <update id="saveMsItemInfo" parameterType="itemItemVO">
        /* USE : ItemItemMapper.saveMsItemInfo */
        MERGE INTO TB_MS_SHOW_HD tmsh
        USING (
        		SELECT	#{storeCd} AS STORE_CD
        				, #{busiFg} AS BUSI_FG
        				, #{showHdCd} AS SHOW_HD_CD
        		FROM	DUAL
               ) org
           ON (
           		tmsh.STORE_CD = org.STORE_CD
           		AND tmsh.BUSI_FG = org.BUSI_FG
           		AND tmsh.SHOW_HD_CD = org.SHOW_HD_CD
           	  )
        WHEN MATCHED THEN
        	UPDATE SET
        		tmsh.SHOW_YN = #{showYn}
        		, tmsh.MOD_DT = #{modDt}
        		, tmsh.MOD_ID = #{modId}
       	WHEN NOT MATCHED THEN
       		INSERT (
       			tmsh.STORE_CD
       			, tmsh.BUSI_FG
       			, tmsh.SHOW_HD_CD
       			, tmsh.SHOW_YN
       			, tmsh.REG_DT
       			, tmsh.REG_ID
       			, tmsh.MOD_DT
       			, tmsh.MOD_ID
       		) VALUES (
       			#{storeCd}
       			, #{busiFg}
       			, #{showHdCd}
       			, #{showYn}
       			, #{regDt}
       			, #{regId}
       			, #{modDt}
       			, #{modId}
       		)
    </update>

</mapper>
