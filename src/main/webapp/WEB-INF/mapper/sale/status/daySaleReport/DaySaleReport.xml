<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    DaySaleReport.xml
    일별매출내역 다운로드(제너시스올떡 분식대장)
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2021.12.08     최초작성
-->
<mapper namespace="kr.co.solbipos.sale.status.daySaleReport.service.impl.DaySaleReportMapper">

    <!-- 일별매출내역 다운로드 - 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getDaySaleReportList" parameterType="DaySaleReportVO" resultType="DefaultMap">
        /* DaySaleReportMapper.getDaySaleReportList */
        SELECT
        SUBSTR(tmsr.FROM_SALE_DATE, 0, 6) AS SALE_MONTH,
        tmsr.STORE_CD,
        tms.STORE_NM,
--         '전체매장통합파일' AS PROC_GUBUN,
        tmsr.PROC_DT,
        (SELECT USER_NM FROM TB_WB_USER_INFO_DTL_V01 WHERE USER_ID = tmsr.REG_ID) AS USER_NM,
        tmsr.PROC_FG,
        (CASE WHEN tmsr.PROC_FG IN ('0','1') THEN '대기' ELSE tmsr.PROC_MSG END) AS PROC_MSG,
        (CASE WHEN tmsr.PROC_FG = '2' THEN '다운로드' ELSE null END) AS DOWNLOAD,
        tmsr.FROM_SALE_DATE,
        tmsr.TO_SALE_DATE,
        tmsr.FILE_NAME
        FROM TB_MS_SALE_REPORT tmsr,
        TB_MS_STORE tms
        WHERE 1=1
        AND tmsr.HQ_OFFICE_CD = #{hqOfficeCd}
        <![CDATA[
            AND tmsr.FROM_SALE_DATE >= #{startMonth}||'01'
            AND tmsr.TO_SALE_DATE <= #{endMonth}||'31'
        ]]>
        AND tmsr.REPORT_TYPE = '02'
        AND tms.HQ_OFFICE_CD = tmsr.HQ_OFFICE_CD
        AND tms.STORE_CD = tmsr.STORE_CD
        ORDER BY tmsr.FROM_SALE_DATE DESC, tmsr.STORE_CD
    </select>

    <!-- 일별매출내역 다운로드 - 자료생성 저장 insert -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getDaySaleReportSaveInsert" parameterType="DaySaleReportVO">
        /* DaySaleReportMapper.getDaySaleReportSaveInsert */
        INSERT INTO TB_MS_SALE_REPORT
        (
            HQ_OFFICE_CD,
            STORE_CD,
            REQ_DATE,
            REQ_TIME,
            REPORT_TYPE,
            FROM_SALE_DATE,
            TO_SALE_DATE,
            PROC_FG,
            PROC_MSG,
            PROC_DT,
            FILE_NAME,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        ) VALUES (
            #{hqOfficeCd},
            #{storeCd},
            #{reqDate},
            #{reqTime},
            '02',
            #{dataCreateMonth}||'01',
            #{dataCreateMonth}||#{dataCreateMonthLastDate},
            '0',
            '',
            '',
            '',
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 일별매출내역 다운로드 - 삭제 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getDaySaleReportDel" parameterType="DaySaleReportVO">
        /* DaySaleReportMapper.getDaySaleReportDel */
        DELETE TB_MS_SALE_REPORT
        WHERE 1=1
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        AND STORE_CD = #{storeCd}
        AND FROM_SALE_DATE = #{fromSaleDate}
        AND TO_SALE_DATE = #{toSaleDate}
        AND REPORT_TYPE = '02'
    </delete>

    <!-- 일별매출내역 다운로드 - 자료생성 요청건 존재여부 확인 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getDaySaleReportChk" parameterType="DaySaleReportVO" resultType="DefaultMap">
        /* DaySaleReportMapper.getDaySaleReportChk */
        SELECT
        COUNT(tmsr.REPORT_TYPE) AS CNT
        FROM TB_MS_SALE_REPORT tmsr
        WHERE 1=1
        AND tmsr.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND tmsr.STORE_CD IN (${storeCdQuery})
        </if>
        AND tmsr.FROM_SALE_DATE = #{dataCreateMonth}||'01'
        AND tmsr.TO_SALE_DATE = #{dataCreateMonth}||#{dataCreateMonthLastDate}
        AND tmsr.REPORT_TYPE = '02'
    </select>

    <!-- 일별매출내역 조회 - 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getDaySaleReportListList" parameterType="DaySaleReportVO" resultType="DefaultMap">
        /* DaySaleReportMapper.getDaySaleReportListList */
        SELECT *
        FROM
        (
            SELECT *
            FROM
            (
                -- 상품별-일자별 매출(배달의 민족, 쿠팡이츠, 요기요, 그외 매출(홀+CID))
                SELECT
                PROD_CD,
                PROD_NM,
                PROD_CLASS_CD,
                PROD_CLASS_NM,
                DLVR_IN_FG
                ${sQuery1}
                FROM
                (
                    SELECT
                    PROD_CD,
                    PROD_NM,
                    PROD_CLASS_CD,
                    PROD_CLASS_NM,
                    DLVR_IN_FG
                    ${sQuery1}
                    ${sQuery3}
                    FROM
                    (
                        SELECT *
                        FROM
                        (
                            SELECT
                            A.SALE_DATE,
                            A.PROD_CD,
                            B2.PROD_NM,
                            B2.PROD_CLASS_CD,
                            B2.PROD_CLASS_NM,
                            (CASE WHEN A.DLVR_IN_FG IN ('3','4','5') THEN A.DLVR_IN_FG ELSE '999' END) AS DLVR_IN_FG,
                            A.TOT_SALE_QTY,
                            A.TOT_SALE_AMT,
                            A.TOT_DC_AMT,
                            A.REAL_SALE_AMT
                            FROM TB_SL_DAILY_PROD_DLVR A,
                            TB_MS_PRODUCT B,
                            (
                                SELECT
                                DISTINCT A.PROD_CD,
                                A.PROD_NM,
                                B.PROD_CLASS_CD,
                                B.PROD_CLASS_NM
                                FROM TB_MS_PRODUCT A,
                                TB_MS_PRODUCT_CLASS B,
                                TB_SL_DAILY_PROD_DLVR C
                                WHERE 1=1
                                AND A.PROD_CLASS_CD = B.PROD_CLASS_CD
                                AND A.STORE_CD = B.STORE_CD
                                AND A.STORE_CD = C.STORE_CD
                                AND A.PROD_CD = C.PROD_CD
                                AND C.STORE_CD = #{storeCd}
                                AND C.SALE_DATE BETWEEN #{dataCreateMonth}||'01' AND #{dataCreateMonth}||#{dataCreateMonthLastDate}
                            ) B2
                            WHERE 1=1
                            AND B.STORE_CD (+)= A.STORE_CD
                            AND B.HQ_BRAND_CD (+)= A.HQ_BRAND_CD
                            AND B.PROD_CD (+)= A.PROD_CD
                            AND A.PROD_CD (+)= B2.PROD_CD
                            AND B.PROD_CLASS_CD (+)= B2.PROD_CLASS_CD
                            AND A.HQ_OFFICE_CD = #{hqOfficeCd}
                            AND A.STORE_CD = #{storeCd}
                            AND A.SALE_DATE BETWEEN #{dataCreateMonth}||'01' AND #{dataCreateMonth}||#{dataCreateMonthLastDate}
                            ORDER BY A.PROD_CD ASC
                        )
                        PIVOT
                        (
                            SUM(TOT_SALE_QTY) TOT_SALE_QTY,
                            SUM(TOT_SALE_AMT) TOT_SALE_AMT,
                            SUM(TOT_DC_AMT) TOT_DC_AMT,
                            SUM(REAL_SALE_AMT) TOT_REAL_SALE_AMT
                            FOR SALE_DATE IN
                            (
                                ${pivotDateCol}
                            )
                        )
                        ORDER BY DLVR_IN_FG, PROD_CLASS_CD, PROD_CD DESC
                    )
                )
                WHERE 1=1
                AND ALL_TOT_AMT != 0
                -- //상품별-일자별 매출(배달의 민족, 쿠팡이츠, 요기요, 그외 매출(홀+CID))
            )
            UNION ALL
            (
                -- 분류명 행 추가
                SELECT
                DISTINCT '9999999999999' as PROD_CD,
                '['||B.PROD_CLASS_NM||']' as PROD_NM,
                B.PROD_CLASS_CD,
                '['||B.PROD_CLASS_NM||']' AS PROD_CLASS_NM,
                (CASE WHEN C.DLVR_IN_FG IN ('3','4','5') THEN C.DLVR_IN_FG ELSE '999' END) AS DLVR_IN_FG
                ${sQuery2}
                FROM TB_MS_PRODUCT A,
                TB_MS_PRODUCT_CLASS B,
                TB_SL_DAILY_PROD_DLVR C
                WHERE 1=1
                AND A.STORE_CD = B.STORE_CD
                AND A.PROD_CLASS_CD = B.PROD_CLASS_CD
                AND A.STORE_CD = C.STORE_CD
                AND A.PROD_CD = C.PROD_CD
                AND C.STORE_CD = #{storeCd}
                AND C.SALE_DATE BETWEEN #{dataCreateMonth}||'01' AND #{dataCreateMonth}||#{dataCreateMonthLastDate}
                -- //분류명 행 추가
            )
            UNION ALL
            (
                -- 배달별-일자별 합계
                SELECT
                '99999999999991' AS PROD_CD,
                (CASE WHEN DLVR_IN_FG = '3' THEN '1. 배달의 민족 Total'
                       WHEN DLVR_IN_FG = '4' THEN '2. 쿠팡이츠 Total'
                       WHEN DLVR_IN_FG = '5' THEN '3. 요기요 Total'
                       WHEN DLVR_IN_FG = '999' THEN '4. 그외 매출(홀+CID) Total'
                       ELSE null END) AS PROD_NM,
                '00000' AS PROD_CLASS_CD,
                '' AS PROD_CLASS_NM,
                DLVR_IN_FG
                ${sQuery1}
                FROM
                (
                    SELECT *
                    FROM
                    (
                        SELECT
                        A.SALE_DATE,
                         (CASE WHEN A.DLVR_IN_FG IN ('3','4','5') THEN A.DLVR_IN_FG ELSE '999' END) AS DLVR_IN_FG,
                        A.TOT_SALE_QTY,
                        A.TOT_SALE_AMT,
                        A.TOT_DC_AMT,
                        A.REAL_SALE_AMT
                        FROM TB_SL_DAILY_PROD_DLVR A
                        WHERE 1=1
                        AND A.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND A.STORE_CD = #{storeCd}
                        AND A.SALE_DATE BETWEEN #{dataCreateMonth}||'01' AND #{dataCreateMonth}||#{dataCreateMonthLastDate}
                    )
                    PIVOT
                    (
                        SUM(TOT_SALE_QTY) TOT_SALE_QTY,
                        SUM(TOT_SALE_AMT) TOT_SALE_AMT,
                        SUM(TOT_DC_AMT) TOT_DC_AMT,
                        SUM(REAL_SALE_AMT) TOT_REAL_SALE_AMT
                        FOR SALE_DATE IN
                        (
                            ${pivotDateCol}
                        )
                    )
                )
                -- //배달별-일자별 합계
            )
            UNION ALL
            (
                -- 일자별 합계
                SELECT
                '99999999999993' AS PROD_CD,
                'POS 총 매출' AS PROD_NM,
                '00000' AS PROD_CLASS_CD,
                '' AS PROD_CLASS_NM,
                 '0' AS DLVR_IN_FG
                ${sQuery1}
                FROM
                (
                    SELECT *
                    FROM
                    (
                        SELECT
                        A.SALE_DATE,
                        A.TOT_SALE_QTY,
                        A.TOT_SALE_AMT,
                        A.TOT_DC_AMT,
                        A.REAL_SALE_AMT
                        FROM TB_SL_DAILY_PROD_DLVR A
                        WHERE 1=1
                        AND A.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND A.STORE_CD = #{storeCd}
                        AND A.SALE_DATE BETWEEN #{dataCreateMonth}||'01' AND #{dataCreateMonth}||#{dataCreateMonthLastDate}
                    )
                    PIVOT
                    (
                        SUM(TOT_SALE_QTY) TOT_SALE_QTY,
                        SUM(TOT_SALE_AMT) TOT_SALE_AMT,
                        SUM(TOT_DC_AMT) TOT_DC_AMT,
                        SUM(REAL_SALE_AMT) TOT_REAL_SALE_AMT
                        FOR SALE_DATE IN
                        (
                            ${pivotDateCol}
                        )
                    )
                )
                -- //일자별 합계
            )
        ) AA
        WHERE 1=1
        ORDER BY AA.DLVR_IN_FG, AA.PROD_CLASS_CD, AA.PROD_CD DESC
    </select>

</mapper>