<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.iostock.orderReturn.rtnInstockConfm.service.impl.RtnInstockConfmMapper">
    <!-- 반품본사입고 - 반품본사입고 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_MS_EMPLOYEE
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 반품본사입고 리스트를 조회한다.
    -->
    <select id="getRtnInstockConfmList" parameterType="rtnInstockConfmVO" resultType="DefaultMap">
        /* USE : RtnInstockConfmMapper.getRtnInstockConfmList */
        <![CDATA[
        SELECT   tphso.SLIP_NO, tphso.VENDR_CD, tphso.SLIP_FG, tphso.SLIP_KIND, tphso.PROC_FG, tphso.STORE_CD, tms.STORE_NM
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_AMT*tphso.SLIP_FG AS ORDER_AMT
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_VAT*tphso.SLIP_FG AS ORDER_VAT
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_TOT*tphso.SLIP_FG AS ORDER_TOT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_AMT  *tphso.SLIP_FG AS MGR_AMT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_VAT  *tphso.SLIP_FG AS MGR_VAT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_TOT  *tphso.SLIP_FG AS MGR_TOT
        ,        (CASE WHEN tphso.PROC_FG <  '20' THEN tphso.OUT_DATE                  ELSE NULL END) AS REQ_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_DATE                  ELSE NULL END) AS OUT_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_TOT_QTY*tphso.SLIP_FG ELSE NULL END) AS OUT_TOT_QTY
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_AMT*tphso.SLIP_FG     ELSE NULL END) AS OUT_AMT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_VAT*tphso.SLIP_FG     ELSE NULL END) AS OUT_VAT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_TOT*tphso.SLIP_FG     ELSE NULL END) AS OUT_TOT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_DATE                   ELSE NULL END) AS IN_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_TOT_QTY *tphso.SLIP_FG ELSE NULL END) AS IN_TOT_QTY
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_AMT *tphso.SLIP_FG     ELSE NULL END) AS IN_AMT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_VAT *tphso.SLIP_FG     ELSE NULL END) AS IN_VAT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_TOT *tphso.SLIP_FG     ELSE NULL END) AS IN_TOT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_DT                    ELSE NULL END) AS OUT_DT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN userInfo.EMP_NM                 ELSE NULL END) AS OUT_NM
        ,        tphso.REMARK, tphso.HQ_REMARK, tphso.DLVR_CD
        ,        tphsod.PENALTY_AMT
        ]]>
        FROM     TB_PO_HQ_STORE_OUTSTOCK tphso
        ,        (  SELECT  tphsod.HQ_OFFICE_CD, tphsod.SLIP_NO, SUM(tphsod.PENALTY_AMT) AS PENALTY_AMT
                    FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
                    ,       TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
                    WHERE   tphso.HQ_OFFICE_CD  =       #{hqOfficeCd}
                    AND     tphso.OUT_DATE      BETWEEN #{startDate} AND #{endDate}
                    AND     tphsod.HQ_OFFICE_CD = tphso.HQ_OFFICE_CD
                    AND     tphsod.SLIP_NO      = tphso.SLIP_NO
        
                    <if test='slipFg != null and slipFg != ""'>
                        AND tphso.SLIP_FG = #{slipFg}
                    </if>
                    <if test='slipKind != null and slipKind != ""'>
                        AND tphso.SLIP_KIND = #{slipKind}
                    </if>
                    <if test='procFg != null and procFg != ""'>
                        AND tphso.PROC_FG = #{procFg}
                    </if>
                    <if test='vendrCd != null and vendrCd != ""'>
                        AND tphso.VENDR_CD = #{vendrCd}
                    </if>
                    <if test='dlvrCd != null and dlvrCd != ""'>
                        AND tphso.DLVR_CD = #{dlvrCd}
                    </if>
                    <if test='storeCd != null and storeCd != ""'>
                        AND tms.STORE_CD = #{storeCd}
                    </if>
                    <if test='storeNm != null and storeNm != ""'>
                        AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
                    </if>
        <![CDATA[
                    GROUP
                    BY      tphsod.HQ_OFFICE_CD, tphsod.SLIP_NO
                 ) tphsod
        ,        TB_MS_STORE tms
        ,        (  SELECT  tme.USER_ID, tme.EMP_NM
                    FROM    TB_MS_STORE tms
                    ,       TB_MS_EMPLOYEE tme
                    WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     tme.STORE_CD        =   tms.STORE_CD
                    UNION
                    SELECT  the.USER_ID, the.EMP_NM
                    FROM    TB_HQ_EMPLOYEE the
                    WHERE   the.HQ_OFFICE_CD    =   #{hqOfficeCd}
                 ) userInfo
        WHERE    tphso.HQ_OFFICE_CD     =       #{hqOfficeCd}
        AND      tphso.OUT_DATE         BETWEEN #{startDate} AND #{endDate}
        AND      tphsod.HQ_OFFICE_CD    =   tphso.HQ_OFFICE_CD
        AND      tphsod.SLIP_NO         =   tphso.SLIP_NO
        AND      tms.STORE_CD           =   tphso.STORE_CD
        AND      userInfo.USER_ID   (+) =   tphso.MOD_ID
        ]]>
        <if test='slipFg != null and slipFg != ""'>
            AND tphso.SLIP_FG = #{slipFg}
        </if>
        <if test='slipKind != null and slipKind != ""'>
            AND tphso.SLIP_KIND = #{slipKind}
        </if>
        <if test='procFg != null and procFg != ""'>
            AND tphso.PROC_FG = #{procFg}
        </if>
        <if test='vendrCd != null and vendrCd != ""'>
            AND tphso.VENDR_CD = #{vendrCd}
        </if>
        <if test='dlvrCd != null and dlvrCd != ""'>
            AND tphso.DLVR_CD = #{dlvrCd}
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD = #{storeCd}
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        ORDER BY tphso.SLIP_NO
    </select>

    <!-- 반품본사입고 - 전표상세 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_CM_NMCODE, TB_PO_HQ_DELIVERY_CHARGER
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 전표상세 내역을 조회한다.
    -->
    <select id="getSlipNoInfo" parameterType="rtnInstockConfmVO" resultType="DefaultMap">
        /* USE : RtnInstockConfmMapper.getSlipNoInfo */
        <![CDATA[
        SELECT  tphso.*
        ,       tms.STORE_NM
        ,       tcn.NMCODE_NM AS SLIP_KIND_NM
        ,       tphdc.DLVR_NM
        FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
        ,       TB_MS_STORE tms
        ,       TB_CM_NMCODE tcn
        ,       TB_PO_HQ_DELIVERY_CHARGER tphdc
        WHERE   tphso.HQ_OFFICE_CD      =   #{hqOfficeCd}
        AND     tphso.SLIP_NO           =   #{slipNo}
        AND     tms.STORE_CD            =   tphso.STORE_CD
        AND     tcn.NMCODE_GRP_CD   (+) =   '114'
        AND     tcn.NMCODE_CD       (+) =   tphso.SLIP_KIND
        AND     tphdc.HQ_OFFICE_CD  (+) =   tphso.HQ_OFFICE_CD
        AND     tphdc.DLVR_CD       (+) =   tphso.DLVR_CD
        ]]>
    </select>

    <!-- 반품본사입고 - 반품본사입고 DTL 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_CM_NMCODE, TB_PO_HQ_DELIVERY_CHARGER
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 반품본사입고 DTL 리스트를 조회한다.
    -->
    <select id="getRtnInstockConfmDtlList" parameterType="rtnInstockConfmVO" resultType="DefaultMap">
        /* USE : RtnInstockConfmMapper.getRtnInstockConfmDtlList */
        <!--
        SELECT   tphsod.SLIP_NO, tphsod.SLIP_FG, tphsod.PROD_CD, thp.PROD_NM, tphsod.SEQ
        ,        tphsod.PO_UNIT_FG, tphsod.PO_UNIT_QTY, thp.PO_UNIT_ALLOW_FG
        ,        DECODE(thp.VAT_FG, '1', 1, 0) AS VAT_FG01
        ,        tphsod.ORDER_SPLY_UPRC                                                               AS ORDER_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.ORDER_UNIT_QTY,0,NULL,tphsod.ORDER_UNIT_QTY*tphsod.SLIP_FG)) AS ORDER_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.ORDER_ETC_QTY ,0,NULL,tphsod.ORDER_ETC_QTY *tphsod.SLIP_FG)) AS ORDER_ETC_QTY
        ,        tphsod.ORDER_AMT *tphsod.SLIP_FG                                                     AS ORDER_AMT
        ,        tphsod.ORDER_VAT *tphsod.SLIP_FG                                                     AS ORDER_VAT
        ,        tphsod.ORDER_TOT *tphsod.SLIP_FG                                                     AS ORDER_TOT
        ,        tphsod.MGR_SPLY_UPRC                                                                 AS MGR_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.MGR_UNIT_QTY,0,NULL,tphsod.MGR_UNIT_QTY*tphsod.SLIP_FG))     AS MGR_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.MGR_ETC_QTY ,0,NULL,tphsod.MGR_ETC_QTY *tphsod.SLIP_FG))     AS MGR_ETC_QTY
        ,        tphsod.MGR_AMT *tphsod.SLIP_FG                                                       AS MGR_AMT
        ,        tphsod.MGR_VAT *tphsod.SLIP_FG                                                       AS MGR_VAT
        ,        tphsod.MGR_TOT *tphsod.SLIP_FG                                                       AS MGR_TOT
        ,        tphsod.OUT_SPLY_UPRC                                                                 AS OUT_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.OUT_UNIT_QTY,0,NULL,tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG))     AS OUT_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.OUT_ETC_QTY ,0,NULL,tphsod.OUT_ETC_QTY *tphsod.SLIP_FG))     AS OUT_ETC_QTY
        ,        TO_NUMBER(DECODE(tphsod.OUT_TOT_QTY ,0,NULL,tphsod.OUT_TOT_QTY *tphsod.SLIP_FG))     AS OUT_TOT_QTY
        ,        tphsod.OUT_AMT *tphsod.SLIP_FG                                                       AS OUT_AMT
        ,        tphsod.OUT_VAT *tphsod.SLIP_FG                                                       AS OUT_VAT
        ,        tphsod.OUT_TOT *tphsod.SLIP_FG                                                       AS OUT_TOT
        ,        tphsod.IN_SPLY_UPRC                                                                  AS IN_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.IN_UNIT_QTY ,0,NULL,tphsod.IN_UNIT_QTY*tphsod.SLIP_FG))      AS IN_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.IN_ETC_QTY  ,0,NULL,tphsod.IN_ETC_QTY *tphsod.SLIP_FG))      AS IN_ETC_QTY
        ,        tphsod.IN_AMT  *tphsod.SLIP_FG                                                       AS IN_AMT
        ,        tphsod.IN_VAT  *tphsod.SLIP_FG                                                       AS IN_VAT
        ,        tphsod.IN_TOT  *tphsod.SLIP_FG                                                       AS IN_TOT
        ,        tphsod.PENALTY_CD
        ,        tphsod.PENALTY_AMT
        ,        tphsod.REMARK
        ,        the.ENVST_VAL AS ENVST0011
        ,        thpb.BARCD_CD
        FROM     TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,        TB_HQ_PRODUCT thp
        ,        TB_HQ_PRODUCT_BARCD thpb
        ,        TB_HQ_ENVST the
        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
        AND      tphsod.SLIP_NO         =   #{slipNo}
        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
        AND      thp.PROD_CD            =   tphsod.PROD_CD
        AND      thpb.HQ_OFFICE_CD  (+) =   tphsod.HQ_OFFICE_CD
        AND      thpb.PROD_CD       (+) =   tphsod.PROD_CD
        AND      the.HQ_OFFICE_CD       =   #{hqOfficeCd}
        AND      the.ENVST_CD           =   '0011'
        ORDER
        BY       tphsod.PROD_CD, tphsod.SEQ
        -->
		SELECT  A.SLIP_NO,
		        A.SLIP_FG,
		        A.STORE_CD,
		        A.PROD_CD,
		        A.PROD_NM,
		        A.SEQ,
		        A.PO_UNIT_FG,
		        A.PO_UNIT_QTY,
		        A.PO_UNIT_ALLOW_FG,
		        A.VAT_FG01,
		        A.ORDER_SPLY_UPRC,
		        A.ORDER_UNIT_QTY,
		        A.ORDER_ETC_QTY,
		        A.ORDER_AMT,
		        A.ORDER_VAT,
		        A.ORDER_TOT,
		        A.MGR_SPLY_UPRC,
		        A.MGR_UNIT_QTY,
		        A.MGR_ETC_QTY,
		        A.MGR_AMT,
		        A.MGR_VAT,
		        A.MGR_TOT,
		        A.OUT_SPLY_UPRC,
		        A.OUT_UNIT_QTY,
		        A.OUT_ETC_QTY,
		        A.OUT_TOT_QTY,
		        A.OUT_AMT,
		        A.OUT_VAT,
		        A.OUT_TOT,
		        A.IN_SPLY_UPRC,
		        A.IN_UNIT_QTY,
		        A.IN_ETC_QTY,
		        A.IN_AMT,
		        A.IN_VAT,
		        A.IN_TOT,
		        A.REMARK,
		        A.ENVST0011,
		        A.BARCD_CD,
		        LISTAGG(                                     A.A_STORAGE_CD,                  '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_STORAGE_CD,
		        LISTAGG(                                     A.A_STORAGE_NM,                  '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_STORAGE_NM,
		        LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_UNIT_QTY    ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_UNIT_QTY,
		        LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_ETC_QTY     ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_ETC_QTY,
		        LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_TOT_QTY     ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_TOT_QTY,
		        LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_AMT         ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_AMT,
		        LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_VAT         ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_VAT,
		        LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_TOT         ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_TOT
		FROM    (
		            SELECT  A.SLIP_NO,
		                    A.SLIP_FG,
		                    A.STORE_CD,
		                    A.PROD_CD,
		                    A.PROD_NM,
		                    A.SEQ,
		                    A.PO_UNIT_FG,
		                    A.PO_UNIT_QTY,
		                    A.PO_UNIT_ALLOW_FG,
		                    A.VAT_FG01,
		                    A.ORDER_SPLY_UPRC,
		                    A.ORDER_UNIT_QTY,
		                    A.ORDER_ETC_QTY,
		                    A.ORDER_AMT,
		                    A.ORDER_VAT,
		                    A.ORDER_TOT,
		                    A.MGR_SPLY_UPRC,
		                    A.MGR_UNIT_QTY,
		                    A.MGR_ETC_QTY,
		                    A.MGR_AMT,
		                    A.MGR_VAT,
		                    A.MGR_TOT,
		                    A.OUT_SPLY_UPRC,
		                    A.OUT_UNIT_QTY,
		                    A.OUT_ETC_QTY,
		                    A.OUT_TOT_QTY,
		                    A.OUT_AMT,
		                    A.OUT_VAT,
		                    A.OUT_TOT,
		                    A.IN_SPLY_UPRC,
		                    A.IN_UNIT_QTY,
		                    A.IN_ETC_QTY,
		                    A.IN_AMT,
		                    A.IN_VAT,
		                    A.IN_TOT,
		                    A.REMARK,
		                    A.ENVST0011,
		                    A.BARCD_CD,
		                    B.PROD_CD       AS  A_PROD_CD,
		                    B.STORAGE_CD    AS  A_STORAGE_CD,
		                    B.STORAGE_NM    AS  A_STORAGE_NM,
		                    B.IN_UNIT_QTY   AS  A_IN_UNIT_QTY,
		                    B.IN_ETC_QTY    AS  A_IN_ETC_QTY,
		                    B.IN_TOT_QTY    AS  A_IN_TOT_QTY,
		                    B.IN_AMT        AS  A_IN_AMT,
		                    B.IN_VAT        AS  A_IN_VAT,
		                    B.IN_TOT        AS  A_IN_TOT
		            FROM    (
		                        SELECT  A.HQ_OFFICE_CD,
		                                A.SLIP_NO,
		                                A.SLIP_FG,
		                                A.STORE_CD,
		                                A.PROD_CD,
		                                B.PROD_NM,
		                                A.SEQ,
		                                A.PO_UNIT_FG,
		                                A.PO_UNIT_QTY,
		                                B.PO_UNIT_ALLOW_FG,
		                                DECODE(B.VAT_FG, '1', 1, 0)                                                     AS VAT_FG01,
		                                A.ORDER_SPLY_UPRC                                                               AS ORDER_SPLY_UPRC,
		                                TO_NUMBER(DECODE(A.ORDER_UNIT_QTY,  0,NULL, A.ORDER_UNIT_QTY * A.SLIP_FG))      AS ORDER_UNIT_QTY,
		                                TO_NUMBER(DECODE(A.ORDER_ETC_QTY,   0,NULL, A.ORDER_ETC_QTY  * A.SLIP_FG))      AS ORDER_ETC_QTY,
		                                A.ORDER_AMT * A.SLIP_FG                                                         AS ORDER_AMT,
		                                A.ORDER_VAT * A.SLIP_FG                                                         AS ORDER_VAT,
		                                A.ORDER_TOT * A.SLIP_FG                                                         AS ORDER_TOT,
		                                A.MGR_SPLY_UPRC                                                                 AS MGR_SPLY_UPRC,
		                                TO_NUMBER(DECODE(A.MGR_UNIT_QTY,    0,NULL, A.MGR_UNIT_QTY * A.SLIP_FG))        AS MGR_UNIT_QTY,
		                                TO_NUMBER(DECODE(A.MGR_ETC_QTY ,    0,NULL, A.MGR_ETC_QTY  * A.SLIP_FG))        AS MGR_ETC_QTY,
		                                A.MGR_AMT * A.SLIP_FG                                                           AS MGR_AMT,
		                                A.MGR_VAT * A.SLIP_FG                                                           AS MGR_VAT,
		                                A.MGR_TOT * A.SLIP_FG                                                           AS MGR_TOT,
		                                A.OUT_SPLY_UPRC                                                                 AS OUT_SPLY_UPRC,
		                                TO_NUMBER(DECODE(A.OUT_UNIT_QTY,    0,NULL, A.OUT_UNIT_QTY * A.SLIP_FG))        AS OUT_UNIT_QTY,
		                                TO_NUMBER(DECODE(A.OUT_ETC_QTY,     0,NULL, A.OUT_ETC_QTY  * A.SLIP_FG))        AS OUT_ETC_QTY,
		                                TO_NUMBER(DECODE(A.OUT_TOT_QTY,     0,NULL, A.OUT_TOT_QTY  * A.SLIP_FG))        AS OUT_TOT_QTY,
		                                A.OUT_AMT * A.SLIP_FG                                                           AS OUT_AMT,
		                                A.OUT_VAT * A.SLIP_FG                                                           AS OUT_VAT,
		                                A.OUT_TOT * A.SLIP_FG                                                           AS OUT_TOT,
		                                A.IN_SPLY_UPRC                                                                  AS IN_SPLY_UPRC,
		                                TO_NUMBER(DECODE(A.IN_UNIT_QTY,     0,NULL, A.IN_UNIT_QTY * A.SLIP_FG))         AS IN_UNIT_QTY,
		                                TO_NUMBER(DECODE(A.IN_ETC_QTY,      0,NULL, A.IN_ETC_QTY  * A.SLIP_FG))         AS IN_ETC_QTY,
		                                A.IN_AMT* A.SLIP_FG                                                             AS IN_AMT,
		                                A.IN_VAT* A.SLIP_FG                                                             AS IN_VAT,
		                                A.IN_TOT* A.SLIP_FG                                                             AS IN_TOT,
		                                A.REMARK,
		                                D.ENVST_VAL                                                                     AS ENVST0011,
		                                C.BARCD_CD
		                        FROM    TB_PO_HQ_STORE_OUTSTOCK_DTL    A,
		                                TB_HQ_PRODUCT                  B,
		                                TB_HQ_PRODUCT_BARCD            C,
		                                TB_HQ_ENVST                    D
		                        WHERE   A.HQ_OFFICE_CD         = #{hqOfficeCd}
		                        AND     A.SLIP_NO              = #{slipNo}
		                        AND     B.HQ_OFFICE_CD         = A.HQ_OFFICE_CD
		                        AND     B.PROD_CD              = A.PROD_CD
		                        AND     C.HQ_OFFICE_CD     (+) = A.HQ_OFFICE_CD
		                        AND     C.PROD_CD          (+) = A.PROD_CD
		                        AND     D.HQ_OFFICE_CD         = #{hqOfficeCd}
		                        AND     D.ENVST_CD             = '0011'			<!-- 출고가-부가세포함여부 -->
		                    )   A
		                    LEFT OUTER JOIN
		                    (
		                        SELECT  X.STORAGE_CD,
		                                X.STORAGE_NM,
		                                --Y.HQ_OFFICE_CD,
		                                #{hqOfficeCd}			AS HQ_OFFICE_CD,
		                                #{slipNo}				AS SLIP_NO,
		                                Y.PROD_CD,
		                                --Y.STORAGE_CD,
		                                NVL(Y.IN_UNIT_QTY,  0)  AS IN_UNIT_QTY,
		                                NVL(Y.IN_ETC_QTY,   0)  AS IN_ETC_QTY,
		                                NVL(Y.IN_TOT_QTY,   0)  AS IN_TOT_QTY,
		                                NVL(Y.IN_AMT,       0)  AS IN_AMT,
		                                NVL(Y.IN_VAT,       0)  AS IN_VAT,
		                                NVL(Y.IN_TOT,       0)  AS IN_TOT
		                        FROM            TB_HQ_STORAGE                   X
		                        LEFT OUTER JOIN TB_PO_HQ_STORE_OUTSTOCK_PROD    Y
		                        ON              X.HQ_OFFICE_CD  = Y.HQ_OFFICE_CD
		                        AND             X.STORAGE_CD    = Y.STORAGE_CD
		                        AND             Y.HQ_OFFICE_CD  = #{hqOfficeCd}
		                        AND             Y.SLIP_NO       = #{slipNo}
		                        AND             Y.SLIP_FG       = '-1'
		                        AND             Y.OCCR_FG = '02'
		                        WHERE     X.USE_YN    = 'Y'
		                    )   B
		                    ON      A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
		                    AND     A.SLIP_NO       = B.SLIP_NO
		                <!--AND     A.PROD_CD       = B.PROD_CD-->
		                    AND     A.PROD_CD       = (CASE NVL(B.PROD_CD,'X') WHEN 'X' THEN A.PROD_CD ELSE B.PROD_CD END)
		        ) A
		GROUP BY
		            A.SLIP_NO,
		            A.SLIP_FG,
		            A.STORE_CD,
		            A.PROD_CD,
		            A.PROD_NM,
		            A.SEQ,
		            A.PO_UNIT_FG,
		            A.PO_UNIT_QTY,
		            A.PO_UNIT_ALLOW_FG,
		            A.VAT_FG01,
		            A.ORDER_SPLY_UPRC,
		            A.ORDER_UNIT_QTY,
		            A.ORDER_ETC_QTY,
		            A.ORDER_AMT,
		            A.ORDER_VAT,
		            A.ORDER_TOT,
		            A.MGR_SPLY_UPRC,
		            A.MGR_UNIT_QTY,
		            A.MGR_ETC_QTY,
		            A.MGR_AMT,
		            A.MGR_VAT,
		            A.MGR_TOT,
		            A.OUT_SPLY_UPRC,
		            A.OUT_UNIT_QTY,
		            A.OUT_ETC_QTY,
		            A.OUT_TOT_QTY,
		            A.OUT_AMT,
		            A.OUT_VAT,
		            A.OUT_TOT,
		            A.IN_SPLY_UPRC,
		            A.IN_UNIT_QTY,
		            A.IN_ETC_QTY,
		            A.IN_AMT,
		            A.IN_VAT,
		            A.IN_TOT,
		            A.REMARK,
		            A.ENVST0011,
		            A.BARCD_CD
		ORDER BY    A.PROD_CD
    </select>

    <!-- 반품본사입고 - 반품본사입고 상세 리스트 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 반품본사입고 상세 리스트 DTL을 수정한다.
    -->
    <update id="updateRtnInstockConfmDtl" parameterType="rtnInstockConfmVO">
        /* USE : RtnInstockConfmMapper.updateRtnInstockConfmDtl */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     IN_SPLY_UPRC    = #{inSplyUprc},
                IN_UNIT_QTY     = #{inUnitQty},
                IN_ETC_QTY      = #{inEtcQty},
                IN_TOT_QTY      = #{inTotQty},
                IN_AMT          = #{inAmt},
                IN_VAT          = #{inVat},
                IN_TOT          = #{inTot},
                PENALTY_CD      = #{penaltyCd},
                PENALTY_AMT     = #{penaltyAmt},
                REMARK          = #{remark},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     SEQ           = #{seq}
    </update>

    <!-- 반품본사입고 - 반품본사입고 상세 리스트 HD 수정-->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 반품본사입고 상세 리스트 HD의 집계를 수정한다.
    -->
    <update id="updateRtnInstockConfmHd" parameterType="rtnInstockConfmVO">
        /* USE : RtnInstockConfmMapper.updateRtnInstockConfmHd */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     (   IN_UNIT_QTY, IN_ETC_QTY, IN_TOT_QTY, IN_AMT, IN_VAT, IN_TOT)
            =   (   SELECT  SUM(IN_UNIT_QTY), SUM(IN_ETC_QTY), SUM(IN_TOT_QTY), SUM(IN_AMT), SUM(IN_VAT), SUM(IN_TOT)
                    FROM    TB_PO_HQ_STORE_OUTSTOCK_DTL
                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     SLIP_NO         =   #{slipNo}
                ),
                PENALTY_FG  = #{penaltyFg},
                REMARK      = #{hdRemark},
                MOD_DT      = #{modDt},
                MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>

    <!-- 반품본사입고 - 반품본사입고시 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 반품본사입고시 DTL의 진행구분을 수정한다.
    -->
    <update id="updateInstockDtlConfirm" parameterType="rtnInstockConfmVO">
        /* USE : RtnInstockConfmMapper.updateInstockConfirm */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     PROC_FG         = #{updateProcFg},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 반품본사입고 - 반품본사입고시 HD 수정-->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : rtnInstockConfmVO
        COMMENTS : 반품본사입고 - 반품본사입고시 HD의 진행구분을 수정한다.
    -->
    <update id="updateInstockConfirm" parameterType="rtnInstockConfmVO">
        /* USE : RtnInstockConfmMapper.updateInstockConfirm */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     PROC_FG         = #{updateProcFg},
                IN_DATE         = #{inDate},
                IN_DT           = #{modDt},
                IN_ID           = #{modId},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>
    
    <!-- 창고별 입고상품 저장  ( TB_PO_HQ_STORE_OUTSTOCK_PROD - [본사_수불] 출고전표_매장출고내역_상품 )

	        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_PROD
	        PARAM    : instockConfmProdVO
	        COMMENTS : 입고확정(또는 저장)시, 창고별 입고상품 정보를 저장한다.
    -->
	<update id="mergeInstockConfmProd" parameterType="rtnInstockConfmVO">
	    MERGE INTO TB_PO_HQ_STORE_OUTSTOCK_PROD	A
	    USING DUAL ON           (
	                                        A.HQ_OFFICE_CD	= #{hqOfficeCd}
	                                    AND A.SLIP_NO		= #{slipNo}
	                                    AND A.PROD_CD  		= #{prodCd}
	                                    AND A.STORAGE_CD  	= #{storageCd}
	                                    AND A.OCCR_FG		= #{occrFg}
	                            )
	    WHEN     MATCHED THEN   UPDATE	SET	A.CONFM_YN      = #{confmYn},
	    									A.IN_UNIT_QTY	= #{inUnitQty},
											A.IN_ETC_QTY	= #{inEtcQty},
											A.IN_TOT_QTY	= #{inTotQty},
											A.IN_AMT		= #{inAmt},
											A.IN_VAT		= #{inVat},
											A.IN_TOT		= #{inTot},
	                                        A.MOD_DT    	= #{modDt},
	                                        A.MOD_ID    	= #{modId}
	    WHEN NOT MATCHED THEN   INSERT  (
											A.HQ_OFFICE_CD,
											A.SLIP_NO,
											A.PROD_CD,
											A.STORAGE_CD,
											A.OCCR_FG,
											A.STORE_CD,
											A.SLIP_FG,
											A.CONFM_YN,
											A.IN_UNIT_QTY,
											A.IN_ETC_QTY,
											A.IN_TOT_QTY,
											A.IN_AMT,
											A.IN_VAT,
											A.IN_TOT,
											A.REG_DT,
											A.REG_ID,
											A.MOD_DT,
											A.MOD_ID
	                                    )
	                            VALUES  (
	                                        #{hqOfficeCd},
											#{slipNo},
											#{prodCd},
											#{storageCd},
											#{occrFg},		<!-- 발생구분(30:매장입고) -->
											#{storeCd},
											#{slipFg},
											#{confmYn},
											#{inUnitQty},
											#{inEtcQty},
											#{inTotQty},
											#{inAmt},
											#{inVat},
											#{inTot},
	                                        #{regDt},
	                                        #{regId},
	                                        #{modDt},
	                                        #{modId}
	                                    )
	</update>
</mapper>
