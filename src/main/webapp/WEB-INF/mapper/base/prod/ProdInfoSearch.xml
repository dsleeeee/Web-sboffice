<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    ProdInfoSearch.xml
    옵션관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       권지현     2022.12.23     최초작성
-->
<mapper namespace="kr.co.solbipos.base.prod.prodInfoSearch.service.impl.ProdInfoSearchMapper">

    <!-- 상품정보 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SDATTR_CLASS, TB_HQ_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_OPTION_GROUP, TB_MS_PRODUCT, TB_MS_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_OPTION_GROUP
        PARAM    : prodInfoSearchVO
        COMMENTS : 상품정보 목록을 조회한다.
    -->
    <select id="getProdInfo2List" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getProdInfo2List */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  thp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,		thp.PROD_TYPE_FG 	-- 008
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,		thp.PROD_NM
                ,		thpsp2.SALE_UPRC
                ,		thp.PRC_CTRL_FG		-- 045
                ,		thp.USE_YN
                ,		thp.SIDE_PROD_YN
                ,		thp.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		thp.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thp.GROUP_PROD_CD
                ,		thp2.PROD_NM AS GROUP_PROD_NM
                ,		thp2.REMARK AS GROUP_PROD_REMARK
                ,		thp.DEPOSIT_PROD_CD
                ,		thp3.PROD_NM AS DEPOSIT_PROD_NM
                ,		thpi.NU_TOT_WT
                ,		thpi.NU_KCAL
                ,		thpi.NU_PROTEIN
                ,		thpi.NU_SODIUM
                ,		thpi.NU_SUGARS
                ,		thpi.NU_SAT_FAT
                ,		thpi.NU_CAFFEINE
                ,		thpi.MOMS_KIOSK_EDGE
                ,		thp.RELEASE_DATE
                ,		thp.DISCON_YN
                ,		thp.DISCON_DATE
                ,		thpi.SALE_TYPE_YN_SIN
                ,		thpi.SALE_TYPE_YN_DLV
                ,		thpi.SALE_TYPE_YN_PKG
                ,		thpi.SALE_CHN_YN_POS
                ,		thpi.SALE_CHN_YN_KSK
                ,		thpi.SALE_CHN_YN_CMP
                ,		thpi.SALE_CHN_YN_BAE
                ,		thpi.SALE_CHN_YN_BAO
                ,		thpi.SALE_CHN_YN_YGY
                ,		thpi.SALE_CHN_YN_YGE
                ,		thpi.SALE_CHN_YN_CPN
                ,		thpi.SALE_CHN_YN_TNG
                ,		thpi.SALE_CHN_YN_DDN
                ,		thp.REMARK
                ,		thpi.PROD_INFO
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_HQ_PRODUCT thp
                ,       TB_HQ_PRODUCT_CLASS_V02 thpcv	-- 분류정보
                -- 가격
                ,		(
                        SELECT  HQ_OFFICE_CD,
                                PROD_CD,
                                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                        FROM TB_HQ_PRODUCT_SALE_PRICE
                        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                        <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        ]]>
                        AND SALE_PRC_FG = '1'
                        GROUP BY
                        HQ_OFFICE_CD, PROD_CD
                        ) thpsp2
                -- 가격
                ,		TB_HQ_PRODUCT_INFO thpi				-- 상품정보
                ,		TB_HQ_PRODUCT_SDSEL_GROUP thpsg		-- 선택메뉴
                ,		TB_HQ_PRODUCT_OPTION_GROUP thpog	-- 옵션
                ,		TB_HQ_PRODUCT thp2	-- 단품/세트
                ,		TB_HQ_PRODUCT thp3					-- 보증금상품
                WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thp.HQ_OFFICE_CD = thpcv.HQ_OFFICE_CD
                AND 	thp.PROD_CD = thpcv.PROD_CD
                AND 	thp.HQ_OFFICE_CD = thpsp2.HQ_OFFICE_CD
                AND 	thp.PROD_CD = thpsp2.PROD_CD
                AND 	thp.HQ_OFFICE_CD = thpi.HQ_OFFICE_CD (+)
                AND 	thp.PROD_CD = thpi.PROD_CD (+)
                -- 선택메뉴
                AND 	thp.HQ_OFFICE_CD = thpsg.HQ_OFFICE_CD (+)
                AND 	thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD (+)
                -- 옵션
                AND 	thp.HQ_OFFICE_CD = thpog.HQ_OFFICE_CD (+)
                AND 	thp.OPTION_GRP_CD = thpog.OPTION_GRP_CD (+)
                -- 단품/세트
                AND 	thp.HQ_OFFICE_CD = thp2.HQ_OFFICE_CD (+)
                AND 	thp.GROUP_PROD_CD = thp2.PROD_CD (+)
                -- 보증금상품
                AND 	thp.HQ_OFFICE_CD = thp3.HQ_OFFICE_CD (+)
                AND 	thp.DEPOSIT_PROD_CD = thp3.PROD_CD (+)
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM TB_HQ_PRODUCT_CLASS
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  thp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,		thp.PROD_TYPE_FG 	-- 008
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,		thp.PROD_NM
                ,		thpsp2.SALE_UPRC
                ,		thp.PRC_CTRL_FG		-- 045
                ,		thp.USE_YN
                ,		thp.SIDE_PROD_YN
                ,		thp.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		thp.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thp.GROUP_PROD_CD
                ,		thp2.PROD_NM AS GROUP_PROD_NM
                ,		thp2.REMARK AS GROUP_PROD_REMARK
                ,		thp.DEPOSIT_PROD_CD
                ,		thp3.PROD_NM AS DEPOSIT_PROD_NM
                ,		thpi.NU_TOT_WT
                ,		thpi.NU_KCAL
                ,		thpi.NU_PROTEIN
                ,		thpi.NU_SODIUM
                ,		thpi.NU_SUGARS
                ,		thpi.NU_SAT_FAT
                ,		thpi.NU_CAFFEINE
                ,		thpi.MOMS_KIOSK_EDGE
                ,		thp.RELEASE_DATE
                ,		thp.DISCON_YN
                ,		thp.DISCON_DATE
                ,		thpi.SALE_TYPE_YN_SIN
                ,		thpi.SALE_TYPE_YN_DLV
                ,		thpi.SALE_TYPE_YN_PKG
                ,		thpi.SALE_CHN_YN_POS
                ,		thpi.SALE_CHN_YN_KSK
                ,		thpi.SALE_CHN_YN_CMP
                ,		thpi.SALE_CHN_YN_BAE
                ,		thpi.SALE_CHN_YN_BAO
                ,		thpi.SALE_CHN_YN_YGY
                ,		thpi.SALE_CHN_YN_YGE
                ,		thpi.SALE_CHN_YN_CPN
                ,		thpi.SALE_CHN_YN_TNG
                ,		thpi.SALE_CHN_YN_DDN
                ,		thp.REMARK
                ,		thpi.PROD_INFO
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_MS_PRODUCT thp
                ,       TB_MS_PRODUCT_CLASS_V02 thpcv	-- 분류정보
                -- 가격
                ,		(
                SELECT
                STORE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE STORE_CD = #{storeCd}
                <![CDATA[
                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                  ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                STORE_CD, PROD_CD
                ) thpsp2
                -- 가격
                ,		TB_MS_PRODUCT_INFO thpi				-- 상품정보
                ,		TB_MS_PRODUCT_SDSEL_GROUP thpsg		-- 선택메뉴
                ,		TB_MS_PRODUCT_OPTION_GROUP thpog	-- 옵션
                ,		TB_MS_PRODUCT thp2	-- 단품/세트
                ,		TB_MS_PRODUCT thp3					-- 보증금상품
                WHERE 	thp.STORE_CD = #{storeCd}
                AND 	thp.STORE_CD = thpcv.STORE_CD
                AND 	thp.PROD_CD = thpcv.PROD_CD
                AND 	thp.STORE_CD = thpsp2.STORE_CD
                AND 	thp.PROD_CD = thpsp2.PROD_CD
                AND 	thp.STORE_CD = thpi.STORE_CD (+)
                AND 	thp.PROD_CD = thpi.PROD_CD (+)
                -- 선택메뉴
                AND 	thp.STORE_CD = thpsg.STORE_CD (+)
                AND 	thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD (+)
                -- 옵션
                AND 	thp.STORE_CD = thpog.STORE_CD (+)
                AND 	thp.OPTION_GRP_CD = thpog.OPTION_GRP_CD (+)
                -- 단품/세트
                AND 	thp.STORE_CD = thp2.STORE_CD (+)
                AND 	thp.GROUP_PROD_CD = thp2.PROD_CD (+)
                -- 보증금상품
                AND 	thp.STORE_CD = thp3.STORE_CD (+)
                AND 	thp.DEPOSIT_PROD_CD = thp3.PROD_CD (+)
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY thp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 상품정보 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SDATTR_CLASS, TB_HQ_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_OPTION_GROUP, TB_MS_PRODUCT, TB_MS_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_OPTION_GROUP
        PARAM    : prodInfoSearchVO
        COMMENTS : 상품정보목록을 조회한다.
    -->
    <select id="getProdInfo2ExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getProdInfo2ExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  thp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,		thp.PROD_TYPE_FG 	-- 008
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,		thp.PROD_NM
                ,		thpsp2.SALE_UPRC
                ,		thp.PRC_CTRL_FG		-- 045
                ,		thp.USE_YN
                ,		thp.SIDE_PROD_YN
                ,		thp.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		thp.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thp.GROUP_PROD_CD
                ,		thp2.PROD_NM AS GROUP_PROD_NM
                ,		thp2.REMARK AS GROUP_PROD_REMARK
                ,		thp.DEPOSIT_PROD_CD
                ,		thp3.PROD_NM AS DEPOSIT_PROD_NM
                ,		thpi.NU_TOT_WT
                ,		thpi.NU_KCAL
                ,		thpi.NU_PROTEIN
                ,		thpi.NU_SODIUM
                ,		thpi.NU_SUGARS
                ,		thpi.NU_SAT_FAT
                ,		thpi.NU_CAFFEINE
                ,		thpi.MOMS_KIOSK_EDGE
                ,		thp.RELEASE_DATE
                ,		thp.DISCON_YN
                ,		thp.DISCON_DATE
                ,		thpi.SALE_TYPE_YN_SIN
                ,		thpi.SALE_TYPE_YN_DLV
                ,		thpi.SALE_TYPE_YN_PKG
                ,		thpi.SALE_CHN_YN_POS
                ,		thpi.SALE_CHN_YN_KSK
                ,		thpi.SALE_CHN_YN_CMP
                ,		thpi.SALE_CHN_YN_BAE
                ,		thpi.SALE_CHN_YN_BAO
                ,		thpi.SALE_CHN_YN_YGY
                ,		thpi.SALE_CHN_YN_YGE
                ,		thpi.SALE_CHN_YN_CPN
                ,		thpi.SALE_CHN_YN_TNG
                ,		thpi.SALE_CHN_YN_DDN
                ,		thp.REMARK
                ,		thpi.PROD_INFO
                FROM 	TB_HQ_PRODUCT thp
                ,       TB_HQ_PRODUCT_CLASS_V02 thpcv	-- 분류정보
                -- 가격
                ,		(
                SELECT
                HQ_OFFICE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_HQ_PRODUCT_SALE_PRICE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                <![CDATA[
                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                  ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                HQ_OFFICE_CD, PROD_CD
                ) thpsp2
                -- 가격
                ,		TB_HQ_PRODUCT_INFO thpi				-- 상품정보
                ,		TB_HQ_PRODUCT_SDSEL_GROUP thpsg		-- 선택메뉴
                ,		TB_HQ_PRODUCT_OPTION_GROUP thpog	-- 옵션
                ,		TB_HQ_PRODUCT thp2	                -- 단품/세트
                ,		TB_HQ_PRODUCT thp3					-- 보증금상품
                WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thp.HQ_OFFICE_CD = thpcv.HQ_OFFICE_CD
                AND 	thp.PROD_CD = thpcv.PROD_CD
                AND 	thp.HQ_OFFICE_CD = thpsp2.HQ_OFFICE_CD
                AND 	thp.PROD_CD = thpsp2.PROD_CD
                AND 	thp.HQ_OFFICE_CD = thpi.HQ_OFFICE_CD (+)
                AND 	thp.PROD_CD = thpi.PROD_CD (+)
                -- 선택메뉴
                AND 	thp.HQ_OFFICE_CD = thpsg.HQ_OFFICE_CD (+)
                AND 	thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD (+)
                -- 옵션
                AND 	thp.HQ_OFFICE_CD = thpog.HQ_OFFICE_CD (+)
                AND 	thp.OPTION_GRP_CD = thpog.OPTION_GRP_CD (+)
                -- 단품/세트
                AND 	thp.HQ_OFFICE_CD = thp2.HQ_OFFICE_CD (+)
                AND 	thp.GROUP_PROD_CD = thp2.PROD_CD (+)
                -- 보증금상품
                AND 	thp.HQ_OFFICE_CD = thp3.HQ_OFFICE_CD (+)
                AND 	thp.DEPOSIT_PROD_CD = thp3.PROD_CD (+)
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM TB_HQ_PRODUCT_CLASS
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thp.PROD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  thp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,		thp.PROD_TYPE_FG 	-- 008
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,		thp.PROD_NM
                ,		thpsp2.SALE_UPRC
                ,		thp.PRC_CTRL_FG		-- 045
                ,		thp.USE_YN
                ,		thp.SIDE_PROD_YN
                ,		thp.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		thp.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thp.GROUP_PROD_CD
                ,		thp2.PROD_NM AS GROUP_PROD_NM
                ,		thp2.REMARK AS GROUP_PROD_REMARK
                ,		thp.DEPOSIT_PROD_CD
                ,		thp3.PROD_NM AS DEPOSIT_PROD_NM
                ,		thpi.NU_TOT_WT
                ,		thpi.NU_KCAL
                ,		thpi.NU_PROTEIN
                ,		thpi.NU_SODIUM
                ,		thpi.NU_SUGARS
                ,		thpi.NU_SAT_FAT
                ,		thpi.NU_CAFFEINE
                ,		thpi.MOMS_KIOSK_EDGE
                ,		thp.RELEASE_DATE
                ,		thp.DISCON_YN
                ,		thp.DISCON_DATE
                ,		thpi.SALE_TYPE_YN_SIN
                ,		thpi.SALE_TYPE_YN_DLV
                ,		thpi.SALE_TYPE_YN_PKG
                ,		thpi.SALE_CHN_YN_POS
                ,		thpi.SALE_CHN_YN_KSK
                ,		thpi.SALE_CHN_YN_CMP
                ,		thpi.SALE_CHN_YN_BAE
                ,		thpi.SALE_CHN_YN_BAO
                ,		thpi.SALE_CHN_YN_YGY
                ,		thpi.SALE_CHN_YN_YGE
                ,		thpi.SALE_CHN_YN_CPN
                ,		thpi.SALE_CHN_YN_TNG
                ,		thpi.SALE_CHN_YN_DDN
                ,		thp.REMARK
                ,		thpi.PROD_INFO
                FROM 	TB_MS_PRODUCT thp
                ,       TB_MS_PRODUCT_CLASS_V02 thpcv	-- 분류정보
                -- 가격
                ,		(
                SELECT
                STORE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE STORE_CD = #{storeCd}
                <![CDATA[
                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                  ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                STORE_CD, PROD_CD
                ) thpsp2
                -- 가격
                ,		TB_MS_PRODUCT_INFO thpi				-- 상품정보
                ,		TB_MS_PRODUCT_SDSEL_GROUP thpsg		-- 선택메뉴
                ,		TB_MS_PRODUCT_OPTION_GROUP thpog	-- 옵션
                ,		TB_MS_PRODUCT thp2	-- 단품/세트
                ,		TB_MS_PRODUCT thp3					-- 보증금상품
                WHERE 	thp.STORE_CD = #{storeCd}
                AND 	thp.STORE_CD = thpcv.STORE_CD
                AND 	thp.PROD_CD = thpcv.PROD_CD
                AND 	thp.STORE_CD = thpsp2.STORE_CD
                AND 	thp.PROD_CD = thpsp2.PROD_CD
                AND 	thp.STORE_CD = thpi.STORE_CD (+)
                AND 	thp.PROD_CD = thpi.PROD_CD (+)
                -- 선택메뉴
                AND 	thp.STORE_CD = thpsg.STORE_CD (+)
                AND 	thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD (+)
                -- 옵션
                AND 	thp.STORE_CD = thpog.STORE_CD (+)
                AND 	thp.OPTION_GRP_CD = thpog.OPTION_GRP_CD (+)
                -- 단품/세트
                AND 	thp.STORE_CD = thp2.STORE_CD (+)
                AND 	thp.GROUP_PROD_CD = thp2.PROD_CD (+)
                -- 보증금상품
                AND 	thp.STORE_CD = thp3.STORE_CD (+)
                AND 	thp.DEPOSIT_PROD_CD = thp3.PROD_CD (+)
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY thp.PROD_CD
            </when>
        </choose>
    </select>

    <!-- 상품분류조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_CLASS, TB_MS_PRODUCT_CLASS
        PARAM    : prodInfoSearchVO
        COMMENTS : 상품분류 목록을 조회한다.
    -->
    <select id="getProdClassList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getProdClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	L.PROD_CLASS_L_CD
                ,		L.PROD_CLASS_L_NM
                ,		M.PROD_CLASS_M_CD
                ,		M.PROD_CLASS_M_NM
                ,		S.PROD_CLASS_S_CD
                ,		S.PROD_CLASS_S_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM	(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_L_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_L_NM
                        FROM 	TB_HQ_PRODUCT_CLASS 
                        WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	CLS_LEVEL_CD = '1'
                        ) L
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_M_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_M_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_L_CD
                        FROM 	TB_HQ_PRODUCT_CLASS 
                        WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	CLS_LEVEL_CD = '2'
                        ) M
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_S_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_S_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_M_CD
                        FROM 	TB_HQ_PRODUCT_CLASS 
                        WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	CLS_LEVEL_CD = '3'
                        ) S
                WHERE 	L.PROD_CLASS_L_CD = M.PROD_CLASS_L_CD(+)
                AND 	M.PROD_CLASS_M_CD = S.PROD_CLASS_M_CD(+)
                ORDER BY L.PROD_CLASS_L_CD, M.PROD_CLASS_M_CD, S.PROD_CLASS_S_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	L.PROD_CLASS_L_CD
                ,		L.PROD_CLASS_L_NM
                ,		M.PROD_CLASS_M_CD
                ,		M.PROD_CLASS_M_NM
                ,		S.PROD_CLASS_S_CD
                ,		S.PROD_CLASS_S_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM	(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_L_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_L_NM
                        FROM 	TB_MS_PRODUCT_CLASS
                        WHERE 	STORE_CD = #{storeCd}
                        AND 	CLS_LEVEL_CD = '1'
                        ) L
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_M_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_M_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_L_CD
                        FROM 	TB_MS_PRODUCT_CLASS
                        WHERE 	STORE_CD = #{storeCd}
                        AND 	CLS_LEVEL_CD = '2'
                        ) M
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_S_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_S_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_M_CD
                        FROM 	TB_MS_PRODUCT_CLASS
                        WHERE 	STORE_CD = #{storeCd}
                        AND 	CLS_LEVEL_CD = '3'
                        ) S
                WHERE 	L.PROD_CLASS_L_CD = M.PROD_CLASS_L_CD(+)
                AND 	M.PROD_CLASS_M_CD = S.PROD_CLASS_M_CD(+)
                ORDER BY L.PROD_CLASS_L_CD, M.PROD_CLASS_M_CD, S.PROD_CLASS_S_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 상품분류엑셀조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_CLASS, TB_MS_PRODUCT_CLASS
        PARAM    : prodInfoSearchVO
        COMMENTS : 상품분류 목록을 조회한다.
    -->
    <select id="getProdClassExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getProdClassExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	L.PROD_CLASS_L_CD
                ,		L.PROD_CLASS_L_NM
                ,		M.PROD_CLASS_M_CD
                ,		M.PROD_CLASS_M_NM
                ,		S.PROD_CLASS_S_CD
                ,		S.PROD_CLASS_S_NM
                FROM	(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_L_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_L_NM
                        FROM 	TB_HQ_PRODUCT_CLASS
                        WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	CLS_LEVEL_CD = '1'
                        ) L
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_M_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_M_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_L_CD
                        FROM 	TB_HQ_PRODUCT_CLASS
                        WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	CLS_LEVEL_CD = '2'
                        ) M
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_S_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_S_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_M_CD
                        FROM 	TB_HQ_PRODUCT_CLASS
                        WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	CLS_LEVEL_CD = '3'
                        ) S
                WHERE 	L.PROD_CLASS_L_CD = M.PROD_CLASS_L_CD(+)
                AND 	M.PROD_CLASS_M_CD = S.PROD_CLASS_M_CD(+)
                ORDER BY L.PROD_CLASS_L_CD, M.PROD_CLASS_M_CD, S.PROD_CLASS_S_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	L.PROD_CLASS_L_CD
                ,		L.PROD_CLASS_L_NM
                ,		M.PROD_CLASS_M_CD
                ,		M.PROD_CLASS_M_NM
                ,		S.PROD_CLASS_S_CD
                ,		S.PROD_CLASS_S_NM
                FROM	(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_L_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_L_NM
                        FROM 	TB_MS_PRODUCT_CLASS
                        WHERE 	STORE_CD = #{storeCd}
                        AND 	CLS_LEVEL_CD = '1'
                        ) L
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_M_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_M_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_L_CD
                        FROM 	TB_MS_PRODUCT_CLASS
                        WHERE 	STORE_CD = #{storeCd}
                        AND 	CLS_LEVEL_CD = '2'
                        ) M
                ,		(
                        SELECT 	PROD_CLASS_CD AS PROD_CLASS_S_CD
                        ,		PROD_CLASS_NM AS PROD_CLASS_S_NM
                        ,		P_PROD_CLASS_CD AS PROD_CLASS_M_CD
                        FROM 	TB_MS_PRODUCT_CLASS
                        WHERE 	STORE_CD = #{storeCd}
                        AND 	CLS_LEVEL_CD = '3'
                        ) S
                WHERE 	L.PROD_CLASS_L_CD = M.PROD_CLASS_L_CD(+)
                AND 	M.PROD_CLASS_M_CD = S.PROD_CLASS_M_CD(+)
                ORDER BY L.PROD_CLASS_L_CD, M.PROD_CLASS_M_CD, S.PROD_CLASS_S_CD
            </when>
        </choose>
    </select>

    <!-- 사이드-속성조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_CLASS
        PARAM    : prodInfoSearchVO
        COMMENTS : 사이드-속성 목록을 조회한다.
    -->
    <select id="getSideAttrList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getSideAttrList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT	thpsc.SDATTR_CLASS_CD
                ,		thpsc.SDATTR_CLASS_NM
                ,		thps.SDATTR_CD
                ,		thps.SDATTR_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_HQ_PRODUCT_SDATTR_CLASS thpsc
                ,		TB_HQ_PRODUCT_SDATTR thps
                WHERE 	thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thpsc.HQ_OFFICE_CD = thps.HQ_OFFICE_CD (+)
                AND		thpsc.SDATTR_CLASS_CD = thps.SDATTR_CLASS_CD (+)
                ORDER BY thpsc.SDATTR_CLASS_CD, thps.DISP_SEQ
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT	tmpsc.SDATTR_CLASS_CD
                ,		tmpsc.SDATTR_CLASS_NM
                ,		tmps.SDATTR_CD
                ,		tmps.SDATTR_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_MS_PRODUCT_SDATTR_CLASS tmpsc
                ,		TB_MS_PRODUCT_SDATTR tmps
                WHERE 	tmpsc.STORE_CD = #{storeCd}
                AND 	tmpsc.STORE_CD = tmps.STORE_CD (+)
                AND		tmpsc.SDATTR_CLASS_CD = tmps.SDATTR_CLASS_CD (+)
                ORDER BY tmpsc.SDATTR_CLASS_CD, tmps.DISP_SEQ
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 사이드-속성 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_CLASS
        PARAM    : prodInfoSearchVO
        COMMENTS : 사이드-속성 목록을 조회한다.
    -->
    <select id="getSideAttrExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getSideAttrExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT	thpsc.SDATTR_CLASS_CD
                ,		thpsc.SDATTR_CLASS_NM
                ,		thps.SDATTR_CD
                ,		thps.SDATTR_NM
                FROM 	TB_HQ_PRODUCT_SDATTR_CLASS thpsc
                ,		TB_HQ_PRODUCT_SDATTR thps
                WHERE 	thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thpsc.HQ_OFFICE_CD = thps.HQ_OFFICE_CD (+)
                AND		thpsc.SDATTR_CLASS_CD = thps.SDATTR_CLASS_CD (+)
                ORDER BY thpsc.SDATTR_CLASS_CD, thps.DISP_SEQ
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT	tmpsc.SDATTR_CLASS_CD
                ,		tmpsc.SDATTR_CLASS_NM
                ,		tmps.SDATTR_CD
                ,		tmps.SDATTR_NM
                FROM 	TB_MS_PRODUCT_SDATTR_CLASS tmpsc
                ,		TB_MS_PRODUCT_SDATTR tmps
                WHERE 	tmpsc.STORE_CD = #{storeCd}
                AND 	tmpsc.STORE_CD = tmps.STORE_CD (+)
                AND		tmpsc.SDATTR_CLASS_CD = tmps.SDATTR_CLASS_CD (+)
                ORDER BY tmpsc.SDATTR_CLASS_CD, tmps.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 사이드-선택메뉴 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_SDSEL_CLASS, TB_HQ_PRODUCT_SDSEL_PROD, TB_HQ_PRODUCT, TB_MS_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 사이드-선택메뉴 목록을 조회한다.
    -->
    <select id="getSideMenuList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getSideMenuList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	thpsg.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		DECODE(thpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                ,		DECODE(thpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                ,		thpsc.SDSEL_CLASS_CD
                ,		thpsc.SDSEL_CLASS_NM
                ,		thpsc.SDSEL_QTY
                ,		DECODE(thpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                ,		thpsp.PROD_CD
                ,		thp.PROD_NM
                ,       thpsp.ADD_PROD_UPRC
                ,       thpsp.ADD_PROD_QTY
                ,       DECODE(thpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                ,       DECODE(NVL(thpsp.REG_STORE_FG, '0'), '0', '미사용', '1', '제외매장', '2', '허용매장') AS REG_STORE_FG
                ,       DECODE(NVL(thpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                ,       thp.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                ,		TB_HQ_PRODUCT_SDSEL_CLASS thpsc
                ,		TB_HQ_PRODUCT_SDSEL_PROD thpsp
                ,		TB_HQ_PRODUCT thp
                WHERE 	thpsg.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thpsg.USE_YN = 'Y'
                AND     thpsc.USE_YN = 'Y'
                AND     thpsp.USE_YN = 'Y'
                AND 	thpsg.HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD (+)
                AND 	thpsg.SDSEL_GRP_CD = thpsc.SDSEL_GRP_CD (+)
                AND 	thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD (+)
                AND 	thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD (+)
                AND 	thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD (+)
                AND 	thpsp.PROD_CD = thp.PROD_CD (+)
                ORDER BY thpsg.SDSEL_GRP_CD, thpsc.DISP_SEQ, thpsp.DISP_SEQ
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	tmpsg.SDSEL_GRP_CD
                ,		tmpsg.SDSEL_GRP_NM
                ,		DECODE(tmpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                ,		DECODE(tmpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                ,		tmpsc.SDSEL_CLASS_CD
                ,		tmpsc.SDSEL_CLASS_NM
                ,		tmpsc.SDSEL_QTY
                ,		DECODE(tmpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                ,		tmpsp.PROD_CD
                ,		tmp.PROD_NM
                ,       tmpsp.ADD_PROD_UPRC
                ,       tmpsp.ADD_PROD_QTY
                ,       DECODE(tmpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                ,       DECODE(NVL(tmpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                ,       tmp.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                ,		TB_MS_PRODUCT_SDSEL_CLASS tmpsc
                ,		TB_MS_PRODUCT_SDSEL_PROD tmpsp
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmpsg.STORE_CD = #{storeCd}
                AND     tmpsg.USE_YN = 'Y'
                AND     tmpsc.USE_YN = 'Y'
                AND     tmpsp.USE_YN = 'Y'
                AND 	tmpsg.STORE_CD = tmpsc.STORE_CD (+)
                AND 	tmpsg.SDSEL_GRP_CD = tmpsc.SDSEL_GRP_CD (+)
                AND 	tmpsc.STORE_CD = tmpsp.STORE_CD (+)
                AND 	tmpsc.SDSEL_CLASS_CD = tmpsp.SDSEL_CLASS_CD (+)
                AND 	tmpsp.STORE_CD = tmp.STORE_CD (+)
                AND 	tmpsp.PROD_CD = tmp.PROD_CD (+)
                ORDER BY tmpsg.SDSEL_GRP_CD, tmpsc.DISP_SEQ, tmpsp.DISP_SEQ
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 사이드-선택메뉴 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_SDSEL_CLASS, TB_HQ_PRODUCT_SDSEL_PROD, TB_HQ_PRODUCT, TB_MS_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 사이드-선택메뉴 목록을 조회한다.
    -->
    <select id="getSideMenuExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getSideMenuExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thpsg.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		DECODE(thpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                ,		DECODE(thpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                ,		thpsc.SDSEL_CLASS_CD
                ,		thpsc.SDSEL_CLASS_NM
                ,		thpsc.SDSEL_QTY
                ,		DECODE(thpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                ,		thpsp.PROD_CD
                ,		thp.PROD_NM
                ,       thpsp.ADD_PROD_UPRC
                ,       thpsp.ADD_PROD_QTY
                ,       DECODE(thpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                ,       DECODE(NVL(thpsp.REG_STORE_FG, '0'), '0', '미사용', '1', '제외매장', '2', '허용매장') AS REG_STORE_FG
                ,       DECODE(NVL(thpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                ,       thp.REMARK
                FROM 	TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                ,		TB_HQ_PRODUCT_SDSEL_CLASS thpsc
                ,		TB_HQ_PRODUCT_SDSEL_PROD thpsp
                ,		TB_HQ_PRODUCT thp
                WHERE 	thpsg.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thpsg.USE_YN = 'Y'
                AND     thpsc.USE_YN = 'Y'
                AND     thpsp.USE_YN = 'Y'
                AND 	thpsg.HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD (+)
                AND 	thpsg.SDSEL_GRP_CD = thpsc.SDSEL_GRP_CD (+)
                AND 	thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD (+)
                AND 	thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD (+)
                AND 	thpsp.HQ_OFFICE_CD (+) = thp.HQ_OFFICE_CD
                AND 	thpsp.PROD_CD (+) = thp.PROD_CD
                ORDER BY thpsg.SDSEL_GRP_CD, thpsc.DISP_SEQ, thpsp.DISP_SEQ
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	tmpsg.SDSEL_GRP_CD
                ,		tmpsg.SDSEL_GRP_NM
                ,		DECODE(tmpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                ,		DECODE(tmpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                ,		tmpsc.SDSEL_CLASS_CD
                ,		tmpsc.SDSEL_CLASS_NM
                ,		tmpsc.SDSEL_QTY
                ,		DECODE(tmpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                ,		tmpsp.PROD_CD
                ,		tmp.PROD_NM
                ,       tmpsp.ADD_PROD_UPRC
                ,       tmpsp.ADD_PROD_QTY
                ,       DECODE(tmpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                ,       DECODE(NVL(tmpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                ,       tmp.REMARK
                FROM 	TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                ,		TB_MS_PRODUCT_SDSEL_CLASS tmpsc
                ,		TB_MS_PRODUCT_SDSEL_PROD tmpsp
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmpsg.STORE_CD = #{storeCd}
                AND     tmpsg.USE_YN = 'Y'
                AND     tmpsc.USE_YN = 'Y'
                AND     tmpsp.USE_YN = 'Y'
                AND 	tmpsg.STORE_CD = tmpsc.STORE_CD (+)
                AND 	tmpsg.SDSEL_GRP_CD = tmpsc.SDSEL_GRP_CD (+)
                AND 	tmpsc.STORE_CD = tmpsp.STORE_CD (+)
                AND 	tmpsc.SDSEL_CLASS_CD = tmpsp.SDSEL_CLASS_CD (+)
                AND 	tmpsp.STORE_CD = tmp.STORE_CD (+)
                AND 	tmpsp.PROD_CD = tmp.PROD_CD (+)
                ORDER BY tmpsg.SDSEL_GRP_CD, tmpsc.DISP_SEQ, tmpsp.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 옵션 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_OPTION_GROUP, TB_HQ_PRODUCT_OPTION_VAL, TB_MS_PRODUCT_CLASS
        PARAM    : prodInfoSearchVO
        COMMENTS : 옵션 목록을 조회한다.
    -->
    <select id="getOptionList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getOptionList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	thpog.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thpov.OPTION_VAL_CD
                ,		thpov.OPTION_VAL_NM
                ,		thpov.OPT_PROD_CD AS OPTION_PROD_CD
                ,		thp.PROD_NM AS OPTION_PROD_NM
                ,       DECODE(NVL(thpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_HQ_PRODUCT_OPTION_GROUP thpog
                ,		TB_HQ_PRODUCT_OPTION_VAL thpov
                ,       TB_HQ_PRODUCT thp
                WHERE 	thpog.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thpog.HQ_OFFICE_CD = thpov.HQ_OFFICE_CD (+)
                AND 	thpog.OPTION_GRP_CD = thpov.OPTION_GRP_CD (+)
                AND 	thpog.HQ_OFFICE_CD = thp.HQ_OFFICE_CD (+)
                AND 	thpov.OPT_PROD_CD = thp.PROD_CD (+)
                ORDER BY thpog.OPTION_GRP_CD, thpov.OPTION_VAL_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	tmpog.OPTION_GRP_CD
                ,		tmpog.OPTION_GRP_NM
                ,		tmpov.OPTION_VAL_CD
                ,		tmpov.OPTION_VAL_NM
                ,		tmpov.OPT_PROD_CD AS OPTION_PROD_CD
                ,		tmp.PROD_NM AS OPTION_PROD_NM
                ,       DECODE(NVL(tmpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_MS_PRODUCT_OPTION_GROUP tmpog
                ,		TB_MS_PRODUCT_OPTION_VAL tmpov
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmpog.STORE_CD = #{storeCd}
                AND 	tmpog.STORE_CD = tmpov.STORE_CD (+)
                AND 	tmpog.OPTION_GRP_CD = tmpov.OPTION_GRP_CD (+)
                AND 	tmpog.STORE_CD = tmp.STORE_CD (+)
                AND 	tmpov.OPT_PROD_CD = tmp.PROD_CD (+)
                ORDER BY tmpog.OPTION_GRP_CD, tmpov.OPTION_VAL_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 옵션 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_OPTION_GROUP, TB_HQ_PRODUCT_OPTION_VAL, TB_MS_PRODUCT_CLASS
        PARAM    : prodInfoSearchVO
        COMMENTS : 옵션 목록을 조회한다.
    -->
    <select id="getOptionExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getOptionExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thpog.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thpov.OPTION_VAL_CD
                ,		thpov.OPTION_VAL_NM
                ,		thpov.OPT_PROD_CD AS OPTION_PROD_CD
                ,		thp.PROD_NM AS OPTION_PROD_NM
                ,       DECODE(NVL(thpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                FROM 	TB_HQ_PRODUCT_OPTION_GROUP thpog
                ,		TB_HQ_PRODUCT_OPTION_VAL thpov
                ,       TB_HQ_PRODUCT thp
                WHERE 	thpog.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thpog.HQ_OFFICE_CD = thpov.HQ_OFFICE_CD (+)
                AND 	thpog.OPTION_GRP_CD = thpov.OPTION_GRP_CD (+)
                AND 	thpog.HQ_OFFICE_CD = thp.HQ_OFFICE_CD (+)
                AND 	thpov.OPT_PROD_CD = thp.PROD_CD (+)
                ORDER BY thpog.OPTION_GRP_CD, thpov.OPTION_VAL_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	tmpog.OPTION_GRP_CD
                ,		tmpog.OPTION_GRP_NM
                ,		tmpov.OPTION_VAL_CD
                ,		tmpov.OPTION_VAL_NM
                ,		tmpov.OPT_PROD_CD AS OPTION_PROD_CD
                ,		tmp.PROD_NM AS OPTION_PROD_NM
                ,       DECODE(NVL(tmpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                FROM 	TB_MS_PRODUCT_OPTION_GROUP tmpog
                ,		TB_MS_PRODUCT_OPTION_VAL tmpov
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmpog.STORE_CD = #{storeCd}
                AND 	tmpog.STORE_CD = tmpov.STORE_CD (+)
                AND 	tmpog.OPTION_GRP_CD = tmpov.OPTION_GRP_CD (+)
                AND 	tmpog.STORE_CD = tmp.STORE_CD (+)
                AND 	tmpov.OPT_PROD_CD = tmp.PROD_CD (+)
                ORDER BY tmpog.OPTION_GRP_CD, tmpov.OPTION_VAL_CD
            </when>
        </choose>
    </select>

    <!-- 상품-속성/선택메뉴/옵션 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SDATTR_CLASS, TB_HQ_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_OPTION_GROUP, TB_MS_PRODUCT, TB_MS_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_OPTION_GROUP
        PARAM    : prodInfoSearchVO
        COMMENTS : 상품-속성/선택메뉴/옵션 목록을 조회한다.
    -->
    <select id="getProdInfoList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getProdInfoList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	A.*
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	(
                        SELECT  thp.HQ_BRAND_CD
                        ,	    (SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                        ,       thpcv.L_CLASS_CD
                        ,	    thpcv.L_CLASS_NM
                        ,	    thpcv.M_CLASS_CD
                        ,	    thpcv.M_CLASS_NM
                        ,	    thpcv.S_CLASS_CD
                        ,	    thpcv.S_CLASS_NM
                        ,       thp.PROD_CD
                        ,       thp.REMARK
                        ,		thp.PROD_NM
                        ,       '속성' AS GUBUN
                        ,		thp.SDATTR_CLASS_CD
                        ,		thpsc.SDATTR_CLASS_NM
                        ,		thps.SDATTR_CD
                        ,		thps.SDATTR_NM
                        ,		thps.DISP_SEQ AS SDATTR_DISP_SEQ
                        ,		'' AS SDSEL_GRP_CD
                        ,		'' AS SDSEL_GRP_NM
                        ,		'' AS GRP_FIX_PROD_FG
                        ,		'' AS SDSEL_TYPE_FG
                        ,		'' AS SDSEL_CLASS_CD
                        ,		'' AS SDSEL_CLASS_NM
                        ,		0 AS SDSEL_CLASS_DISP_SEQ
                        ,		0 AS SDSEL_QTY
                        ,		'' AS REQUIRE_YN
                        ,		'' AS SDSEL_PROD_CD
                        ,       '' AS SDSEL_REMARK
                        ,		'' AS SDSEL_PROD_NM
                        ,		0 AS SDSEL_PROD_DISP_SEQ
                        ,		0 AS ADD_PROD_UPRC
                        ,		0 AS ADD_PROD_QTY
                        ,		'' AS FIX_PROD_FG
                        ,		'' AS REG_STORE_FG
                        ,		'' AS PRINT_YN
                        ,		'' AS OPTION_GRP_CD
                        ,		'' AS OPTION_GRP_NM
                        ,		'' AS OPTION_VAL_CD
                        ,		'' AS OPTION_VAL_NM
                        ,		'' AS OPTION_PROD_CD
                        ,		'' AS OPTION_PROD_NM
                        ,		'' AS OPTION_PRINT_YN
                        FROM 	TB_HQ_PRODUCT thp
                        ,		TB_HQ_PRODUCT_SDATTR_CLASS thpsc
                        ,		TB_HQ_PRODUCT_SDATTR thps
                        ,       TB_HQ_PRODUCT_CLASS_V02 thpcv
                        WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	thp.HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD
                        AND 	thp.SDATTR_CLASS_CD = thpsc.SDATTR_CLASS_CD
                        AND 	thpsc.HQ_OFFICE_CD = thps.HQ_OFFICE_CD (+)
                        AND 	thpsc.SDATTR_CLASS_CD = thps.SDATTR_CLASS_CD (+)
                        AND 	thpcv.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                        AND 	thpcv.PROD_CD = thp.PROD_CD
                        UNION ALL
                        SELECT  thp.HQ_BRAND_CD
                        ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                        ,       thpcv.L_CLASS_CD
                        ,	    thpcv.L_CLASS_NM
                        ,	    thpcv.M_CLASS_CD
                        ,	    thpcv.M_CLASS_NM
                        ,	    thpcv.S_CLASS_CD
                        ,	    thpcv.S_CLASS_NM
                        ,       thp.PROD_CD
                        ,       thp.REMARK
                        ,		thp.PROD_NM
                        ,       '선택메뉴' AS GUBUN
                        ,		'' AS SDATTR_CLASS_CD
                        ,		'' AS SDATTR_CLASS_NM
                        ,		'' AS SDATTR_CD
                        ,		'' AS SDATTR_NM
                        ,		0 AS SDATTR_DISP_SEQ
                        ,		thp.SDSEL_GRP_CD
                        ,		thpsg.SDSEL_GRP_NM
                        ,		DECODE(thpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                        ,		DECODE(thpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                        ,		thpsc.SDSEL_CLASS_CD
                        ,		thpsc.SDSEL_CLASS_NM
                        ,		thpsc.DISP_SEQ AS SDSEL_CLASS_DISP_SEQ
                        ,		thpsc.SDSEL_QTY
                        ,		DECODE(thpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                        ,		thpsp.PROD_CD AS SDSEL_PROD_CD
                        ,       thp2.REMARK AS SDSEL_REMARK
                        ,		thp2.PROD_NM AS SDSEL_PROD_NM
                        ,		thpsp.DISP_SEQ AS SDSEL_PROD_DISP_SEQ
                        ,       thpsp.ADD_PROD_UPRC
                        ,       thpsp.ADD_PROD_QTY
                        ,       DECODE(thpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                        ,       DECODE(NVL(thpsp.REG_STORE_FG, '0'), '0', '미사용', '1', '제외매장', '2', '허용매장') AS REG_STORE_FG
                        ,       DECODE(NVL(thpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                        ,		'' AS OPTION_GRP_CD
                        ,		'' AS OPTION_GRP_NM
                        ,		'' AS OPTION_VAL_CD
                        ,		'' AS OPTION_VAL_NM
                        ,		'' AS OPTION_PROD_CD
                        ,		'' AS OPTION_PROD_NM
                        ,		'' AS OPTION_PRINT_YN
                        FROM 	TB_HQ_PRODUCT thp
                        ,		TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                        ,		TB_HQ_PRODUCT_SDSEL_CLASS thpsc
                        ,		TB_HQ_PRODUCT_SDSEL_PROD thpsp
                        ,		TB_HQ_PRODUCT thp2
                        ,       TB_HQ_PRODUCT_CLASS_V02 thpcv
                        WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND     thpsg.USE_YN = 'Y'
                        AND     thpsc.USE_YN = 'Y'
                        AND     thpsp.USE_YN = 'Y'
                        AND 	thp.HQ_OFFICE_CD = thpsg.HQ_OFFICE_CD
                        AND 	thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD
                        AND 	thpsg.HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD (+)
                        AND 	thpsg.SDSEL_GRP_CD = thpsc.SDSEL_GRP_CD (+)
                        AND 	thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD (+)
                        AND 	thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD (+)
                        AND 	thpsp.HQ_OFFICE_CD = thp2.HQ_OFFICE_CD (+)
                        AND 	thpsp.PROD_CD = thp2.PROD_CD (+)
                        AND 	thpcv.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                        AND 	thpcv.PROD_CD = thp.PROD_CD
                        UNION ALL
                        SELECT 	thp.HQ_BRAND_CD
                        ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                        ,       thpcv.L_CLASS_CD
                        ,	    thpcv.L_CLASS_NM
                        ,	    thpcv.M_CLASS_CD
                        ,	    thpcv.M_CLASS_NM
                        ,	    thpcv.S_CLASS_CD
                        ,	    thpcv.S_CLASS_NM
                        ,       thp.PROD_CD
                        ,       thp.REMARK
                        ,		thp.PROD_NM
                        ,       '옵션' AS GUBUN
                        ,		'' AS SDATTR_CLASS_CD
                        ,		'' AS SDATTR_CLASS_NM
                        ,		'' AS SDATTR_CD
                        ,		'' AS SDATTR_NM
                        ,		0 AS SDATTR_DISP_SEQ
                        ,		'' AS SDSEL_GRP_CD
                        ,		'' AS SDSEL_GRP_NM
                        ,		'' AS GRP_FIX_PROD_FG
                        ,		'' AS SDSEL_TYPE_FG
                        ,		'' AS SDSEL_CLASS_CD
                        ,		'' AS SDSEL_CLASS_NM
                        ,		0 AS SDSEL_CLASS_DISP_SEQ
                        ,		0 AS SDSEL_QTY
                        ,		'' AS REQUIRE_YN
                        ,		'' AS SDSEL_PROD_CD
                        ,       '' AS SDSEL_REMARK
                        ,		'' AS SDSEL_PROD_NM
                        ,		0 AS SDSEL_PROD_DISP_SEQ
                        ,		0 AS ADD_PROD_UPRC
                        ,		0 AS ADD_PROD_QTY
                        ,		'' AS FIX_PROD_FG
                        ,		'' AS REG_STORE_FG
                        ,		'' AS PRINT_YN
                        ,		thpog.OPTION_GRP_CD
                        ,		thpog.OPTION_GRP_NM
                        ,		thpov.OPTION_VAL_CD
                        ,		thpov.OPTION_VAL_NM
                        ,		thpov.OPT_PROD_CD AS OPTION_PROD_CD
                        ,		thp2.PROD_NM AS OPTION_PROD_NM
                        ,       DECODE(NVL(thpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS OPTION_PRINT_YN
                        FROM 	TB_HQ_PRODUCT thp
                        ,		TB_HQ_PRODUCT_OPTION_GROUP thpog
                        ,		TB_HQ_PRODUCT_OPTION_VAL thpov
                        ,       TB_HQ_PRODUCT_CLASS_V02 thpcv
                        ,       TB_HQ_PRODUCT thp2
                        WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND 	thp.HQ_OFFICE_CD = thpog.HQ_OFFICE_CD
                        AND 	thp.OPTION_GRP_CD = thpog.OPTION_GRP_CD
                        AND 	thpog.HQ_OFFICE_CD = thpov.HQ_OFFICE_CD (+)
                        AND 	thpog.OPTION_GRP_CD = thpov.OPTION_GRP_CD (+)
                        AND 	thpog.HQ_OFFICE_CD = thp2.HQ_OFFICE_CD (+)
                        AND 	thpov.OPT_PROD_CD = thp2.PROD_CD (+)
                        AND 	thpcv.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                        AND 	thpcv.PROD_CD = thp.PROD_CD
                        ) A
                ,       TB_HQ_PRODUCT thp
                WHERE   thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     A.PROD_CD = thp.PROD_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_HQ_PRODUCT_CLASS
                                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY A.PROD_CD, A.SDATTR_CLASS_CD, A.SDATTR_DISP_SEQ, A.SDSEL_GRP_CD, A.SDSEL_CLASS_DISP_SEQ, A.SDSEL_PROD_DISP_SEQ, A.OPTION_GRP_CD, A.OPTION_VAL_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	A.*
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	(
                        SELECT 	tmp.HQ_BRAND_CD
                        ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = tmp.HQ_BRAND_CD) AS HQ_BRAND_NM
                        ,       tmpcv.L_CLASS_CD
                        ,	    tmpcv.L_CLASS_NM
                        ,	    tmpcv.M_CLASS_CD
                        ,	    tmpcv.M_CLASS_NM
                        ,	    tmpcv.S_CLASS_CD
                        ,	    tmpcv.S_CLASS_NM
                        ,       tmp.PROD_CD
                        ,       tmp.REMARK
                        ,		tmp.PROD_NM
                        ,       '속성' AS GUBUN
                        ,		tmp.SDATTR_CLASS_CD
                        ,		tmpsc.SDATTR_CLASS_NM
                        ,		tmps.SDATTR_CD
                        ,		tmps.SDATTR_NM
                        ,		tmps.DISP_SEQ AS SDATTR_DISP_SEQ
                        ,		'' AS SDSEL_GRP_CD
                        ,		'' AS SDSEL_GRP_NM
                        ,		'' AS GRP_FIX_PROD_FG
                        ,		'' AS SDSEL_TYPE_FG
                        ,		'' AS SDSEL_CLASS_CD
                        ,		'' AS SDSEL_CLASS_NM
                        ,		0 AS SDSEL_CLASS_DISP_SEQ
                        ,		0 AS SDSEL_QTY
                        ,		'' AS REQUIRE_YN
                        ,		'' AS SDSEL_PROD_CD
                        ,       '' AS SDSEL_REMARK
                        ,		'' AS SDSEL_PROD_NM
                        ,		0 AS SDSEL_PROD_DISP_SEQ
                        ,		0 AS ADD_PROD_UPRC
                        ,		0 AS ADD_PROD_QTY
                        ,		'' AS FIX_PROD_FG
                        ,		'' AS PRINT_YN
                        ,		'' AS OPTION_GRP_CD
                        ,		'' AS OPTION_GRP_NM
                        ,		'' AS OPTION_VAL_CD
                        ,		'' AS OPTION_VAL_NM
                        ,		'' AS OPTION_PROD_CD
                        ,		'' AS OPTION_PROD_NM
                        ,		'' AS OPTION_PRINT_YN
                        FROM 	TB_MS_PRODUCT tmp
                        ,		TB_MS_PRODUCT_SDATTR_CLASS tmpsc
                        ,		TB_MS_PRODUCT_SDATTR tmps
                        ,       TB_MS_PRODUCT_CLASS_V02 tmpcv
                        WHERE 	tmp.STORE_CD = #{storeCd}
                        AND 	tmp.STORE_CD = tmpsc.STORE_CD
                        AND 	tmp.SDATTR_CLASS_CD = tmpsc.SDATTR_CLASS_CD
                        AND 	tmpsc.STORE_CD = tmps.STORE_CD (+)
                        AND 	tmpsc.SDATTR_CLASS_CD = tmps.SDATTR_CLASS_CD (+)
                        AND 	tmpcv.STORE_CD = tmp.STORE_CD
                        AND 	tmpcv.PROD_CD = tmp.PROD_CD
                        UNION ALL
                        SELECT 	tmp.HQ_BRAND_CD
                        ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = tmp.HQ_BRAND_CD) AS HQ_BRAND_NM
                        ,       tmpcv.L_CLASS_CD
                        ,	    tmpcv.L_CLASS_NM
                        ,	    tmpcv.M_CLASS_CD
                        ,	    tmpcv.M_CLASS_NM
                        ,	    tmpcv.S_CLASS_CD
                        ,	    tmpcv.S_CLASS_NM
                        ,       tmp.PROD_CD
                        ,       tmp.REMARK
                        ,		tmp.PROD_NM
                        ,       '선택메뉴' AS GUBUN
                        ,		'' AS SDATTR_CLASS_CD
                        ,		'' AS SDATTR_CLASS_NM
                        ,		'' AS SDATTR_CD
                        ,		'' AS SDATTR_NM
                        ,		0 AS SDATTR_DISP_SEQ
                        ,		tmp.SDSEL_GRP_CD
                        ,		tmpsg.SDSEL_GRP_NM
                        ,		DECODE(tmpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                        ,		DECODE(tmpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                        ,		tmpsc.SDSEL_CLASS_CD
                        ,		tmpsc.SDSEL_CLASS_NM
                        ,		tmpsc.DISP_SEQ AS SDSEL_CLASS_DISP_SEQ
                        ,		tmpsc.SDSEL_QTY
                        ,		DECODE(tmpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                        ,		tmpsp.PROD_CD AS SDSEL_PROD_CD
                        ,       tmp2.REMARK AS SDSEL_REMARK
                        ,		tmp2.PROD_NM AS SDSEL_PROD_NM
                        ,		tmpsp.DISP_SEQ AS SDSEL_PROD_DISP_SEQ
                        ,       tmpsp.ADD_PROD_UPRC
                        ,       tmpsp.ADD_PROD_QTY
                        ,       DECODE(tmpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                        ,       DECODE(NVL(tmpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                        ,		'' AS OPTION_GRP_CD
                        ,		'' AS OPTION_GRP_NM
                        ,		'' AS OPTION_VAL_CD
                        ,		'' AS OPTION_VAL_NM
                        ,		'' AS OPTION_PROD_CD
                        ,		'' AS OPTION_PROD_NM
                        ,		'' AS OPTION_PRINT_YN
                        FROM 	TB_MS_PRODUCT tmp
                        ,		TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                        ,		TB_MS_PRODUCT_SDSEL_CLASS tmpsc
                        ,		TB_MS_PRODUCT_SDSEL_PROD tmpsp
                        ,		TB_MS_PRODUCT tmp2
                        ,       TB_MS_PRODUCT_CLASS_V02 tmpcv
                        WHERE 	tmp.STORE_CD = #{storeCd}
                        AND     tmpsg.USE_YN = 'Y'
                        AND     tmpsc.USE_YN = 'Y'
                        AND     tmpsp.USE_YN = 'Y'
                        AND 	tmp.STORE_CD = tmpsg.STORE_CD
                        AND 	tmp.SDSEL_GRP_CD = tmpsg.SDSEL_GRP_CD
                        AND 	tmpsg.STORE_CD = tmpsc.STORE_CD (+)
                        AND 	tmpsg.SDSEL_GRP_CD = tmpsc.SDSEL_GRP_CD (+)
                        AND 	tmpsc.STORE_CD = tmpsp.STORE_CD (+)
                        AND 	tmpsc.SDSEL_CLASS_CD = tmpsp.SDSEL_CLASS_CD (+)
                        AND 	tmpsp.STORE_CD = tmp2.STORE_CD (+)
                        AND 	tmpsp.PROD_CD = tmp2.PROD_CD (+)
                        AND 	tmpcv.STORE_CD = tmp.STORE_CD
                        AND 	tmpcv.PROD_CD = tmp.PROD_CD
                        UNION ALL
                        SELECT 	tmp.HQ_BRAND_CD
                        ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = tmp.HQ_BRAND_CD) AS HQ_BRAND_NM
                        ,       tmpcv.L_CLASS_CD
                        ,	    tmpcv.L_CLASS_NM
                        ,	    tmpcv.M_CLASS_CD
                        ,	    tmpcv.M_CLASS_NM
                        ,	    tmpcv.S_CLASS_CD
                        ,	    tmpcv.S_CLASS_NM
                        ,       tmp.PROD_CD
                        ,       tmp.REMARK
                        ,		tmp.PROD_NM
                        ,       '옵션' AS GUBUN
                        ,		'' AS SDATTR_CLASS_CD
                        ,		'' AS SDATTR_CLASS_NM
                        ,		'' AS SDATTR_CD
                        ,		'' AS SDATTR_NM
                        ,		0 AS SDATTR_DISP_SEQ
                        ,		'' AS SDSEL_GRP_CD
                        ,		'' AS SDSEL_GRP_NM
                        ,		'' AS GRP_FIX_PROD_FG
                        ,		'' AS SDSEL_TYPE_FG
                        ,		'' AS SDSEL_CLASS_CD
                        ,		'' AS SDSEL_CLASS_NM
                        ,		0 AS SDSEL_CLASS_DISP_SEQ
                        ,		0 AS SDSEL_QTY
                        ,		'' AS REQUIRE_YN
                        ,		'' AS SDSEL_PROD_CD
                        ,       '' AS SDSEL_REMARK
                        ,		'' AS SDSEL_PROD_NM
                        ,		0 AS SDSEL_PROD_DISP_SEQ
                        ,		0 AS ADD_PROD_UPRC
                        ,		0 AS ADD_PROD_QTY
                        ,		'' AS FIX_PROD_FG
                        ,		'' AS PRINT_YN
                        ,		tmpog.OPTION_GRP_CD
                        ,		tmpog.OPTION_GRP_NM
                        ,		tmpov.OPTION_VAL_CD
                        ,		tmpov.OPTION_VAL_NM
                        ,		tmpov.OPT_PROD_CD AS OPTION_PROD_CD
                        ,		tmp2.PROD_NM AS OPTION_PROD_NM
                        ,       DECODE(NVL(tmpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS OPTION_PRINT_YN
                        FROM 	TB_MS_PRODUCT tmp
                        ,		TB_MS_PRODUCT_OPTION_GROUP tmpog
                        ,		TB_MS_PRODUCT_OPTION_VAL tmpov
                        ,       TB_MS_PRODUCT_CLASS_V02 tmpcv
                        ,       TB_MS_PRODUCT tmp2
                        WHERE 	tmp.STORE_CD = #{storeCd}
                        AND 	tmp.STORE_CD = tmpog.STORE_CD
                        AND 	tmp.OPTION_GRP_CD = tmpog.OPTION_GRP_CD
                        AND 	tmpog.STORE_CD = tmpov.STORE_CD (+)
                        AND 	tmpog.OPTION_GRP_CD = tmpov.OPTION_GRP_CD (+)
                        AND 	tmpog.STORE_CD = tmp2.STORE_CD (+)
                        AND 	tmpov.OPT_PROD_CD = tmp2.PROD_CD (+)
                        AND 	tmpcv.STORE_CD = tmp.STORE_CD
                        AND 	tmpcv.PROD_CD = tmp.PROD_CD
                        ) A
                ,       TB_MS_PRODUCT tmp
                WHERE 	tmp.STORE_CD = #{storeCd}
                AND     A.PROD_CD = tmp.PROD_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = #{storeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY A.PROD_CD, A.SDATTR_CLASS_CD, A.SDATTR_DISP_SEQ, A.SDSEL_GRP_CD, A.SDSEL_CLASS_DISP_SEQ, A.SDSEL_PROD_DISP_SEQ, A.OPTION_GRP_CD, A.OPTION_VAL_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 상품-속성/선택메뉴/옵션 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SDATTR_CLASS, TB_HQ_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_OPTION_GROUP, TB_MS_PRODUCT, TB_MS_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_OPTION_GROUP
        PARAM    : prodInfoSearchVO
        COMMENTS : 상품-속성/선택메뉴/옵션 목록을 조회한다.
    -->
    <select id="getProdInfoExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getProdInfoExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	A.*
                FROM 	(
                SELECT  thp.HQ_BRAND_CD
                ,	    (SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,       thp.REMARK
                ,		thp.PROD_NM
                ,       '속성' AS GUBUN
                ,		thp.SDATTR_CLASS_CD
                ,		thpsc.SDATTR_CLASS_NM
                ,		thps.SDATTR_CD
                ,		thps.SDATTR_NM
                ,		thps.DISP_SEQ AS SDATTR_DISP_SEQ
                ,		'' AS SDSEL_GRP_CD
                ,		'' AS SDSEL_GRP_NM
                ,		'' AS GRP_FIX_PROD_FG
                ,		'' AS SDSEL_TYPE_FG
                ,		'' AS SDSEL_CLASS_CD
                ,		'' AS SDSEL_CLASS_NM
                ,		0 AS SDSEL_CLASS_DISP_SEQ
                ,		0 AS SDSEL_QTY
                ,		'' AS REQUIRE_YN
                ,		'' AS SDSEL_PROD_CD
                ,       '' AS SDSEL_REMARK
                ,		'' AS SDSEL_PROD_NM
                ,		0 AS SDSEL_PROD_DISP_SEQ
                ,		0 AS ADD_PROD_UPRC
                ,		0 AS ADD_PROD_QTY
                ,		'' AS FIX_PROD_FG
                ,		'' AS REG_STORE_FG
                ,		'' AS PRINT_YN
                ,		'' AS OPTION_GRP_CD
                ,		'' AS OPTION_GRP_NM
                ,		'' AS OPTION_VAL_CD
                ,		'' AS OPTION_VAL_NM
                ,		'' AS OPTION_PROD_CD
                ,		'' AS OPTION_PROD_NM
                ,		'' AS OPTION_PRINT_YN
                FROM 	TB_HQ_PRODUCT thp
                ,		TB_HQ_PRODUCT_SDATTR_CLASS thpsc
                ,		TB_HQ_PRODUCT_SDATTR thps
                ,       TB_HQ_PRODUCT_CLASS_V02 thpcv
                WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thp.HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD
                AND 	thp.SDATTR_CLASS_CD = thpsc.SDATTR_CLASS_CD
                AND 	thpsc.HQ_OFFICE_CD = thps.HQ_OFFICE_CD (+)
                AND 	thpsc.SDATTR_CLASS_CD = thps.SDATTR_CLASS_CD (+)
                AND 	thpcv.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thpcv.PROD_CD = thp.PROD_CD
                UNION ALL
                SELECT  thp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,       thp.REMARK
                ,		thp.PROD_NM
                ,       '선택메뉴' AS GUBUN
                ,		'' AS SDATTR_CLASS_CD
                ,		'' AS SDATTR_CLASS_NM
                ,		'' AS SDATTR_CD
                ,		'' AS SDATTR_NM
                ,		0 AS SDATTR_DISP_SEQ
                ,		thp.SDSEL_GRP_CD
                ,		thpsg.SDSEL_GRP_NM
                ,		DECODE(thpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                ,		DECODE(thpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                ,		thpsc.SDSEL_CLASS_CD
                ,		thpsc.SDSEL_CLASS_NM
                ,		thpsc.DISP_SEQ AS SDSEL_CLASS_DISP_SEQ
                ,		thpsc.SDSEL_QTY
                ,		DECODE(thpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                ,		thpsp.PROD_CD AS SDSEL_PROD_CD
                ,       thp2.REMARK AS SDSEL_REMARK
                ,		thp2.PROD_NM AS SDSEL_PROD_NM
                ,		thpsp.DISP_SEQ AS SDSEL_PROD_DISP_SEQ
                ,       thpsp.ADD_PROD_UPRC
                ,       thpsp.ADD_PROD_QTY
                ,       DECODE(thpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                ,       DECODE(NVL(thpsp.REG_STORE_FG, '0'), '0', '미사용', '1', '제외매장', '2', '허용매장') AS REG_STORE_FG
                ,       DECODE(NVL(thpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                ,		'' AS OPTION_GRP_CD
                ,		'' AS OPTION_GRP_NM
                ,		'' AS OPTION_VAL_CD
                ,		'' AS OPTION_VAL_NM
                ,		'' AS OPTION_PROD_CD
                ,		'' AS OPTION_PROD_NM
                ,		'' AS OPTION_PRINT_YN
                FROM 	TB_HQ_PRODUCT thp
                ,		TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                ,		TB_HQ_PRODUCT_SDSEL_CLASS thpsc
                ,		TB_HQ_PRODUCT_SDSEL_PROD thpsp
                ,		TB_HQ_PRODUCT thp2
                ,       TB_HQ_PRODUCT_CLASS_V02 thpcv
                WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thpsg.USE_YN = 'Y'
                AND     thpsc.USE_YN = 'Y'
                AND     thpsp.USE_YN = 'Y'
                AND 	thp.HQ_OFFICE_CD = thpsg.HQ_OFFICE_CD
                AND 	thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD
                AND 	thpsg.HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD (+)
                AND 	thpsg.SDSEL_GRP_CD = thpsc.SDSEL_GRP_CD (+)
                AND 	thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD (+)
                AND 	thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD (+)
                AND 	thpsp.HQ_OFFICE_CD = thp2.HQ_OFFICE_CD (+)
                AND 	thpsp.PROD_CD = thp2.PROD_CD (+)
                AND 	thpcv.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thpcv.PROD_CD = thp.PROD_CD
                UNION ALL
                SELECT 	thp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,       thpcv.L_CLASS_CD
                ,	    thpcv.L_CLASS_NM
                ,	    thpcv.M_CLASS_CD
                ,	    thpcv.M_CLASS_NM
                ,	    thpcv.S_CLASS_CD
                ,	    thpcv.S_CLASS_NM
                ,       thp.PROD_CD
                ,       thp.REMARK
                ,		thp.PROD_NM
                ,       '옵션' AS GUBUN
                ,		'' AS SDATTR_CLASS_CD
                ,		'' AS SDATTR_CLASS_NM
                ,		'' AS SDATTR_CD
                ,		'' AS SDATTR_NM
                ,		0 AS SDATTR_DISP_SEQ
                ,		'' AS SDSEL_GRP_CD
                ,		'' AS SDSEL_GRP_NM
                ,		'' AS GRP_FIX_PROD_FG
                ,		'' AS SDSEL_TYPE_FG
                ,		'' AS SDSEL_CLASS_CD
                ,		'' AS SDSEL_CLASS_NM
                ,		0 AS SDSEL_CLASS_DISP_SEQ
                ,		0 AS SDSEL_QTY
                ,		'' AS REQUIRE_YN
                ,		'' AS SDSEL_PROD_CD
                ,       '' AS SDSEL_REMARK
                ,		'' AS SDSEL_PROD_NM
                ,		0 AS SDSEL_PROD_DISP_SEQ
                ,		0 AS ADD_PROD_UPRC
                ,		0 AS ADD_PROD_QTY
                ,		'' AS FIX_PROD_FG
                ,		'' AS REG_STORE_FG
                ,		'' AS PRINT_YN
                ,		thpog.OPTION_GRP_CD
                ,		thpog.OPTION_GRP_NM
                ,		thpov.OPTION_VAL_CD
                ,		thpov.OPTION_VAL_NM
                ,		thpov.OPT_PROD_CD AS OPTION_PROD_CD
                ,		thp2.PROD_NM AS OPTION_PROD_NM
                ,       DECODE(NVL(thpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS OPTION_PRINT_YN
                FROM 	TB_HQ_PRODUCT thp
                ,		TB_HQ_PRODUCT_OPTION_GROUP thpog
                ,		TB_HQ_PRODUCT_OPTION_VAL thpov
                ,       TB_HQ_PRODUCT_CLASS_V02 thpcv
                ,       TB_HQ_PRODUCT thp2
                WHERE 	thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thp.HQ_OFFICE_CD = thpog.HQ_OFFICE_CD
                AND 	thp.OPTION_GRP_CD = thpog.OPTION_GRP_CD
                AND 	thpog.HQ_OFFICE_CD = thpov.HQ_OFFICE_CD (+)
                AND 	thpog.OPTION_GRP_CD = thpov.OPTION_GRP_CD (+)
                AND 	thpog.HQ_OFFICE_CD = thp2.HQ_OFFICE_CD (+)
                AND 	thpov.OPT_PROD_CD = thp2.PROD_CD (+)
                AND 	thpcv.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thpcv.PROD_CD = thp.PROD_CD
                ) A
                ,       TB_HQ_PRODUCT thp
                WHERE   thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     A.PROD_CD = thp.PROD_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM TB_HQ_PRODUCT_CLASS
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY A.PROD_CD, A.SDATTR_CLASS_CD, A.SDATTR_DISP_SEQ, A.SDSEL_GRP_CD, A.SDSEL_CLASS_DISP_SEQ, A.SDSEL_PROD_DISP_SEQ, A.OPTION_GRP_CD, A.OPTION_VAL_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	A.*
                FROM 	(
                SELECT 	tmp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = tmp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,       tmpcv.L_CLASS_CD
                ,	    tmpcv.L_CLASS_NM
                ,	    tmpcv.M_CLASS_CD
                ,	    tmpcv.M_CLASS_NM
                ,	    tmpcv.S_CLASS_CD
                ,	    tmpcv.S_CLASS_NM
                ,       tmp.PROD_CD
                ,       tmp.REMARK
                ,		tmp.PROD_NM
                ,       '속성' AS GUBUN
                ,		tmp.SDATTR_CLASS_CD
                ,		tmpsc.SDATTR_CLASS_NM
                ,		tmps.SDATTR_CD
                ,		tmps.SDATTR_NM
                ,		tmps.DISP_SEQ AS SDATTR_DISP_SEQ
                ,		'' AS SDSEL_GRP_CD
                ,		'' AS SDSEL_GRP_NM
                ,		'' AS GRP_FIX_PROD_FG
                ,		'' AS SDSEL_TYPE_FG
                ,		'' AS SDSEL_CLASS_CD
                ,		'' AS SDSEL_CLASS_NM
                ,		0 AS SDSEL_CLASS_DISP_SEQ
                ,		0 AS SDSEL_QTY
                ,		'' AS REQUIRE_YN
                ,		'' AS SDSEL_PROD_CD
                ,       '' AS SDSEL_REMARK
                ,		'' AS SDSEL_PROD_NM
                ,		0 AS SDSEL_PROD_DISP_SEQ
                ,		0 AS ADD_PROD_UPRC
                ,		0 AS ADD_PROD_QTY
                ,		'' AS FIX_PROD_FG
                ,		'' AS PRINT_YN
                ,		'' AS OPTION_GRP_CD
                ,		'' AS OPTION_GRP_NM
                ,		'' AS OPTION_VAL_CD
                ,		'' AS OPTION_VAL_NM
                ,		'' AS OPTION_PROD_CD
                ,		'' AS OPTION_PROD_NM
                ,		'' AS OPTION_PRINT_YN
                FROM 	TB_MS_PRODUCT tmp
                ,		TB_MS_PRODUCT_SDATTR_CLASS tmpsc
                ,		TB_MS_PRODUCT_SDATTR tmps
                ,       TB_MS_PRODUCT_CLASS_V02 tmpcv
                WHERE 	tmp.STORE_CD = #{storeCd}
                AND 	tmp.STORE_CD = tmpsc.STORE_CD
                AND 	tmp.SDATTR_CLASS_CD = tmpsc.SDATTR_CLASS_CD
                AND 	tmpsc.STORE_CD = tmps.STORE_CD (+)
                AND 	tmpsc.SDATTR_CLASS_CD = tmps.SDATTR_CLASS_CD (+)
                AND 	tmpcv.STORE_CD = tmp.STORE_CD
                AND 	tmpcv.PROD_CD = tmp.PROD_CD
                UNION ALL
                SELECT 	tmp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = tmp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,       tmpcv.L_CLASS_CD
                ,	    tmpcv.L_CLASS_NM
                ,	    tmpcv.M_CLASS_CD
                ,	    tmpcv.M_CLASS_NM
                ,	    tmpcv.S_CLASS_CD
                ,	    tmpcv.S_CLASS_NM
                ,       tmp.PROD_CD
                ,       tmp.REMARK
                ,		tmp.PROD_NM
                ,       '선택메뉴' AS GUBUN
                ,		'' AS SDATTR_CLASS_CD
                ,		'' AS SDATTR_CLASS_NM
                ,		'' AS SDATTR_CD
                ,		'' AS SDATTR_NM
                ,		0 AS SDATTR_DISP_SEQ
                ,		tmp.SDSEL_GRP_CD
                ,		tmpsg.SDSEL_GRP_NM
                ,		DECODE(tmpsg.FIX_PROD_FG, '0', '선택', '1', '고정') AS GRP_FIX_PROD_FG
                ,		DECODE(tmpsg.SDSEL_TYPE_FG, 'C', '세트', 'S', '싱글세트') AS SDSEL_TYPE_FG
                ,		tmpsc.SDSEL_CLASS_CD
                ,		tmpsc.SDSEL_CLASS_NM
                ,		tmpsc.DISP_SEQ AS SDSEL_CLASS_DISP_SEQ
                ,		tmpsc.SDSEL_QTY
                ,		DECODE(tmpsc.REQUIRE_YN, 'Y', '필수선택', 'N', '선택안함') AS REQUIRE_YN
                ,		tmpsp.PROD_CD AS SDSEL_PROD_CD
                ,       tmp2.REMARK AS SDSEL_REMARK
                ,		tmp2.PROD_NM AS SDSEL_PROD_NM
                ,		tmpsp.DISP_SEQ AS SDSEL_PROD_DISP_SEQ
                ,       tmpsp.ADD_PROD_UPRC
                ,       tmpsp.ADD_PROD_QTY
                ,       DECODE(tmpsp.FIX_PROD_FG, '0', '선택', '1', '고정') AS FIX_PROD_FG
                ,       DECODE(NVL(tmpsp.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS PRINT_YN
                ,		'' AS OPTION_GRP_CD
                ,		'' AS OPTION_GRP_NM
                ,		'' AS OPTION_VAL_CD
                ,		'' AS OPTION_VAL_NM
                ,		'' AS OPTION_PROD_CD
                ,		'' AS OPTION_PROD_NM
                ,		'' AS OPTION_PRINT_YN
                FROM 	TB_MS_PRODUCT tmp
                ,		TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                ,		TB_MS_PRODUCT_SDSEL_CLASS tmpsc
                ,		TB_MS_PRODUCT_SDSEL_PROD tmpsp
                ,		TB_MS_PRODUCT tmp2
                ,       TB_MS_PRODUCT_CLASS_V02 tmpcv
                WHERE 	tmp.STORE_CD = #{storeCd}
                AND     tmpsg.USE_YN = 'Y'
                AND     tmpsc.USE_YN = 'Y'
                AND     tmpsp.USE_YN = 'Y'
                AND 	tmp.STORE_CD = tmpsg.STORE_CD
                AND 	tmp.SDSEL_GRP_CD = tmpsg.SDSEL_GRP_CD
                AND 	tmpsg.STORE_CD = tmpsc.STORE_CD (+)
                AND 	tmpsg.SDSEL_GRP_CD = tmpsc.SDSEL_GRP_CD (+)
                AND 	tmpsc.STORE_CD = tmpsp.STORE_CD (+)
                AND 	tmpsc.SDSEL_CLASS_CD = tmpsp.SDSEL_CLASS_CD (+)
                AND 	tmpsp.STORE_CD = tmp2.STORE_CD (+)
                AND 	tmpsp.PROD_CD = tmp2.PROD_CD (+)
                AND 	tmpcv.STORE_CD = tmp.STORE_CD
                AND 	tmpcv.PROD_CD = tmp.PROD_CD
                UNION ALL
                SELECT 	tmp.HQ_BRAND_CD
                ,		(SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = #{hqOfficeCd} AND thb.HQ_BRAND_CD = tmp.HQ_BRAND_CD) AS HQ_BRAND_NM
                ,       tmpcv.L_CLASS_CD
                ,	    tmpcv.L_CLASS_NM
                ,	    tmpcv.M_CLASS_CD
                ,	    tmpcv.M_CLASS_NM
                ,	    tmpcv.S_CLASS_CD
                ,	    tmpcv.S_CLASS_NM
                ,       tmp.PROD_CD
                ,       tmp.REMARK
                ,		tmp.PROD_NM
                ,       '옵션' AS GUBUN
                ,		'' AS SDATTR_CLASS_CD
                ,		'' AS SDATTR_CLASS_NM
                ,		'' AS SDATTR_CD
                ,		'' AS SDATTR_NM
                ,		0 AS SDATTR_DISP_SEQ
                ,		'' AS SDSEL_GRP_CD
                ,		'' AS SDSEL_GRP_NM
                ,		'' AS GRP_FIX_PROD_FG
                ,		'' AS SDSEL_TYPE_FG
                ,		'' AS SDSEL_CLASS_CD
                ,		'' AS SDSEL_CLASS_NM
                ,		0 AS SDSEL_CLASS_DISP_SEQ
                ,		0 AS SDSEL_QTY
                ,		'' AS REQUIRE_YN
                ,		'' AS SDSEL_PROD_CD
                ,       '' AS SDSEL_REMARK
                ,		'' AS SDSEL_PROD_NM
                ,		0 AS SDSEL_PROD_DISP_SEQ
                ,		0 AS ADD_PROD_UPRC
                ,		0 AS ADD_PROD_QTY
                ,		'' AS FIX_PROD_FG
                ,		'' AS PRINT_YN
                ,		tmpog.OPTION_GRP_CD
                ,		tmpog.OPTION_GRP_NM
                ,		tmpov.OPTION_VAL_CD
                ,		tmpov.OPTION_VAL_NM
                ,		tmpov.OPT_PROD_CD AS OPTION_PROD_CD
                ,		tmp2.PROD_NM AS OPTION_PROD_NM
                ,       DECODE(NVL(tmpov.PRINT_YN, 'Y'), 'Y', '사용', 'N', '미사용') AS OPTION_PRINT_YN
                FROM 	TB_MS_PRODUCT tmp
                ,		TB_MS_PRODUCT_OPTION_GROUP tmpog
                ,		TB_MS_PRODUCT_OPTION_VAL tmpov
                ,       TB_MS_PRODUCT_CLASS_V02 tmpcv
                ,       TB_MS_PRODUCT tmp2
                WHERE 	tmp.STORE_CD = #{storeCd}
                AND 	tmp.STORE_CD = tmpog.STORE_CD
                AND 	tmp.OPTION_GRP_CD = tmpog.OPTION_GRP_CD
                AND 	tmpog.STORE_CD = tmpov.STORE_CD (+)
                AND 	tmpog.OPTION_GRP_CD = tmpov.OPTION_GRP_CD (+)
                AND 	tmpog.STORE_CD = tmp2.STORE_CD (+)
                AND 	tmpov.OPT_PROD_CD = tmp2.PROD_CD (+)
                AND 	tmpcv.STORE_CD = tmp.STORE_CD
                AND 	tmpcv.PROD_CD = tmp.PROD_CD
                ) A
                ,       TB_MS_PRODUCT tmp
                WHERE 	tmp.STORE_CD = #{storeCd}
                AND     A.PROD_CD = tmp.PROD_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT
                    PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY A.PROD_CD, A.SDATTR_CLASS_CD, A.SDATTR_DISP_SEQ, A.SDSEL_GRP_CD, A.SDSEL_CLASS_DISP_SEQ, A.SDSEL_PROD_DISP_SEQ, A.OPTION_GRP_CD, A.OPTION_VAL_CD
            </when>
        </choose>
    </select>

    <!-- 원산지 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_RECP_PROD, TB_HQ_PRODUCT_RECP_ORIGIN, TB_HQ_PRODUCT, TB_MS_PRODUCT_RECP_PROD, TB_MS_PRODUCT_RECP_ORIGIN, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 원산지 목록을 조회한다.
    -->
    <select id="getOrgplceList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getOrgplceList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	thprp.PROD_CD
                ,		thp.PROD_NM
                ,		thpro.RECIPES_CD
                ,		thpro.RECIPES_NM
                ,		thpro.ORGPLCE_NM
                ,       thp.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_HQ_PRODUCT_RECP_PROD thprp
                ,		TB_HQ_PRODUCT_RECP_ORIGIN thpro
                ,		TB_HQ_PRODUCT thp
                WHERE 	thprp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thprp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thprp.PROD_CD = thp.PROD_CD
                AND 	thprp.HQ_OFFICE_CD = thpro.HQ_OFFICE_CD
                AND 	thprp.RECIPES_CD = thpro.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_HQ_PRODUCT_CLASS
                                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thprp.PROD_CD, thpro.RECIPES_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	tmprp.PROD_CD
                ,		tmp.PROD_NM
                ,		tmpro.RECIPES_CD
                ,		tmpro.RECIPES_NM
                ,		tmpro.ORGPLCE_NM
                ,       tmp.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_MS_PRODUCT_RECP_PROD tmprp
                ,		TB_MS_PRODUCT_RECP_ORIGIN tmpro
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmprp.STORE_CD = #{storeCd}
                AND 	tmprp.STORE_CD = tmp.STORE_CD
                AND 	tmprp.PROD_CD = tmp.PROD_CD
                AND 	tmprp.STORE_CD = tmpro.STORE_CD
                AND 	tmprp.RECIPES_CD = tmpro.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = #{storeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY tmprp.PROD_CD, tmpro.RECIPES_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 원산지 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_RECP_PROD, TB_HQ_PRODUCT_RECP_ORIGIN, TB_HQ_PRODUCT, TB_MS_PRODUCT_RECP_PROD, TB_MS_PRODUCT_RECP_ORIGIN, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 원산지 목록을 조회한다.
    -->
    <select id="getOrgplceExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getOrgplceExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thprp.PROD_CD
                ,		thp.PROD_NM
                ,		thpro.RECIPES_CD
                ,		thpro.RECIPES_NM
                ,		thpro.ORGPLCE_NM
                ,       thp.REMARK
                FROM 	TB_HQ_PRODUCT_RECP_PROD thprp
                ,		TB_HQ_PRODUCT_RECP_ORIGIN thpro
                ,		TB_HQ_PRODUCT thp
                WHERE 	thprp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thprp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thprp.PROD_CD = thp.PROD_CD
                AND 	thprp.HQ_OFFICE_CD = thpro.HQ_OFFICE_CD
                AND 	thprp.RECIPES_CD = thpro.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_HQ_PRODUCT_CLASS
                                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thprp.PROD_CD, thpro.RECIPES_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	tmprp.PROD_CD
                ,		tmp.PROD_NM
                ,		tmpro.RECIPES_CD
                ,		tmpro.RECIPES_NM
                ,		tmpro.ORGPLCE_NM
                ,       tmp.REMARK
                FROM 	TB_MS_PRODUCT_RECP_PROD tmprp
                ,		TB_MS_PRODUCT_RECP_ORIGIN tmpro
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmprp.STORE_CD = #{storeCd}
                AND 	tmprp.STORE_CD = tmp.STORE_CD
                AND 	tmprp.PROD_CD = tmp.PROD_CD
                AND 	tmprp.STORE_CD = tmpro.STORE_CD
                AND 	tmprp.RECIPES_CD = tmpro.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = #{storeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY tmprp.PROD_CD, tmpro.RECIPES_CD
            </when>
        </choose>
    </select>

    <!-- 알레르기 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_HQ_PRODUCT_ALGI_INFO, TB_HQ_PRODUCT, TB_MS_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_ALGI_INFO, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 알레르기 목록을 조회한다.
    -->
    <select id="getAllergyList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getAllergyList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT 	thpap.PROD_CD
                ,		thp.PROD_NM
                ,		thpai.RECIPES_CD
                ,		thpai.RECIPES_NM
                ,		thpai.ALLERGIE_NM
                ,       thp.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_HQ_PRODUCT_ALGI_PROD thpap
                ,		TB_HQ_PRODUCT_ALGI_INFO thpai
                ,		TB_HQ_PRODUCT thp
                WHERE 	thpap.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thpap.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thpap.PROD_CD = thp.PROD_CD
                AND 	thpap.HQ_OFFICE_CD = thpai.HQ_OFFICE_CD
                AND 	thpap.RECIPES_CD = thpai.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_HQ_PRODUCT_CLASS
                                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thpap.PROD_CD, thpai.RECIPES_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  tmpap.PROD_CD
                ,		tmp.PROD_NM
                ,		tmpai.RECIPES_CD
                ,		tmpai.RECIPES_NM
                ,		tmpai.ALLERGIE_NM
                ,       tmp.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM 	TB_MS_PRODUCT_ALGI_PROD tmpap
                ,		TB_MS_PRODUCT_ALGI_INFO tmpai
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmpap.STORE_CD = #{storeCd}
                AND 	tmpap.STORE_CD = tmp.STORE_CD
                AND 	tmpap.PROD_CD = tmp.PROD_CD
                AND 	tmpap.STORE_CD = tmpai.STORE_CD
                AND 	tmpap.RECIPES_CD = tmpai.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = #{storeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY tmpap.PROD_CD, tmpai.RECIPES_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 알레르기 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_HQ_PRODUCT_ALGI_INFO, TB_HQ_PRODUCT, TB_MS_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_ALGI_INFO, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 알레르기 목록을 조회한다.
    -->
    <select id="getAllergyExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getAllergyExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thpap.PROD_CD
                ,		thp.PROD_NM
                ,		thpai.RECIPES_CD
                ,		thpai.RECIPES_NM
                ,		thpai.ALLERGIE_NM
                ,       thp.REMARK
                FROM 	TB_HQ_PRODUCT_ALGI_PROD thpap
                ,		TB_HQ_PRODUCT_ALGI_INFO thpai
                ,		TB_HQ_PRODUCT thp
                WHERE 	thpap.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	thpap.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND 	thpap.PROD_CD = thp.PROD_CD
                AND 	thpap.HQ_OFFICE_CD = thpai.HQ_OFFICE_CD
                AND 	thpap.RECIPES_CD = thpai.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_HQ_PRODUCT_CLASS
                                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        thp.PROD_CD = #{item}
                    </foreach>
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 상품브랜드 선택일때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userBrands != null and userBrands != ""'>
                        -- 상품브랜드 전체일때
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thpap.PROD_CD, thpai.RECIPES_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  tmpap.PROD_CD
                ,		tmp.PROD_NM
                ,		tmpai.RECIPES_CD
                ,		tmpai.RECIPES_NM
                ,		tmpai.ALLERGIE_NM
                ,       tmp.REMARK
                FROM 	TB_MS_PRODUCT_ALGI_PROD tmpap
                ,		TB_MS_PRODUCT_ALGI_INFO tmpai
                ,		TB_MS_PRODUCT tmp
                WHERE 	tmpap.STORE_CD = #{storeCd}
                AND 	tmpap.STORE_CD = tmp.STORE_CD
                AND 	tmpap.PROD_CD = tmp.PROD_CD
                AND 	tmpap.STORE_CD = tmpai.STORE_CD
                AND 	tmpap.RECIPES_CD = tmpai.RECIPES_CD
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                            SELECT
                                            PROD_CLASS_CD
                                            FROM TB_MS_PRODUCT_CLASS
                                            WHERE STORE_CD = #{storeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test='prodCds != null and prodCds != ""'>
                    AND
                    <foreach collection="prodCdList" item="item" open=" (" separator="OR" close=")" >
                        tmp.PROD_CD = #{item}
                    </foreach>
                </if>
                ORDER BY tmpap.PROD_CD, tmpai.RECIPES_CD
            </when>
        </choose>
    </select>

    <!-- 판매터치키 조회 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY_CLASS, TB_HQ_TOUCH_KEY_GROUP, TB_HQ_TOUCH_KEY, TB_HQ_PRODUCT, TB_MS_TOUCH_KEY_CLASS, TB_MS_TOUCH_KEY_GROUP, TB_MS_TOUCH_KEY, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 판매터치키 목록을 조회한다.
    -->
    <select id="getTouchKeyList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getTouchKeyList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  A.TUKEY_GRP_CD
                ,		B.TUKEY_GRP_NM
                ,		A.TUKEY_CLASS_CD
                ,		A.TUKEY_CLASS_NM
                ,		C.PROD_CD
                ,		D.PROD_NM
                ,       D.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM    TB_HQ_TOUCH_KEY_CLASS A
                ,       TB_HQ_TOUCH_KEY_GROUP B
                ,       TB_HQ_TOUCH_KEY C
                ,		TB_HQ_PRODUCT D
                WHERE 	A.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	B.HQ_OFFICE_CD (+) = A.HQ_OFFICE_CD
                AND 	B.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.HQ_OFFICE_CD (+) = A.HQ_OFFICE_CD
                AND 	C.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.TUKEY_CLASS_CD (+) = A.TUKEY_CLASS_CD
                AND 	C.TUKEY_FG (+) = '01'
                AND 	D.HQ_OFFICE_CD (+) = A.HQ_OFFICE_CD
                AND 	D.PROD_CD (+) = C.PROD_CD
                <if test='tukeyGrpCd != null and tukeyGrpCd != ""'>
                    AND A.TUKEY_GRP_CD = #{tukeyGrpCd}
                </if>
                ORDER BY A.TUKEY_GRP_CD, A.PAGE_NO, A.Y, A.X, C.PAGE_NO, C.Y, C.X
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  A.TUKEY_GRP_CD
                ,		B.TUKEY_GRP_NM
                ,		A.TUKEY_CLASS_CD
                ,		A.TUKEY_CLASS_NM
                ,		C.PROD_CD
                ,		D.PROD_NM
                ,       D.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM    TB_MS_TOUCH_KEY_CLASS A
                ,       TB_MS_TOUCH_KEY_GROUP B
                ,       TB_MS_TOUCH_KEY C
                ,		TB_MS_PRODUCT D
                WHERE 	A.STORE_CD = #{storeCd}
                AND 	B.STORE_CD (+) = A.STORE_CD
                AND 	B.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.STORE_CD (+) = A.STORE_CD
                AND 	C.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.TUKEY_CLASS_CD (+) = A.TUKEY_CLASS_CD
                AND 	C.TUKEY_FG (+) = '01'
                AND 	D.STORE_CD (+) = A.STORE_CD
                AND 	D.PROD_CD (+) = C.PROD_CD
                <if test='tukeyGrpCd != null and tukeyGrpCd != ""'>
                    AND A.TUKEY_GRP_CD = #{tukeyGrpCd}
                </if>
                ORDER BY A.TUKEY_GRP_CD, A.PAGE_NO, A.Y, A.X, C.PAGE_NO, C.Y, C.X
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 판매터치키 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY_CLASS, TB_HQ_TOUCH_KEY_GROUP, TB_HQ_TOUCH_KEY, TB_HQ_PRODUCT, TB_MS_TOUCH_KEY_CLASS, TB_MS_TOUCH_KEY_GROUP, TB_MS_TOUCH_KEY, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 판매터치키 목록을 조회한다.
    -->
    <select id="getTouchKeyExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getTouchKeyExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  A.TUKEY_GRP_CD
                ,		B.TUKEY_GRP_NM
                ,		A.TUKEY_CLASS_CD
                ,		A.TUKEY_CLASS_NM
                ,		C.PROD_CD
                ,		D.PROD_NM
                ,       D.REMARK
                FROM    TB_HQ_TOUCH_KEY_CLASS A
                ,       TB_HQ_TOUCH_KEY_GROUP B
                ,       TB_HQ_TOUCH_KEY C
                ,		TB_HQ_PRODUCT D
                WHERE 	A.HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	B.HQ_OFFICE_CD (+) = A.HQ_OFFICE_CD
                AND 	B.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.HQ_OFFICE_CD (+) = A.HQ_OFFICE_CD
                AND 	C.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.TUKEY_CLASS_CD (+) = A.TUKEY_CLASS_CD
                AND 	C.TUKEY_FG (+) = '01'
                AND 	D.HQ_OFFICE_CD (+) = A.HQ_OFFICE_CD
                AND 	D.PROD_CD (+) = C.PROD_CD
                <if test='tukeyGrpCd != null and tukeyGrpCd != ""'>
                    AND A.TUKEY_GRP_CD = #{tukeyGrpCd}
                </if>
                ORDER BY A.TUKEY_GRP_CD, A.PAGE_NO, A.Y, A.X, C.PAGE_NO, C.Y, C.X
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  A.TUKEY_GRP_CD
                ,		B.TUKEY_GRP_NM
                ,		A.TUKEY_CLASS_CD
                ,		A.TUKEY_CLASS_NM
                ,		C.PROD_CD
                ,		D.PROD_NM
                ,       D.REMARK
                FROM    TB_MS_TOUCH_KEY_CLASS A
                ,       TB_MS_TOUCH_KEY_GROUP B
                ,       TB_MS_TOUCH_KEY C
                ,		TB_MS_PRODUCT D
                WHERE 	A.STORE_CD = #{storeCd}
                AND 	B.STORE_CD (+) = A.STORE_CD
                AND 	B.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.STORE_CD (+) = A.STORE_CD
                AND 	C.TUKEY_GRP_CD (+) = A.TUKEY_GRP_CD
                AND 	C.TUKEY_CLASS_CD (+) = A.TUKEY_CLASS_CD
                AND 	C.TUKEY_FG (+) = '01'
                AND 	D.STORE_CD (+) = A.STORE_CD
                AND 	D.PROD_CD (+) = C.PROD_CD
                <if test='tukeyGrpCd != null and tukeyGrpCd != ""'>
                    AND A.TUKEY_GRP_CD = #{tukeyGrpCd}
                </if>
                ORDER BY A.TUKEY_GRP_CD, A.PAGE_NO, A.Y, A.X, C.PAGE_NO, C.Y, C.X
            </when>
        </choose>
    </select>

    <!-- 키오스크키맵 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_HQ_KIOSK_GROUP, TB_HQ_KIOSK_M_CLS, TB_HQ_KIOSK_KEY, ,TB_HQ_PRODUCT, TB_MS_KIOSK_CLS, TB_MS_KIOSK_GROUP, TB_MS_KIOSK_M_CLS, TB_MS_KIOSK_KEY, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 키오스크키맵 목록을 조회한다.
    -->
    <select id="getKioskKeyMapList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getKioskKeyMapList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  A.TU_CLS_TYPE
                ,		B.TU_CLS_TYPE_NM
                ,       A.TU_CLS_CD
                ,		A.TU_CLS_NM
                ,       DECODE(A.TU_M_CLS_FG, '2', '사용', '미사용') AS TU_M_CLS_FG
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_CD, NULL) AS TU_M_CLS_CD
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_NM, NULL) AS TU_M_CLS_NM
                ,       D.PROD_CD
                ,		E.PROD_NM
                ,       E.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM    TB_HQ_KIOSK_CLS A
                ,       TB_HQ_KIOSK_GROUP B
                ,       TB_HQ_KIOSK_M_CLS C
                ,       TB_HQ_KIOSK_KEY D
                ,		TB_HQ_PRODUCT E
                WHERE   A.HQ_OFFICE_CD      =   #{hqOfficeCd}
                AND     B.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
                AND     B.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
                AND     C.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.TU_CLS_CD	    (+) =   A.TU_CLS_CD
                AND     D.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
                AND     D.TU_CLS_TYPE  	(+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_TYPE, '2', C.TU_CLS_TYPE, A.TU_CLS_TYPE)
                AND     D.TU_CLS_CD     (+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_CD, '2', C.TU_M_CLS_CD, A.TU_CLS_CD)
                AND 	E.HQ_OFFICE_CD  (+) = 	A.HQ_OFFICE_CD
                AND 	E.PROD_CD  		(+) = 	D.PROD_CD
                <if test='tuClsType != null and tuClsType != ""'>
                    AND A.TU_CLS_TYPE = #{tuClsType}
                </if>
                ORDER BY A.TU_CLS_TYPE, A.INDEX_NO, C.INDEX_NO, D.INDEX_NO
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT  A.TU_CLS_TYPE
                ,		B.TU_CLS_TYPE_NM
                ,       A.TU_CLS_CD
                ,		A.TU_CLS_NM
                ,       DECODE(A.TU_M_CLS_FG, '2', '사용', '미사용') AS TU_M_CLS_FG
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_CD, NULL) AS TU_M_CLS_CD
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_NM, NULL) AS TU_M_CLS_NM
                ,       D.PROD_CD
                ,		E.PROD_NM
                ,       E.REMARK
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM    TB_MS_KIOSK_CLS A
                ,       TB_MS_KIOSK_GROUP B
                ,       TB_MS_KIOSK_M_CLS C
                ,       TB_MS_KIOSK_KEY D
                ,		TB_MS_PRODUCT E
                WHERE   A.STORE_CD          =   #{storeCd}
                AND     A.POS_NO            =   #{posNo}
                AND     B.STORE_CD      (+) =   A.STORE_CD
                AND     B.POS_NO        (+) =   A.POS_NO
                AND     B.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.STORE_CD      (+) =   A.STORE_CD
                AND     C.POS_NO        (+) =   A.POS_NO
                AND     C.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.TU_CLS_CD	    (+) =   A.TU_CLS_CD
                AND     D.STORE_CD      (+) =   A.STORE_CD
                AND     D.POS_NO        (+) =   A.POS_NO
                AND     D.TU_CLS_TYPE  	(+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_TYPE, '2', C.TU_CLS_TYPE, A.TU_CLS_TYPE)
                AND     D.TU_CLS_CD     (+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_CD, '2', C.TU_M_CLS_CD, A.TU_CLS_CD)
                AND 	E.STORE_CD      (+) = 	A.STORE_CD
                AND 	E.PROD_CD  		(+) = 	D.PROD_CD
                <if test='tuClsType != null and tuClsType != ""'>
                    AND A.TU_CLS_TYPE = #{tuClsType}
                </if>
                ORDER BY A.TU_CLS_TYPE, A.INDEX_NO, C.INDEX_NO, D.INDEX_NO
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 키오스크키맵 엑셀 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_HQ_KIOSK_GROUP, TB_HQ_KIOSK_M_CLS, TB_HQ_KIOSK_KEY, ,TB_HQ_PRODUCT, TB_MS_KIOSK_CLS, TB_MS_KIOSK_GROUP, TB_MS_KIOSK_M_CLS, TB_MS_KIOSK_KEY, TB_MS_PRODUCT
        PARAM    : prodInfoSearchVO
        COMMENTS : 키오스크키맵 목록을 조회한다.
    -->
    <select id="getKioskKeyMapExcelList" parameterType="prodInfoSearchVO" resultType="DefaultMap">
        /* USE : ProdInfoSearchMapper.getKioskKeyMapExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  A.TU_CLS_TYPE
                ,		B.TU_CLS_TYPE_NM
                ,       A.TU_CLS_CD
                ,		A.TU_CLS_NM
                ,       DECODE(A.TU_M_CLS_FG, '2', '사용', '미사용') AS TU_M_CLS_FG
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_CD, NULL) AS TU_M_CLS_CD
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_NM, NULL) AS TU_M_CLS_NM
                ,       D.PROD_CD
                ,		E.PROD_NM
                ,       E.REMARK
                FROM    TB_HQ_KIOSK_CLS A
                ,       TB_HQ_KIOSK_GROUP B
                ,       TB_HQ_KIOSK_M_CLS C
                ,       TB_HQ_KIOSK_KEY D
                ,		TB_HQ_PRODUCT E
                WHERE   A.HQ_OFFICE_CD      =   #{hqOfficeCd}
                AND     B.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
                AND     B.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
                AND     C.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.TU_CLS_CD	    (+) =   A.TU_CLS_CD
                AND     D.HQ_OFFICE_CD  (+) =   A.HQ_OFFICE_CD
                AND     D.TU_CLS_TYPE  	(+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_TYPE, '2', C.TU_CLS_TYPE, A.TU_CLS_TYPE)
                AND     D.TU_CLS_CD     (+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_CD, '2', C.TU_M_CLS_CD, A.TU_CLS_CD)
                AND 	E.HQ_OFFICE_CD  (+) = 	A.HQ_OFFICE_CD
                AND 	E.PROD_CD  		(+) = 	D.PROD_CD
                <if test='tuClsType != null and tuClsType != ""'>
                    AND A.TU_CLS_TYPE = #{tuClsType}
                </if>
                ORDER BY A.TU_CLS_TYPE, A.INDEX_NO, C.INDEX_NO, D.INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  A.TU_CLS_TYPE
                ,		B.TU_CLS_TYPE_NM
                ,       A.TU_CLS_CD
                ,		A.TU_CLS_NM
                ,       DECODE(A.TU_M_CLS_FG, '2', '사용', '미사용') AS TU_M_CLS_FG
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_CD, NULL) AS TU_M_CLS_CD
                ,       DECODE(A.TU_M_CLS_FG, '2', C.TU_M_CLS_NM, NULL) AS TU_M_CLS_NM
                ,       D.PROD_CD
                ,		E.PROD_NM
                ,       E.REMARK
                FROM    TB_MS_KIOSK_CLS A
                ,       TB_MS_KIOSK_GROUP B
                ,       TB_MS_KIOSK_M_CLS C
                ,       TB_MS_KIOSK_KEY D
                ,		TB_MS_PRODUCT E
                WHERE   A.STORE_CD          =   #{storeCd}
                AND     A.POS_NO            =   #{posNo}
                AND     B.STORE_CD      (+) =   A.STORE_CD
                AND     B.POS_NO        (+) =   A.POS_NO
                AND     B.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.STORE_CD      (+) =   A.STORE_CD
                AND     C.POS_NO        (+) =   A.POS_NO
                AND     C.TU_CLS_TYPE   (+) =   A.TU_CLS_TYPE
                AND     C.TU_CLS_CD	    (+) =   A.TU_CLS_CD
                AND     D.STORE_CD      (+) =   A.STORE_CD
                AND     D.POS_NO        (+) =   A.POS_NO
                AND     D.TU_CLS_TYPE  	(+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_TYPE, '2', C.TU_CLS_TYPE, A.TU_CLS_TYPE)
                AND     D.TU_CLS_CD     (+) =   DECODE(A.TU_M_CLS_FG, '0', A.TU_CLS_CD, '2', C.TU_M_CLS_CD, A.TU_CLS_CD)
                AND 	E.STORE_CD      (+) = 	A.STORE_CD
                AND 	E.PROD_CD  		(+) = 	D.PROD_CD
                <if test='tuClsType != null and tuClsType != ""'>
                    AND A.TU_CLS_TYPE = #{tuClsType}
                </if>
                ORDER BY A.TU_CLS_TYPE, A.INDEX_NO, C.INDEX_NO, D.INDEX_NO
            </when>
        </choose>
    </select>

</mapper>