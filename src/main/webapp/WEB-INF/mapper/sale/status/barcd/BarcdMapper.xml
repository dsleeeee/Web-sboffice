<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.barcd.service.impl.BarcdMapper">

    <!-- 바코드별별 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_CORNR_PROD, TB_MS_CORNER, TB_MS_PRODUCT
        PARAM    : cornerDayVO
        COMMENTS : 바코드별별 - 리스트를 조회한다.
    -->
    <select id="getBarcdList" parameterType="barcdVO" resultType="DefaultMap">
      <include refid="CmmSQL.PagingTemplateHeader"/>
       <![CDATA[
       SELECT A.BARCD_CD
       		  , B.LV1_NM
       		  , B.LV2_NM
       		  , B.LV3_NM
              , B.PROD_CD
              , B.PROD_NM
              , SUM(B.TOT_SALE_QTY) TOT_SALE_QTY
              , SUM(B.REAL_SALE_AMT) REAL_SALE_AMT
       ]]>
       <include refid="CmmSQL.PagingTemplateCount"/>
       <choose>
       <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
        FROM TB_HQ_PRODUCT_BARCD A
        	,(
    		   SELECT A.LV1_NM,
	               A.LV2_NM,
	               A.LV3_NM,
	               C.PROD_CD,
	               B.PROD_NM,
	               C.STORE_CD,
	               C.HQ_OFFICE_CD,
	               SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY,
	               SUM(C.TOT_SALE_AMT)     AS TOT_SALE_AMT,
	               SUM(C.TOT_DC_AMT)       AS TOT_DC_AMT,
	               SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
	            FROM    (
	                         <![CDATA[
									SELECT  A.HQ_OFFICE_CD
									,       A.PROD_CLASS_CD
									,		NULL	LV1_CD
									,		NULL	LV2_CD
									,		NULL	LV3_CD
									,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
									                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
									             	)  AS  LV1_NM
									,       DECODE	(A.LV ,1  ,NULL
									                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
									              	)  AS  LV2_NM
									,       DECODE	(A.LV ,1  ,NULL
									                    ,2  ,NULL
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
									             	)  AS  LV3_NM
									FROM    (
									        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
									        FROM    (
									                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
									                    FROM    TB_HQ_PRODUCT_CLASS
									                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
									                )
									        START WITH  P_PROD_CLASS_CD ='00000'  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
									        CONNECT BY
									        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
									        )   A
						    ]]>
	                     )                   A,
	                     TB_HQ_PRODUCT       B,
	                     TB_SL_DAILY_PROD    C
	             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
	             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
	             AND	 B.HQ_OFFICE_CD	 = C.HQ_OFFICE_CD
	             AND     B.PROD_CD       = C.PROD_CD
	             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
	              <if test='startDate != null and startDate != ""'>
                     AND C.SALE_DATE >= #{startDate}
                  </if>
                  <if test='endDate != null and endDate != ""'>
                     AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
                  </if>
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>    <!-- 매장 -->
            FROM TB_MS_PRODUCT_BARCD A
        	,(
    		   SELECT A.LV1_NM,
	               A.LV2_NM,
	               A.LV3_NM,
	               C.PROD_CD,
	               B.PROD_NM,
	               C.STORE_CD,
	               C.HQ_OFFICE_CD,
	               SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY,
	               SUM(C.TOT_SALE_AMT)     AS TOT_SALE_AMT,
	               SUM(C.TOT_DC_AMT)       AS TOT_DC_AMT,
	               SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
		           FROM    (
		                         <![CDATA[
			        				SELECT  A.STORE_CD
									,       A.PROD_CLASS_CD
									,		NULL	LV1_CD
									,		NULL	LV2_CD
									,		NULL	LV3_CD
									,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
									                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
									,       DECODE(A.LV ,1  ,NULL
									                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
									              )  AS  LV2_NM
									,       DECODE(A.LV ,1  ,NULL
									                    ,2  ,NULL
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
									FROM    (
									        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
									        FROM    (
									                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
									                    FROM    TB_MS_PRODUCT_CLASS
									                    WHERE   STORE_CD    =  #{storeCd}
									                )
									        START WITH  P_PROD_CLASS_CD ='00000' AND         STORE_CD    =  #{storeCd}
									        CONNECT BY
									        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD  AND         STORE_CD    =  #{storeCd}
									        )   A
			        			]]>
		                     )                   A,
		                     TB_MS_PRODUCT       B,
		                     TB_SL_DAILY_PROD    C
		             WHERE   B.STORE_CD      = #{storeCd}
		             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
		             AND     B.PROD_CD       = C.PROD_CD
		             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
		            <if test='startDate != null and startDate != ""'>
			           AND C.SALE_DATE >= #{startDate}
			        </if>
			        <if test='endDate != null and endDate != ""'>
			           AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
			        </if>
            </when>
        </choose>
               GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
                   C.PROD_CD,
                   B.PROD_NM,
                   C.STORE_CD,
                   C.HQ_OFFICE_CD
       		   ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD
	        ) B
	    WHERE 1=1
        AND A.PROD_CD(+) = B.PROD_CD
        <if test='orgnFg != null and orgnFg == "H"'>
            AND A.HQ_OFFICE_CD(+) = B.HQ_OFFICE_CD
        </if>
        <if test='orgnFg != null and orgnFg == "S"'>
            AND A.STORE_CD(+) = B.STORE_CD
        </if>
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND
            <foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")">
				B.STORE_CD = #{item}
            </foreach>
        </if>
		<if test='orgnFg != null and orgnFg == "H"'>
			AND (
					'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
				OR	B.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
				)
		</if>
        <if test='prodNm != null and prodNm != ""'>
           AND B.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
           AND A.BARCD_CD LIKE '%'||#{barcdCd}||'%'
        </if>
        <![CDATA[
	    GROUP BY A.BARCD_CD, B.PROD_CD, B.PROD_NM, B.LV1_NM, B.LV2_NM, B.LV3_NM
        ]]>
        ORDER BY A.BARCD_CD, B.PROD_CD
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 코너별매출일자별 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_CORNR_PROD, TB_MS_CORNER, TB_MS_PRODUCT
        PARAM    : cornerDayVO
        COMMENTS : 코너별매출일자별 - 리스트를 조회한다.
    -->
    <select id="getBarcdDtlList" parameterType="barcdVO" resultType="DefaultMap">
      <include refid="CmmSQL.PagingTemplateHeader"/>
		SELECT TO_CHAR(TO_DATE(A.SALE_DATE), 'YYYY-MM-DD') AS SALE_DATE
				, A.STORE_CD
				, B.STORE_NM
				, SUM(A.TOT_SALE_QTY) TOT_SALE_QTY
				, SUM(A.TOT_SALE_AMT) TOT_SALE_AMT
				, SUM(A.TOT_DC_AMT) TOT_DC_AMT
				, SUM(A.REAL_SALE_AMT) REAL_SALE_AMT
       <include refid="CmmSQL.PagingTemplateCount"/>
		FROM TB_SL_DAILY_PROD A
				,TB_MS_STORE B
		WHERE 1 = 1
		AND A.STORE_CD = B.STORE_CD
		<if test='startDate != null and startDate != ""'>
           AND A.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND A.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        <if test='prodCd != null and prodCd != ""'>
           AND A.PROD_CD =  #{prodCd}
        </if>
        <if test='orgnFg != null and orgnFg == "H"'>
           AND A.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test='arrStoreCd != null and arrStoreCd != ""'>
        	AND
        	<foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")">
				A.STORE_CD = #{item}
        	</foreach>
        </if>
		<if test='orgnFg != null and orgnFg == "H"'>
			AND (
					'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
				OR	A.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
				)
		</if>
        GROUP BY A.STORE_CD, A.SALE_DATE ,B.STORE_NM
        ORDER BY A.SALE_DATE DESC, A.STORE_CD
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getBarcdExcelList" parameterType="barcdVO" resultType="DefaultMap">
       <![CDATA[
       SELECT A.BARCD_CD
       		  , B.LV1_NM
       		  , B.LV2_NM
       		  , B.LV3_NM
              , B.PROD_CD
              , B.PROD_NM
              , SUM(B.TOT_SALE_QTY) TOT_SALE_QTY
              , SUM(B.REAL_SALE_AMT) REAL_SALE_AMT
       ]]>
       <choose>
       <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
        FROM TB_HQ_PRODUCT_BARCD A
        	,(
    		   SELECT A.LV1_NM,
	               A.LV2_NM,
	               A.LV3_NM,
	               C.PROD_CD,
	               B.PROD_NM,
	               C.STORE_CD,
	               C.HQ_OFFICE_CD,
	               SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY,
	               SUM(C.TOT_SALE_AMT)     AS TOT_SALE_AMT,
	               SUM(C.TOT_DC_AMT)       AS TOT_DC_AMT,
	               SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
	            FROM    (
	                         <![CDATA[
									SELECT  A.HQ_OFFICE_CD
									,       A.PROD_CLASS_CD
									,		NULL	LV1_CD
									,		NULL	LV2_CD
									,		NULL	LV3_CD
									,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
									                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
									             	)  AS  LV1_NM
									,       DECODE	(A.LV ,1  ,NULL
									                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
									              	)  AS  LV2_NM
									,       DECODE	(A.LV ,1  ,NULL
									                    ,2  ,NULL
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
									             	)  AS  LV3_NM
									FROM    (
									        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
									        FROM    (
									                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
									                    FROM    TB_HQ_PRODUCT_CLASS
									                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
									                )
									        START WITH  P_PROD_CLASS_CD ='00000' AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
									        CONNECT BY
									        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
									        )   A
						    ]]>
	                     )                   A,
	                     TB_HQ_PRODUCT       B,
	                     TB_SL_DAILY_PROD    C
	             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
	             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
	             AND	 B.HQ_OFFICE_CD  = C.HQ_OFFICE_CD
	             AND     B.PROD_CD       = C.PROD_CD
	             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
	              <if test='startDate != null and startDate != ""'>
                     AND C.SALE_DATE >= #{startDate}
                  </if>
                  <if test='endDate != null and endDate != ""'>
                     AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
                  </if>
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>    <!-- 매장 -->
            FROM TB_MS_PRODUCT_BARCD A
        	,(
    		   SELECT A.LV1_NM,
	               A.LV2_NM,
	               A.LV3_NM,
	               C.PROD_CD,
	               B.PROD_NM,
	               C.STORE_CD,
	               C.HQ_OFFICE_CD,
	               SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY,
	               SUM(C.TOT_SALE_AMT)     AS TOT_SALE_AMT,
	               SUM(C.TOT_DC_AMT)       AS TOT_DC_AMT,
	               SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
		           FROM    (
		                         <![CDATA[
			        				SELECT  A.STORE_CD
									,       A.PROD_CLASS_CD
									,		NULL	LV1_CD
									,		NULL	LV2_CD
									,		NULL	LV3_CD
									,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
									                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
									,       DECODE(A.LV ,1  ,NULL
									                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
									              )  AS  LV2_NM
									,       DECODE(A.LV ,1  ,NULL
									                    ,2  ,NULL
									                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
									FROM    (
									        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
									        FROM    (
									                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
									                    FROM    TB_MS_PRODUCT_CLASS
									                    WHERE   STORE_CD    =  #{storeCd}
									                )
									        START WITH  P_PROD_CLASS_CD ='00000' AND         STORE_CD    =  #{storeCd}
									        CONNECT BY
									        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD AND         STORE_CD    =  #{storeCd}
									        )   A
			        			]]>
		                     )                   A,
		                     TB_MS_PRODUCT       B,
		                     TB_SL_DAILY_PROD    C
		             WHERE   B.STORE_CD      = #{storeCd}
		             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
		             AND     B.PROD_CD       = C.PROD_CD
		             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
		            <if test='startDate != null and startDate != ""'>
			           AND C.SALE_DATE >= #{startDate}
			        </if>
			        <if test='endDate != null and endDate != ""'>
			           AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
			        </if>
            </when>
        </choose>
               GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
                   C.PROD_CD,
                   B.PROD_NM,
                   C.STORE_CD,
                   C.HQ_OFFICE_CD
       		   ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD
	        ) B
	    WHERE 1=1
        AND A.PROD_CD(+) = B.PROD_CD
        <if test='orgnFg != null and orgnFg == "H"'>
            AND A.HQ_OFFICE_CD(+) = B.HQ_OFFICE_CD
        </if>
        <if test='orgnFg != null and orgnFg == "S"'>
            AND A.STORE_CD(+) = B.STORE_CD
        </if>
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND
            <foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")">
				B.STORE_CD = #{item}
            </foreach>
        </if>
		<if test='orgnFg != null and orgnFg == "H"'>
			AND (
					'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
				OR	B.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
				)
		</if>
        <if test='prodNm != null and prodNm != ""'>
           AND B.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
           AND A.BARCD_CD LIKE '%'||#{barcdCd}||'%'
        </if>
        <![CDATA[
	    GROUP BY A.BARCD_CD, B.PROD_CD, B.PROD_NM, B.LV1_NM, B.LV2_NM, B.LV3_NM
        ]]>
        ORDER BY A.BARCD_CD, B.PROD_CD
    </select>

    <select id="getBarcdDtlExcelList" parameterType="barcdVO" resultType="DefaultMap">
		SELECT TO_CHAR(TO_DATE(A.SALE_DATE), 'YYYY-MM-DD') AS SALE_DATE
				, A.STORE_CD
				, B.STORE_NM
				, SUM(A.TOT_SALE_QTY) TOT_SALE_QTY
				, SUM(A.TOT_SALE_AMT) TOT_SALE_AMT
				, SUM(A.TOT_DC_AMT) TOT_DC_AMT
				, SUM(A.REAL_SALE_AMT) REAL_SALE_AMT
		FROM TB_SL_DAILY_PROD A
				,TB_MS_STORE B
		WHERE 1 = 1
		AND A.STORE_CD = B.STORE_CD
		<if test='startDate != null and startDate != ""'>
           AND A.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND A.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        <if test='prodCd != null and prodCd != ""'>
           AND A.PROD_CD =  #{prodCd}
        </if>
        <if test='orgnFg != null and orgnFg == "H"'>
           AND A.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test='arrStoreCd != null and arrStoreCd != ""'>
        	AND
        	<foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")">
				A.STORE_CD = #{item}
        	</foreach>
        </if>
		<if test='orgnFg != null and orgnFg == "H"'>
			AND (
					'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
				OR	A.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
				)
		</if>
        GROUP BY A.STORE_CD, A.SALE_DATE ,B.STORE_NM
        ORDER BY A.SALE_DATE DESC, A.STORE_CD
    </select>
</mapper>
