<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    SalePriceManage.xml
    판매가관리(매장용)
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2021.04.13     최초작성
-->
<mapper namespace="kr.co.solbipos.base.price.salePriceManage.service.impl.SalePriceManageMapper">

    <!-- 판매가관리 조회 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE
        COMMENTS : [매장]상품, [매장]상품_판매금, [본사]상품, [본사]상품_판매금
    -->
    <select id="getSalePriceManageList" parameterType="SalePriceManageVO" resultType="DefaultMap">
        /* SalePriceManageMapper.getSalePriceManageList */
        <choose>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd != "00000"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.PROD_CLASS_CD,  -- 상품분류코드
                tmp.PO_UNIT_QTY, -- 입수
                thp.COST_UPRC AS HQ_COST_UPRC,   -- 본사원가
                thp.SPLY_UPRC AS HQ_SPLY_UPRC,   -- 대표공급가
                tmp.SPLY_UPRC AS STORE_SPLY_UPRC,   -- 매장공급가
                thp.SALE_UPRC AS HQ_SALE_UPRC,      -- 본사판매가
                tmpsp.SALE_UPRC AS STORE_SALE_UPRC, -- 매장판매가
                tmpsp.SALE_UPRC AS SALE_UPRC,       -- 매장변경판매가
                thp.STIN_SALE_UPRC AS HQ_STIN_SALE_UPRC,      -- 본사내점-판매가
                tmpsp.STIN_SALE_UPRC AS STORE_STIN_SALE_UPRC, -- 매장내점-판매가
                tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,       -- 변경내점-판매가
                thp.DLVR_SALE_UPRC AS HQ_DLVR_SALE_UPRC,      -- 본사배달-판매가
                tmpsp.DLVR_SALE_UPRC AS STORE_DLVR_SALE_UPRC, -- 매장배달-판매가
                tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,       -- 변경배달-판매가
                thp.PACK_SALE_UPRC AS HQ_PACK_SALE_UPRC,      -- 본사포장-판매가
                tmpsp.PACK_SALE_UPRC AS STORE_PACK_SALE_UPRC, -- 매장포장-판매가
                tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,       -- 변경포장-판매가
                tmp.PRC_CTRL_FG,
                tmp.USE_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_MS_PRODUCT tmp,
                (
                    SELECT STORE_CD, PROD_CD,
                    MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                    MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                    MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                    MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                    FROM TB_MS_PRODUCT_SALE_PRICE
                    WHERE 1 = 1
                    <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    ]]>
                    AND SALE_PRC_FG = '1'
                    GROUP BY STORE_CD, PROD_CD
                ) tmpsp,
                (
                    SELECT
                    thp.PROD_CD,
                    thp.COST_UPRC,
                    thp.SPLY_UPRC,
                    thpsp.SALE_UPRC,
                    thpsp.STIN_SALE_UPRC,
                    thpsp.DLVR_SALE_UPRC,
                    thpsp.PACK_SALE_UPRC
                    FROM TB_HQ_PRODUCT thp,
                    (
                        SELECT HQ_OFFICE_CD, PROD_CD,
                        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                        FROM TB_HQ_PRODUCT_SALE_PRICE
                        WHERE 1 = 1
                        <![CDATA[
                           AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                           AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        ]]>
                        AND SALE_PRC_FG = '1'
                        GROUP BY HQ_OFFICE_CD, PROD_CD
                    ) thpsp
                    WHERE 1=1
                    AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND thpsp.PROD_CD = thp.PROD_CD
                ) thp
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test='prodClassCd != null and prodClassCd != ""'>
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                FROM TB_MS_PRODUCT_CLASS
                                                WHERE 1=1
                                                AND STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn}
                </if>
                AND tmpsp.STORE_CD = tmp.STORE_CD
                AND tmpsp.PROD_CD = tmp.PROD_CD
                AND thp.PROD_CD (+)= tmp.PROD_CD
                ORDER BY tmp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!--  단독매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd == "00000"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.PROD_CLASS_CD,  -- 상품분류코드
                tmp.PO_UNIT_QTY, -- 입수
                tmp.SPLY_UPRC AS STORE_SPLY_UPRC,   -- 매장공급가
                tmpsp.SALE_UPRC AS STORE_SALE_UPRC, -- 매장판매가
                tmpsp.SALE_UPRC AS SALE_UPRC,       -- 매장변경판매가
                tmpsp.STIN_SALE_UPRC AS STORE_STIN_SALE_UPRC, -- 매장내점-판매가
                tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,       -- 변경내점-판매가
                tmpsp.DLVR_SALE_UPRC AS STORE_DLVR_SALE_UPRC, -- 매장배달-판매가
                tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,       -- 변경배달-판매가
                tmpsp.PACK_SALE_UPRC AS STORE_PACK_SALE_UPRC, -- 매장포장-판매가
                tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,       -- 변경포장-판매가
                tmp.PRC_CTRL_FG,
                tmp.USE_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_MS_PRODUCT tmp,
                (
                    SELECT STORE_CD, PROD_CD,
                    MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                    MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                    MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                    MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                    FROM TB_MS_PRODUCT_SALE_PRICE
                    WHERE 1 = 1
                    <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    ]]>
                    AND SALE_PRC_FG = '1'
                    GROUP BY STORE_CD, PROD_CD
                ) tmpsp
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test='prodClassCd != null and prodClassCd != ""'>
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                FROM TB_MS_PRODUCT_CLASS
                                                WHERE 1=1
                                                AND STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn}
                </if>
                AND tmpsp.STORE_CD = tmp.STORE_CD
                AND tmpsp.PROD_CD = tmp.PROD_CD
                ORDER BY tmp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

</mapper>