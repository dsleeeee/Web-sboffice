<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.dc.dcfg.service.impl.DcDcfgMapper">

    <select id="getDcDcfgList" parameterType="dcDcfgVO" resultType="DefaultMap">
    	<include refid="CmmSQL.PagingTemplateHeader"/>
    	SELECT STORE.STORE_NM
    		 , TSDT.STORE_CD
     		 , TO_CHAR(TO_DATE(TSDT.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
     		 , NMCODE.NMCODE_CD AS DC_CD
     		 , NMCODE.NMCODE_NM AS DC_NM
     		 , TSDD.TOT_SALE_QTY
     		 , TSDD.TOT_SALE_AMT
     		 , TSDD.TOT_DC_AMT AS DC_AMT
     		 , TSDT.TOT_DC_AMT
     		 , TSDD.REAL_SALE_AMT
     	<include refid="CmmSQL.PagingTemplateCount"/>
  		FROM (
  		        SELECT *
  		          FROM (
                            SELECT HQ_OFFICE_CD,
                                    STORE_CD,
                                    SALE_DATE,
                                    DC_AMT_01,
                                    DC_AMT_02,
                                    DC_AMT_03,
                                    DC_AMT_04,
                                    DC_AMT_05,
                                    DC_AMT_06,
                                    DC_AMT_07,
                                    DC_AMT_08,
                                    DC_AMT_09,
                                    DC_AMT_10,
                                    DC_AMT_11,
                                    DC_AMT_12,
                                    DC_AMT_13,
                                    DC_AMT_14,
                                    DC_AMT_15,
                                    DC_AMT_16,
                                    DC_AMT_17,
                                    DC_AMT_18,
                                    DC_AMT_19,
                                    DC_AMT_20
                              FROM TB_SL_DAILY_TOTAL
                             WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                            <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                                AND SALE_DATE BETWEEN #{startDate} AND #{endDate}
                            </if>
                            <if test='arrStoreCd != null and arrStoreCd.length >= 0'>
                                AND STORE_CD IN
                                <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </if>
                        )
                  UNPIVOT
                        ( TOT_DC_AMT
                                  FOR DC_CD IN( DC_AMT_01 AS '01',
                                                 DC_AMT_02 AS '02',
                                                 DC_AMT_03 AS '03',
                                                 DC_AMT_04 AS '04',
                                                 DC_AMT_05 AS '05',
                                                 DC_AMT_06 AS '06',
                                                 DC_AMT_07 AS '07',
                                                 DC_AMT_08 AS '08',
                                                 DC_AMT_09 AS '09',
                                                 DC_AMT_10 AS '10',
                                                 DC_AMT_11 AS '11',
                                                 DC_AMT_12 AS '12',
                                                 DC_AMT_13 AS '13',
                                                 DC_AMT_14 AS '14',
                                                 DC_AMT_15 AS '15',
                                                 DC_AMT_16 AS '16',
                                                 DC_AMT_17 AS '17',
                                                 DC_AMT_18 AS '18',
                                                 DC_AMT_19 AS '19',
                                                 DC_AMT_20 AS '20')
                        )
             ) TSDT
  		   , TB_SL_DAILY_DC TSDD
     	   , TB_MS_STORE STORE
     	   ,(SELECT NMCODE_CD, NMCODE_NM FROM TB_CM_NMCODE
       		 WHERE NMCODE_GRP_CD = '041') NMCODE
 		WHERE STORE.HQ_OFFICE_CD = #{hqOfficeCd}
 		  AND TSDT.HQ_OFFICE_CD = STORE.HQ_OFFICE_CD
 		  AND TSDD.HQ_OFFICE_CD = STORE.HQ_OFFICE_CD
          AND TSDT.STORE_CD = STORE.STORE_CD
 		  AND TSDT.STORE_CD = TSDD.STORE_CD
   		  AND TSDT.SALE_DATE = TSDD.SALE_DATE
          AND TSDT.DC_CD = TSDD.DC_CD
   		  AND TSDD.DC_CD = NMCODE.NMCODE_CD
      	  <if test='arrDcCd != null and arrDcCd.length >= 0'>
           	AND TSDD.DC_CD IN
            <foreach collection="arrDcCd" item="item" open="(" close=")" separator=",">
               	#{item}
            </foreach>
      	  </if>
      	  ORDER BY TSDT.SALE_DATE DESC, TSDT.STORE_CD, NMCODE.NMCODE_CD, TSDD.TOT_SALE_AMT DESC
    	<include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getDcDcfgExcelList" parameterType="dcDcfgVO" resultType="DefaultMap">
        SELECT STORE.STORE_NM
             , TSDT.STORE_CD
             , TO_CHAR(TO_DATE(TSDT.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
             , NMCODE.NMCODE_CD AS DC_CD
             , NMCODE.NMCODE_NM AS DC_NM
             , TSDD.TOT_SALE_QTY
             , TSDT.TOT_SALE_AMT
             , TSDD.TOT_DC_AMT AS DC_AMT
             , TSDT.TOT_DC_AMT
             , TSDD.REAL_SALE_AMT
        FROM TB_SL_DAILY_TOTAL TSDT
           , TB_SL_DAILY_DC TSDD
           , TB_MS_STORE STORE
           ,(SELECT NMCODE_CD, NMCODE_NM FROM TB_CM_NMCODE
             WHERE NMCODE_GRP_CD = '041') NMCODE
        WHERE STORE.HQ_OFFICE_CD = #{hqOfficeCd} 
          AND TSDT.STORE_CD = TSDD.STORE_CD
          AND TSDT.SALE_DATE = TSDD.SALE_DATE
          AND TSDT.STORE_CD = STORE.STORE_CD
          AND TSDD.DC_CD = NMCODE.NMCODE_CD
          <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND TSDT.SALE_DATE BETWEEN #{startDate} AND #{endDate}
          </if>
          <if test='arrStoreCd != null and arrStoreCd.length >= 0'>
            AND TSDT.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
          </if>
          <if test='arrDcCd != null and arrDcCd.length >= 0'>
            AND TSDD.DC_CD IN
            <foreach collection="arrDcCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
          </if>
          ORDER BY TSDT.SALE_DATE DESC, TSDT.STORE_CD, NMCODE.NMCODE_CD, TSDD.TOT_SALE_AMT DESC
    </select>

    <select id="getDcDcfgDtlList" parameterType="dcDcfgVO" resultType="DefaultMap">
	       SELECT A.STORE_NM
             , TO_CHAR(TO_DATE(A.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
             , A.LV1_NM
		     , A.LV2_NM
		     , A.LV3_NM
		     , A.PROD_CD
		     , A.PROD_NM
		     , A.DC_CD
		     , A.DC_NM
		     , A.DC_REASON_CD
		     , NVL(A.MS_COUPN_NM, A.HQ_COUPN_NM)                   AS DCDTL_DC_NM
		     , A.SALE_QTY
		     , A.SALE_AMT
		     , A.DC_AMT
		     , A.TOT_DC_AMT
		     , A.REAL_SALE_AMT
		  FROM (
		      SELECT C.LV1_NM
		          , C.LV2_NM
		          , C.LV3_NM
		          , C.PROD_NM
		          , TSSD.SALE_DATE
                  , TSSD.PROD_CD
                  , TMS.STORE_NM
		          , TSSDD.DC_CD
		          , (
		                   SELECT  '(' || TSSDD.DC_CD || ')' || NMCODE_NM
		                    FROM    TB_CM_NMCODE
		                    WHERE   NMCODE_GRP_CD   = '041'
		                    AND     NMCODE_CD       = TSSDD.DC_CD)              AS DC_NM
		           , TSSDD.DC_REASON_CD
		           , (
		                 SELECT  COUPN_NM
		                 FROM    TB_HQ_COUPON
		                 WHERE   1 = 1
		                 <if test='hqOfficeCd != null and hqOfficeCd != ""'>
		                  AND HQ_OFFICE_CD                =  #{hqOfficeCd}
		                 </if>
		                 AND     PAY_CLASS_CD || COUPN_CD    = TSSDD.DC_REASON_CD
		             )   AS HQ_COUPN_NM
		          , (
		                 SELECT  MAX(COUPN_NM)               AS COUPN_NM
		                 FROM    TB_MS_COUPON
		                 WHERE 1 = 1
		                 <if test='storeCd != null and storeCd != ""'>
		                  AND   STORE_CD                    = #{storeCd}
		                 </if>
		                 AND     PAY_CLASS_CD || COUPN_CD    = TSSDD.DC_REASON_CD
		             )   AS MS_COUPN_NM
		           , SUM(TSSD.SALE_QTY) AS SALE_QTY
		           , SUM(TSSD.SALE_AMT) AS SALE_AMT
		           , SUM(TSSDD.DC_AMT) AS DC_AMT
		           , SUM(TSSD.DC_AMT) AS TOT_DC_AMT
		           , SUM(TSSD.REAL_SALE_AMT) AS REAL_SALE_AMT
		        FROM TB_SL_SALE_DTL TSSD
		           , TB_SL_SALE_DTL_DC TSSDD
		           , TB_MS_STORE TMS
		         <choose>
		         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
		           , (
		               SELECT  A.LV1_NM,
		                   A.LV2_NM,
		                   A.LV3_NM,
		                   B.PROD_CD,
		                   B.PROD_NM
		               FROM(
				               <![CDATA[	    			 
								SELECT  A.HQ_OFFICE_CD
								,       A.PROD_CLASS_CD
								,		NULL	LV1_CD
								,		NULL	LV2_CD
								,		NULL	LV3_CD
								,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
								                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
								             	)  AS  LV1_NM
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
								              	)  AS  LV2_NM
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
								             	)  AS  LV3_NM                    
								FROM    (
								        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
								        FROM    (
								                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
								                    FROM    TB_HQ_PRODUCT_CLASS				
								                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
								                )
								        START WITH  P_PROD_CLASS_CD ='00000' AND   HQ_OFFICE_CD    =   #{hqOfficeCd}
								        CONNECT BY 
								        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD AND   HQ_OFFICE_CD    =   #{hqOfficeCd}
								        )   A
					    		]]>
		                     )                   A,
		                     TB_HQ_PRODUCT       B
		             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
		             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
		             ) C
		         </when>
		         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
		           , (
		              SELECT  A.LV1_NM,
		                   A.LV2_NM,
		                   A.LV3_NM,
		                   B.PROD_CD,
		                   B.PROD_NM
		               FROM(
		               			<![CDATA[
		        				SELECT  A.STORE_CD
								,       A.PROD_CLASS_CD
								,		NULL	LV1_CD
								,		NULL	LV2_CD
								,		NULL	LV3_CD
								,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
								                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
								,       DECODE(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
								              )  AS  LV2_NM
								,       DECODE(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM                    
								FROM    (
								        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
								        FROM    (
								                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
								                    FROM    TB_MS_PRODUCT_CLASS						
								                    WHERE   STORE_CD    =  #{storeCd} 
								                )
								        START WITH  P_PROD_CLASS_CD ='00000' AND   STORE_CD    =  #{storeCd}
								        CONNECT BY 
								        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD AND   STORE_CD    =  #{storeCd}
								        )   A
		        				]]>
		                     )                   A,
		                     TB_MS_PRODUCT       B
		             WHERE   B.STORE_CD      = #{storeCd}
		             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
		             ) C
		            </when>
		       </choose>
		       WHERE TSSD.HQ_OFFICE_CD = TSSDD.HQ_OFFICE_CD
		         AND TSSD.HQ_BRAND_CD  = TSSDD.HQ_BRAND_CD
		         AND TSSD.STORE_CD     = TSSDD.STORE_CD
		         AND TSSD.SALE_DATE    = TSSDD.SALE_DATE
		         AND TSSD.POS_NO       = TSSDD.POS_NO
		         AND TSSD.BILL_NO      = TSSDD.BILL_NO
		         AND TSSD.BILL_DTL_NO  = TSSDD.BILL_DTL_NO
		         AND TSSD.PROD_CD      = C.PROD_CD
		         AND TSSD.STORE_CD = TMS.STORE_CD
		         <if test='storeCd != null and storeCd != ""'>
		          AND TSSD.STORE_CD 	   = #{storeCd}
		         </if>
		         <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
	               AND TSSD.SALE_DATE     BETWEEN #{startDate}   AND     #{endDate}
	             </if>
                 <if test='dcCd != null and dcCd != ""'>
		          AND TSSDD.DC_CD 	   = #{dcCd}
		         </if>
		       GROUP BY TSSD.SALE_DATE, TMS.STORE_NM, TSSD.PROD_CD, TSSDD.DC_CD, TSSDD.DC_REASON_CD, C.LV1_NM, C.LV2_NM, C.LV3_NM, C.PROD_NM
		      ) A
		ORDER BY A.SALE_DATE, A.STORE_NM, A.DC_REASON_CD, A.PROD_CD, A.DC_CD
    </select>

    <select id="getDcNmList" parameterType="dcDcfgVO" resultType="DefaultMap">
    	SELECT DISTINCT DC.DC_CD DC_CD
    		 , NMCODE.NMCODE_NM DC_NM
    		 , (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = DC.STORE_CD) AS STORE_NM
		FROM TB_SL_SALE_DTL_DC DC, TB_CM_NMCODE NMCODE
		WHERE 1=1
			  AND DC.DC_CD = NMCODE.NMCODE_CD
			  AND NMCODE.NMCODE_GRP_CD = '041'
			  <if test='hqOfficeCd != null and hqOfficeCd != ""'>
			     AND DC.HQ_OFFICE_CD = #{hqOfficeCd}
			  </if>
			  <if test='arrStoreCd != null and arrStoreCd != ""'>
			  	AND DC.STORE_CD IN
			  	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
			  		#{item}
			  	</foreach>
			  </if>
		ORDER BY NMCODE.NMCODE_NM
    </select>

</mapper>
