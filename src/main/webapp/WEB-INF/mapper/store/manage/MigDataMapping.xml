<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    MigDataMapping.xml
    OKPOS-KCP 데이터 이관
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2020.07.16     최초작성
-->
<mapper namespace="kr.co.solbipos.store.manage.migDataMapping.service.impl.MigDataMappingMapper">

    <!-- OKPOS-KCP 데이터 이관 조회 -->
    <!--
        TABLE    : TB_MIG_DATA_MAPPING
        COMMENTS : OKPOS 매장 컨버전 정보
    -->
    <select id="getMigDataMappingList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getMigDataMappingList */
        SELECT
        tmdm.OKPOS_STORE_CD,
        tmdm.OKPOS_STORE_NM,
        tmdm.SOLBI_STORE_CD,
        tmdm.SOLBI_STORE_NM,
        tmdm.MIG_YN,
        tmdm.MIG_POS_MST_CNT,
        tmdm.MIG_PROD_CLS_CNT,
        tmdm.MIG_PROD_CNT,
        tmdm.MIG_PROD_PRICE_CNT,
        tmdm.MIG_SALE_CNT
        FROM TB_MIG_DATA_MAPPING tmdm
        WHERE 1=1
        AND tmdm.MIG_REG_DATE BETWEEN #{startDate} AND #{endDate}
        <if test="okposStoreCd != null and okposStoreCd != ''">
            AND tmdm.OKPOS_STORE_CD LIKE '%'|| #{okposStoreCd} ||'%'
        </if>
        <if test="okposStoreNm != null and okposStoreNm != ''">
            AND tmdm.OKPOS_STORE_NM LIKE '%'|| #{okposStoreNm} ||'%'
        </if>
        <choose>
            <when test='orgnFg != null and orgnFg != ""'>
                <!-- 대리점 -->
                <if test='orgnFg == "A"'>
                    <![CDATA[
                        AND tmdm.REG_ID = #{userId}
                    ]]>
                </if>
            </when>
        </choose>
        ORDER BY tmdm.SOLBI_STORE_CD
    </select>

    <!-- OKPOS-KCP 사용자정보 조회 -->
    <!--
        TABLE    : OKPOS_USER_INFO
        COMMENTS :
    -->
    <select id="getOkposUserInfoList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getOkposUserInfoList */
        SELECT
        oui.USER_ID -- OKPOS ID
        ,oui.USER_PWD -- OKPOS 비밀번호 ( 평문 )
        ,oui.CORP_CD -- OKPOS VAN대리점 코드
        FROM OKPOS_USER_INFO oui --view
        WHERE 1=1
        <if test="userId != null and userId != ''">
            AND oui.USER_ID = #{userId}
        </if>
        <if test="userPwd != null and userPwd != ''">
            AND oui.USER_PWD = #{userPwd}
        </if>
    </select>

    <!-- OKPOS-KCP 매장 조회 -->
    <!--
        TABLE    : OKPOS_TB_MS_STORE
        COMMENTS :
    -->
    <select id="getMigDataMappingInfoList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getMigDataMappingInfoList */
        SELECT
        otms.HQ_OFFICE_CD
        ,otms.HQ_OFFICE_NM
        ,otms.STORE_CD
        ,otms.STORE_NM
        ,otms.BIZ_NO
        ,otms.POS_CNT AS POS_NO
        ,otms.POS_CNT AS INSTALL_POS_CNT
        ,otms.OWNER_NM
--         ,otms.BIZ_TYPE_NM
--         ,otms.BIZ_KIND_NM
--         ,otms.BIZ_SHOP_NM
        ,SUBSTR(otms.POST_NO, 0, 5) AS POST_NO -- (신)우편번호5자리, (구)우편번호6자리
        ,otms.ADDR
        ,otms.ADDR_DTL
        ,otms.ADDRESS
        ,otms.TEL_NO
--         ,otms.HP_NO
        ,otms.SHOP_STAT_FG AS SYS_STAT_FG
--         ,otms.SOLBI_SHOP_STAT_FG
--         ,otms.PGM_TYPE_FG_NM
        ,otms.CLS_FG
--         ,otms.BRAND_MGR_YN
--         ,otms.CLS_MGR_LEVEL_FG
--         ,otms.CORP_CD -- OKPOS VAN대리점 코드
--         ,otms.CORP_NM
--         ,otms.VAN_CD
--         ,otms.MIG_FG
        ,otms.VAN_TERM_NO -- 다중 사업자 구분
--         ,otms.PROGRAM_FG
--         ,otms.POS_PROGRAM_FG_NM
--         ,otms.SAIP_FG
--         ,otms.PROD_CR_FG
--         ,otms.CORNER_FG
--         ,otms.CORNER_USE_FG
--         ,otms.PRICE_MGR_FG
--         ,otms.PRICE_CONTROL_FG
--         ,otms.LAST_LOGIN_DATE
        ,otms.SYS_OPEN_DATE
--         ,otms.SYS_CLOSE_DATE
--         ,otms.SHOP_USER_ID
--         ,otms.LAST_VER_SEQ
--         ,otms.USER_ID
--         ,otms.USER_PWD
--         ,otms.MULTI_BIZ_TYPE
--         ,otms.MULTI_BIZ_TYPE_FG -- 1 :단독 2: 다중사업자
        ,otms.AREA_CD
        ,otms.LAST_SALE_DATE  -- 최종 영업일
        FROM OKPOS_TB_MS_STORE otms --view
        WHERE 1=1
        <if test="userId != null and userId != ''">
            AND otms.USER_ID = #{userId}
        </if>
        <if test="corpCd != null and corpCd != ''">
            AND otms.CORP_CD = #{corpCd}
        </if>
        <if test="okposStoreCd != null and okposStoreCd != ''">
            AND otms.STORE_CD LIKE '%'|| #{okposStoreCd} ||'%'
        </if>
        <if test="okposStoreNm != null and okposStoreNm != ''">
            AND otms.STORE_NM LIKE '%'|| #{okposStoreNm} ||'%'
        </if>
        ORDER BY otms.STORE_CD
    </select>

    <!-- OKPOS-KCP 데이터 이관 저장 -->
    <!--
        TABLE    : TB_MIG_DATA_MAPPING
        COMMENTS : OKPOS 매장 컨버전 정보
    -->
    <insert id="getMigDataMappingInfoSaveInsert" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getMigDataMappingInfoSaveInsert */
        INSERT INTO TB_MIG_DATA_MAPPING
        (
            OKPOS_STORE_CD
            ,OKPOS_STORE_NM
            ,OKPOS_HQ_OFFICE_CD
            ,OKPOS_HQ_OFFICE_NM
            ,SOLBI_STORE_CD
            ,SOLBI_STORE_NM
            ,SOLBI_HQ_OFFICE_CD
            ,SOLBI_HQ_OFFICE_NM
            ,MIG_REG_DATE
            ,MIG_YN
            ,MIG_DT
            ,MIG_POS_MST_CNT
            ,MIG_PROD_CLS_CNT
            ,MIG_PROD_CNT
            ,MIG_PROD_PRICE_CNT
            ,MIG_SALE_CNT
            ,REG_DT
            ,REG_ID
            ,MOD_DT
            ,MOD_ID
            ,MIG_POS_MST_YN
            ,MIG_PROD_CLS_YN
            ,MIG_PROD_YN
            ,MIG_PROD_PRICE_YN
            ,MIG_SALE_YN
        ) VALUES (
            #{okposStoreCd} -- OKPOS 매장 코드
            ,#{okposStoreNm} -- OKPOS 매장명
            ,#{okposHqOfficeCd} -- OKPOS 본사코드
            ,#{okposHqOfficeNm} -- OKPOS 본사명
            ,#{solbiStoreCd} -- 링크 매장코드
            ,'' -- 링크 매장명
            ,''-- 링크 본사코드
            ,'' -- 링크 본사 명
            ,#{date}
            ,'N'
            ,''
            ,0
            ,0
            ,0
            ,0
            ,0
            ,#{regDt}
            ,#{regId} -- SOLBI_USER_ID
            ,#{modDt}
            ,#{modId} -- SOLBI_USER_ID
            ,'N'
            ,'N'
            ,'N'
            ,'N'
            ,'N'
        )
    </insert>

    <!-- SOLBI 매장코드 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : [매장]매장 정보
    -->
    <select id="getMigDataMappingSolbiStoreCdList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getMigDataMappingSolbiStoreCdList */
        SELECT LPAD(TO_CHAR(NVL(MAX(SUBSTR(STORE_CD, 2, 6)), 0) + 1), 6, '0') STORE_CD
--         'S'||LPAD(TO_CHAR(NVL(MAX(SUBSTR(STORE_CD, 2, 6)), 0) + 1), 6, '0') STORE_CD
        FROM TB_MS_STORE
        WHERE 1=1
        AND STORE_CD LIKE 'S%'
        AND LENGTH(STORE_CD) = 7
    </select>

    <!-- 매출재이관 -->
    <!--
        TABLE    : TB_MIG_DATA_MAPPING
        COMMENTS : OKPOS 매장 컨버전 정보
    -->
    <update id="getMigDataMappingSaleAgainSave" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getMigDataMappingSaleAgainSave */
        UPDATE
        TB_MIG_DATA_MAPPING
        SET
        MIG_YN = 'N',
        MIG_SALE_CNT = 0,
        MIG_SALE_YN = 'N'
        WHERE 1=1
        AND OKPOS_STORE_CD = #{okposStoreCd}
    </update>

    <!-- NXPOS 탭 - 조회 -->
    <!--
        TABLE    : TB_CM_SALE_CONV_TO_LYNK
        COMMENTS :
    -->
    <select id="getNxMigDataMappingList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getNxMigDataMappingList */
        SELECT  A.CONV_SEQ
        ,       TO_CHAR(TO_DATE(A.CONV_REG_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS CONV_REG_DATE
        ,		A.STORE_CD
        ,		B.STORE_NM
        ,       TO_CHAR(TO_DATE(A.F_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd')   AS F_SALE_DATE
        ,       TO_CHAR(TO_DATE(A.T_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd')   AS T_SALE_DATE
        ,		A.LAST_BILL_NO
        ,		A.PROC_YN
        ,		A.CONV_MSG
        ,		A.CONV_COMMENTS
        ,		TO_CHAR(TO_DATE((SELECT MAX(C.SALE_DATE) FROM TB_SL_SALE_DTL C WHERE C.STORE_CD = A.STORE_CD), 'yyyymmdd'), 'yyyy-mm-dd') AS MAX_SALE_DATE
        FROM 	TB_CM_SALE_CONV_TO_LYNK A
        ,		TB_MS_STORE B
        WHERE 	A.STORE_CD 	=	B.STORE_CD
        AND     A.CONV_REG_DATE BETWEEN #{startDate} AND #{endDate}
        <if test="procYn != null and procYn != ''">
            AND A.PROC_YN = #{procYn}
        </if>
        <if test="storeCd != null and storeCd != ''">
            AND B.STORE_CD LIKE '%'|| #{storeCd} ||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND B.STORE_NM LIKE '%'|| #{storeNm} ||'%'
        </if>
        <if test="agencyCd != null and agencyCd != ''">
            AND B.AGENCY_CD = #{agencyCd}
        </if>
        ORDER
        BY      B.HQ_OFFICE_CD
        ,       A.STORE_CD
        ,       A.CONV_SEQ
    </select>

    <!-- NXPOS 탭 - 매장 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS :
    -->
    <select id="getNxMigDataMappingInfoList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getNxMigDataMappingInfoList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT 	A.HQ_OFFICE_CD
        ,		B.HQ_OFFICE_NM
        ,       A.HQ_BRAND_CD
        ,       A.STORE_CD
        ,		A.STORE_NM
        ,		A.BIZ_NO
        ,		A.SYS_STAT_FG
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM 	TB_MS_STORE A
        ,		TB_HQ_OFFICE B
        WHERE   1=1
        AND 	B.HQ_OFFICE_CD = A.HQ_OFFICE_CD
        <if test="agencyCd != null and agencyCd != ''">
            AND A.AGENCY_CD = #{agencyCd}
        </if>
        <if test="hqOfficeCd != null and hqOfficeCd != ''">
            AND A.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
        </if>
        <if test="hqOfficeNm != null and hqOfficeNm != ''">
            AND B.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
        </if>
        <if test="storeCd != null and storeCd != ''">
            AND A.STORE_CD LIKE '%'|| #{storeCd} ||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND A.STORE_NM LIKE '%'|| #{storeNm} ||'%'
        </if>
        ORDER
        BY      A.HQ_OFFICE_CD
        ,		A.STORE_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- NXPOS1 탭 - 신규 이관 등록 -->
    <!--
        TABLE    : TB_MIG_DATA_MAPPING
        COMMENTS :
    -->
    <insert id="getNxMigDataMappingInfoSave" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getNxMigDataMappingInfoSave */
        INSERT INTO TB_CM_SALE_CONV_TO_LYNK
        (
        		HQ_OFFICE_CD
        ,		HQ_BRAND_CD
        ,		STORE_CD
        ,		CONV_SEQ
        ,		F_SALE_DATE
        ,		T_SALE_DATE
        ,		CONV_REG_DATE
        ,		PROC_YN
        ,		REG_DT
        ,		REG_ID
        ,		MOD_DT
        ,		MOD_ID
        ,       LAST_BILL_NO
        )
        VALUES
        (
                #{hqOfficeCd}
        ,       #{hqBrandCd}
        ,       #{storeCd}
        ,       (SELECT NVL(MAX(CONV_SEQ),0)+1 FROM TB_CM_SALE_CONV_TO_LYNK)
        ,       #{fSaleDate}
        ,       #{tSaleDate}
        ,       #{convRegDate}
        ,       'N'
        ,       #{regDt}
        ,       #{regId}
        ,       #{modDt}
        ,       #{modId}
        ,		(SELECT MAX(BILL_NO) FROM TB_SL_SALE_DTL WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND STORE_CD = #{storeCd})
        )
    </insert>

    <!-- 제우스 탭 - 조회 -->
    <!--
        TABLE    : TB_ZEUS_TO_LYNK_STORE_MAPPING
        COMMENTS :
    -->
    <select id="getZeusDataMappingList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getZeusDataMappingList */
        SELECT  A.COCD
        ,       A.BUUT
        ,       A.BUNAME1
        ,       A.HQ_OFFICE_CD
        ,       A.STORE_CD
        ,       A.STORE_NM
        ,       A.MAPPING_FG
        ,       A.MAPPING_DT
        ,       A.REG_DT
        ,       A.DEL_DT
        ,       A.REMARK
        FROM    (
                    SELECT  A.COCD
                    ,       A.BUUT
                    ,       (SELECT B.BUNAME1 FROM F1400@ZEUSDB B WHERE B.BUCOCD = A.COCD AND B.BUBUUT = A.BUUT)    AS BUNAME1
                    ,       A.HQ_OFFICE_CD
                    ,       A.STORE_CD
                    ,       (SELECT C.STORE_NM FROM TB_MS_STORE C WHERE C.STORE_CD = A.STORE_CD)                    AS STORE_NM
                    ,       (
                                SELECT  DECODE(MIN(F.CNT), 0, '9', A.MAPPING_FG)        -- 9 해지 체크(제우스/링크 매장이 사용중지가 되면 해지로 표시)
                                FROM    (
                                            <![CDATA[
                                                SELECT COUNT(*) CNT FROM TB_MS_STORE D WHERE D.STORE_CD = A.STORE_CD AND D.SYS_STAT_FG IN ('1', '9')   -- 오픈, 데모
                                                UNION ALL
                                                SELECT COUNT(*) CNT FROM F1400@ZEUSDB E WHERE E.BUCOCD = A.COCD AND E.BUBUUT = A.BUUT AND (E.BUUSFL <> 0 AND E.BUGSST <> 'D') -- 사용중지가가 아니거나 삭제되지 않은 경우
                                            ]]>
                                        ) F
                            )   AS MAPPING_FG
                    ,       TO_CHAR(TO_DATE(A.MAPPING_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')        AS MAPPING_DT
                    ,       TO_CHAR(TO_DATE(A.REG_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')            AS REG_DT
                    ,       '연동삭제'                                                                               AS DEL_DT
                    ,       A.REMARK                                                                                AS REMARK
                    FROM    TB_ZEUS_TO_LYNK_STORE_MAPPING A
                    WHERE   1=1
                    <if test="startDate != null and startDate != ''">
                        AND (
                                A.MAPPING_DT BETWEEN #{startDate} || '000000' AND #{endDate} || '235959'
                                or
                                A.REG_DT BETWEEN #{startDate} || '000000' AND #{endDate} || '235959'
                            )
                    </if>
                    <if test="storeCd != null and storeCd != ''">
                        AND (
                                A.BUUT LIKE '%'|| #{storeCd} || '%'
                                or
                                A.STORE_CD LIKE '%'|| #{storeCd} || '%'
                            )
                    </if>
                    <if test="storeNm != null and storeNm != ''">
                        AND (
                                A.COCD || A.BUUT IN (SELECT B.BUCOCD || B.BUBUUT FROM F1400@ZEUSDB B WHERE B.BUNAME1 LIKE '%'|| #{storeNm} || '%')
                                or
                                A.STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE STORE_NM LIKE '%'||#{storeNm}|| '%')
                            )
                    </if>
                    UNION ALL
                    SELECT  A.COCD
                    ,       A.BUUT
                    ,       (SELECT B.BUNAME1 FROM F1400@ZEUSDB B WHERE B.BUCOCD = A.COCD AND B.BUBUUT = A.BUUT)    AS BUNAME1
                    ,       A.B_HQ_OFFICE_CD
                    ,       A.B_STORE_CD
                    ,       (SELECT C.STORE_NM FROM TB_MS_STORE C WHERE C.STORE_CD = A.B_STORE_CD)                  AS STORE_NM
                    ,       A.B_MAPPING_FG                                                                          AS MAPPING_FG
                    ,       TO_CHAR(TO_DATE(A.B_MAPPING_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')      AS MAPPING_DT
                    ,       TO_CHAR(TO_DATE(A.B_REG_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')          AS REG_DT
                    ,       TO_CHAR(TO_DATE(A.PROC_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS')           AS DEL_DT
                    ,       A.B_REMARK                                                                              AS REMARK
                    FROM    TB_LG_ZEUS_TO_LYNK_STORE_MAPPING_D_LOG A
                    WHERE   1=1
                    AND 	A.PROC_FG = 'D'
                    <if test="startDate != null and startDate != ''">
                        AND (
                                A.B_MAPPING_DT BETWEEN #{startDate} || '000000' AND #{endDate} || '235959'
                                or
                                A.B_REG_DT BETWEEN #{startDate} || '000000' AND #{endDate} || '235959'
                            )
                    </if>
                    <if test="storeCd != null and storeCd != ''">
                        AND (
                                A.BUUT LIKE '%'|| #{storeCd} || '%'
                                or
                                A.B_STORE_CD LIKE '%'|| #{storeCd} || '%'
                            )
                    </if>
                    <if test="storeNm != null and storeNm != ''">
                        AND (
                                A.COCD || A.BUUT IN (SELECT B.BUCOCD || B.BUBUUT FROM F1400@ZEUSDB B WHERE B.BUNAME1 LIKE '%'|| #{storeNm} || '%')
                                or
                                A.B_STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE STORE_NM LIKE '%'||#{storeNm}|| '%')
                            )
                    </if>
                ) A
        WHERE   1=1
        <if test="mappingFg != null and mappingFg != ''">
            AND A.MAPPING_FG = #{mappingFg}
        </if>
    </select>

    <!-- 제우스 탭 - 매장연동신청 팝업 조회 -->
    <!--
        TABLE    : TB_ZEUS_TO_LYNK_STORE_MAPPING
        COMMENTS :
    -->
    <select id="getSearchZeusStoreList" parameterType="MigDataMappingVO" resultType="DefaultMap">
        /* MigDataMappingMapper.getSearchZeusStoreList */
        <choose>
            <when test='zeusFg != null and zeusFg == "1"'>
                SELECT 	A.BUCOCD      AS HQ_OFFICE_CD
                ,		A.BUBUUT      AS STORE_CD
                ,		A.BUNAME1     AS STORE_NM
                FROM 	F1400@ZEUSDB A
                WHERE 	A.BUCOCD || A.BUBUUT NOT IN (SELECT B.COCD || B.BUUT FROM TB_ZEUS_TO_LYNK_STORE_MAPPING B)
                <if test='hqStoreCd != null and hqStoreCd !=""'>
                    <choose>
                        <when test='hqStoreFg != null and hqStoreFg == "1"'>
                            AND A.BUCOCD LIKE '%'||#{hqStoreCd}||'%'
                        </when>
                        <when test='hqStoreFg != null and hqStoreFg == "2"'>
                            AND A.BUBUUT LIKE '%'||#{hqStoreCd}||'%'
                        </when>
                        <when test='hqStoreFg != null and hqStoreFg == "3"'>
                            AND A.BUNAME1 LIKE '%'||#{hqStoreCd}||'%'
                        </when>
                    </choose>
                </if>
                ORDER
                BY      A.BUCOCD
                ,       A.BUBUUT
            </when>
            <when test='zeusFg != null and zeusFg == "2"'>
                SELECT	A.HQ_OFFICE_CD
                ,		A.STORE_CD
                ,		A.STORE_NM
                FROM	TB_MS_STORE A
                WHERE   A.STORE_CD NOT IN (SELECT B.STORE_CD FROM TB_ZEUS_TO_LYNK_STORE_MAPPING B)
                AND     A.STORE_CD IN (SELECT DISTINCT C.STORE_CD FROM TB_MS_STORE_ZEUS_V01 C)
                <if test='hqStoreCd != null and hqStoreCd !=""'>
                    <choose>
                        <when test='hqStoreFg != null and hqStoreFg == "1"'>
                            AND A.HQ_OFFICE_CD LIKE '%'||#{hqStoreCd}||'%'
                        </when>
                        <when test='hqStoreFg != null and hqStoreFg == "2"'>
                            AND A.STORE_CD LIKE '%'||#{hqStoreCd}||'%'
                        </when>
                        <when test='hqStoreFg != null and hqStoreFg == "3"'>
                            AND A.STORE_NM LIKE '%'||#{hqStoreCd}||'%'
                        </when>
                    </choose>
                </if>
                ORDER
                BY      A.HQ_OFFICE_CD
                ,       A.STORE_CD
            </when>
        </choose>
    </select>

    <!-- 제우스 탭 - 매장연동신청 팝업 제우스DB 등록 -->
    <!--
        TABLE    : TB_ZEUS_TO_LYNK_STORE@ZEUSDB
        COMMENTS :
    -->
    <insert id="getZeusStoreMappingReg" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getZeusStoreMappingReg */
        INSERT INTO TB_ZEUS_TO_LYNK_STORE@ZEUSDB
        (
            COCD
        ,   BUUT
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        ,   HQ_OFFICE_CD
        ,   STORE_CD
        )
        VALUES
        (
            #{cocd}
        ,   #{buut}
        ,   #{regDt}
        ,   #{regId}
        ,   #{modDt}
        ,   #{modId}
        ,   #{hqOfficeCd}
        ,   #{storeCd}
        )
    </insert>

    <!-- 제우스 탭 - 매장연동신청 팝업 링크DB 등록 -->
    <!--
        TABLE    : TB_ZEUS_TO_LYNK_STORE_MAPPING
        COMMENTS :
    -->
    <insert id="getLynkStoreMappingReg" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getLynkStoreMappingReg */
        INSERT INTO TB_ZEUS_TO_LYNK_STORE_MAPPING
        (
            COCD
        ,   BUUT
        ,   HQ_OFFICE_CD
        ,   STORE_CD
        ,   MAPPING_FG
        ,   USE_YN
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        )
        VALUES
        (
            #{cocd}
        ,   #{buut}
        ,   #{hqOfficeCd}
        ,   #{storeCd}
        ,   '0'
        ,   'Y'
        ,   #{regDt}
        ,   #{regId}
        ,   #{modDt}
        ,   #{modId}
        )
    </insert>

    <!-- 제우스 탭 - 매장연동신청 팝업 제우스DB 삭제 -->
    <!--
        TABLE    : TB_ZEUS_TO_LYNK_STORE@ZEUSDB
        COMMENTS :
    -->
    <delete id="getDeleteZeusStoreMapping" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getDeleteZeusStoreMapping */
        DELETE  TB_ZEUS_TO_LYNK_STORE@ZEUSDB
        WHERE   COCD = #{cocd}
        AND     BUUT = #{buut}
    </delete>

    <!-- 제우스 탭 - 매장연동신청 팝업 링크DB 삭제 -->
    <!--
        TABLE    : TB_ZEUS_TO_LYNK_STORE_MAPPING
        COMMENTS :
    -->
    <delete id="getDeleteLynkStoreMapping" parameterType="MigDataMappingVO">
        /* MigDataMappingMapper.getDeleteLynkStoreMapping */
        DELETE  TB_ZEUS_TO_LYNK_STORE_MAPPING
        WHERE   COCD = #{cocd}
        AND     BUUT = #{buut}
    </delete>

</mapper>