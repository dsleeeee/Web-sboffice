<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.application.session.auth.service.impl.AuthMapper">

    <select id="selectWebUser" parameterType="sessionInfoVO" resultType="sessionInfoVO">
        /* AuthMapper.selectWebUser */
        SELECT
            twui.USER_ID,
            twui.USER_PWD,
            info.USER_NM,
            twui.AUTH_GRP_CD,
            info.ORGN_FG,
            info.ORGN_GRP_CD,
            info.ORGN_GRP_NM,
            info.ORGN_CD,
            info.ORGN_NM,
            info.STORE_CD,
            info.STORE_NM,
            info.HQ_OFFICE_CD,
            info.HQ_OFFICE_NM,
            info.EMP_NO,
            twui.LAST_LOGIN_DT,
            twui.LAST_PWD_CHG_DT,
            twui.LOGIN_FAIL_CNT,
            twui.USER_STAT_FG,
            #{vUserId, jdbcType=VARCHAR} AS V_USER_ID
        FROM
            TB_WB_USER_INFO twui
        INNER JOIN (
            SELECT
                USER_ID,
                ORGN_FG,
                ORGN_CD,
                ORGN_NM,
                USER_NM,
                EMP_NO,
                STORE_CD,
                STORE_NM,
                HQ_OFFICE_CD,
                HQ_OFFICE_NM,
                ORGN_GRP_CD,
                ORGN_GRP_NM
            FROM
                (
                SELECT
                    A.USER_ID,
                    'S' ORGN_FG,
                    A.STORE_CD AS ORGN_CD,
                    B.STORE_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    B.STORE_CD AS STORE_CD,
                    B.STORE_NM AS STORE_NM,
                    C.HQ_OFFICE_CD,
                    C.HQ_OFFICE_NM,
                    DECODE( C.HQ_OFFICE_CD, '00000', A.STORE_CD, C.HQ_OFFICE_CD ) AS ORGN_GRP_CD,
                    DECODE( C.HQ_OFFICE_CD, '00000', B.STORE_NM, C.HQ_OFFICE_NM ) AS ORGN_GRP_NM
                FROM
                    TB_MS_EMPLOYEE A,
                    TB_MS_STORE B,
                    TB_HQ_OFFICE C
                WHERE
                    A.STORE_CD = B.STORE_CD
                    AND B.HQ_OFFICE_CD = C.HQ_OFFICE_CD
                    AND A.WEB_USE_YN = 'Y'
                    AND A.USER_ID = #{userId}
            UNION ALL
                SELECT
                    A.USER_ID,
                    'H' ORGN_FG,
                    A.HQ_OFFICE_CD AS ORGN_CD,
                    B.HQ_OFFICE_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    '' STORE_CD,
                    '' STORE_NM,
                    A.HQ_OFFICE_CD,
                    B.HQ_OFFICE_NM,
                    A.HQ_OFFICE_CD AS ORGN_GRP_CD,
                    B.HQ_OFFICE_NM AS ORGN_GRP_NM
                FROM
                    TB_HQ_EMPLOYEE A,
                    TB_HQ_OFFICE B
                WHERE
                    A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                    AND A.WEB_USE_YN = 'Y'
                    AND A.USER_ID = #{userId}
            UNION ALL
                SELECT
                    A.USER_ID,
                    DECODE( A.ADMIN_YN, 'Y', 'M', 'A' ) AS ORGN_FG,
                    A.AGENCY_CD AS ORGN_CD,
                    B.AGENCY_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    '' STORE_CD,
                    '' STORE_NM,
                    '' HQ_OFFICE_CD,
                    '' HQ_OFFICE_NM,
                    A.AGENCY_CD AS ORGN_GRP_CD,
                    B.AGENCY_NM AS ORGN_GRP_NM
                FROM
                    TB_CM_EMPLOYEE A,
                    TB_CM_AGENCY B
                WHERE
                    A.AGENCY_CD = B.AGENCY_CD
                    AND A.WEB_USE_YN = 'Y'
                    AND A.USER_ID = #{userId} )
            WHERE
                ROWNUM = 1 ) info ON
            twui.USER_ID = info.USER_ID
        WHERE
            twui.USER_ID = #{userId}
            AND twui.USE_YN = 'Y'

    </select>

    <select id="selectLoginHist" resultType="loginHistVO" parameterType="loginHistVO">
        /* AuthMapper.selectLoginHist */
         SELECT SEQ,
                USER_ID,
                STAT_CD,
                LOGIN_ORGN,
                LOGIN_IP,
                BRWSR_INFO,
                LOGIN_DATE,
                LOGIN_DT
         FROM TB_WB_LOGIN_HIST
         WHERE USER_ID = #{userId}
    </select>

    <insert id="insertLoginHist" parameterType="loginHistVO">
      /* AuthMapper.insertLoginHist */
        INSERT INTO TB_WB_LOGIN_HIST
        (
          SEQ,
          USER_ID,
          STAT_CD,
          LOGIN_ORGN,
          LOGIN_IP,
          BRWSR_INFO,
          LOGIN_DATE,
          LOGIN_DT
        )
        VALUES
        (
          SQ_WB_LOGIN_HIST.NEXTVAL,
          #{userId},
          #{statCd},
          #{loginOrgn},
          #{loginIp},
          #{brwsrInfo},
          #{loginDate},
          #{loginDt}
        )
    </insert>

    <!--    권한 있는 리소스 가져오기 -->
    <select id="selectAuthMenu" parameterType="sessionInfoVO" resultType="resrceInfoVO">
      /* AuthMapper.selectAuthMenu */
         SELECT *
           FROM (
             SELECT DISTINCT RESRCE_CD,
                    P_RESRCE,
                    RESRCE_FG,
                    FUNC_FG,
                    RESRCE_NM,
                    URL,
                    SPCL_AUTHOR,
                    DISP_LEVEL,
                    DISP_IDX,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
               FROM TB_WB_RESRCE_INFO
              START WITH RESRCE_CD IN (
                    SELECT RESRCE_CD
                      FROM TB_WB_RESRCE_INFO
                     WHERE RESRCE_CD IN (
                      SELECT RESRCE_CD
                        FROM TB_WB_AUTHOR_GRP_RESRCE
                       WHERE AUTH_GRP_CD = (
                        SELECT AUTH_GRP_CD
                          FROM TB_WB_USER_INFO
                         WHERE USER_ID = #{userId}
                        ) AND USE_YN = 'Y'
                     UNION ALL
                    SELECT RESRCE_CD
                      FROM TB_WB_AUTHOR_EXCEPT
                     WHERE USER_ID = #{userId}
                       AND INCLD_EXCLD_FG = 'I'
                       AND USE_YN = 'Y'
                      )
              AND RESRCE_CD NOT IN (
                    SELECT RESRCE_CD
                      FROM TB_WB_AUTHOR_EXCEPT
                     WHERE USER_ID = #{userId}
                       AND INCLD_EXCLD_FG = 'E'
                       AND USE_YN = 'Y')
              /*AND RESRCE_FG = 'F'*/
              )
          CONNECT BY PRIOR P_RESRCE = RESRCE_CD
        <![CDATA[
              AND LEVEL < 3
        ]]>
         )
         ORDER BY URL ASC
      </select>

    <select id="selectStoreHwAuthKeyCheck" parameterType="sessionInfoVO" resultType="String">
      /* AuthMapper.selectStoreHwAuthKeyCheck */
      SELECT DECODE(COUNT(tmp.POS_NO), 0, 'N', 'Y') AS EXIST_FG
           FROM TB_MS_POS tmp
          WHERE tmp.STORE_CD = #{storeCd}
            AND tmp.HW_AUTH_KEY = #{hwAuthKey}
    </select>


    <update id="updateLoginInfo" parameterType="sessionInfoVO">
        /* AuthMapper.updateLoginInfo */
        UPDATE TB_WB_USER_INFO
        SET
            LAST_LOGIN_DT = #{lastLoginDt}
            <if test="loginFailCnt != null">
            , LOGIN_FAIL_CNT = #{loginFailCnt}
            </if><if test='userStatFg.toString() != null and userStatFg.toString() != ""'>
            , USER_STAT_FG = #{userStatFg}
            </if>
        WHERE
            USER_ID = #{userId}
    </update>


</mapper>
