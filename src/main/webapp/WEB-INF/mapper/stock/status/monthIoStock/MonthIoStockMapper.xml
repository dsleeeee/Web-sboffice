<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.stock.status.monthiostock.service.impl.MonthIostockMapper">

    <!-- 월수불현황 - 본사 리스트 조회 -->  
    <!--
        TABLE    : TB_ST_HQ_STOCK_MONTHLY, TB_HQ_PRODUCT, TB_HQ_PRODUCT_BARCD, TB_HQ_PRODUCT_CLASS
        PARAM    : monthIostockVO
        COMMENTS : 월수불현황 - 본사 리스트를 조회한다.
    -->
    <select id="hqMonthIostockList" parameterType="monthIostockVO" resultType="DefaultMap">
        <include refid="CmmSQL.PagingTemplateHeader"/>
	    SELECT A.LV1_CD
		        , A.LV1_NM
		        , A.LV2_CD
		        , A.LV2_NM
		        , A.LV3_CD
		        , A.LV3_NM
             , (SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = A.PO_UNIT_FG)  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
	         <include refid="CmmSQL.PagingTemplateCount"/>
	    FROM (
		    SELECT A.*
		         , TPHSM.PROD_CD
			     , THP.PROD_NM
			     , TPHSM.PO_UNIT_QTY
			     , THP.PO_UNIT_FG
			     , THPB.BARCD_CD
			     <if test='unitFg == "1"'>
				     , SF_ZERO_TO_NULL(SUM(TPHSM.BASE_QTY / THP.PO_UNIT_QTY))             AS BASE_QTY /* 기초재고수량 */
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.BASE_AMT))                               AS BASE_AMT /* 기초재고금액 */
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_IN_QTY / THP.PO_UNIT_QTY))         AS IO_OCCR_QTY_01 /* 본사입고 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_IN_TOT))                           AS IO_OCCR_TOT_01 /* 본사입고 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_OUT_QTY / THP.PO_UNIT_QTY))        AS IO_OCCR_QTY_16 /* 업체반출 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_OUT_TOT))                          AS IO_OCCR_TOT_16 /* 업체반출 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_OUT_QTY / THP.PO_UNIT_QTY))           AS IO_OCCR_QTY_13 /* 본사출고 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_OUT_TOT))                             AS IO_OCCR_TOT_13 /* 본사출고 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_IN_QTY / THP.PO_UNIT_QTY))            AS IO_OCCR_QTY_02 /* 본사반입 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_IN_TOT))                              AS IO_OCCR_TOT_02 /* 본사반입 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_IN_QTY / THP.PO_UNIT_QTY))    AS IO_OCCR_QTY_04 /* 매장이입 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_IN_TOT))                      AS IO_OCCR_TOT_04 /* 매장이입 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_OUT_QTY / THP.PO_UNIT_QTY))   AS IO_OCCR_QTY_14 /* 매장이출 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_OUT_TOT))                     AS IO_OCCR_TOT_14 /* 매장이출 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.DISUSE_QTY / THP.PO_UNIT_QTY))           AS IO_OCCR_QTY_17 /* 재고폐기 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.DISUSE_AMT))                             AS IO_OCCR_TOT_17 /* 재고폐기 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.ADJ_QTY / THP.PO_UNIT_QTY))              AS IO_OCCR_QTY_21 /* 재고조정 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.ADJ_AMT))                                AS IO_OCCR_TOT_21 /* 재고조정 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.SET_IN_QTY / THP.PO_UNIT_QTY))           AS IO_OCCR_QTY_22 /* 세트생성 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.SET_IN_AMT))                             AS IO_OCCR_TOT_22 /* 세트생성 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_ORDER_QTY / THP.PO_UNIT_QTY)) AS IO_OCCR_QTY_19 /* 거래처출고 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_ORDER_TOT))                   AS IO_OCCR_TOT_19 /* 거래처출고 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_RTN_QTY / THP.PO_UNIT_QTY))   AS IO_OCCR_QTY_33 /* 거래처반품 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_RTN_TOT))                     AS IO_OCCR_TOT_33 /* 거래처반품 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.CLOSE_QTY / THP.PO_UNIT_QTY))            AS CLOSE_QTY /* 기말재고수량 */
	                 , SF_ZERO_TO_NULL(SUM(TPHSM.CLOSE_AMT))                              AS CLOSE_AMT /* 기말재고금액 */    
                 </if>
                 <if test='unitFg == "0"'>
                     , SF_ZERO_TO_NULL(SUM(TPHSM.BASE_QTY))             AS BASE_QTY /* 기초재고수량 */
                     , SF_ZERO_TO_NULL(SUM(TPHSM.BASE_AMT))             AS BASE_AMT /* 기초재고금액 */
                     , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_IN_QTY))         AS IO_OCCR_QTY_01 /* 본사입고 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_IN_TOT))         AS IO_OCCR_TOT_01 /* 본사입고 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_OUT_QTY))        AS IO_OCCR_QTY_16 /* 업체반출 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.VENDR_OUT_TOT))        AS IO_OCCR_TOT_16 /* 업체반출 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_OUT_QTY))           AS IO_OCCR_QTY_13 /* 본사출고 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_OUT_TOT))           AS IO_OCCR_TOT_13 /* 본사출고 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_IN_QTY))            AS IO_OCCR_QTY_02 /* 본사반입 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.HQ_IN_TOT))            AS IO_OCCR_TOT_02 /* 본사반입 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_IN_QTY))    AS IO_OCCR_QTY_04 /* 매장이입 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_IN_TOT))    AS IO_OCCR_TOT_04 /* 매장이입 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_OUT_QTY))   AS IO_OCCR_QTY_14 /* 매장이출 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.STORE_MOVE_OUT_TOT))   AS IO_OCCR_TOT_14 /* 매장이출 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.DISUSE_QTY))           AS IO_OCCR_QTY_17 /* 재고폐기 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.DISUSE_AMT))           AS IO_OCCR_TOT_17 /* 재고폐기 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.ADJ_QTY))              AS IO_OCCR_QTY_21 /* 재고조정 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.ADJ_AMT))              AS IO_OCCR_TOT_21 /* 재고조정 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.SET_IN_QTY))           AS IO_OCCR_QTY_22 /* 세트생성 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.SET_IN_AMT))           AS IO_OCCR_TOT_22 /* 세트생성 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_ORDER_QTY)) AS IO_OCCR_QTY_19 /* 거래처출고 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_ORDER_TOT)) AS IO_OCCR_TOT_19 /* 거래처출고 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_RTN_QTY))   AS IO_OCCR_QTY_33 /* 거래처반품 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.SALE_VENDR_RTN_TOT))   AS IO_OCCR_TOT_33 /* 거래처반품 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPHSM.CLOSE_QTY))            AS CLOSE_QTY /* 기말재고수량 */
                     , SF_ZERO_TO_NULL(SUM(TPHSM.CLOSE_AMT))            AS CLOSE_AMT /* 기말재고금액 */
                 </if>

			  FROM (
			          SELECT   A.P_PROD_CLASS_CD   AS LV1_CD
	                          ,A.PROD_CLASS_CD     AS LV2_CD
	                          ,A.PROD_CLASS_NM     AS LV2_NM
	                          ,B.PROD_CLASS_CD     AS LV3_CD
	                          ,B.PROD_CLASS_NM     AS LV3_NM
	                          ,(SELECT  SF_GET_PROD_CLASSES('H', #{hqOfficeCd},    A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM
	                  FROM    (
	                              SELECT  HQ_OFFICE_CD
	                                    , P_PROD_CLASS_CD
	                                    , PROD_CLASS_CD
	                                    , PROD_CLASS_NM
	                              FROM    TB_HQ_PRODUCT_CLASS
	                              WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
	                              AND     P_PROD_CLASS_CD IN (
	                                                             SELECT  PROD_CLASS_CD
	                                                             FROM    TB_HQ_PRODUCT_CLASS
	                                                             WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
	                                                             AND     P_PROD_CLASS_CD = '00000'
	                                                          )
	                          )                      A,
	                          TB_HQ_PRODUCT_CLASS    B
	                  WHERE   B.P_PROD_CLASS_CD IN    (
	                                                      SELECT  PROD_CLASS_CD
	                                                      FROM    TB_HQ_PRODUCT_CLASS
	                                                      WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
	                                                      AND     P_PROD_CLASS_CD IN (
	                                                                                   SELECT  PROD_CLASS_CD
	                                                                                   FROM    TB_HQ_PRODUCT_CLASS
	                                                                                   WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
	                                                                                   AND     P_PROD_CLASS_CD = '00000'
	                                                                                  )
	                                                  )
	                  AND     A.HQ_OFFICE_CD  = B.HQ_OFFICE_CD
	                  AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
	              )               A 
			     , TB_ST_HQ_STOCK_MONTHLY TPHSM
			     , TB_HQ_PRODUCT THP
			     , TB_HQ_PRODUCT_BARCD THPB
			 WHERE TPHSM.HQ_OFFICE_CD = #{hqOfficeCd}
			   <if test='startDate != null and startDate != ""'>
		          AND TPHSM.IOSTOCK_YM  = #{startDate}
		       </if>
		       <if test='prodCd != null and prodCd != ""'>
	              AND THP.PROD_CD  = #{prodCd}
	           </if>
	           <if test='prodClassCd != null and prodClassCd != ""'>
                  AND THP.PROD_CLASS_CD  IN (
                                              SELECT
                                                  PROD_CLASS_CD
                                              FROM
                                                  TB_HQ_PRODUCT_CLASS
                                              WHERE
                                                  HQ_OFFICE_CD = #{hqOfficeCd}
                                              START WITH
                                                  PROD_CLASS_CD = #{prodClassCd}
                                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                              CONNECT BY
                                                  PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD
                                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
               </if>
	           <if test='prodNm != null and prodNm != ""'>
	              AND THP.PROD_NM  LIKE '%'||#{prodNm}||'%'
	           </if>
	           <if test='barcdCd != null and barcdCd != ""'>
	              AND THPB.BARCD_CD  = #{barcdCd}
	           </if>
	           <if test='arrVendrCd != null and arrVendrCd != ""'>
                    AND THP.PROD_CD IN    ( SELECT  PROD_CD
                                            FROM    TB_HQ_VENDOR_PROD
                                            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                            AND     VENDR_CD IN
                                            <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                                                #{item}
                                            </foreach>
                                          )
                </if>
			   AND TPHSM.HQ_OFFICE_CD = THP.HQ_OFFICE_CD
			   AND TPHSM.PROD_CD      = THP.PROD_CD
			   AND THP.PROD_CLASS_CD  = A.LV3_CD
			   AND TPHSM.HQ_OFFICE_CD = THPB.HQ_OFFICE_CD(+)
			   AND TPHSM.PROD_CD      = THPB.PROD_CD(+)
			 GROUP BY  A.LV1_CD
		             , A.LV1_NM
		             , A.LV2_CD
		             , A.LV2_NM
		             , A.LV3_CD
		             , A.LV3_NM
				     , TPHSM.PROD_CD
				     , THP.PROD_NM
				     , TPHSM.PO_UNIT_QTY
				     , THP.PO_UNIT_FG
				     , THPB.BARCD_CD
				     , TPHSM.PO_UNIT_QTY
            ) A
         <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
    
    <!-- 월수불현황 - 매장 리스트 조회 -->  
    <!--
        TABLE    : TB_ST_STORE_STOCK_MONTHLY, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD
        PARAM    : monthIostockVO
        COMMENTS : 월수불현황 - 매장 리스트를 조회한다.
    -->
    <select id="storeMonthIostockList" parameterType="monthIostockVO" resultType="DefaultMap">
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT A.LV1_CD
		        , A.LV1_NM
		        , A.LV2_CD
		        , A.LV2_NM
		        , A.LV3_CD
		        , A.LV3_NM
             , (SELECT NMCODE_NM FROM TB_MS_STORE_NMCODE WHERE NMCODE_GRP_CD = '093' AND STORE_CD = #{storeCd} AND NMCODE_CD = A.PO_UNIT_FG)  AS PO_UNIT_FG_NM        /* 매장 가상로그인시 */
             <include refid="CmmSQL.PagingTemplateCount"/>
        FROM (
	        SELECT A.* 
	             , TPSSM.PROD_CD
			     , TMP.PROD_NM
			     , TPSSM.PO_UNIT_QTY
			     , TMP.PO_UNIT_FG
			     , TMPB.BARCD_CD
			     <if test='unitFg == "1"'>
				     , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_QTY / TMP.PO_UNIT_QTY))         AS BASE_QTY         /* 기초재고수량 */
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_AMT))                           AS BASE_AMT         /* 기초재고금액 */
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_QTY / TMP.PO_UNIT_QTY))     AS IO_OCCR_QTY_03 /* 매장입고 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_TOT))                       AS IO_OCCR_TOT_03 /* 매장입고 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_QTY / TMP.PO_UNIT_QTY))    AS IO_OCCR_QTY_12 /* 매장반품 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_TOT))                      AS IO_OCCR_TOT_12 /* 매장반품 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_QTY / TMP.PO_UNIT_QTY))    AS IO_OCCR_QTY_06 /* 사입입고 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_TOT))                      AS IO_OCCR_TOT_06 /* 사입입고 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_QTY / TMP.PO_UNIT_QTY))   AS IO_OCCR_QTY_18 /* 사입반품 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_TOT))                     AS IO_OCCR_TOT_18 /* 사입반품 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_QTY / TMP.PO_UNIT_QTY))   AS IO_OCCR_QTY_11 /* 매장판매 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_TOT))                     AS IO_OCCR_TOT_11 /* 매장판매 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_QTY / TMP.PO_UNIT_QTY))      AS IO_OCCR_QTY_04 /* 매장이입 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_TOT))                        AS IO_OCCR_TOT_04 /* 매장이입 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_QTY / TMP.PO_UNIT_QTY))     AS IO_OCCR_QTY_14 /* 매장이출 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_TOT))                       AS IO_OCCR_TOT_14 /* 매장이출 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_QTY / TMP.PO_UNIT_QTY))       AS IO_OCCR_QTY_01 /* 재고폐기 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_AMT))                         AS IO_OCCR_TOT_01 /* 재고폐기 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_QTY / TMP.PO_UNIT_QTY))          AS IO_OCCR_QTY_01 /* 재고조정 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_AMT))                            AS IO_OCCR_TOT_01 /* 재고조정 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_QTY / TMP.PO_UNIT_QTY))       AS IO_OCCR_QTY_01 /* 세트생성 수량*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_AMT))                         AS IO_OCCR_TOT_01 /* 세트생성 금액*/
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_QTY / TMP.PO_UNIT_QTY))        AS CLOSE_QTY            /* 기말재고수량 */
	                 , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_AMT))                          AS CLOSE_AMT            /* 기말재고금액 */
                 </if>
                 <if test='unitFg == "0"'>
                     , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_QTY))         AS BASE_QTY         /* 기초재고수량 */
                     , SF_ZERO_TO_NULL(SUM(TPSSM.BASE_AMT))         AS BASE_AMT         /* 기초재고금액 */
                     , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_QTY))     AS IO_OCCR_QTY_03 /* 매장입고 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_IN_TOT))     AS IO_OCCR_TOT_03 /* 매장입고 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_QTY))    AS IO_OCCR_QTY_12 /* 매장반품 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_OUT_TOT))    AS IO_OCCR_TOT_12 /* 매장반품 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_QTY))    AS IO_OCCR_QTY_06 /* 사입입고 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_IN_TOT))    AS IO_OCCR_TOT_06 /* 사입입고 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_QTY))   AS IO_OCCR_QTY_18 /* 사입반품 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.PURCHS_OUT_TOT))   AS IO_OCCR_TOT_18 /* 사입반품 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_QTY))   AS IO_OCCR_QTY_11 /* 매장판매 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.STORE_SALE_TOT))   AS IO_OCCR_TOT_11 /* 매장판매 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_QTY))      AS IO_OCCR_QTY_04 /* 매장이입 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_IN_TOT))      AS IO_OCCR_TOT_04 /* 매장이입 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_QTY))     AS IO_OCCR_QTY_14 /* 매장이출 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.MOVE_OUT_TOT))     AS IO_OCCR_TOT_14 /* 매장이출 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_QTY))       AS IO_OCCR_QTY_01 /* 재고폐기 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.DISUSE_AMT))       AS IO_OCCR_TOT_01 /* 재고폐기 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_QTY))          AS IO_OCCR_QTY_01 /* 재고조정 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.ADJ_AMT))          AS IO_OCCR_TOT_01 /* 재고조정 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_QTY))       AS IO_OCCR_QTY_01 /* 세트생성 수량*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.SET_IN_AMT))       AS IO_OCCR_TOT_01 /* 세트생성 금액*/
                     , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_QTY))        AS CLOSE_QTY            /* 기말재고수량 */
                     , SF_ZERO_TO_NULL(SUM(TPSSM.CLOSE_AMT))        AS CLOSE_AMT            /* 기말재고금액 */
                 </if>
			  FROM (
			            SELECT   A.P_PROD_CLASS_CD   AS LV1_CD
			                     , A.PROD_CLASS_CD     AS LV2_CD
			                     , A.PROD_CLASS_NM     AS LV2_NM
			                     , B.PROD_CLASS_CD     AS LV3_CD
			                     , B.PROD_CLASS_NM     AS LV3_NM
			                     , (SELECT  SF_GET_PROD_CLASSES('S', #{storeCd}, A.P_PROD_CLASS_CD) FROM DUAL)    AS LV1_NM
			             FROM    (
			                         SELECT  STORE_CD
			                               , P_PROD_CLASS_CD
			                               , PROD_CLASS_CD
			                               , PROD_CLASS_NM
			                         FROM    TB_MS_PRODUCT_CLASS
			                         WHERE   STORE_CD        = #{storeCd}
			                         AND     P_PROD_CLASS_CD IN (
			                                                        SELECT  PROD_CLASS_CD
			                                                        FROM    TB_MS_PRODUCT_CLASS
			                                                        WHERE   STORE_CD        = #{storeCd}
			                                                        AND     P_PROD_CLASS_CD = '00000'
			                                                     )
			                     )                      A,
			                     TB_MS_PRODUCT_CLASS    B
			             WHERE   B.P_PROD_CLASS_CD IN    (
			                                                 SELECT  PROD_CLASS_CD
			                                                 FROM    TB_MS_PRODUCT_CLASS
			                                                 WHERE   STORE_CD        = #{storeCd}
			                                                 AND     P_PROD_CLASS_CD IN (
			                                                                                SELECT  PROD_CLASS_CD
			                                                                                FROM    TB_MS_PRODUCT_CLASS
			                                                                                WHERE   STORE_CD        = #{storeCd}
			                                                                                AND     P_PROD_CLASS_CD = '00000'
			                                                                             )
			                                             )
			             AND     A.STORE_CD      = B.STORE_CD
			             AND     A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
			        )                A
			     , TB_ST_STORE_STOCK_MONTHLY TPSSM
			     , TB_MS_PRODUCT TMP
			     , TB_MS_PRODUCT_BARCD TMPB
			 WHERE TPSSM.STORE_CD    = #{storeCd}
			   <if test='startDate != null and startDate != ""'>
	              AND TPSSM.IOSTOCK_YM  = #{startDate}
	           </if>
	           <if test='prodCd != null and prodCd != ""'>
	              AND TMP.PROD_CD  = #{prodCd}
	           </if>
	           <if test='prodClassCd != null and prodClassCd != ""'>
	              AND TMP.PROD_CLASS_CD IN  (
	                                          SELECT              PROD_CLASS_CD
	                                          FROM                TB_MS_PRODUCT_CLASS
	                                          WHERE               STORE_CD        = #{storeCd}
	                                          START WITH          PROD_CLASS_CD   = #{prodClassCd}
	                                          AND                 STORE_CD        = #{storeCd}
	                                          CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
	                                          AND                 STORE_CD        = #{storeCd}
	                                         )
	           </if>
	           <if test='prodNm != null and prodNm != ""'>
	              AND TMP.PROD_NM  LIKE '%'||#{prodNm}||'%'
	           </if>
	           <if test='barcdCd != null and barcdCd != ""'>
	              AND TMPB.BARCD_CD  = #{barcdCd}
	           </if>
	           <if test='arrVendrCd != null and arrVendrCd != ""'>
                    AND TMP.PROD_CD IN    ( SELECT  PROD_CD
                                            FROM    TB_MS_VENDOR_PROD
                                            WHERE   STORE_CD = #{storeCd}
                                            AND     VENDR_CD IN
                                            <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                                                #{item}
                                            </foreach>
                                          )
                </if>
			   AND TPSSM.STORE_CD     = TMP.STORE_CD
			   AND TPSSM.PROD_CD      = TMP.PROD_CD
			   AND TMP.PROD_CLASS_CD = A.LV3_CD
			   AND TPSSM.STORE_CD     = TMPB.STORE_CD(+)
			   AND TPSSM.PROD_CD      = TMPB.PROD_CD(+)
			 GROUP BY  A.LV1_CD
			         , A.LV1_NM
			         , A.LV2_CD
			         , A.LV2_NM
			         , A.LV3_CD
			         , A.LV3_NM 
			         , TPSSM.PROD_CD
				     , TMP.PROD_NM
				     , TMP.PO_UNIT_QTY
				     , TMP.PO_UNIT_FG
				     , TMPB.BARCD_CD
				     , TPSSM.PO_UNIT_QTY
            ) A
         <include refid="CmmSQL.PagingTemplateBottom"/>	     
    </select>
</mapper>