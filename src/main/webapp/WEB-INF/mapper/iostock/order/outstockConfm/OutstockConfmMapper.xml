<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.iostock.order.outstockConfm.service.impl.OutstockConfmMapper">
    <!-- 출고확정 - 매장요청 미확정건, 출고자료 미생성건 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_PO_HQ_STORE_ORDER, TB_PO_HQ_STORE_DISTRIBUTE
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 매장요청 미확정건, 출고자료 미생성건을 조회한다.
    -->
    <select id="getReqNoConfirmCnt" parameterType="outstockConfmVO" resultType="DefaultMap">
        /* USE : OutstockConfmMapper.getReqNoConfirmCnt */
        <![CDATA[
        SELECT	tphso.REQ_NO_CONFIRM_CNT, tphsd.OUTSTOCK_NO_CREATE_CNT
        FROM	(	SELECT  COUNT(*) AS REQ_NO_CONFIRM_CNT
                    FROM    TB_MS_STORE tms
                    ,       TB_PO_HQ_STORE_ORDER tphso
                    WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     tphso.STORE_CD      =   tms.STORE_CD
                    AND     REQ_DATE    BETWEEN #{startDate} AND #{endDate}
                    AND     PROC_FG     IN      ('00','10')
                ) tphso
        ,		(	SELECT  COUNT(*) AS OUTSTOCK_NO_CREATE_CNT
                    FROM    (   SELECT  tphso.STORE_CD
                                FROM    TB_PO_HQ_STORE_DISTRIBUTE tphso
                                WHERE   tphso.HQ_OFFICE_CD	=       #{hqOfficeCd}
                                AND     tphso.REQ_DATE      BETWEEN #{startDate} AND #{endDate}
                                AND     tphso.SLIP_FG       =       #{slipFg}
                                AND     tphso.PROC_FG       IN      ('00','10','20')
                                GROUP
                                BY      tphso.STORE_CD
                            )
                ) tphsd
        ]]>
    </select>

    <!-- 출고확정 - 출고확정 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_MS_EMPLOYEE
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정 리스트를 조회한다.
    -->
    <select id="getOutstockConfmList" parameterType="outstockConfmVO" resultType="DefaultMap">
        /* USE : OutstockConfmMapper.getOutstockConfmList */
        <![CDATA[
        SELECT   tphso.SLIP_NO, tphso.VENDR_CD, tphso.SLIP_FG, tphso.SLIP_KIND, tphso.PROC_FG, tphso.STORE_CD, tms.STORE_NM
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_AMT*tphso.SLIP_FG AS ORDER_AMT
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_VAT*tphso.SLIP_FG AS ORDER_VAT
        ,        tphso.ORDER_TOT_QTY*tphso.SLIP_FG AS ORDER_TOT_QTY, tphso.ORDER_TOT*tphso.SLIP_FG AS ORDER_TOT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_AMT  *tphso.SLIP_FG AS MGR_AMT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_VAT  *tphso.SLIP_FG AS MGR_VAT
        ,        tphso.MGR_TOT_QTY  *tphso.SLIP_FG AS MGR_TOT_QTY  , tphso.MGR_TOT  *tphso.SLIP_FG AS MGR_TOT
        ,        (CASE WHEN tphso.PROC_FG <  '20' THEN tphso.OUT_DATE                  ELSE NULL END) AS REQ_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_DATE                  ELSE NULL END) AS OUT_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_TOT_QTY*tphso.SLIP_FG ELSE NULL END) AS OUT_TOT_QTY
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_AMT*tphso.SLIP_FG     ELSE NULL END) AS OUT_AMT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_VAT*tphso.SLIP_FG     ELSE NULL END) AS OUT_VAT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_TOT*tphso.SLIP_FG     ELSE NULL END) AS OUT_TOT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_DATE                   ELSE NULL END) AS IN_DATE
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_TOT_QTY *tphso.SLIP_FG ELSE NULL END) AS IN_TOT_QTY
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_AMT *tphso.SLIP_FG     ELSE NULL END) AS IN_AMT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_VAT *tphso.SLIP_FG     ELSE NULL END) AS IN_VAT
        ,        (CASE WHEN tphso.PROC_FG >= '30' THEN tphso.IN_TOT *tphso.SLIP_FG     ELSE NULL END) AS IN_TOT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN tphso.OUT_DT                    ELSE NULL END) AS OUT_DT
        ,        (CASE WHEN tphso.PROC_FG >= '20' THEN userInfo.EMP_NM                 ELSE NULL END) AS OUT_NM
        ,        tphso.REMARK, tphso.HQ_REMARK, tphso.DLVR_CD, tphdc.DLVR_NM
        FROM     TB_PO_HQ_STORE_OUTSTOCK tphso
        ,        TB_MS_STORE tms
        ,        (  SELECT  tme.USER_ID, tme.EMP_NM
                    FROM    TB_MS_STORE tms
                    ,       TB_MS_EMPLOYEE tme
                    WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     tme.STORE_CD        =   tms.STORE_CD
                    UNION
                    SELECT  the.USER_ID, the.EMP_NM
                    FROM    TB_HQ_EMPLOYEE the
                    WHERE   the.HQ_OFFICE_CD    =   #{hqOfficeCd}
                 ) userInfo
        ,        TB_PO_HQ_DELIVERY_CHARGER tphdc
        WHERE    tphso.HQ_OFFICE_CD     =       #{hqOfficeCd}
        AND      tphso.OUT_DATE         BETWEEN #{startDate} AND #{endDate}
        AND      tms.STORE_CD           =   tphso.STORE_CD
        AND      userInfo.USER_ID   (+) =   tphso.MOD_ID
        AND      tphdc.HQ_OFFICE_CD (+) =   tphso.HQ_OFFICE_CD
        AND      tphdc.DLVR_CD      (+) =   tphso.DLVR_CD
        ]]>
        <if test='slipFg != null and slipFg != ""'>
            AND tphso.SLIP_FG = #{slipFg}
        </if>
        <if test='slipKind != null and slipKind != ""'>
            AND tphso.SLIP_KIND = #{slipKind}
        </if>
        <if test='procFg != null and procFg != ""'>
            AND tphso.PROC_FG = #{procFg}
        </if>
        <if test='vendrCd != null and vendrCd != ""'>
            AND tphso.VENDR_CD = #{vendrCd}
        </if>
        <if test='dlvrCd != null and dlvrCd != ""'>
            AND tphso.DLVR_CD = #{dlvrCd}
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD = #{storeCd}
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        ORDER BY tphso.SLIP_NO
    </select>

    <!-- 출고확정 - 전표상세 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_CM_NMCODE, TB_PO_HQ_DELIVERY_CHARGER
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 전표상세 내역을 조회한다.
    -->
    <select id="getSlipNoInfo" parameterType="outstockConfmVO" resultType="DefaultMap">
        /* USE : OutstockConfmMapper.getSlipNoInfo */
        <![CDATA[
        SELECT  tphso.*
        ,       tms.STORE_NM
        ,       tcn.NMCODE_NM AS SLIP_KIND_NM
        ,       tphdc.DLVR_NM
        FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
        ,       TB_MS_STORE tms
        ,       TB_CM_NMCODE tcn
        ,       TB_PO_HQ_DELIVERY_CHARGER tphdc
        WHERE   tphso.HQ_OFFICE_CD      =   #{hqOfficeCd}
        AND     tphso.SLIP_NO           =   #{slipNo}
        AND     tms.STORE_CD            =   tphso.STORE_CD
        AND     tcn.NMCODE_GRP_CD   (+) =   '114'
        AND     tcn.NMCODE_CD       (+) =   tphso.SLIP_KIND
        AND     tphdc.HQ_OFFICE_CD  (+) =   tphso.HQ_OFFICE_CD
        AND     tphdc.DLVR_CD       (+) =   tphso.DLVR_CD
        ]]>
    </select>

    <!-- 출고확정 - 출고확정 DTL 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK, TB_MS_STORE, TB_CM_NMCODE, TB_PO_HQ_DELIVERY_CHARGER
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정 DTL 리스트를 조회한다.
    -->
    <select id="getOutstockConfmDtlList" parameterType="outstockConfmVO" resultType="DefaultMap">
        /* USE : OutstockConfmMapper.getOutstockConfmDtlList */
        <!-- 
        <![CDATA[
        SELECT   tphsod.SLIP_NO, tphsod.SLIP_FG, tphsod.PROD_CD, thp.PROD_NM, tphsod.SEQ
        ,        tphsod.PO_UNIT_FG, tphsod.PO_UNIT_QTY, thp.PO_UNIT_ALLOW_FG
        ,        DECODE(thp.VAT_FG, '1', 1, 0) AS VAT_FG01
        ,        tphsod.ORDER_SPLY_UPRC                                                               AS ORDER_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.ORDER_UNIT_QTY,0,NULL,tphsod.ORDER_UNIT_QTY*tphsod.SLIP_FG)) AS ORDER_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.ORDER_ETC_QTY ,0,NULL,tphsod.ORDER_ETC_QTY *tphsod.SLIP_FG)) AS ORDER_ETC_QTY
        ,        tphsod.ORDER_AMT *tphsod.SLIP_FG                                                     AS ORDER_AMT
        ,        tphsod.ORDER_VAT *tphsod.SLIP_FG                                                     AS ORDER_VAT
        ,        tphsod.ORDER_TOT *tphsod.SLIP_FG                                                     AS ORDER_TOT
        ,        tphsod.MGR_SPLY_UPRC                                                                 AS MGR_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.MGR_UNIT_QTY,0,NULL,tphsod.MGR_UNIT_QTY*tphsod.SLIP_FG))     AS MGR_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.MGR_ETC_QTY ,0,NULL,tphsod.MGR_ETC_QTY *tphsod.SLIP_FG))     AS MGR_ETC_QTY
        ,        tphsod.MGR_AMT *tphsod.SLIP_FG                                                       AS MGR_AMT
        ,        tphsod.MGR_VAT *tphsod.SLIP_FG                                                       AS MGR_VAT
        ,        tphsod.MGR_TOT *tphsod.SLIP_FG                                                       AS MGR_TOT
        ,        tphsod.OUT_SPLY_UPRC                                                                 AS OUT_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.OUT_UNIT_QTY,0,NULL,tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG))     AS OUT_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.OUT_ETC_QTY ,0,NULL,tphsod.OUT_ETC_QTY *tphsod.SLIP_FG))     AS OUT_ETC_QTY
        ,        TO_NUMBER(DECODE(tphsod.OUT_TOT_QTY ,0,NULL,tphsod.OUT_TOT_QTY *tphsod.SLIP_FG))     AS OUT_TOT_QTY
        ,        tphsod.OUT_AMT *tphsod.SLIP_FG                                                       AS OUT_AMT
        ,        tphsod.OUT_VAT *tphsod.SLIP_FG                                                       AS OUT_VAT
        ,        tphsod.OUT_TOT *tphsod.SLIP_FG                                                       AS OUT_TOT
        ,        tphsod.IN_SPLY_UPRC                                                                  AS IN_SPLY_UPRC
        ,        TO_NUMBER(DECODE(tphsod.IN_UNIT_QTY ,0,NULL,tphsod.IN_UNIT_QTY*tphsod.SLIP_FG))      AS IN_UNIT_QTY
        ,        TO_NUMBER(DECODE(tphsod.IN_ETC_QTY  ,0,NULL,tphsod.IN_ETC_QTY *tphsod.SLIP_FG))      AS IN_ETC_QTY
        ,        tphsod.IN_AMT  *tphsod.SLIP_FG                                                       AS IN_AMT
        ,        tphsod.IN_VAT  *tphsod.SLIP_FG                                                       AS IN_VAT
        ,        tphsod.IN_TOT  *tphsod.SLIP_FG                                                       AS IN_TOT
        ,        tphsod.REMARK
        ,        the.ENVST_VAL AS ENVST0011
        ,        thpb.BARCD_CD
        FROM     TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
        ,        TB_HQ_PRODUCT thp
        ,        TB_HQ_PRODUCT_BARCD thpb
        ,        TB_HQ_ENVST the
        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
        AND      tphsod.SLIP_NO         =   #{slipNo}
        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
        AND      thp.PROD_CD            =   tphsod.PROD_CD
        AND      thpb.HQ_OFFICE_CD  (+) =   tphsod.HQ_OFFICE_CD
        AND      thpb.PROD_CD       (+) =   tphsod.PROD_CD
        AND      the.HQ_OFFICE_CD       =   #{hqOfficeCd}
        AND      the.ENVST_CD           =   '0011'
        ORDER
        BY       tphsod.PROD_CD, tphsod.SEQ
        ]]>
         -->
		SELECT  A.SLIP_NO
		,		A.SLIP_FG
		,		A.SLIP_KIND
		,		A.PROD_CD
		,		A.PROD_NM
		,		A.SEQ
		,		A.PO_UNIT_FG
		,		A.PO_UNIT_QTY
		,		A.PO_UNIT_ALLOW_FG
		,		A.VAT_FG01
		,		A.ORDER_SPLY_UPRC
		,		A.ORDER_UNIT_QTY
		,		A.ORDER_ETC_QTY
		,		A.ORDER_AMT
		,		A.ORDER_VAT
		,		A.ORDER_TOT
		,		A.MGR_SPLY_UPRC
		,		A.MGR_UNIT_QTY
		,		A.MGR_ETC_QTY
		,		A.MGR_AMT
		,		A.MGR_VAT
		,		A.MGR_TOT
		,		A.OUT_SPLY_UPRC
		,		A.OUT_UNIT_QTY
		,		A.OUT_ETC_QTY
		,		A.OUT_TOT_QTY
		,		A.OUT_AMT
		,		A.OUT_VAT
		,		A.OUT_TOT
		,		A.IN_SPLY_UPRC
		,		A.IN_UNIT_QTY
		,		A.IN_ETC_QTY
		,		A.IN_AMT
		,		A.IN_VAT
		,		A.IN_TOT
		,		A.REMARK
		,		A.ENVST0011
		,		A.BARCD_CD
		,		LISTAGG(                                     A.A_STORAGE_CD,                  '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_STORAGE_CD
		,		LISTAGG(                                     A.A_STORAGE_NM,                  '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_STORAGE_NM
		,		LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_UNIT_QTY    ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_UNIT_QTY
		,		LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_ETC_QTY     ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_ETC_QTY
		,		LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_TOT_QTY     ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_TOT_QTY
		,		LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_AMT         ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_AMT
		,		LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_VAT         ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_VAT
		,		LISTAGG(CASE A.PROD_CD WHEN A.A_PROD_CD THEN A.A_IN_TOT         ELSE 0 END,   '^')  WITHIN GROUP(ORDER BY A.A_STORAGE_CD)   AS ARR_IN_TOT
		FROM	(
				SELECT	A.SLIP_NO
				,		A.SLIP_FG
				,		A.SLIP_KIND
				,		A.PROD_CD
				,		A.PROD_NM
				,		A.SEQ
				,		A.PO_UNIT_FG
				,		A.PO_UNIT_QTY
				,		A.PO_UNIT_ALLOW_FG
				,		A.VAT_FG01
				,		A.ORDER_SPLY_UPRC
				,		A.ORDER_UNIT_QTY
				,		A.ORDER_ETC_QTY
				,		A.ORDER_AMT
				,		A.ORDER_VAT
				,		A.ORDER_TOT
				,		A.MGR_SPLY_UPRC
				,		A.MGR_UNIT_QTY
				,		A.MGR_ETC_QTY
				,		A.MGR_AMT
				,		A.MGR_VAT
				,		A.MGR_TOT
				,		A.OUT_SPLY_UPRC
				,		A.OUT_UNIT_QTY
				,		A.OUT_ETC_QTY
				,		A.OUT_TOT_QTY
				,		A.OUT_AMT
				,		A.OUT_VAT
				,		A.OUT_TOT
				,		A.IN_SPLY_UPRC
				,		A.IN_UNIT_QTY
				,		A.IN_ETC_QTY
				,		A.IN_AMT
				,		A.IN_VAT
				,		A.IN_TOT
				,		A.REMARK
				,		A.ENVST0011
				,		A.BARCD_CD
				,		B.PROD_CD       AS  A_PROD_CD
				,		B.STORAGE_CD    AS  A_STORAGE_CD
				,		B.STORAGE_NM    AS  A_STORAGE_NM
				,		B.IN_UNIT_QTY   AS  A_IN_UNIT_QTY
				,		B.IN_ETC_QTY    AS  A_IN_ETC_QTY
				,		B.IN_TOT_QTY    AS  A_IN_TOT_QTY
				,		B.IN_AMT        AS  A_IN_AMT
				,		B.IN_VAT        AS  A_IN_VAT
				,		B.IN_TOT        AS  A_IN_TOT
				FROM	(
				        SELECT   tphsod.HQ_OFFICE_CD, tphsod.SLIP_NO, tphsod.SLIP_FG, tphso.SLIP_KIND, tphsod.PROD_CD, thp.PROD_NM, tphsod.SEQ
				        ,        tphsod.PO_UNIT_FG, tphsod.PO_UNIT_QTY, thp.PO_UNIT_ALLOW_FG
				        ,        DECODE(thp.VAT_FG, '1', 1, 0) AS VAT_FG01
				        ,        tphsod.ORDER_SPLY_UPRC                                                               AS ORDER_SPLY_UPRC
				        ,        TO_NUMBER(DECODE(tphsod.ORDER_UNIT_QTY,0,NULL,tphsod.ORDER_UNIT_QTY*tphsod.SLIP_FG)) AS ORDER_UNIT_QTY
				        ,        TO_NUMBER(DECODE(tphsod.ORDER_ETC_QTY ,0,NULL,tphsod.ORDER_ETC_QTY *tphsod.SLIP_FG)) AS ORDER_ETC_QTY
				        ,        tphsod.ORDER_AMT *tphsod.SLIP_FG                                                     AS ORDER_AMT
				        ,        tphsod.ORDER_VAT *tphsod.SLIP_FG                                                     AS ORDER_VAT
				        ,        tphsod.ORDER_TOT *tphsod.SLIP_FG                                                     AS ORDER_TOT
				        ,        tphsod.MGR_SPLY_UPRC                                                                 AS MGR_SPLY_UPRC
				        ,        TO_NUMBER(DECODE(tphsod.MGR_UNIT_QTY,0,NULL,tphsod.MGR_UNIT_QTY*tphsod.SLIP_FG))     AS MGR_UNIT_QTY
				        ,        TO_NUMBER(DECODE(tphsod.MGR_ETC_QTY ,0,NULL,tphsod.MGR_ETC_QTY *tphsod.SLIP_FG))     AS MGR_ETC_QTY
				        ,        tphsod.MGR_AMT *tphsod.SLIP_FG                                                       AS MGR_AMT
				        ,        tphsod.MGR_VAT *tphsod.SLIP_FG                                                       AS MGR_VAT
				        ,        tphsod.MGR_TOT *tphsod.SLIP_FG                                                       AS MGR_TOT
				        ,        tphsod.OUT_SPLY_UPRC                                                                 AS OUT_SPLY_UPRC
				        ,        TO_NUMBER(DECODE(tphsod.OUT_UNIT_QTY,0,NULL,tphsod.OUT_UNIT_QTY*tphsod.SLIP_FG))     AS OUT_UNIT_QTY
				        ,        TO_NUMBER(DECODE(tphsod.OUT_ETC_QTY ,0,NULL,tphsod.OUT_ETC_QTY *tphsod.SLIP_FG))     AS OUT_ETC_QTY
				        ,        TO_NUMBER(DECODE(tphsod.OUT_TOT_QTY ,0,NULL,tphsod.OUT_TOT_QTY *tphsod.SLIP_FG))     AS OUT_TOT_QTY
				        ,        tphsod.OUT_AMT *tphsod.SLIP_FG                                                       AS OUT_AMT
				        ,        tphsod.OUT_VAT *tphsod.SLIP_FG                                                       AS OUT_VAT
				        ,        tphsod.OUT_TOT *tphsod.SLIP_FG                                                       AS OUT_TOT
				        ,        tphsod.IN_SPLY_UPRC                                                                  AS IN_SPLY_UPRC
				        ,        TO_NUMBER(DECODE(tphsod.IN_UNIT_QTY ,0,NULL,tphsod.IN_UNIT_QTY*tphsod.SLIP_FG))      AS IN_UNIT_QTY
				        ,        TO_NUMBER(DECODE(tphsod.IN_ETC_QTY  ,0,NULL,tphsod.IN_ETC_QTY *tphsod.SLIP_FG))      AS IN_ETC_QTY
				        ,        tphsod.IN_AMT  *tphsod.SLIP_FG                                                       AS IN_AMT
				        ,        tphsod.IN_VAT  *tphsod.SLIP_FG                                                       AS IN_VAT
				        ,        tphsod.IN_TOT  *tphsod.SLIP_FG                                                       AS IN_TOT
				        ,        tphsod.REMARK
				        ,        the.ENVST_VAL AS ENVST0011
				        ,        thpb.BARCD_CD
				        FROM     TB_PO_HQ_STORE_OUTSTOCK 	 tphso
				        ,		 TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
				        ,        TB_HQ_PRODUCT thp
				        ,        TB_HQ_PRODUCT_BARCD thpb
				        ,        TB_HQ_ENVST the
				        WHERE    tphsod.HQ_OFFICE_CD    =   #{hqOfficeCd}
				        AND      tphsod.SLIP_NO         =   #{slipNo}
				        AND		 tphso.HQ_OFFICE_CD		=	tphsod.HQ_OFFICE_CD
				        AND		 tphso.SLIP_NO			=	tphsod.SLIP_NO
				        AND      thp.HQ_OFFICE_CD       =   tphsod.HQ_OFFICE_CD
				        AND      thp.PROD_CD            =   tphsod.PROD_CD
				        AND      thpb.HQ_OFFICE_CD  (+) =   tphsod.HQ_OFFICE_CD
				        AND      thpb.PROD_CD       (+) =   tphsod.PROD_CD
				        AND      the.HQ_OFFICE_CD       =   #{hqOfficeCd}
				        AND      the.ENVST_CD           =   '0011'
				        ORDER
				        BY       tphsod.PROD_CD, tphsod.SEQ
						)	A
						LEFT OUTER JOIN
						(
							SELECT	X.HQ_OFFICE_CD
							,		X.STORAGE_CD
							,		X.STORAGE_NM
							,		Y.PROD_CD
							,		#{slipNo}					AS 	SLIP_NO
							,		NVL(Y.SLIP_FG,1)			AS	SLIP_FG
							,		NVL(Y.IN_UNIT_QTY,	0)		AS	IN_UNIT_QTY
							,		NVL(Y.IN_ETC_QTY,	0)		AS	IN_ETC_QTY
							,		NVL(Y.IN_TOT_QTY,	0)		AS	IN_TOT_QTY
							,		NVL(Y.IN_AMT,	0)			AS	IN_AMT
							,		NVL(Y.IN_VAT,	0)			AS	IN_VAT
							,		NVL(Y.IN_TOT,	0)			AS	IN_TOT
							FROM   TB_HQ_STORAGE                     X
							LEFT
			                OUTER
			                JOIN    (
			                
			                 SELECT  Y.HQ_OFFICE_CD
                                ,       Y.PROD_CD
                                ,       Y.STORAGE_CD
                                ,		NVL(Y.SLIP_FG,1)			AS	SLIP_FG
                                ,		NVL(SUM(DECODE(Y.OCCR_FG,'61',Y.IN_UNIT_QTY,'62',Y.IN_UNIT_QTY * -1,Y.IN_UNIT_QTY)),0)	AS	IN_UNIT_QTY
                                ,       NVL(SUM(DECODE(Y.OCCR_FG,'61',Y.IN_ETC_QTY,'62',Y.IN_ETC_QTY * -1,Y.IN_ETC_QTY)),0)		AS	IN_ETC_QTY
                                ,       NVL(SUM(DECODE(Y.OCCR_FG,'61',Y.IN_TOT_QTY,'62',Y.IN_TOT_QTY * -1,Y.IN_TOT_QTY)),0)		AS	IN_TOT_QTY
                                ,       NVL(SUM(DECODE(Y.OCCR_FG,'61',Y.IN_AMT,'62',Y.IN_AMT * -1,Y.IN_AMT)),0)		            AS	IN_AMT
                                ,       NVL(SUM(DECODE(Y.OCCR_FG,'61',Y.IN_VAT,'62',Y.IN_VAT * -1,Y.IN_VAT)),0)		            AS	IN_VAT
                                ,       NVL(SUM(DECODE(Y.OCCR_FG,'61',Y.IN_TOT,'62',Y.IN_TOT * -1,Y.IN_TOT)),0)		            AS	IN_TOT
                                FROM    TB_PO_HQ_STORE_OUTSTOCK_PROD    Y                                
                                WHERE   Y.HQ_OFFICE_CD  =	#{hqOfficeCd}
                                AND     Y.SLIP_NO       =	#{slipNo}
                                AND     Y.OCCR_FG       IN   ('13', '61', '62')
                                GROUP
                                BY      Y.HQ_OFFICE_CD
                                ,       Y.SLIP_FG
                                ,       Y.PROD_CD
                                ,       Y.STORAGE_CD 
			                
			                )	Y
			                ON      X.HQ_OFFICE_CD  =   Y.HQ_OFFICE_CD
			                AND     X.STORAGE_CD    =    Y.STORAGE_CD
			                WHERE   X.HQ_OFFICE_CD  	= 	#{hqOfficeCd}
				              AND     X.USE_YN    		= 	'Y'
				              AND     X.AREA_FG       	=   #{areaFg}      /* 권역별 창고 코드 AREA_FG */
						)	B
						ON		A.HQ_OFFICE_CD  =	B.HQ_OFFICE_CD
					    AND     A.SLIP_NO       = 	B.SLIP_NO
					    AND     A.PROD_CD       = 	(CASE NVL(B.PROD_CD,'X') WHEN 'X' THEN A.PROD_CD ELSE B.PROD_CD END)
				)	A
		GROUP
		BY      A.SLIP_NO
		,      	A.SLIP_FG
		,      	A.SLIP_KIND
		,      A.PROD_CD
		,      A.PROD_NM
		,      A.SEQ
		,      A.PO_UNIT_FG
		,      A.PO_UNIT_QTY
		,      A.PO_UNIT_ALLOW_FG
		,      A.VAT_FG01
		,      A.ORDER_SPLY_UPRC
		,      A.ORDER_UNIT_QTY
		,      A.ORDER_ETC_QTY
		,      A.ORDER_AMT
		,      A.ORDER_VAT
		,      A.ORDER_TOT
		,      A.MGR_SPLY_UPRC
		,      A.MGR_UNIT_QTY
		,      A.MGR_ETC_QTY
		,      A.MGR_AMT
		,      A.MGR_VAT
		,      A.MGR_TOT
		,      A.OUT_SPLY_UPRC
		,      A.OUT_UNIT_QTY
		,      A.OUT_ETC_QTY
		,      A.OUT_TOT_QTY
		,      A.OUT_AMT
		,      A.OUT_VAT
		,      A.OUT_TOT
		,      A.IN_SPLY_UPRC
		,      A.IN_UNIT_QTY
		,      A.IN_ETC_QTY
		,      A.IN_AMT
		,      A.IN_VAT
		,      A.IN_TOT
		,      A.REMARK
		,      A.ENVST0011
		,      A.BARCD_CD  
        ORDER
        BY		A.PROD_CD 
    </select>

    <!-- 출고확정 - 출고확정 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정시 DTL의 진행구분을 수정한다.
    -->
    <update id="updateOutstockDtlConfirm" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateOutstockConfirm */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     PROC_FG         = #{updateProcFg},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 출고확정 - 출고확정 HD 수정-->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정시 HD의 진행구분을 수정한다.
    -->
    <update id="updateOutstockConfirm" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateOutstockConfirm */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     PROC_FG         = #{updateProcFg},
                OUT_DATE        = #{outDate},
                OUT_DT          = #{modDt},
                OUT_ID          = #{modId},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>
	
	<!-- 출고확정 - 출고확정 PROD 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_PROD
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정시 PROD를 수정한다.
    -->
    <update id="insertOutstockProdConfirm" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.insertOutstockProdConfirm */
        INSERT INTO TB_PO_HQ_STORE_OUTSTOCK_PROD
        (
			HQ_OFFICE_CD,
			SLIP_NO,
			PROD_CD,
			STORAGE_CD,
			OCCR_FG,
			STORE_CD,
			SLIP_FG,
			CONFM_YN,
			IN_UNIT_QTY,
			IN_ETC_QTY,
			IN_TOT_QTY,
			IN_AMT,
			IN_VAT,
			IN_TOT,
			REG_DT,
			REG_ID,
			MOD_DT,
			MOD_ID
         )
		SELECT 
		    #{hqOfficeCd}
			, SLIP_NO
			, PROD_CD
			, (SELECT STORAGE_CD FROM TB_HQ_STORAGE WHERE HQ_OFFICE_CD = 'DS005' AND AREA_FG = #{areaFg} AND ROWNUM = 1)
			, #{occrFg}	
			, STORE_CD
			, '1'
			, 'Y'
			, OUT_UNIT_QTY
			, OUT_ETC_QTY
			, OUT_TOT_QTY
			, OUT_AMT
			, OUT_VAT
			, OUT_TOT
            , #{regDt}
            , #{regId}
            , #{modDt}
            , #{modId}
        FROM TB_PO_HQ_STORE_OUTSTOCK_DTL
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>
	
    <!-- 출고확정 - 출고확정 자동입고 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정시 자동입고 처리 DTL 수정한다.
    -->
    <update id="updateAutoInstockDtl" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateAutoInstockDtl */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     PROC_FG         = #{updateProcFg},
                IN_SPLY_UPRC    = OUT_SPLY_UPRC,
                IN_UNIT_QTY     = OUT_UNIT_QTY,
                IN_ETC_QTY      = OUT_ETC_QTY,
                IN_TOT_QTY      = OUT_TOT_QTY,
                IN_AMT          = OUT_AMT,
                IN_VAT          = OUT_VAT,
                IN_TOT          = OUT_TOT,
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 출고확정 - 출고확정 자동입고 HD 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정시 자동입고 처리 HD 수정한다.
    -->
    <update id="updateAutoInstock" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateAutoInstock */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     PROC_FG         = #{updateProcFg},
                IN_DATE         = #{outDate},
                IN_DT           = #{outDt},
                IN_ID           = #{outId},
                IN_UNIT_QTY     = OUT_UNIT_QTY,
                IN_ETC_QTY      = OUT_ETC_QTY,
                IN_TOT_QTY      = OUT_TOT_QTY,
                IN_AMT          = OUT_AMT,
                IN_VAT          = OUT_VAT,
                IN_TOT          = OUT_TOT,
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
    </update>

    <!-- 출고확정 - 출고확정 상세 리스트 DTL 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정 상세 리스트 DTL을 수정한다.
    -->
    <update id="updateOutstockConfmDtl" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateOutstockConfmDtl */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK_DTL
        SET     OUT_SPLY_UPRC   = #{outSplyUprc},
                OUT_UNIT_QTY    = #{outUnitQty},
                OUT_ETC_QTY     = #{outEtcQty},
                OUT_TOT_QTY     = #{outTotQty},
                OUT_AMT         = #{outAmt},
                OUT_VAT         = #{outVat},
                OUT_TOT         = #{outTot},
                REMARK          = #{remark},
                MOD_DT          = #{modDt},
                MOD_ID          = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     SLIP_NO       = #{slipNo}
        AND     SEQ           = #{seq}
    </update>

    <!-- 출고확정 - 출고확정 상세 리스트 HD 수정-->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정 상세 리스트 HD의 집계를 수정한다.
    -->
    <update id="updateOutstockConfmHd" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateOutstockConfmHd */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     (   OUT_UNIT_QTY, OUT_ETC_QTY, OUT_TOT_QTY, OUT_AMT, OUT_VAT, OUT_TOT)
            =   (   SELECT  SUM(OUT_UNIT_QTY), SUM(OUT_ETC_QTY), SUM(OUT_TOT_QTY), SUM(OUT_AMT), SUM(OUT_VAT), SUM(OUT_TOT)
                    FROM    TB_PO_HQ_STORE_OUTSTOCK_DTL
                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
                    AND     SLIP_NO         =   #{slipNo}
                ),
                REMARK      = #{hdRemark},
                HQ_REMARK   = #{hqRemark},
                DLVR_CD     = #{dlvrCd},
                MOD_DT      = #{modDt},
                MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>

    <!-- 출고확정 - 출고확정 이후 저장시 HD 수정 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK
        PARAM    : outstockConfmVO
        COMMENTS : 출고확정 - 출고확정 이후 저장시 HD의 비고, 본사비고, 배송기사를 수정한다.
    -->
    <update id="updateOutstockAfterHd" parameterType="outstockConfmVO">
        /* USE : OutstockConfmMapper.updateOutstockAfterHd */
        UPDATE  TB_PO_HQ_STORE_OUTSTOCK
        SET     REMARK      = #{hdRemark},
                HQ_REMARK   = #{hqRemark},
                DLVR_CD     = #{dlvrCd},
                MOD_DT      = #{modDt},
                MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
        AND     SLIP_NO       =   #{slipNo}
    </update>
    
    <!-- 창고별 입고상품 저장  ( TB_PO_HQ_STORE_OUTSTOCK_PROD - [본사_수불] 출고전표_매장출고내역_상품 )

	        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_PROD
	        PARAM    : instockConfmProdVO
	        COMMENTS : 입고확정(또는 저장)시, 창고별 입고상품 정보를 저장한다.
    -->
	<update id="mergeInstockConfmProd" parameterType="outstockConfmVO">
	    MERGE INTO TB_PO_HQ_STORE_OUTSTOCK_PROD	A
	    USING DUAL ON           (
	                                    A.HQ_OFFICE_CD	= #{hqOfficeCd}
	                                    AND A.SLIP_NO		= #{slipNo}
	                                    AND A.PROD_CD  		= #{prodCd}
	                                    AND A.STORAGE_CD  	= #{storageCd}
	                                    AND A.OCCR_FG		= #{occrFg}
	                            )
	    WHEN     MATCHED THEN   UPDATE	SET	A.CONFM_YN      = #{confmYn},
	    									A.IN_UNIT_QTY	= #{inUnitQty},
											A.IN_ETC_QTY	= #{inEtcQty},
											A.IN_TOT_QTY	= #{inTotQty},
											A.IN_AMT		= #{inAmt},
											A.IN_VAT		= #{inVat},
											A.IN_TOT		= #{inTot},
	                                        A.MOD_DT    	= #{modDt},
	                                        A.MOD_ID    	= #{modId}
	    WHEN NOT MATCHED THEN   INSERT  (
											A.HQ_OFFICE_CD,
											A.SLIP_NO,
											A.PROD_CD,
											A.STORAGE_CD,
											A.OCCR_FG,
											A.STORE_CD,
											A.SLIP_FG,
											A.CONFM_YN,
											A.IN_UNIT_QTY,
											A.IN_ETC_QTY,
											A.IN_TOT_QTY,
											A.IN_AMT,
											A.IN_VAT,
											A.IN_TOT,
											A.REG_DT,
											A.REG_ID,
											A.MOD_DT,
											A.MOD_ID
	                                    )
	                            VALUES  (
	                                        #{hqOfficeCd},
											#{slipNo},
											#{prodCd},
											#{storageCd},
											#{occrFg},		<!-- 발생구분(30:매장입고) -->
											#{storeCd},
											#{slipFg},
											#{confmYn},
											#{inUnitQty},
											#{inEtcQty},
											#{inTotQty},
											#{inAmt},
											#{inVat},
											#{inTot},
	                                        #{regDt},
	                                        #{regId},
	                                        #{modDt},
	                                        #{modId}
	                                    )
	</update>
</mapper>
