<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.corner.dayPeriod.service.impl.CornerDayPeriodMapper">

    <select id="getCornerDayPeriodList" parameterType="cornerDayPeriodVO" resultType="DefaultMap">
        /* USE : CornerDayPeriodMapper.getCornerDayPeriodList */
       <include refid="CmmSQL.PagingTemplateHeader"/>
             SELECT TSDCP.CORNR_CD
                    , TSDCP.STORE_CD
			        , CONCAT(CONCAT(TMS.STORE_NM,'- '), TMC.CORNR_NM) CORNR_NM
<!--                     , (CASE TSDCP.CORNR_CD WHEN '00' THEN '기본코너' -->
<!-- 	                                       WHEN '01' THEN '한식코너' -->
<!-- 	                                       WHEN '02' THEN '중식코너' END) CORNR_NM -->
			        , SUM(TSDCP.TOT_SALE_QTY) AS TOT_SALE_QTY
			        , SUM(TSDCP.REAL_SALE_AMT) AS REAL_SALE_AMT

       <include refid="CmmSQL.PagingTemplateCount"/>
         FROM TB_MS_CORNER TMC
              , TB_SL_DAILY_CORNR_PROD TSDCP
              , TB_MS_STORE TMS
         WHERE TMC.STORE_CD = TSDCP.STORE_CD
          AND TMC.CORNR_CD = TSDCP.CORNR_CD
          AND TSDCP.HQ_OFFICE_CD = #{hqOfficeCd}
          AND TSDCP.STORE_CD = TMS.STORE_CD
	    <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND TSDCP.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='arrCornrCd != null and arrCornrCd != ""'>
            AND TSDCP.STORE_CD||'||'||TSDCP.CORNR_CD IN
            <foreach collection="arrCornrCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='startDate != null and startDate != ""'>
           AND TSDCP.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND TSDCP.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
 		GROUP BY TSDCP.CORNR_CD, TSDCP.STORE_CD, TMC.CORNR_NM, CONCAT(CONCAT(TMS.STORE_NM,'- '), TMC.CORNR_NM)
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <select id="getCornerDayPeriodDtlList" parameterType="cornerDayPeriodVO" resultType="DefaultMap">
        /* USE : CornerDayPeriodMapper.getCornerDayPeriodDtlList */
       <include refid="CmmSQL.PagingTemplateHeader"/>
		     	SELECT  A.LV1_CD
		               	,A.LV1_NM
		               	,A.LV2_CD
		               	,A.LV2_NM
<!-- 		               	,A.LV2_NM_FULL -->
		               	,A.LV3_CD
		               	,A.LV3_NM
<!-- 		               	,A.LV3_NM_FULL -->
		               	,C.PROD_CD
		               	,B.PROD_NM
				     	,SUM(C.TOT_SALE_QTY) AS TOT_SALE_QTY
				     	,SUM(C.REAL_SALE_AMT) AS REAL_SALE_AMT
       <include refid="CmmSQL.PagingTemplateCount"/>
               <choose>
            <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (

					<![CDATA[
								SELECT  A.HQ_OFFICE_CD
								,       A.PROD_CLASS_CD
								,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
								              	)  AS  LV2_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
								             	)  AS  LV3_CD
								,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
								                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
								             	)  AS  LV1_NM
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
								              	)  AS  LV2_NM
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
								             	)  AS  LV3_NM
								FROM    (
								        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC,   SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
								        FROM    (
								                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
								                    FROM    TB_HQ_PRODUCT_CLASS
								                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
								                )
								        START WITH  P_PROD_CLASS_CD ='00000'  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
								        CONNECT BY
								        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
								        )   A
					    ]]>

                     )                   A,
                     TB_HQ_PRODUCT       B,
                     TB_SL_DAILY_CORNR_PROD    C
             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
             AND	 B.HQ_OFFICE_CD	 = C.HQ_OFFICE_CD
             AND     B.PROD_CD       = C.PROD_CD

            </when>
            <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
            FROM    (
                         <![CDATA[
	        				SELECT  A.STORE_CD
							,       A.PROD_CLASS_CD
							,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
							                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
							              	)  AS  LV2_CD
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,NULL
							                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
							             	)  AS  LV3_CD
							,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
							                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
							,       DECODE(A.LV ,1  ,NULL
							                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
							              )  AS  LV2_NM
							,       DECODE(A.LV ,1  ,NULL
							                    ,2  ,NULL
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
							FROM    (
							        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC,   SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
							        FROM    (
							                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
							                    FROM    TB_MS_PRODUCT_CLASS
							                    WHERE   STORE_CD    =  #{storeCd}
							                )
							        START WITH  P_PROD_CLASS_CD ='00000'  AND         STORE_CD    =  #{storeCd}
							        CONNECT BY
							        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD AND         STORE_CD    =  #{storeCd}
							        )   A
	        			]]>
                     )                   A,
                     TB_MS_PRODUCT       B,
                     TB_SL_DAILY_CORNR_PROD    C
             WHERE   B.STORE_CD      = #{storeCd}
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
             AND	 B.STORE_CD		 = C.STORE_CD
             AND     B.PROD_CD       = C.PROD_CD
            </when>
        </choose>
        <if test='storeCd != null and storeCd != ""'>
           AND C.STORE_CD    = #{storeCd}
        </if>
        <if test='cornrCd != null and cornrCd != ""'>
           AND C.CORNR_CD    = #{cornrCd}
        </if>
        <if test='startDate != null and startDate != ""'>
           AND C.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
       	GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
<!--                    A.LV2_NM_FULL, -->
<!--                    A.LV3_NM_FULL, -->
                   C.PROD_CD,
                   B.PROD_NM
        ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD
       <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <select id="getCornerDayPeriodExcelList" parameterType="cornerDayPeriodVO" resultType="DefaultMap">
        /* USE : CornerDayPeriodMapper.getCornerDayPeriodExcelList */
             SELECT TSDCP.CORNR_CD
                    , TSDCP.STORE_CD
                    , CONCAT(CONCAT(TMS.STORE_NM,'- '), TMC.CORNR_NM) CORNR_NM
<!--                     , (CASE TSDCP.CORNR_CD WHEN '00' THEN '기본코너' -->
<!--                                           WHEN '01' THEN '한식코너' -->
<!--                                           WHEN '02' THEN '중식코너' END) CORNR_NM -->
                    , SUM(TSDCP.TOT_SALE_QTY) AS TOT_SALE_QTY
                    , SUM(TSDCP.REAL_SALE_AMT) AS REAL_SALE_AMT

         FROM TB_MS_CORNER TMC
              , TB_SL_DAILY_CORNR_PROD TSDCP
              , TB_MS_STORE TMS
         WHERE TMC.STORE_CD = TSDCP.STORE_CD
          AND TMC.CORNR_CD = TSDCP.CORNR_CD
          AND TSDCP.HQ_OFFICE_CD = #{hqOfficeCd}
          AND TSDCP.STORE_CD = TMS.STORE_CD
        <if test='arrStoreCd != null and arrStoreCd != ""'>
           AND TSDCP.STORE_CD IN
            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='arrCornrCd != null and arrCornrCd != ""'>
            AND TSDCP.STORE_CD||'||'||TSDCP.CORNR_CD IN
            <foreach collection="arrCornrCd" item="item" open="("  separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test='startDate != null and startDate != ""'>
           AND TSDCP.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND TSDCP.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        GROUP BY TSDCP.CORNR_CD, TSDCP.STORE_CD, TMC.CORNR_NM, CONCAT(CONCAT(TMS.STORE_NM,'- '), TMC.CORNR_NM)
    </select>


    <select id="getCornerDayPeriodDtlExcelList" parameterType="cornerDayPeriodVO" resultType="DefaultMap">
        /* USE : CornerDayPeriodMapper.getCornerDayPeriodDtlExcelList */
                SELECT  A.LV1_CD
                        ,A.LV1_NM
                        ,A.LV2_CD
                        ,A.LV2_NM
<!--                         ,A.LV2_NM_FULL -->
                        ,A.LV3_CD
                        ,A.LV3_NM
<!--                         ,A.LV3_NM_FULL -->
                        ,C.PROD_CD
                        ,B.PROD_NM
                        ,SUM(C.TOT_SALE_QTY) AS TOT_SALE_QTY
                        ,SUM(C.REAL_SALE_AMT) AS REAL_SALE_AMT
               <choose>
            <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (
                         <![CDATA[
								SELECT  A.HQ_OFFICE_CD
								,       A.PROD_CLASS_CD
								,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
								              	)  AS  LV2_CD
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
								             	)  AS  LV3_CD
								,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
								                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
								             	)  AS  LV1_NM
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
								              	)  AS  LV2_NM
								,       DECODE	(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
								             	)  AS  LV3_NM
								FROM    (
								        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC,   SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
								        FROM    (
								                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
								                    FROM    TB_HQ_PRODUCT_CLASS
								                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
								                )
								        START WITH  P_PROD_CLASS_CD ='00000'  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
								        CONNECT BY
								        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD   AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
								        )   A
					    ]]>
                     )                   A,
                     TB_HQ_PRODUCT       B,
                     TB_SL_DAILY_CORNR_PROD    C
             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
             AND	 B.HQ_OFFICE_CD	 = C.HQ_OFFICE_CD
             AND     B.PROD_CD       = C.PROD_CD

            </when>
            <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
            FROM    (
                         <![CDATA[
	        				SELECT  A.STORE_CD
							,       A.PROD_CLASS_CD
							,       DECODE	(A.LV ,1  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,LENGTH(A.ACD))
							                    ,    SUBSTR(A.ACD,INSTR(A.ACD,'^',1,1)+1,INSTR(A.ACD,'^',2,1)-2)
							             	)  AS  LV1_CD
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',2,1)+1,LENGTH(A.ACD))
							                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,2)+1,(INSTR(A.ACD,'^',1,3)-1)-INSTR(A.ACD,'^',1,2))
							              	)  AS  LV2_CD
							,       DECODE	(A.LV ,1  ,NULL
							                    ,2  ,NULL
							                    ,3  ,SUBSTR(A.ACD,INSTR(A.ACD,'^',1,3)+1)
							             	)  AS  LV3_CD
							,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
							                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
							,       DECODE(A.LV ,1  ,NULL
							                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
							              )  AS  LV2_NM
							,       DECODE(A.LV ,1  ,NULL
							                    ,2  ,NULL
							                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
							FROM    (
							        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC,   SYS_CONNECT_BY_PATH(PROD_CLASS_CD, '^')  AS ACD
							        FROM    (
							                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
							                    FROM    TB_MS_PRODUCT_CLASS
							                    WHERE   STORE_CD    =  #{storeCd}
							                )
							        START WITH  P_PROD_CLASS_CD ='00000'  AND         STORE_CD    =  #{storeCd}
							        CONNECT BY
							        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD  AND         STORE_CD    =  #{storeCd}
							        )   A
	        			]]>
                     )                   A,
                     TB_MS_PRODUCT       B,
                     TB_SL_DAILY_CORNR_PROD    C
             WHERE   B.STORE_CD      = #{storeCd}
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
             AND	 B.STORE_CD		 = C.STORE_CD
             AND     B.PROD_CD       = C.PROD_CD
            </when>
        </choose>
        <if test='storeCd != null and storeCd != ""'>
           AND C.STORE_CD    = #{storeCd}
        </if>
        <if test='cornrCd != null and cornrCd != ""'>
           AND C.CORNR_CD    = #{cornrCd}
        </if>
        <if test='startDate != null and startDate != ""'>
           AND C.SALE_DATE >= #{startDate}
        </if>
        <if test='endDate != null and endDate != ""'>
           AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
        </if>
        GROUP BY    A.LV1_CD,
                   A.LV2_CD,
                   A.LV2_NM,
                   A.LV3_CD,
                   A.LV3_NM,
                   A.LV1_NM,
                   C.PROD_CD,
                   B.PROD_NM
        ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD
    </select>
</mapper>
