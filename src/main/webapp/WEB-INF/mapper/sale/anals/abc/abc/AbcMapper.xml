<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.anals.abc.abc.service.impl.AbcMapper">
	<!--
	화면 ID : 대비기간매출분석-분류별대비탭
	화면 PAGE : 87P
	PARAM : STORE_CD, SALE_DATE(FR,TO)
	-->

    <select id="getAbcList" parameterType="abcVO" resultType="DefaultMap">
         SELECT A.LV1_CD,
       A.LV1_NM,
       A.LV2_CD,
       A.LV2_NM,
       A.LV3_CD,
       A.LV3_NM,
       C.PROD_CD,
       B.PROD_NM,
       <if test='orgnFg != null and orgnFg == "S"'>
		   C.STORE_CD,
		   C.STORE_NM,
	   </if>
       C.REAL_SALE_AMT,
       C.TOT_SALE_QTY,
       C.RAT,
       C.ACC_RAT,
       C.GRADE
       FROM
  <choose>
          <when test='orgnFg != null and orgnFg == "H"'>
                    (
                     <![CDATA[
		                SELECT  A.HQ_OFFICE_CD
		                ,       A.PROD_CLASS_CD
		                ,       NULL    LV1_CD
		                ,       NULL    LV2_CD
		                ,       NULL    LV3_CD
		                ,       DECODE  (A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
		                                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
		                                )  AS  LV1_NM
		                ,       DECODE  (A.LV ,1  ,NULL
		                                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
		                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
		                                )  AS  LV2_NM
		                ,       DECODE  (A.LV ,1  ,NULL
		                                    ,2  ,NULL
		                                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
		                                )  AS  LV3_NM
		                FROM    (
		                        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
		                        FROM    (
		                                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
		                                    FROM    TB_HQ_PRODUCT_CLASS
		                                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
		                                )
		                        START WITH  P_PROD_CLASS_CD ='00000'
		                        CONNECT BY
		                        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
		                        )   A

		                ]]>
                 )                   A,
                 TB_HQ_PRODUCT       B,
                 (
	                SELECT M.PROD_CD
	                     , M.REAL_SALE_AMT
	                     , M.TOT_SALE_QTY
	                     , M.RAT
	                     , M.ACC_RAT
	                      , CASE WHEN M.ACC_RAT <![CDATA[<= #{gradeA} ]]> THEN 'A'
	                            WHEN M.ACC_RAT <![CDATA[> #{gradeA} ]]> AND M.ACC_RAT <![CDATA[<= #{gradeB} ]]> THEN 'B'
	                            ELSE 'C'
	                        END AS GRADE
	                  FROM (
	                        SELECT M.PROD_CD
	                             , M.REAL_SALE_AMT
	                             , M.TOT_SALE_QTY
	                             <choose>
	                                <when test='sortFg != null and sortFg == "1"'>    <!-- 금액순 -->
	                                    , M.RAT_REAL_SALE_AMT  AS RAT
	                                    , SUM(M.RAT_REAL_SALE_AMT) OVER(ORDER BY M.REAL_SALE_AMT DESC) AS ACC_RAT
	                                </when>
	                                <when test='sortFg != null and sortFg == "2"'>    <!-- 수량순 -->
	                                    , M.RAT_TOT_SALE_QTY AS RAT
	                                    , SUM(M.RAT_TOT_SALE_QTY) OVER(ORDER BY M.TOT_SALE_QTY DESC) AS ACC_RAT
	                                </when>
	                            </choose>
	                          FROM  (
	                                SELECT TSDP.PROD_CD
	                                     , SUM(TSDP.REAL_SALE_AMT) AS REAL_SALE_AMT
	                                     , SUM(TSDP.TOT_SALE_QTY) AS TOT_SALE_QTY
	                                     , ROUND(RATIO_TO_REPORT(SUM(TSDP.REAL_SALE_AMT)) OVER(), 2) *100 AS RAT_REAL_SALE_AMT
	                                     , ROUND(RATIO_TO_REPORT(SUM(TSDP.TOT_SALE_QTY)) OVER(), 2) *100 AS RAT_TOT_SALE_QTY
	                                  FROM TB_SL_DAILY_PROD TSDP
	                                 WHERE 1=1
	                                 AND	HQ_OFFICE_CD    =   #{hqOfficeCd}
	                                      <if test='startDate != null and startDate != "" and endDate != null and endDate != ""'>
	                                          AND     TSDP.SALE_DATE BETWEEN #{startDate} AND #{endDate}
	                                      </if>
	                                      <if test='arrStoreCd != null and arrStoreCd != ""'>
	                                                  AND TSDP.STORE_CD IN
	                                                          <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
	                                                                #{item}
	                                                          </foreach>
                                          </if>
	                                 GROUP BY TSDP.PROD_CD
	                                 ) M
	                      ) M
	                ) C
		  WHERE B.HQ_OFFICE_CD   = #{hqOfficeCd}
		  	AND B.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
			AND B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
            AND B.PROD_CD       = C.PROD_CD
          </when>
           <when test='orgnFg != null and orgnFg == "S"'>
          (
                     <![CDATA[
                        SELECT  A.STORE_CD
                        ,       A.PROD_CLASS_CD
                        ,       NULL    LV1_CD
                        ,       NULL    LV2_CD
                        ,       NULL    LV3_CD
                        ,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
                                            ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
                        ,       DECODE(A.LV ,1  ,NULL
                                            ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
                                      )  AS  LV2_NM
                        ,       DECODE(A.LV ,1  ,NULL
                                            ,2  ,NULL
                                            ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
                        FROM    (
                                SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
                                FROM    (
                                            SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
                                            FROM    TB_MS_PRODUCT_CLASS
                                            WHERE   STORE_CD    =  #{storeCd}
                                        )
                                START WITH  P_PROD_CLASS_CD ='00000'
                                CONNECT BY
                                PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD
                                )   A
                    ]]>
                 )                   A,
                 TB_MS_PRODUCT       B,
                 (
	                SELECT M.STORE_CD
	                     , M.STORE_NM
	                     , M.PROD_CD
	                     , M.REAL_SALE_AMT
	                     , M.TOT_SALE_QTY
	                     , M.RAT
	                     , M.ACC_RAT
	                      , CASE WHEN M.ACC_RAT <![CDATA[<= #{gradeA} ]]> THEN 'A'
	                            WHEN M.ACC_RAT <![CDATA[> #{gradeA} ]]> AND M.ACC_RAT <![CDATA[<=  #{gradeB} ]]> THEN 'B'
	                            ELSE 'C'
	                        END AS GRADE
	                  FROM (
	                        SELECT M.STORE_CD
	                             , M.STORE_NM
	                             , M.PROD_CD
	                             , M.REAL_SALE_AMT
	                             , M.TOT_SALE_QTY
	                             <choose>
	                                <when test='sortFg != null and sortFg == "1"'>    <!-- 금액순 -->
	                                    , M.RAT_REAL_SALE_AMT  AS RAT
	                                    , SUM(M.RAT_REAL_SALE_AMT) OVER(ORDER BY M.REAL_SALE_AMT DESC) AS ACC_RAT
	                                </when>
	                                <when test='sortFg != null and sortFg == "2"'>    <!-- 수량순 -->
	                                    , M.RAT_TOT_SALE_QTY AS RAT
	                                    , SUM(M.RAT_TOT_SALE_QTY) OVER(ORDER BY M.TOT_SALE_QTY DESC) AS ACC_RAT
	                                </when>
	                            </choose>
	                          FROM  (
	                                SELECT TSDP.STORE_CD
	                                     , TMS.STORE_NM
	                                     , TSDP.PROD_CD
	                                     , SUM(TSDP.REAL_SALE_AMT) AS REAL_SALE_AMT
	                                     , SUM(TSDP.TOT_SALE_QTY) AS TOT_SALE_QTY
	                                     , ROUND(RATIO_TO_REPORT(SUM(TSDP.REAL_SALE_AMT)) OVER(), 2) *100 AS RAT_REAL_SALE_AMT
	                                     , ROUND(RATIO_TO_REPORT(SUM(TSDP.TOT_SALE_QTY)) OVER(), 2) *100 AS RAT_TOT_SALE_QTY
	                                  FROM TB_MS_STORE TMS
	                                     , TB_SL_DAILY_PROD TSDP
	                                 WHERE TMS.STORE_CD = TSDP.STORE_CD
	                                   AND TMS.STORE_CD      = #{storeCd}
	                                      <if test='startDate != null and startDate != "" and endDate != null and endDate != ""'>
	                                          AND     TSDP.SALE_DATE BETWEEN #{startDate} AND #{endDate}
	                                      </if>
	                                 GROUP BY TSDP.STORE_CD, TMS.STORE_NM, TSDP.PROD_CD
	                                 ) M
	                      ) M
	                ) C
			   WHERE C.STORE_CD      = #{storeCd}
                 AND B.STORE_CD = C.STORE_CD
                 AND B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
                 AND B.PROD_CD       = C.PROD_CD
          </when>
       </choose>
          <choose>
              <when test='sortFg != null and sortFg == "1"'>    <!-- 금액순 -->
                  ORDER BY C.REAL_SALE_AMT DESC
              </when>
              <when test='sortFg != null and sortFg == "2"'>    <!-- 수량순 -->
                  ORDER BY C.TOT_SALE_QTY DESC
              </when>
          </choose>
    </select>


</mapper>
