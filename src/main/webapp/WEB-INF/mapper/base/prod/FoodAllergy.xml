<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    FoodAllergy.xml
    식품 알레르기 정보관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2020.10.06     최초작성
-->
<mapper namespace="kr.co.solbipos.base.prod.foodAllergy.service.impl.FoodAllergyMapper">

    <!-- 식품 알레르기 정보관리 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_INFO, TB_MS_PRODUCT_ALGI_INFO
        COMMENTS : [본사-식품안전]재료-알레르기정보, [매장-식품안전]재료-알레르기정보
    -->
    <select id="getFoodAllergyList"  parameterType="FoodAllergyVO" resultType="DefaultMap">
        /* FoodAllergyMapper.getFoodAllergyList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thpai.RECIPES_CD,
                thpai.RECIPES_NM,
                thpai.ALLERGIE_NM,
                NVL(thb.HQ_BRAND_CD,'0') as HQ_BRAND_CD
                FROM TB_HQ_PRODUCT_ALGI_INFO thpai, TB_HQ_BRAND thb
                WHERE 1=1
                AND thpai.HQ_OFFICE_CD = #{membrOrgnCd}
                AND thb.HQ_OFFICE_CD (+)= thpai.HQ_OFFICE_CD
                AND thb.HQ_BRAND_CD (+)= thpai.HQ_BRAND_CD
                ORDER BY thpai.RECIPES_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmpai.RECIPES_CD,
                tmpai.RECIPES_NM,
                tmpai.ALLERGIE_NM
                FROM TB_MS_PRODUCT_ALGI_INFO tmpai
                WHERE 1=1
                AND tmpai.STORE_CD = #{storeCd}
                ORDER BY tmpai.RECIPES_CD
            </when>
        </choose>
    </select>

    <!-- 브랜드 콤보박스 리스트 조회 -->
    <!--
        TABLE    : TB_HQ_BRAND
        PARAM    : RecpOriginVO
        COMMENTS : 콤보박스에 넣을 브랜드를 조회한다.
    -->
    <select id="getBrandComboList" parameterType="FoodAllergyVO" resultType="DefaultMap">
        SELECT HQ_BRAND_CD AS NMCODE_CD, HQ_BRAND_NM AS NMCODE_NM
        FROM TB_HQ_BRAND
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
    </select>


    <!-- 재료코드(자동채번) -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_INFO, TB_MS_PRODUCT_ALGI_INFO
        COMMENTS : [본사-식품안전]재료-알레르기정보, [매장-식품안전]재료-알레르기정보
    -->
    <select id="getFoodAllergyRecipesCd" parameterType="FoodAllergyVO" resultType="String">
        /* FoodAllergyMapper.getFoodAllergyRecipesCd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                LPAD(NVL(MAX(thpai.RECIPES_CD), 0) + 1, 4, '0')
                FROM TB_HQ_PRODUCT_ALGI_INFO thpai
                WHERE 1=1
                AND thpai.HQ_OFFICE_CD = #{membrOrgnCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                LPAD(NVL(MAX(tmpai.RECIPES_CD), 0) + 1, 4, '0')
                FROM TB_MS_PRODUCT_ALGI_INFO tmpai
                WHERE 1=1
                AND tmpai.STORE_CD = #{storeCd}
            </when>
        </choose>
    </select>

    <!-- 식품 알레르기 정보관리 저장 insert -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_INFO, TB_MS_PRODUCT_ALGI_INFO
        COMMENTS : [본사-식품안전]재료-알레르기정보, [매장-식품안전]재료-알레르기정보
    -->
    <insert id="getFoodAllergySaveInsert" parameterType="FoodAllergyVO">
        /* FoodAllergyMapper.getFoodAllergySaveInsert */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_ALGI_INFO
                (
                    HQ_OFFICE_CD,
                    <if test="hqBrandCd != null and hqBrandCd != ''">
                        HQ_BRAND_CD,
                    </if>
                    RECIPES_CD,
                    RECIPES_NM,
                    ALLERGIE_NM,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{membrOrgnCd},
                    <if test="hqBrandCd != null and hqBrandCd != ''">
                        #{hqBrandCd},
                    </if>
                    #{recipesCd},
                    #{recipesNm},
                    #{allergieNm},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_ALGI_INFO
                (
                    STORE_CD,
                    RECIPES_CD,
                    RECIPES_NM,
                    ALLERGIE_NM,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{storeCd},
                    #{recipesCd},
                    #{recipesNm},
                    #{allergieNm},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 식품 알레르기 정보관리 저장 update -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_INFO, TB_MS_PRODUCT_ALGI_INFO
        COMMENTS : [본사-식품안전]재료-알레르기정보, [매장-식품안전]재료-알레르기정보
    -->
    <update id="getFoodAllergySaveUpdate" parameterType="FoodAllergyVO">
        /* FoodAllergyMapper.getFoodAllergySaveUpdate */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE
                TB_HQ_PRODUCT_ALGI_INFO
                SET
                <if test="hqBrandCd != null and hqBrandCd != ''">
                    HQ_BRAND_CD = #{hqBrandCd},
                </if>
                RECIPES_NM = #{recipesNm},
                ALLERGIE_NM = #{allergieNm},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHERE 1=1
                AND HQ_OFFICE_CD = #{membrOrgnCd}
                AND RECIPES_CD = #{recipesCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE
                TB_MS_PRODUCT_ALGI_INFO
                SET
                RECIPES_NM = #{recipesNm},
                ALLERGIE_NM = #{allergieNm},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND RECIPES_CD = #{recipesCd}
            </when>
        </choose>
    </update>

    <!-- 식품 알레르기 정보관리 저장 delete -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_INFO, TB_MS_PRODUCT_ALGI_INFO
        COMMENTS : [본사-식품안전]재료-알레르기정보, [매장-식품안전]재료-알레르기정보
    -->
    <delete id="getFoodAllergySaveDelete" parameterType="FoodAllergyVO">
        /* FoodAllergyMapper.getFoodAllergySaveDelete */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                TB_HQ_PRODUCT_ALGI_INFO
                WHERE 1=1
                AND HQ_OFFICE_CD = #{membrOrgnCd}
                AND RECIPES_CD = #{recipesCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                TB_MS_PRODUCT_ALGI_INFO
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND RECIPES_CD = #{recipesCd}
            </when>
        </choose>
    </delete>

    <!-- 식품 알레르기 정보관리 저장 delete 시, 알레르기-상품 저장 delete -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_ALGI_PROD
        COMMENTS : [본사-식품안전]재료/알러지-상품맵핑정보, [매장-식품안전]재료/알러지-상품맵핑정보
    -->
    <delete id="getFoodAllergySaveDeleteAll" parameterType="FoodAllergyVO">
        /* FoodAllergyMapper.getFoodAllergySaveDeleteAll */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                TB_HQ_PRODUCT_ALGI_PROD
                WHERE 1=1
                AND HQ_OFFICE_CD = #{membrOrgnCd}
                AND RECIPES_CD = #{recipesCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                TB_MS_PRODUCT_ALGI_PROD
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND RECIPES_CD = #{recipesCd}
            </when>
        </choose>
    </delete>

    <!-- 알레르기-상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_HQ_PRODUCT, TB_HQ_PRODUCT_CLASS, TB_HQ_PRODUCT_SALE_PRICE_V99 -> TB_HQ_PRODUCT_SALE_PRICE_V01,
                   TB_MS_PRODUCT_ALGI_PROD, TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_MS_PRODUCT_SALE_PRICE_V99 -> TB_MS_PRODUCT_SALE_PRICE_V01
        COMMENTS : [본사-식품안전]재료/알러지-상품맵핑정보, [본사]상품, [본사]상품_분류,
                   [매장-식품안전]재료/알러지-상품맵핑정보, [매장]상품, [매장]상품_분류
    -->
    <select id="getFoodAllergyDetailList"  parameterType="FoodAllergyVO" resultType="DefaultMap">
        /* FoodAllergyMapper.getFoodAllergyDetailList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                SUBSTR(thpc_p.PATH_NM, 2) AS PATH_NM,
                thpap.PROD_CD,
                thp.PROD_NM,
                NVL(v01.SALE_UPRC, 0) AS SALE_UPRC
                FROM TB_HQ_PRODUCT_ALGI_PROD thpap,
                TB_HQ_PRODUCT thp,
                (
                    SELECT
                    thpc.HQ_OFFICE_CD
                    , thpc.PROD_CLASS_CD
                    , SYS_CONNECT_BY_PATH (thpc.PROD_CLASS_CD,'▶') PATH
                    , SYS_CONNECT_BY_PATH (thpc.PROD_CLASS_NM,'▶') PATH_NM
                    FROM TB_HQ_PRODUCT_CLASS thpc
                    WHERE 1=1
                    AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                    START WITH thpc.P_PROD_CLASS_CD = '00000' AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                    CONNECT BY thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                ) thpc_p,
                TB_HQ_PRODUCT_SALE_PRICE_V01 v01 --view
                WHERE 1=1
                AND thpap.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thpap.PROD_CD = thp.PROD_CD
                AND thpc_p.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thpc_p.PROD_CLASS_CD = thp.PROD_CLASS_CD
                AND thpap.HQ_OFFICE_CD = #{membrOrgnCd}
                AND thpap.RECIPES_CD = #{recipesCd}
                AND v01.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND v01.PROD_CD = thp.PROD_CD
                <![CDATA[
                    AND v01.SALE_DATE = TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                ORDER BY thpap.PROD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                SUBSTR(tmpc_p.PATH_NM, 2) AS PATH_NM,
                tmpap.PROD_CD,
                tmp.PROD_NM,
                NVL(v01.SALE_UPRC, 0) AS SALE_UPRC
                FROM TB_MS_PRODUCT_ALGI_PROD tmpap,
                TB_MS_PRODUCT tmp,
                (
                    SELECT
                    tmpc.STORE_CD
                    , tmpc.PROD_CLASS_CD
                    , SYS_CONNECT_BY_PATH (tmpc.PROD_CLASS_CD,'▶') PATH
                    , SYS_CONNECT_BY_PATH (tmpc.PROD_CLASS_NM,'▶') PATH_NM
                    FROM (SELECT * FROM TB_MS_PRODUCT_CLASS WHERE STORE_CD = #{storeCd}) tmpc
                    WHERE 1=1
                    START WITH tmpc.P_PROD_CLASS_CD = '00000' AND tmpc.STORE_CD = #{storeCd}
                    CONNECT BY tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}
                ) tmpc_p,
                TB_MS_PRODUCT_SALE_PRICE_V01 v01 --view
                WHERE 1=1
                AND tmpap.STORE_CD = tmp.STORE_CD
                AND tmpap.PROD_CD = tmp.PROD_CD
                AND tmpc_p.STORE_CD = tmp.STORE_CD
                AND tmpc_p.PROD_CLASS_CD = tmp.PROD_CLASS_CD
                AND tmpap.STORE_CD = #{storeCd}
                AND tmpap.RECIPES_CD = #{recipesCd}
                AND v01.STORE_CD = tmp.STORE_CD
                AND v01.PROD_CD = tmp.PROD_CD
                <![CDATA[
                    AND v01.SALE_DATE = TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                ORDER BY tmpap.PROD_CD
            </when>
        </choose>
    </select>

    <!-- 알레르기-상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_CLASS, TB_HQ_PRODUCT_ALGI_PROD, TB_HQ_PRODUCT_SALE_PRICE_V99 -> TB_HQ_PRODUCT_SALE_PRICE_V01,
                   TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_MS_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_SALE_PRICE_V99 -> TB_MS_PRODUCT_SALE_PRICE_V01
        COMMENTS : [본사]상품, [본사]상품_분류, [본사-식품안전]재료/알러지-상품맵핑정보,
                   [매장]상품, [매장]상품_분류, [매장-식품안전]재료/알러지-상품맵핑정보
    -->
    <select id="getFoodAllergyProdList"  parameterType="FoodAllergyVO" resultType="DefaultMap">
        /* FoodAllergyMapper.getFoodAllergyProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                SUBSTR(thpc_p.PATH_NM, 2) AS PATH_NM,
                thp.PROD_CD,
                thp.PROD_NM,
                NVL(v01.SALE_UPRC, 0) AS SALE_UPRC
                FROM TB_HQ_PRODUCT thp,
                TB_HQ_PRODUCT_CLASS thpc,
                (
                    SELECT
                    thpc.PROD_CLASS_CD
                    , SYS_CONNECT_BY_PATH (thpc.PROD_CLASS_CD,'▶') PATH
                    , SYS_CONNECT_BY_PATH (thpc.PROD_CLASS_NM,'▶') PATH_NM
                    FROM TB_HQ_PRODUCT_CLASS thpc
                    WHERE 1=1
                    AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                    START WITH thpc.P_PROD_CLASS_CD = '00000' AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                    CONNECT BY thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}
                ) thpc_p,
                TB_HQ_PRODUCT_SALE_PRICE_V01 v01 --view
                WHERE 1=1
                AND thp.HQ_OFFICE_CD = #{membrOrgnCd}
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thpc.PROD_CLASS_CD = #{prodClassCd}
                </if>
                <if test="hqBrandCd != null and hqBrandCd != ''">
                    AND thp.HQ_BRAND_CD = #{hqBrandCd}
                </if>
                AND thpc.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thpc.PROD_CLASS_CD = thp.PROD_CLASS_CD
                AND thpc_p.PROD_CLASS_CD = thpc.PROD_CLASS_CD
                AND v01.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND v01.PROD_CD = thp.PROD_CD
                <![CDATA[
                    AND v01.SALE_DATE = TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND NOT EXISTS
                (
                    SELECT 1
                    FROM TB_HQ_PRODUCT_ALGI_PROD thpap
                    WHERE 1=1
                    AND thpap.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND thpap.PROD_CD = thp.PROD_CD
                    AND thpap.RECIPES_CD = #{recipesCd}
                )
                ORDER BY thpc_p.PATH_NM
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                SUBSTR(tmpc_p.PATH_NM, 2) AS PATH_NM,
                tmp.PROD_CD,
                tmp.PROD_NM,
                NVL(v01.SALE_UPRC, 0) AS SALE_UPRC
                FROM TB_MS_PRODUCT tmp,
                TB_MS_PRODUCT_CLASS tmpc,
                (
                    SELECT
                    tmpc.PROD_CLASS_CD
                    , SYS_CONNECT_BY_PATH (tmpc.PROD_CLASS_CD,'▶') PATH
                    , SYS_CONNECT_BY_PATH (tmpc.PROD_CLASS_NM,'▶') PATH_NM
                    FROM (SELECT * FROM TB_MS_PRODUCT_CLASS WHERE STORE_CD = #{storeCd}) tmpc
                    WHERE 1=1
                    START WITH tmpc.P_PROD_CLASS_CD = '00000' AND tmpc.STORE_CD = #{storeCd}
                    CONNECT BY tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}
                ) tmpc_p,
                TB_MS_PRODUCT_SALE_PRICE_V01 v01 --view
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmpc.PROD_CLASS_CD = #{prodClassCd}
                </if>
                AND tmpc.STORE_CD = tmp.STORE_CD
                AND tmpc.PROD_CLASS_CD = tmp.PROD_CLASS_CD
                AND tmpc_p.PROD_CLASS_CD = tmpc.PROD_CLASS_CD
                AND v01.STORE_CD = tmp.STORE_CD
                AND v01.PROD_CD = tmp.PROD_CD
                <![CDATA[
                    AND v01.SALE_DATE = TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND NOT EXISTS
                (
                    SELECT 1
                    FROM TB_MS_PRODUCT_ALGI_PROD tmpap
                    WHERE 1=1
                    AND tmpap.STORE_CD = tmp.STORE_CD
                    AND tmpap.PROD_CD = tmp.PROD_CD
                    AND tmpap.RECIPES_CD = #{recipesCd}
                )
                ORDER BY tmpc_p.PATH_NM
            </when>
        </choose>
    </select>

    <!-- 알레르기-상품 저장 insert -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_ALGI_PROD
        COMMENTS : [본사-식품안전]재료/알러지-상품맵핑정보, [매장-식품안전]재료/알러지-상품맵핑정보
    -->
    <insert id="getFoodAllergyProdSaveInsert" parameterType="FoodAllergyVO">
        /* FoodAllergyMapper.getFoodAllergyProdSaveInsert */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_ALGI_PROD
                (
                    HQ_OFFICE_CD,
                    <if test="hqBrandCd != null and hqBrandCd != ''">
                        HQ_BRAND_CD,
                    </if>
                    RECIPES_CD,
                    PROD_CD,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{membrOrgnCd},
                    <if test="hqBrandCd != null and hqBrandCd != ''">
                        #{hqBrandCd},
                    </if>
                    #{recipesCd},
                    #{prodCd},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_ALGI_PROD
                (
                    STORE_CD,
                    RECIPES_CD,
                    PROD_CD,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{storeCd},
                    #{recipesCd},
                    #{prodCd},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 알레르기-상품 저장 delete -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_ALGI_PROD
        COMMENTS : [본사-식품안전]재료/알러지-상품맵핑정보, [매장-식품안전]재료/알러지-상품맵핑정보
    -->
    <delete id="getFoodAllergyProdSaveDelete" parameterType="FoodAllergyVO">
        /* FoodAllergyMapper.getFoodAllergyProdSaveDelete */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                TB_HQ_PRODUCT_ALGI_PROD
                WHERE 1=1
                AND HQ_OFFICE_CD = #{membrOrgnCd}
                AND RECIPES_CD = #{recipesCd}
                AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                TB_MS_PRODUCT_ALGI_PROD
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND RECIPES_CD = #{recipesCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </delete>

</mapper>