<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    StoreLoanManageMapper.xml
    매장여신관리 리스트 조회
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       안동관     2018.08.21     최초작성
-->

<mapper namespace="kr.co.solbipos.iostock.loan.storeLoanManage.service.impl.StoreLoanManageMapper">

    <!-- 주문중지여부 ListMap -->
    <resultMap id="orderCloseListMap" type="DefaultMap">
        <result column="ORDER_CLOSE_YN" property="orderCloseYn" typeHandler="CustomBooleanTypeHandler"/>
        <result column="MAX_ORDER_AMT_YN" property="maxOrderAmtYn" typeHandler="CustomBooleanTypeHandler"/>
    </resultMap>

    <!-- 매장여신관리 리스트 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_LOAN
        PARAM    : storeLoanManageVO
        COMMENTS : 매장여신관리 리스트를 조회한다.
    -->
    <select id="getStoreLoanManageList" parameterType="storeLoanManageVO" resultMap="orderCloseListMap">
        /* USE : StoreLoanManageMapper.getStoreLoanList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        <![CDATA[
        SELECT  tms.STORE_CD, tms.STORE_NM
        ,       NVL(tphsl.LIMIT_LOAN_AMT, '') AS LIMIT_LOAN_AMT, tphsl.USE_LOAN_AMT, tphsl.CURR_LOAN_AMT
        ,       NVL(tphsl.MAX_ORDER_AMT, '') AS MAX_ORDER_AMT, NVL(tphsl.ORDER_FG, '1') AS ORDER_FG, NVL(tphsl.NO_OUTSTOCK_AMT_FG, 'N') AS NO_OUTSTOCK_AMT_FG
        ,       'N' AS MAX_ORDER_AMT_YN
        ,       NVL(tphsl.ORDER_CLOSE_YN, 'N') AS ORDER_CLOSE_YN
        ,       DECODE(tphsl.ORDER_FG
                      ,'1'
                      ,DECODE(SIGN(tphsl.CURR_LOAN_AMT)
                             ,1
                             ,DECODE(tphsl.MAX_ORDER_AMT
                                    ,NULL
                                    ,tphsl.CURR_LOAN_AMT
                                    ,DECODE(SIGN(tphsl.CURR_LOAN_AMT-tphsl.MAX_ORDER_AMT)
                                           ,1
                                           ,tphsl.MAX_ORDER_AMT
                                           ,tphsl.CURR_LOAN_AMT
                                           )
                                    )
                             ,0
                             )
                      ,'2'
                      ,DECODE(SIGN(tphsl.CURR_LOAN_AMT)
                             ,1
                             ,DECODE(tphsl.MAX_ORDER_AMT
                                    ,NULL
                                    ,tphsl.LIMIT_LOAN_AMT+tphsl.CURR_LOAN_AMT
                                    ,DECODE(SIGN(tphsl.LIMIT_LOAN_AMT+tphsl.CURR_LOAN_AMT-tphsl.MAX_ORDER_AMT)
                                           ,1
                                           ,tphsl.MAX_ORDER_AMT
                                           ,tphsl.LIMIT_LOAN_AMT+tphsl.CURR_LOAN_AMT
                                           )
                                    )
                             ,0
                             )
                      ,'3'
                      ,DECODE(SIGN(tphsl.CURR_LOAN_AMT)
                             ,1
                             ,tphsl.MAX_ORDER_AMT
                             ,0
                             )
                      ) AVAILABLE_ORDER_AMT
        ,       NVL(tphsl.REMARK, '') AS REMARK
        ]]>
        <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM    TB_MS_STORE tms
        ,       TB_PO_HQ_STORE_LOAN tphsl
        WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
        AND     tphsl.STORE_CD  (+) =   tms.STORE_CD
        ]]>
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        ORDER BY tms.STORE_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매장여신관리 상세현황 조회 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_LOAN, TB_PO_HQ_STORE_OUTSTOCK, TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : storeLoanInfoVO
        COMMENTS : 매장여신관리 상세현황 리스트를 조회한다.
    -->
    <select id="getStoreLoanManageDtlList" parameterType="storeLoanManageVO" resultType="DefaultMap">
        /* USE : StoreLoanManageMapper.getStoreLoanManageDtlList */
        <![CDATA[
        SELECT  B.LOAN_DATE, B.SLIP_NO, B.OUT_AMT, B.IN_AMT, B.REMARK, tphsl.LIMIT_LOAN_AMT, tphsl.CURR_LOAN_AMT
        FROM    TB_PO_HQ_STORE_LOAN tphsl
        ,       (   SELECT  STORE_CD, '조회기간 후' AS LOAN_DATE, '' AS SLIP_NO, SUM(OUT_AMT) AS OUT_AMT, SUM(IN_AMT) AS IN_AMT, '' AS REMARK, '1' AS ORDER_RANK
                    FROM    (
                                SELECT  STORE_CD, OUT_DATE LOAN_DATE, SLIP_NO, OUT_TOT AS OUT_AMT, 0 AS IN_AMT, REMARK
                                FROM    TB_PO_HQ_STORE_OUTSTOCK
                                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                AND     STORE_CD     = #{storeCd}
                                AND     OUT_DATE    >   #{endDate}
                                AND     SLIP_FG     =   1
                                AND     PROC_FG     IN  ('20', '30')
                                UNION ALL
                                SELECT  tphso.STORE_CD, tphso.IN_DATE LOAN_DATE, tphso.SLIP_NO, (tphso.IN_TOT + SUM(tphsod.PENALTY_AMT)) AS OUT_AMT, 0 AS IN_AMT, tphso.REMARK
                                FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
                                ,       TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
                                WHERE   tphso.HQ_OFFICE_CD = #{hqOfficeCd}
                                AND     tphso.STORE_CD     = #{storeCd}
                                AND     tphso.IN_DATE     >   #{startDate}
                                AND     tphso.SLIP_FG     =   -1
                                AND     tphso.PROC_FG     =   '30'
                                AND     tphsod.HQ_OFFICE_CD    =   tphso.HQ_OFFICE_CD
                                AND     tphsod.SLIP_NO         =   tphso.SLIP_NO
                                GROUP
                                BY      tphso.STORE_CD, tphso.IN_DATE, tphso.SLIP_NO, tphso.IN_TOT, tphso.REMARK
                            )
                    GROUP
                    BY      STORE_CD
                    HAVING  COUNT(*) > 0
                    UNION ALL
                    SELECT  STORE_CD, LOAN_DATE, SLIP_NO, OUT_AMT, IN_AMT, REMARK, '2' AS ORDER_RANK
                    FROM    (
                                SELECT  STORE_CD, OUT_DATE AS LOAN_DATE, SLIP_NO,  OUT_TOT AS OUT_AMT, 0 AS IN_AMT, REMARK
                                FROM    TB_PO_HQ_STORE_OUTSTOCK
                                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                AND     STORE_CD     = #{storeCd}
                                AND     OUT_DATE    BETWEEN #{startDate} AND #{endDate}
                                AND     SLIP_FG     =   1
                                AND     PROC_FG     IN  ('20', '30')
                                UNION ALL
                                SELECT  tphso.STORE_CD, tphso.IN_DATE AS LOAN_DATE, tphso.SLIP_NO, (tphso.IN_TOT + SUM(tphsod.PENALTY_AMT)) AS OUT_AMT, 0 AS IN_AMT, tphso.REMARK
                                FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
                                ,       TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
                                WHERE   tphso.HQ_OFFICE_CD = #{hqOfficeCd}
                                AND     tphso.STORE_CD     = #{storeCd}
                                AND     tphso.IN_DATE     BETWEEN #{startDate} AND #{endDate}
                                AND     tphso.SLIP_FG     =   -1
                                AND     tphso.PROC_FG     =   '30'
                                AND     tphsod.HQ_OFFICE_CD    =   tphso.HQ_OFFICE_CD
                                AND     tphsod.SLIP_NO         =   tphso.SLIP_NO
                                GROUP
                                BY      tphso.STORE_CD, tphso.IN_DATE, tphso.SLIP_NO, tphso.IN_TOT, tphso.REMARK
                            )
                    UNION ALL
                    SELECT  STORE_CD, '조회기간 전' AS LOAN_DATE, '' AS SLIP_NO, SUM(OUT_AMT) AS OUT_AMT, SUM(IN_AMT) AS IN_AMT, '' AS REMARK, '3' AS ORDER_RANK
                    FROM    (
                                SELECT  STORE_CD, OUT_DATE AS LOAN_DATE, SLIP_NO, OUT_TOT AS OUT_AMT, 0 AS IN_AMT, REMARK
                                FROM    TB_PO_HQ_STORE_OUTSTOCK
                                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                AND     STORE_CD     = #{storeCd}
                                AND     OUT_DATE    <   #{startDate}
                                AND     SLIP_FG     =   1
                                AND     PROC_FG     IN  ('20', '30')
                                UNION ALL
                                SELECT  tphso.STORE_CD, tphso.IN_DATE AS LOAN_DATE, tphso.SLIP_NO, (tphso.IN_TOT + SUM(tphsod.PENALTY_AMT)) AS OUT_AMT, 0 AS IN_AMT, tphso.REMARK
                                FROM    TB_PO_HQ_STORE_OUTSTOCK tphso
                                ,       TB_PO_HQ_STORE_OUTSTOCK_DTL tphsod
                                WHERE   tphso.HQ_OFFICE_CD = #{hqOfficeCd}
                                AND     tphso.STORE_CD     = #{storeCd}
                                AND     tphso.IN_DATE     <   #{startDate}
                                AND     tphso.SLIP_FG     =   -1
                                AND     tphso.PROC_FG     =   '30'
                                AND     tphsod.HQ_OFFICE_CD    =   tphso.HQ_OFFICE_CD
                                AND     tphsod.SLIP_NO         =   tphso.SLIP_NO
                                GROUP
                                BY      tphso.STORE_CD, tphso.IN_DATE, tphso.SLIP_NO, tphso.IN_TOT, tphso.REMARK
                            )
                    GROUP
                    BY      STORE_CD
                    HAVING  COUNT(*) > 0
                ) B
        WHERE   tphsl.STORE_CD =   #{storeCd}
        AND     B.STORE_CD     =   tphsl.STORE_CD
        ORDER
        BY      B.ORDER_RANK, B.LOAN_DATE DESC, B.SLIP_NO DESC
        ]]>
    </select>

    <!-- 매장여신 저장 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_LOAN
        PARAM    : storeLoanManageVO
        COMMENTS : 매장여신을 등록한다.
    -->
    <insert id="insertStoreLoanManage" parameterType="storeLoanManageVO">
    /* USE : StoreLoanManageMapper.insertStoreLoanManage */
    INSERT INTO TB_PO_HQ_STORE_LOAN
    (
        HQ_OFFICE_CD,
        STORE_CD,
        LIMIT_LOAN_AMT,
        USE_LOAN_AMT,
        CURR_LOAN_AMT,
        MAX_ORDER_AMT,
        ORDER_FG,
        NO_OUTSTOCK_AMT_FG,
        ORDER_CLOSE_YN,
        REMARK,
        REG_DT,
        REG_ID,
        MOD_DT,
        MOD_ID
    )
    VALUES
    (
        #{hqOfficeCd},
        #{storeCd},
        #{limitLoanAmt},
        0,
        #{limitLoanAmt},
        #{maxOrderAmt},
        #{orderFg},
        #{noOutstockAmtFg},
        #{orderCloseYn},
        #{remark},
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
    )
  </insert>

    <!-- 매장여신 저장 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_LOAN
        PARAM    : storeLoanManageVO
        COMMENTS : 매장여신을 수정한다.
    -->
    <update id="updateStoreLoanManage" parameterType="storeLoanManageVO">
    /* USE : StoreLoanManageMapper.updateStoreLoanManage */
    UPDATE  TB_PO_HQ_STORE_LOAN
    SET     LIMIT_LOAN_AMT        = #{limitLoanAmt},
            CURR_LOAN_AMT         = #{limitLoanAmt} - USE_LOAN_AMT,
            ORDER_FG              = #{orderFg},
            NO_OUTSTOCK_AMT_FG    = #{noOutstockAmtFg},
            <if test='maxOrderAmtYn == true'>
                <![CDATA[
                 MAX_ORDER_AMT         = null,
                ]]>
            </if>
            <if test='maxOrderAmtYn == false'>
                <![CDATA[
                 MAX_ORDER_AMT         = #{maxOrderAmt},
                ]]>
            </if>
            ORDER_CLOSE_YN        = #{orderCloseYn},
            REMARK                = #{remark},
            MOD_DT                = #{modDt},
            MOD_ID                = #{modId}
    WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
    AND     STORE_CD     = #{storeCd}
    </update>

    <!-- 매장여신 삭제 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_LOAN
        PARAM    : storeLoanManageVO
        COMMENTS : 매장여신을 삭제한다.
    -->
    <delete id="deleteStoreLoanManage" parameterType="storeLoanManageVO">
    /* USE : StoreLoanManageMapper.deleteStoreLoanManage */
    DELETE
    FROM	TB_PO_HQ_STORE_LOAN
    WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
    AND     STORE_CD     = #{storeCd}
    </delete>

    <!-- 매장여신관리 전체엑셀 다운로드 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_LOAN
        PARAM    : storeLoanManageVO
        COMMENTS : 매장여신관리 전체엑셀 다운로드 리스트를 조회한다.
    -->
    <select id="getStoreLoanManageExcelCtrlList" parameterType="storeLoanManageVO" resultMap="orderCloseListMap">
        /* USE : StoreLoanManageMapper.getStoreLoanManageExcelCtrlList */
        <![CDATA[
        SELECT  tms.STORE_CD, tms.STORE_NM
        ,       NVL(tphsl.LIMIT_LOAN_AMT, '') AS LIMIT_LOAN_AMT, tphsl.USE_LOAN_AMT, tphsl.CURR_LOAN_AMT
        ,       NVL(tphsl.MAX_ORDER_AMT, '') AS MAX_ORDER_AMT, NVL(tphsl.ORDER_FG, '1') AS ORDER_FG, NVL(tphsl.NO_OUTSTOCK_AMT_FG, 'N') AS NO_OUTSTOCK_AMT_FG
        ,       'N' AS MAX_ORDER_AMT_YN
        ,       NVL(tphsl.ORDER_CLOSE_YN, 'N') AS ORDER_CLOSE_YN
        ,       DECODE(tphsl.ORDER_FG
                      ,'1'
                      ,DECODE(SIGN(tphsl.CURR_LOAN_AMT)
                             ,1
                             ,DECODE(tphsl.MAX_ORDER_AMT
                                    ,NULL
                                    ,tphsl.CURR_LOAN_AMT
                                    ,DECODE(SIGN(tphsl.CURR_LOAN_AMT-tphsl.MAX_ORDER_AMT)
                                           ,1
                                           ,tphsl.MAX_ORDER_AMT
                                           ,tphsl.CURR_LOAN_AMT
                                           )
                                    )
                             ,0
                             )
                      ,'2'
                      ,DECODE(SIGN(tphsl.CURR_LOAN_AMT)
                             ,1
                             ,DECODE(tphsl.MAX_ORDER_AMT
                                    ,NULL
                                    ,tphsl.LIMIT_LOAN_AMT+tphsl.CURR_LOAN_AMT
                                    ,DECODE(SIGN(tphsl.LIMIT_LOAN_AMT+tphsl.CURR_LOAN_AMT-tphsl.MAX_ORDER_AMT)
                                           ,1
                                           ,tphsl.MAX_ORDER_AMT
                                           ,tphsl.LIMIT_LOAN_AMT+tphsl.CURR_LOAN_AMT
                                           )
                                    )
                             ,0
                             )
                      ,'3'
                      ,DECODE(SIGN(tphsl.CURR_LOAN_AMT)
                             ,1
                             ,tphsl.MAX_ORDER_AMT
                             ,0
                             )
                      ) AVAILABLE_ORDER_AMT
        ,       NVL(tphsl.REMARK, '') AS REMARK
        ]]>
        <![CDATA[
        FROM    TB_MS_STORE tms
        ,       TB_PO_HQ_STORE_LOAN tphsl
        WHERE   tms.HQ_OFFICE_CD    =   #{hqOfficeCd}
        AND     tphsl.STORE_CD  (+) =   tms.STORE_CD
        ]]>
        ORDER BY tms.STORE_CD
    </select>

</mapper>
