<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.dlvr.anals.dayDlvr.service.impl.DayDlvrMapper">

    <!-- 일자별 배달현황  -->
    <!--
        TABLE    : TB_SL_SALE_HDR_DLVR & TB_SL_SALE_HDR
        COMMENTS :
    -->
    <!--    <select id="getDayDlvrSaleList" parameterType="dayDlvrVO" resultType="DefaultMap">-->
    <!--      /*배달매출 조회*/-->
    <!--      /*DlvrMapper.getDlvrList*/-->
    <!--      <include refid="CmmSQL.PagingTemplateHeader"/>-->
    <!--      SELECT tssh.SALE_DATE, SUM(tssh.REAL_SALE_AMT) AS SUM_DLVR_REAL_SALE_AMT, count(tssh.BILL_NO) AS CNT_DLVR_BILL_NO-->
    <!--      <include refid="CmmSQL.PagingTemplateCount"/>-->
    <!--      FROM TB_SL_SALE_HDR_DLVR tsshd-->
    <!--      INNER JOIN TB_SL_SALE_HDR tssh ON tsshd.BILL_NO = tssh.BILL_NO AND tsshd.POS_NO = tssh.POS_NO AND tsshd.STORE_CD = tssh.STORE_CD AND tsshd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD AND tsshd.SALE_DATE = tssh.SALE_DATE AND tsshd.HQ_BRAND_CD = tssh.HQ_BRAND_CD-->
    <!--      WHERE tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}-->
    <!--      GROUP BY tssh.SALE_DATE-->
    <!--      <include refid="CmmSQL.PagingTemplateBottom"/>-->
    <!--    </select>-->

    <!--    <select id="getDayNonDlvrSaleList" parameterType="dayDlvrVO" resultType="DefaultMap">-->
    <!--      /*배달외매출 조회*/-->
    <!--      /*DlvrMapper.getDlvrList*/-->
    <!--      <include refid="CmmSQL.PagingTemplateHeader"/>-->
    <!--      SELECT tssh.SALE_DATE, SUM(tssh.REAL_SALE_AMT) AS SUM_REAL_SALE_AMT, count(tssh.BILL_NO) AS CNT_BILL_NO-->
    <!--      <include refid="CmmSQL.PagingTemplateCount"/>-->
    <!--      FROM TB_SL_SALE_HDR_DLVR tsshd-->
    <!--      FULL OUTER JOIN TB_SL_SALE_HDR tssh ON tsshd.BILL_NO = tssh.BILL_NO AND tsshd.POS_NO = tssh.POS_NO AND tsshd.STORE_CD = tssh.STORE_CD AND tsshd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD AND tsshd.SALE_DATE = tssh.SALE_DATE AND tsshd.HQ_BRAND_CD = tssh.HQ_BRAND_CD-->
    <!--      WHERE tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}-->
    <!--      AND tsshd.BILL_NO IS NULL OR tssh.BILL_NO IS NULL-->
    <!--      AND tsshd.POS_NO IS NULL OR tssh.POS_NO IS NULL-->
    <!--      AND tsshd.STORE_CD IS NULL OR tssh.STORE_CD IS NULL-->
    <!--      AND tsshd.HQ_OFFICE_CD IS NULL OR tssh.HQ_OFFICE_CD IS NULL-->
    <!--      AND tsshd.SALE_DATE IS NULL OR tssh.SALE_DATE IS NULL-->
    <!--      AND tsshd.HQ_BRAND_CD IS NULL OR tssh.HQ_BRAND_CD IS NULL-->
    <!--      GROUP BY tssh.SALE_DATE-->
    <!--      <include refid="CmmSQL.PagingTemplateBottom"/>-->
    <!--  </select>-->

    <select id="getDayDlvrSaleList_paging" parameterType="dayDlvrVO" resultType="DefaultMap">
        /*배달매출 조회*/
        /*DlvrMapper.getDlvrList*/
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        NVL(A.SALE_DATE, B.SALE_DATE) AS SALE_DATE
        , NVL(A.NON_CNT_BILL, 0) AS NON_CNT_BILL
        , NVL(A.NON_DLVR_AMT,0) AS NON_DLVR_AMT
        , B.SALE_DATE
        , NVL(B.DLVR_BILL_CNT,0) AS DLVR_BILL_CNT
        , NVL(B.DLVR_AMT,0) AS DLVR_AMT
        FROM
        (
        SELECT
        tssh.SALE_DATE, COUNT(tssh.BILL_NO) AS NON_CNT_BILL, SUM(tssh.REAL_SALE_AMT) AS NON_DLVR_AMT
        FROM
        TB_SL_SALE_HDR tssh
        WHERE
        tssh.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tssh.DLVR_YN = 'N'
        AND tssh.SALE_DATE BETWEEN #{saleDate} AND #{saleDate}
        GROUP BY
        tssh.SALE_DATE) A
        FULL OUTER JOIN (
        SELECT
        tssh.SALE_DATE, COUNT(tssh.BILL_NO) AS DLVR_BILL_CNT, SUM(tssh.REAL_SALE_AMT) AS DLVR_AMT
        FROM
        TB_SL_SALE_HDR tssh
        WHERE
        tssh.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tssh.DLVR_YN = 'Y'
        AND tssh.SALE_DATE BETWEEN #{saleDate} AND #{saleDate}
        GROUP BY
        tssh.SALE_DATE) B ON
        A.SALE_DATE = B.SALE_DATE
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getDaySaleDtlList_paging" parameterType="dayDlvrVO" resultType="DefaultMap">
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        A.PROD_CLASS_NM,
        A.PROD_CD,
        A.PROD_NM,
        SUM(A.SUM_SAEL_QTY) AS SUM_SALE_QTY,
        SUM(A.SUM_REAL_SALE_AMT) AS SUM_REAL_AMT
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM
        (
        SELECT
        thpc.PROD_CLASS_NM, thp.PROD_CD, thp.PROD_NM, SUM(tssd.SALE_QTY) AS SUM_SAEL_QTY, SUM(tssd.REAL_SALE_AMT) AS
        SUM_REAL_SALE_AMT, tssd.SALE_DATE
        FROM
        TB_SL_SALE_HDR tssh, TB_SL_SALE_DTL tssd, TB_HQ_PRODUCT thp, TB_HQ_PRODUCT_CLASS thpc
        WHERE
        1 = 1
        AND thp.PROD_CD = tssd.PROD_CD
        AND thpc.PROD_CLASS_CD = thp.PROD_CLASS_CD
        AND tssd.BILL_NO = tssh.BILL_NO
        AND tssd.POS_NO = tssd.POS_NO
        AND tssd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
        AND tssd.STORE_CD = tssh.STORE_CD
        AND tssd.HQ_BRAND_CD = tssh.HQ_BRAND_CD
        AND tssd.SALE_DATE = #{searchDate}
        AND tssd.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tssd.HQ_BRAND_CD = #{hqBrandCd}
        AND tssd.POS_NO = #{posNo}
        AND tssd.BILL_NO = #{billNo}
        GROUP BY
        tssd.SALE_DATE , thp.PROD_CD , thp.PROD_NM , thpc.PROD_CLASS_NM, tssd.HQ_OFFICE_CD, tssd.STORE_CD,
        tssd.HQ_BRAND_CD, tssd.POS_NO, tssd.BILL_NO
        ORDER BY
        thp.PROD_CD) A
        GROUP BY
        A.PROD_CLASS_NM,
        A.PROD_CD,
        A.PROD_NM
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getDayDlvrSaleList" parameterType="dayDlvrVO" resultType="DefaultMap">
        /*배달매출 조회*/
        /*DlvrMapper.getDlvrList*/
        SELECT
        NVL(A.SALE_DATE, B.SALE_DATE) AS SALE_DATE
        , NVL(SUM(A.NON_CNT_BILL), 0) AS NON_CNT_BILL
        , NVL(SUM(A.NON_DLVR_AMT),0) AS NON_DLVR_AMT
        , B.SALE_DATE AS NON_SALE_DATE
        , NVL(SUM(B.DLVR_BILL_CNT),0) AS DLVR_BILL_CNT
        , NVL(SUM(B.DLVR_AMT),0) AS DLVR_AMT
        FROM
        (
        SELECT
        tssh.SALE_DATE, tssh.HQ_BRAND_CD, tssh.POS_NO, tssh.BILL_NO, COUNT(tssh.BILL_NO) AS NON_CNT_BILL,
        SUM(tssh.REAL_SALE_AMT) AS NON_DLVR_AMT
        FROM
        TB_SL_SALE_HDR tssh
        WHERE 1=1
        <if test='hqOfficeCd != null and hqOfficeCd !=""'>
            AND tssh.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test='storeCd != null and storeCd !=""'>
            AND tssh.STORE_CD = #{storeCd}
        </if>
        AND tssh.DLVR_YN = 'N'
        AND tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}
        GROUP BY
        tssh.SALE_DATE,
        tssh.HQ_BRAND_CD,
        tssh.POS_NO,
        tssh.BILL_NO) A
        FULL OUTER JOIN (
        SELECT
        tssh.SALE_DATE, tssh.HQ_BRAND_CD, tssh.POS_NO, tssh.BILL_NO, COUNT(tssh.BILL_NO) AS DLVR_BILL_CNT,
        SUM(tssh.REAL_SALE_AMT) AS DLVR_AMT
        FROM
        TB_SL_SALE_HDR tssh
        WHERE 1=1
        <if test='hqOfficeCd != null and hqOfficeCd !=""'>
            AND tssh.HQ_OFFICE_CD = #{hqOfficeCd}
        </if>
        <if test='storeCd != null and storeCd !=""'>
            AND tssh.STORE_CD = #{storeCd}
        </if>
        AND tssh.DLVR_YN = 'Y'
        AND tssh.SALE_DATE BETWEEN #{startDate} AND #{endDate}
        GROUP BY
        tssh.SALE_DATE,
        tssh.HQ_BRAND_CD,
        tssh.POS_NO,
        tssh.BILL_NO) B ON A.SALE_DATE = B.SALE_DATE
        GROUP BY A.SALE_DATE, B.SALE_DATE
        ORDER BY A.SALE_DATE
    </select>

    <select id="getDaySaleDtlList" parameterType="dayDlvrVO" resultType="DefaultMap">
        SELECT A.LV1_CD,
        A.LV1_NM,
        A.LV2_CD,
        A.LV2_NM,
        A.LV2_NM_FULL,
        A.LV2_CD_,
        A.LV3_CD,
        A.LV3_NM,
        A.LV3_NM_FULL,
        C.PROD_CD,
        B.PROD_NM,
        NVL(SUM(C.NON_DLVR_SALE_QTY), 0) AS NON_DLVR_SALE_QTY ,
        NVL(SUM(C.NON_DLVR_AMT), 0) AS NON_DLVR_AMT ,
        C.SALE_DATE AS SALE_DATE ,
        NVL(SUM(C.DLVR_SALE_QTY), 0) AS DLVR_SALE_QTY ,
        NVL(SUM(C.DLVR_AMT), 0) AS DLVR_AMT
        <choose>
            <when test='orgnFg != null and orgnFg == "HQ"'>    <!-- 본사 -->
                FROM (
                SELECT A.P_PROD_CLASS_CD AS LV1_CD,
                A.PROD_CLASS_CD AS LV2_CD,
                A.PROD_CLASS_NM AS LV2_NM,
                B.P_PROD_CLASS_CD AS LV2_CD_,
                B.PROD_CLASS_CD AS LV3_CD,
                B.PROD_CLASS_NM AS LV3_NM,
                (SELECT SF_GET_PROD_CLASSES('H', #{hqOfficeCd}, A.P_PROD_CLASS_CD) FROM DUAL) AS LV1_NM,
                (SELECT SF_GET_PROD_CLASSES('H', #{hqOfficeCd}, A.PROD_CLASS_CD ) FROM DUAL) AS LV2_NM_FULL,
                (SELECT SF_GET_PROD_CLASSES('H', #{hqOfficeCd}, B.PROD_CLASS_CD ) FROM DUAL) AS LV3_NM_FULL
                FROM (
                SELECT HQ_OFFICE_CD,
                P_PROD_CLASS_CD,
                PROD_CLASS_CD,
                PROD_CLASS_NM
                FROM TB_HQ_PRODUCT_CLASS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND P_PROD_CLASS_CD IN (
                /* SELECT PROD_CLASS_CD, PROD_CLASS_NM */
                SELECT PROD_CLASS_CD
                FROM TB_HQ_PRODUCT_CLASS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND P_PROD_CLASS_CD = '00000'
                )
                ) A,
                TB_HQ_PRODUCT_CLASS B
                WHERE B.P_PROD_CLASS_CD IN (
                SELECT PROD_CLASS_CD
                /* SELECT P_PROD_CLASS_CD, PROD_CLASS_CD, PROD_CLASS_NM */
                FROM TB_HQ_PRODUCT_CLASS
                WHERE 1=1
                <if test='hqOfficeCd != null and hqOfficeCd !=""'>
                    AND HQ_OFFICE_CD = #{hqOfficeCd}
                </if>
                <if test='storeCd != null and storeCd !=""'>
                    AND STORE_CD = #{storeCd}
                </if>
                AND P_PROD_CLASS_CD IN (
                /* SELECT PROD_CLASS_CD, PROD_CLASS_NM */
                SELECT PROD_CLASS_CD
                FROM TB_HQ_PRODUCT_CLASS
                WHERE 1=1
                <if test='hqOfficeCd != null and hqOfficeCd !=""'>
                    AND HQ_OFFICE_CD = #{hqOfficeCd}
                </if>
                <if test='storeCd != null and storeCd !=""'>
                    AND STORE_CD = #{storeCd}
                </if>
                AND P_PROD_CLASS_CD = '00000'
                )
                )
                AND A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                AND A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
                ) A,
                TB_HQ_PRODUCT B,
                (
                SELECT
                NVL(NON_DLVR_SALE_DATE, DLVR_SALE_DATE) AS SALE_DATE
                , NON_DLVR_SALE_DATE
                , NON_DLVR_HQ_BRAND_CD
                , NON_DLVR_POS_NO
                , NON_DLVR_BILL_NO
                , NVL(NON_DLVR_PROD_CD, DLVR_PROD_CD) AS PROD_CD
                , NON_DLVR_PROD_CD
                , NON_DLVR_SALE_QTY
                , NON_DLVR_AMT
                , DLVR_SALE_DATE
                , DLVR_HQ_BRAND_CD
                , DLVR_POS_NO
                , DLVR_BILL_NO
                , DLVR_PROD_CD
                , DLVR_SALE_QTY
                , DLVR_AMT
                FROM
                (
                SELECT tssh.SALE_DATE AS NON_DLVR_SALE_DATE, tssh.HQ_BRAND_CD AS NON_DLVR_HQ_BRAND_CD, tssh.POS_NO AS
                NON_DLVR_POS_NO, tssh.BILL_NO AS NON_DLVR_BILL_NO, tssd.PROD_CD AS NON_DLVR_PROD_CD,
                COUNT(tssd.SALE_QTY) AS NON_DLVR_SALE_QTY, SUM(tssd.REAL_SALE_AMT) AS NON_DLVR_AMT
                FROM
                TB_SL_SALE_DTL tssd, TB_SL_SALE_HDR tssh
                WHERE
                1 = 1
                AND tssd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
                AND tssd.STORE_CD = tssh.STORE_CD
                AND tssd.HQ_BRAND_CD = tssh.HQ_BRAND_CD
                AND tssd.BILL_NO = tssh.BILL_NO
                AND tssd.POS_NO = tssh.POS_NO
                AND tssd.SALE_DATE = tssh.SALE_DATE
                AND tssh.STORE_CD = #{storeCd}
                AND tssh.DLVR_YN = 'N'
                AND tssh.SALE_DATE = #{searchDate}
                GROUP BY
                tssh.SALE_DATE, tssh.HQ_BRAND_CD, tssh.POS_NO, tssh.BILL_NO, tssd.PROD_CD) A
                FULL OUTER JOIN (
                SELECT tssh.SALE_DATE AS DLVR_SALE_DATE, tssh.HQ_BRAND_CD AS DLVR_HQ_BRAND_CD, tssh.POS_NO AS
                DLVR_POS_NO, tssh.BILL_NO AS DLVR_BILL_NO, tssd.PROD_CD AS DLVR_PROD_CD, COUNT(tssd.SALE_QTY) AS
                DLVR_SALE_QTY, SUM(tssd.REAL_SALE_AMT) AS DLVR_AMT
                FROM
                TB_SL_SALE_DTL tssd, TB_SL_SALE_HDR tssh
                WHERE
                1 = 1
                AND tssd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
                AND tssd.STORE_CD = tssh.STORE_CD
                AND tssd.HQ_BRAND_CD = tssh.HQ_BRAND_CD
                AND tssd.BILL_NO = tssh.BILL_NO
                AND tssd.POS_NO = tssh.POS_NO
                AND tssd.SALE_DATE = tssh.SALE_DATE
                AND tssh.STORE_CD = #{storeCd}
                AND tssh.DLVR_YN = 'Y'
                AND tssh.SALE_DATE = #{searchDate}
                GROUP BY
                tssh.SALE_DATE, tssh.HQ_BRAND_CD, tssh.POS_NO, tssh.BILL_NO, tssd.PROD_CD) B ON
                A.NON_DLVR_SALE_DATE = B.DLVR_SALE_DATE) C
                WHERE 1=1
                <if test='hqOfficeCd != null and hqOfficeCd !=""'>
                    AND B.HQ_OFFICE_CD = #{hqOfficeCd}
                </if>
                <if test='storeCd != null and storeCd !=""'>
                    AND B.STORE_CD = #{storeCd}
                </if>
                AND B.PROD_CLASS_CD = A.LV3_CD
                AND B.PROD_CD = C.NON_DLVR_PROD_CD
                AND C.SALE_DATE = #{searchDate}
            </when>
            <when test='orgnFg != null and orgnFg == "STORE"'>    <!-- 가맹점 -->
                FROM (
                SELECT A.P_PROD_CLASS_CD AS LV1_CD,
                A.PROD_CLASS_CD AS LV2_CD,
                A.PROD_CLASS_NM AS LV2_NM,
                B.P_PROD_CLASS_CD AS LV2_CD_,
                B.PROD_CLASS_CD AS LV3_CD,
                B.PROD_CLASS_NM AS LV3_NM,
                (SELECT SF_GET_PROD_CLASSES('S', #{storeCd}, A.P_PROD_CLASS_CD) FROM DUAL) AS LV1_NM,
                (SELECT SF_GET_PROD_CLASSES('S', #{storeCd}, A.PROD_CLASS_CD ) FROM DUAL) AS LV2_NM_FULL,
                (SELECT SF_GET_PROD_CLASSES('S', #{storeCd}, B.PROD_CLASS_CD ) FROM DUAL) AS LV3_NM_FULL
                FROM (
                SELECT STORE_CD,
                P_PROD_CLASS_CD,
                PROD_CLASS_CD,
                PROD_CLASS_NM
                FROM TB_MS_PRODUCT_CLASS
                WHERE STORE_CD = #{storeCd}
                AND P_PROD_CLASS_CD IN (
                /* SELECT PROD_CLASS_CD, PROD_CLASS_NM */
                SELECT PROD_CLASS_CD
                FROM TB_MS_PRODUCT_CLASS
                WHERE STORE_CD = #{storeCd}
                AND P_PROD_CLASS_CD = '00000'
                )
                ) A,
                TB_MS_PRODUCT_CLASS B
                WHERE B.P_PROD_CLASS_CD IN (
                SELECT PROD_CLASS_CD
                /* SELECT P_PROD_CLASS_CD, PROD_CLASS_CD, PROD_CLASS_NM */
                FROM TB_MS_PRODUCT_CLASS
                WHERE STORE_CD = #{storeCd}
                AND P_PROD_CLASS_CD IN (
                /* SELECT PROD_CLASS_CD, PROD_CLASS_NM */
                SELECT PROD_CLASS_CD
                FROM TB_MS_PRODUCT_CLASS
                WHERE STORE_CD = #{storeCd}
                AND P_PROD_CLASS_CD = '00000'
                )
                )
                AND A.STORE_CD = B.STORE_CD
                AND A.PROD_CLASS_CD = B.P_PROD_CLASS_CD
                ) A,
                TB_MS_PRODUCT B,
                (
                SELECT
                NVL(NON_DLVR_SALE_DATE, DLVR_SALE_DATE) AS SALE_DATE
                , NON_DLVR_SALE_DATE
                , NON_DLVR_HQ_BRAND_CD
                , NON_DLVR_POS_NO
                , NON_DLVR_BILL_NO
                , NVL(NON_DLVR_PROD_CD, DLVR_PROD_CD) AS PROD_CD
                , NON_DLVR_PROD_CD
                , NON_DLVR_SALE_QTY
                , NON_DLVR_AMT
                , DLVR_SALE_DATE
                , DLVR_HQ_BRAND_CD
                , DLVR_POS_NO
                , DLVR_BILL_NO
                , DLVR_PROD_CD
                , DLVR_SALE_QTY
                , DLVR_AMT
                FROM
                (
                SELECT tssh.SALE_DATE AS NON_DLVR_SALE_DATE, tssh.HQ_BRAND_CD AS NON_DLVR_HQ_BRAND_CD, tssh.POS_NO AS
                NON_DLVR_POS_NO, tssh.BILL_NO AS NON_DLVR_BILL_NO, tssd.PROD_CD AS NON_DLVR_PROD_CD,
                COUNT(tssd.SALE_QTY) AS NON_DLVR_SALE_QTY, SUM(tssd.REAL_SALE_AMT) AS NON_DLVR_AMT
                FROM
                TB_SL_SALE_DTL tssd, TB_SL_SALE_HDR tssh
                WHERE
                1 = 1
                AND tssd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
                AND tssd.STORE_CD = tssh.STORE_CD
                AND tssd.HQ_BRAND_CD = tssh.HQ_BRAND_CD
                AND tssd.BILL_NO = tssh.BILL_NO
                AND tssd.POS_NO = tssh.POS_NO
                AND tssd.SALE_DATE = tssh.SALE_DATE
                AND tssh.STORE_CD = #{storeCd}
                AND tssh.DLVR_YN = 'N'
                AND tssh.SALE_DATE = #{searchDate}
                GROUP BY
                tssh.SALE_DATE, tssh.HQ_BRAND_CD, tssh.POS_NO, tssh.BILL_NO, tssd.PROD_CD) A
                FULL OUTER JOIN (
                SELECT tssh.SALE_DATE AS DLVR_SALE_DATE, tssh.HQ_BRAND_CD AS DLVR_HQ_BRAND_CD, tssh.POS_NO AS
                DLVR_POS_NO, tssh.BILL_NO AS DLVR_BILL_NO, tssd.PROD_CD AS DLVR_PROD_CD, COUNT(tssd.SALE_QTY) AS
                DLVR_SALE_QTY, SUM(tssd.REAL_SALE_AMT) AS DLVR_AMT
                FROM
                TB_SL_SALE_DTL tssd, TB_SL_SALE_HDR tssh
                WHERE
                1 = 1
                AND tssd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
                AND tssd.STORE_CD = tssh.STORE_CD
                AND tssd.HQ_BRAND_CD = tssh.HQ_BRAND_CD
                AND tssd.BILL_NO = tssh.BILL_NO
                AND tssd.POS_NO = tssh.POS_NO
                AND tssd.SALE_DATE = tssh.SALE_DATE
                AND tssh.STORE_CD = #{storeCd}
                AND tssh.DLVR_YN = 'Y'
                AND tssh.SALE_DATE = #{searchDate}
                GROUP BY
                tssh.SALE_DATE, tssh.HQ_BRAND_CD, tssh.POS_NO, tssh.BILL_NO, tssd.PROD_CD) B ON
                A.NON_DLVR_SALE_DATE = B.DLVR_SALE_DATE) C
                WHERE 1=1
                <if test='hqOfficeCd != null and hqOfficeCd !=""'>
                    AND B.HQ_OFFICE_CD = #{hqOfficeCd}
                </if>
                <if test='storeCd != null and storeCd !=""'>
                    AND B.STORE_CD = #{storeCd}
                </if>
                AND B.PROD_CLASS_CD = A.LV3_CD
                AND B.PROD_CD = C.PROD_CD
                AND C.SALE_DATE = #{searchDate}
            </when>
        </choose>
        GROUP BY
        A.LV1_CD,
        A.LV2_CD,
        A.LV2_NM,
        A.LV2_CD_,
        A.LV3_CD,
        A.LV3_NM,
        A.LV1_NM,
        A.LV2_NM_FULL,
        A.LV3_NM_FULL,
        C.PROD_CD,
        B.PROD_NM,
        C.SALE_DATE
        ORDER BY
        LV1_CD,
        LV2_CD,
        LV3_CD,
        C.PROD_CD
        <!--        (-->
        <!--        SELECT-->
        <!--        tssd.PROD_CD, COUNT(tssd.SALE_QTY) AS CNT_QTY, SUM(tssd.REAL_SALE_AMT) AS DTL_AMT-->
        <!--        FROM-->
        <!--        TB_SL_SALE_DTL tssd, (-->
        <!--        SELECT-->
        <!--        *-->
        <!--        FROM-->
        <!--        TB_SL_SALE_HDR tssh-->
        <!--        WHERE-->
        <!--        tssh.DLVR_YN = 'N'-->
        <!--        <if test='hqOfficeCd != null and hqOfficeCd !=""'>-->
        <!--            AND tssh.HQ_OFFICE_CD = #{hqOfficeCd}-->
        <!--        </if>-->
        <!--        <if test='storeCd != null and storeCd !=""'>-->
        <!--            AND tssh.STORE_CD = #{storeCd}-->
        <!--        </if>-->
        <!--        AND tssh.SALE_DATE = #{searchDate} ) tssh-->
        <!--        WHERE-->
        <!--        tssd.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD-->
        <!--        AND tssd.HQ_BRAND_CD = tssh.HQ_BRAND_CD-->
        <!--        AND tssd.STORE_CD = tssh.STORE_CD-->
        <!--        AND tssd.SALE_DATE = tssh.SALE_DATE-->
        <!--        AND tssd.POS_NO = tssh.POS_NO-->
        <!--        AND tssd.BILL_NO = tssh.BILL_NO-->
        <!--        AND tssd.REG_SEQ = tssh.REG_SEQ-->
        <!--        <if test='hqOfficeCd != null and hqOfficeCd !=""'>-->
        <!--            AND tssd.HQ_OFFICE_CD = #{hqOfficeCd}-->
        <!--        </if>-->
        <!--        <if test='storeCd != null and storeCd !=""'>-->
        <!--            AND tssd.STORE_CD = #{storeCd}-->
        <!--        </if>-->
        <!--        AND tssd.SALE_DATE = #{searchDate}-->
        <!--        GROUP BY-->
        <!--        tssd.PROD_CD) C,-->
        <!--        <if test='hqOfficeCd != null and hqOfficeCd !=""'>-->
        <!--            TB_HQ_PRODUCT D-->
        <!--        </if>-->
        <!--        <if test='storeCd != null and storeCd !=""'>-->
        <!--            TB_MS_STORE D-->
        <!--        </if>-->
        <!--        WHERE-->
        <!--        D.PROD_CD = C.PROD_CD-->
        <!--        AND B.PROD_CD = C.PROD_CD-->
        <!--        AND D.PROD_CLASS_CD = A.LV3_CD-->
        <!--        <if test='storeCd != null and storeCd !=""'>-->
        <!--            AND C.STORE_CD = D.STORE_CD(+)-->
        <!--        </if>-->
    </select>

</mapper>