<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.stock.status.storeday.service.impl.StoreDayMapper">
    <!-- 매장일수불 - 리스트 조회 -->
    <!--
        TABLE    : TB_ST_STORE_STOCK_DAILY, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD, TB_HQ_PRODUCT_CLASS
        PARAM    : storeDayVO
        COMMENTS : 매장일수불현황 - 리스트를 조회한다.
    -->
    <select id="storeDayList" parameterType="storeDayVO" resultType="DefaultMap">
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT A.*
             , (SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = A.PO_UNIT_FG)  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
             <include refid="CmmSQL.PagingTemplateCount"/>
        FROM (
                SELECT FN_GET_PROD_CLASS_CD_NM_STR(TMP.STORE_CD, TMP.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM
                     , TSSSD.PROD_CD
                     , TMP.PROD_NM
                     , TSSSD.STORE_CD
                     , (SELECT STORE_NM FROM TB_MS_STORE Z WHERE Z.STORE_CD = TSSSD.STORE_CD) AS STORE_NM
                     , TMP.PO_UNIT_QTY
                     , TMP.PO_UNIT_FG
                     , TMPB.BARCD_CD
                     <if test='unitFg == "1"'>
                         , SF_ZERO_TO_NULL(SUM(STORE_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_03 /* 매장입고 수량*/
                         , SF_ZERO_TO_NULL(SUM(STORE_OUT_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_12 /* 매장반품 수량*/
                         , SF_ZERO_TO_NULL(SUM(PURCHS_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_06 /* 사입입고 수량*/
                         , SF_ZERO_TO_NULL(SUM(PURCHS_OUT_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_18 /* 사입반품 수량*/
                         , SF_ZERO_TO_NULL(SUM(STORE_SALE_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_11 /* 매장판매 수량*/
                         , SF_ZERO_TO_NULL(SUM(MOVE_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_04 /* 매장이입 수량*/
                         , SF_ZERO_TO_NULL(SUM(MOVE_OUT_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_14 /* 매장이출 수량*/
                         , SF_ZERO_TO_NULL(SUM(DISUSE_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_17 /* 재고폐기 수량*/
                         , SF_ZERO_TO_NULL(SUM(ADJ_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_21 /* 재고조정 수량*/
                         , SF_ZERO_TO_NULL(SUM(SET_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_22 /* 세트생성 수량*/
                     </if>
                     <if test='unitFg == "0"'>
                         , SF_ZERO_TO_NULL(SUM(STORE_IN_QTY)) AS IO_OCCR_QTY_03 /* 매장입고 수량*/
                         , SF_ZERO_TO_NULL(SUM(STORE_OUT_QTY)) AS IO_OCCR_QTY_12 /* 매장반품 수량*/
                         , SF_ZERO_TO_NULL(SUM(PURCHS_IN_QTY)) AS IO_OCCR_QTY_06 /* 사입입고 수량*/
                         , SF_ZERO_TO_NULL(SUM(PURCHS_OUT_QTY)) AS IO_OCCR_QTY_18 /* 사입반품 수량*/
                         , SF_ZERO_TO_NULL(SUM(STORE_SALE_QTY)) AS IO_OCCR_QTY_11 /* 매장판매 수량*/
                         , SF_ZERO_TO_NULL(SUM(MOVE_IN_QTY)) AS IO_OCCR_QTY_04 /* 매장이입 수량*/
                         , SF_ZERO_TO_NULL(SUM(MOVE_OUT_QTY)) AS IO_OCCR_QTY_14 /* 매장이출 수량*/
                         , SF_ZERO_TO_NULL(SUM(DISUSE_QTY)) AS IO_OCCR_QTY_17 /* 재고폐기 수량*/
                         , SF_ZERO_TO_NULL(SUM(ADJ_QTY)) AS IO_OCCR_QTY_21 /* 재고조정 수량*/
                         , SF_ZERO_TO_NULL(SUM(SET_IN_QTY)) AS IO_OCCR_QTY_22 /* 세트생성 수량*/
                     </if>
                     , SF_ZERO_TO_NULL(SUM(STORE_IN_TOT)) AS IO_OCCR_TOT_03 /* 매장입고 금액*/
                     , SF_ZERO_TO_NULL(SUM(STORE_OUT_TOT)) AS IO_OCCR_TOT_12 /* 매장반품 금액*/
                     , SF_ZERO_TO_NULL(SUM(PURCHS_IN_TOT)) AS IO_OCCR_TOT_06 /* 사입입고 금액*/
                     , SF_ZERO_TO_NULL(SUM(PURCHS_OUT_TOT)) AS IO_OCCR_TOT_18 /* 사입반품 금액*/
                     , SF_ZERO_TO_NULL(SUM(STORE_SALE_TOT)) AS IO_OCCR_TOT_11 /* 매장판매 금액*/
                     , SF_ZERO_TO_NULL(SUM(MOVE_IN_TOT)) AS IO_OCCR_TOT_04 /* 매장이입 금액*/
                     , SF_ZERO_TO_NULL(SUM(MOVE_OUT_TOT)) AS IO_OCCR_TOT_14 /* 매장이출 금액*/
--                      , SF_ZERO_TO_NULL(SUM()) AS IO_OCCR_TOT_17 /* 재고폐기 금액*/
--                      , SF_ZERO_TO_NULL(SUM()) AS IO_OCCR_TOT_22 /* 세트생성 금액*/
                  FROM TB_ST_STORE_STOCK_DAILY TSSSD 
                     , TB_MS_PRODUCT TMP
                     , TB_MS_PRODUCT_BARCD TMPB
                 WHERE TSSSD.STORE_CD     = TMP.STORE_CD
                   AND TSSSD.PROD_CD      = TMP.PROD_CD
                   AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.STORE_CD = tmp.STORE_CD AND Z.HQ_OFFICE_CD = #{hqOfficeCd})
                   AND TSSSD.STORE_CD     = TMPB.STORE_CD(+)
                   AND TSSSD.PROD_CD      = TMPB.PROD_CD(+)
                   AND TMP.STOCK_PROD_YN = 'Y'
                   <if test='startDate != null and startDate != ""'>
                      AND TSSSD.IOSTOCK_DATE  = #{startDate}
                   </if>
                   <if test='prodCd != null and prodCd != ""'>
                      AND TMP.PROD_CD  = #{prodCd}
                   </if>
                   <if test='arrStoreCd != null and arrStoreCd != ""'>
                      AND TSSSD.STORE_CD IN
                       <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                           #{item}
                       </foreach>
                   </if>
                   <if test='arrVendrCd != null and arrVendrCd != ""'>
			          AND TMP.PROD_CD IN    ( SELECT  PROD_CD
			                                  FROM    TB_MS_VENDOR_PROD
			                                  WHERE   STORE_CD = TSSSD.STORE_CD
			                                  AND     VENDR_CD IN
			                                  <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
			                                      #{item}
			                                  </foreach>
			                                )
			       </if>
                   <if test='prodClassCd != null and prodClassCd != ""'>
                      AND TMP.PROD_CLASS_CD  IN (
                                                    SELECT              PROD_CLASS_CD
                                                    FROM                TB_HQ_PRODUCT_CLASS
                                                    WHERE               HQ_OFFICE_CD    = #{hqOfficeCd}
                                                    START WITH          PROD_CLASS_CD   = #{prodClassCd}
                                                    AND                 HQ_OFFICE_CD    = #{hqOfficeCd}
                                                    CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
                                                    AND                 HQ_OFFICE_CD    = #{hqOfficeCd}
                                                )
                   </if>
                   <if test='prodNm != null and prodNm != ""'>
                      AND TMP.PROD_NM  LIKE '%'||#{prodNm}||'%'
                   </if>
                   <if test='barcdCd != null and barcdCd != ""'>
                      AND TMPB.BARCD_CD  = #{barcdCd}
                   </if>
                 GROUP BY  TMP.STORE_CD
                         , TMP.PROD_CLASS_CD
                         , TSSSD.PROD_CD
                         , TMP.PROD_NM
                         , TSSSD.STORE_CD
                         , TMP.PO_UNIT_QTY
                         , TMP.PO_UNIT_FG
                         , TMPB.BARCD_CD
                 ORDER BY TSSSD.PROD_CD
                        , TSSSD.STORE_CD
            ) A

         <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="storeDayExcelList" parameterType="storeDayVO" resultType="DefaultMap">
        SELECT A.*
             , (SELECT NMCODE_NM FROM TB_HQ_NMCODE WHERE NMCODE_GRP_CD = '093' AND HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_CD = A.PO_UNIT_FG)  AS PO_UNIT_FG_NM      /* 본사 가상로그인시 */
        FROM (
                SELECT FN_GET_PROD_CLASS_CD_NM_STR(TMP.STORE_CD, TMP.PROD_CLASS_CD, 'NM_STR') AS PROD_CLASS_NM
                    , TSSSD.PROD_CD
                    , TMP.PROD_NM
                    , TSSSD.STORE_CD
                    , (SELECT STORE_NM FROM TB_MS_STORE Z WHERE Z.STORE_CD = TSSSD.STORE_CD) AS STORE_NM
                    , TMP.PO_UNIT_QTY
                    , TMP.PO_UNIT_FG
                    , TMPB.BARCD_CD
                    <if test='unitFg == "1"'>
                        , SF_ZERO_TO_NULL(SUM(STORE_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_03 /* 매장입고 수량*/
                        , SF_ZERO_TO_NULL(SUM(STORE_OUT_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_12 /* 매장반품 수량*/
                        , SF_ZERO_TO_NULL(SUM(PURCHS_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_06 /* 사입입고 수량*/
                        , SF_ZERO_TO_NULL(SUM(PURCHS_OUT_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_18 /* 사입반품 수량*/
                        , SF_ZERO_TO_NULL(SUM(STORE_SALE_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_11 /* 매장판매 수량*/
                        , SF_ZERO_TO_NULL(SUM(MOVE_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_04 /* 매장이입 수량*/
                        , SF_ZERO_TO_NULL(SUM(MOVE_OUT_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_14 /* 매장이출 수량*/
                        , SF_ZERO_TO_NULL(SUM(DISUSE_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_17 /* 재고폐기 수량*/
                        , SF_ZERO_TO_NULL(SUM(ADJ_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_21 /* 재고조정 수량*/
                        , SF_ZERO_TO_NULL(SUM(SET_IN_QTY / TMP.PO_UNIT_QTY)) AS IO_OCCR_QTY_22 /* 세트생성 수량*/
                    </if>
                    <if test='unitFg == "0"'>
                        , SF_ZERO_TO_NULL(SUM(STORE_IN_QTY)) AS IO_OCCR_QTY_03 /* 매장입고 수량*/
                        , SF_ZERO_TO_NULL(SUM(STORE_OUT_QTY)) AS IO_OCCR_QTY_12 /* 매장반품 수량*/
                        , SF_ZERO_TO_NULL(SUM(PURCHS_IN_QTY)) AS IO_OCCR_QTY_06 /* 사입입고 수량*/
                        , SF_ZERO_TO_NULL(SUM(PURCHS_OUT_QTY)) AS IO_OCCR_QTY_18 /* 사입반품 수량*/
                        , SF_ZERO_TO_NULL(SUM(STORE_SALE_QTY)) AS IO_OCCR_QTY_11 /* 매장판매 수량*/
                        , SF_ZERO_TO_NULL(SUM(MOVE_IN_QTY)) AS IO_OCCR_QTY_04 /* 매장이입 수량*/
                        , SF_ZERO_TO_NULL(SUM(MOVE_OUT_QTY)) AS IO_OCCR_QTY_14 /* 매장이출 수량*/
                        , SF_ZERO_TO_NULL(SUM(DISUSE_QTY)) AS IO_OCCR_QTY_17 /* 재고폐기 수량*/
                        , SF_ZERO_TO_NULL(SUM(ADJ_QTY)) AS IO_OCCR_QTY_21 /* 재고조정 수량*/
                        , SF_ZERO_TO_NULL(SUM(SET_IN_QTY)) AS IO_OCCR_QTY_22 /* 세트생성 수량*/
                    </if>
                    , SF_ZERO_TO_NULL(SUM(STORE_IN_TOT)) AS IO_OCCR_TOT_03 /* 매장입고 금액*/
                    , SF_ZERO_TO_NULL(SUM(STORE_OUT_TOT)) AS IO_OCCR_TOT_12 /* 매장반품 금액*/
                    , SF_ZERO_TO_NULL(SUM(PURCHS_IN_TOT)) AS IO_OCCR_TOT_06 /* 사입입고 금액*/
                    , SF_ZERO_TO_NULL(SUM(PURCHS_OUT_TOT)) AS IO_OCCR_TOT_18 /* 사입반품 금액*/
                    , SF_ZERO_TO_NULL(SUM(STORE_SALE_TOT)) AS IO_OCCR_TOT_11 /* 매장판매 금액*/
                    , SF_ZERO_TO_NULL(SUM(MOVE_IN_TOT)) AS IO_OCCR_TOT_04 /* 매장이입 금액*/
                    , SF_ZERO_TO_NULL(SUM(MOVE_OUT_TOT)) AS IO_OCCR_TOT_14 /* 매장이출 금액*/
                    --                      , SF_ZERO_TO_NULL(SUM()) AS IO_OCCR_TOT_17 /* 재고폐기 금액*/
                    --                      , SF_ZERO_TO_NULL(SUM()) AS IO_OCCR_TOT_22 /* 세트생성 금액*/
                    FROM TB_ST_STORE_STOCK_DAILY TSSSD
                    , TB_MS_PRODUCT TMP
                     , TB_MS_PRODUCT_BARCD TMPB
                 WHERE TSSSD.STORE_CD     = TMP.STORE_CD
                   AND TSSSD.PROD_CD      = TMP.PROD_CD
                   AND EXISTS (SELECT * FROM TB_MS_STORE Z WHERE Z.STORE_CD = tmp.STORE_CD AND Z.HQ_OFFICE_CD = #{hqOfficeCd})
                   AND TSSSD.STORE_CD     = TMPB.STORE_CD(+)
                   AND TSSSD.PROD_CD      = TMPB.PROD_CD(+)
                   AND TMP.STOCK_PROD_YN = 'Y'
                   <if test='startDate != null and startDate != ""'>
                      AND TSSSD.IOSTOCK_DATE  = #{startDate}
                   </if>
                   <if test='prodCd != null and prodCd != ""'>
                      AND TMP.PROD_CD  = #{prodCd}
                   </if>
                   <if test='arrStoreCd != null and arrStoreCd != ""'>
                      AND TSSSD.STORE_CD IN
                       <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                           #{item}
                       </foreach>
                   </if>
                   <if test='arrVendrCd != null and arrVendrCd != ""'>
			          AND TMP.PROD_CD IN    ( SELECT  PROD_CD
			                                  FROM    TB_MS_VENDOR_PROD
			                                  WHERE   STORE_CD = TSSSD.STORE_CD
			                                  AND     VENDR_CD IN
			                                  <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
			                                      #{item}
			                                  </foreach>
			                                )
			       </if>
                   <if test='prodClassCd != null and prodClassCd != ""'>
                      AND TMP.PROD_CLASS_CD  IN (
                                                    SELECT              PROD_CLASS_CD
                                                    FROM                TB_HQ_PRODUCT_CLASS
                                                    WHERE               HQ_OFFICE_CD    = #{hqOfficeCd}
                                                    START WITH          PROD_CLASS_CD   = #{prodClassCd}
                                                    AND                 HQ_OFFICE_CD    = #{hqOfficeCd}
                                                    CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD
                                                    AND                 HQ_OFFICE_CD    = #{hqOfficeCd}
                                                )
                   </if>
                   <if test='prodNm != null and prodNm != ""'>
                      AND TMP.PROD_NM  LIKE '%'||#{prodNm}||'%'
                   </if>
                   <if test='barcdCd != null and barcdCd != ""'>
                      AND TMPB.BARCD_CD  = #{barcdCd}
                   </if>
                 GROUP BY  TMP.STORE_CD
                         , TMP.PROD_CLASS_CD
                         , TSSSD.PROD_CD
                         , TMP.PROD_NM
                         , TSSSD.STORE_CD
                         , TMP.PO_UNIT_QTY
                         , TMP.PO_UNIT_FG
                         , TMPB.BARCD_CD
                 ORDER BY TSSSD.PROD_CD
                        , TSSSD.STORE_CD
            ) A
    </select>
</mapper>