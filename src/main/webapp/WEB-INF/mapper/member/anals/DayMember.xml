<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    DayMember.xml
    일자별회원 구매내역
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2019.08.13     최초작성
-->
<mapper namespace="kr.co.solbipos.membr.anals.dayMembr.service.impl.DayMembrMapper">

    <!-- 일자별회원 구매내역-->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_HDR_MEMBR, TB_SL_SALE_HDR_PAY
        COMMENTS : [매출]헤더 와 [매출]헤더_회원 조회, [매출]헤더_결제
    -->
    <select id="getDayMembrList"  parameterType="dayMembrVO" resultType="DefaultMap">
        /* DayMembrMapper.getDayMembrList */
        SELECT tsshm.SALE_DATE,
        tsshm.SALE_FG,
        tsshm.MEMBR_NM,
        tsshm.MEMBR_NO,
        tsshm.MEMBR_CARD_NO,
        SUM(tssh.TOT_SALE_AMT) AS TOT_SALE_AMT,
        SUM(tssh.VAT_AMT) AS VAT_AMT,
        SUM(tssh.PAY02) AS PAY_CASH,
        SUM(tssh.PAY01) AS PAY_CARD,
        SUM(tssh.PAY13) AS PAY_GIFT,
        SUM(tssh.PAYOTHER) AS PAY_OTHER,
        SUM(tssh.TOT_DC_AMT) AS TOT_DC_AMT,
        tsshm.POS_NO,
        tsshm.BILL_NO
        FROM
        TB_SL_SALE_HDR_MEMBR tsshm,
        (
            SELECT HQ_OFFICE_CD,
            HQ_BRAND_CD,
            STORE_CD,
            SALE_DATE,
            POS_NO,
            BILL_NO,
            SALE_FG,
            TOT_SALE_AMT,
            TOT_DC_AMT,
            VAT_AMT,
            NVL(SUM(PAY01), 0) AS PAY01,
            NVL(SUM(PAY02), 0) AS PAY02,
            NVL(SUM(PAY13), 0) AS PAY13,
            (NVL(SUM(PAY03), 0) +
            NVL(SUM(PAY04), 0) +
--             NVL(SUM(PAY05), 0) +
            NVL(SUM(PAY06), 0) +
            NVL(SUM(PAY07), 0) +
            NVL(SUM(PAY08), 0) +
            NVL(SUM(PAY09), 0) +
            NVL(SUM(PAY10), 0) +
            NVL(SUM(PAY11), 0) +
--             NVL(SUM(PAY12), 0) +
            NVL(SUM(PAY14), 0) +
            NVL(SUM(PAY15), 0) +
            NVL(SUM(PAY16), 0) +
            NVL(SUM(PAY17), 0) +
            NVL(SUM(PAY18), 0)) AS PAYOTHER
            FROM
            (
                SELECT tsshp.HQ_OFFICE_CD,
                tsshp.HQ_BRAND_CD,
                tsshp.STORE_CD,
                tsshp.SALE_DATE,
                tsshp.POS_NO,
                tsshp.BILL_NO,
                tsshp.PAY_CD,
                tsshp.SALE_FG,
                tsshp.PAY_AMT,
                tssh.TOT_SALE_AMT,
                tssh.TOT_DC_AMT,
                tssh.VAT_AMT
                FROM TB_SL_SALE_HDR_PAY tsshp,
                TB_SL_SALE_HDR tssh
                WHERE 1=1
                AND tsshp.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tsshp.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                        AND tsshp.STORE_CD = #{storeCd}
                    ]]>
                </if>
                AND tsshp.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
                AND tsshp.HQ_BRAND_CD = tssh.HQ_BRAND_CD
                AND tsshp.STORE_CD = tssh.STORE_CD
                AND tsshp.SALE_DATE = tssh.SALE_DATE
                AND tsshp.POS_NO = tssh.POS_NO
                AND tsshp.BILL_NO = tssh.BILL_NO
            )
            PIVOT
            (
                SUM(PAY_AMT)
                FOR PAY_CD
                IN (${pivotPayCol})
                /*  IN ('01' AS PAY01,
                '02' AS PAY02,
                '03' AS PAY03,
                '04' AS PAY04,
                '05' AS PAY05,
                '06' AS PAY06,
                '07' AS PAY07,
                '08' AS PAY08,
                '09' AS PAY09,
                '10' AS PAY10,
                '11' AS PAY11,
                '12' AS PAY12,
                '13' AS PAY13,
                '14' AS PAY14,
                '15' AS PAY15,
                '16' AS PAY16,
                '17' AS PAY17,
                '18' AS PAY18)*/
            )
            GROUP BY HQ_OFFICE_CD, HQ_BRAND_CD, STORE_CD, SALE_DATE, POS_NO, BILL_NO, SALE_FG, TOT_SALE_AMT, TOT_DC_AMT, VAT_AMT
        ) tssh
        WHERE 1=1
        AND tsshm.HQ_OFFICE_CD = tssh.HQ_OFFICE_CD
        AND tsshm.HQ_BRAND_CD = tssh.HQ_BRAND_CD
        AND tsshm.STORE_CD = tssh.STORE_CD
        AND tsshm.SALE_DATE = tssh.SALE_DATE
        AND tsshm.POS_NO = tssh.POS_NO
        AND tsshm.BILL_NO = tssh.BILL_NO
        GROUP BY tsshm.MEMBR_NO, tsshm.MEMBR_NM, tsshm.MEMBR_CARD_NO, tsshm.SALE_FG, tsshm.SALE_DATE, tsshm.POS_NO, tsshm.BILL_NO
        ORDER BY tsshm.SALE_DATE, tsshm.MEMBR_NM, tsshm.SALE_FG
    </select>


    <!-- 매출정보 상세조회 - 팝업-->
    <!--
        TABLE    : TB_SL_SALE_DTL, TB_MS_PRODUCT
        COMMENTS : [매출]상세 와 [매장] 상품
    -->
    <select id="getDayMembrPurchsList"  parameterType="dayMembrVO" resultType="DefaultMap">
        /* DayMembrMapper.getDayMembrPurchsList */
        SELECT tssd.SALE_DATE,
        (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = tssd.STORE_CD AND HQ_OFFICE_CD = tssd.HQ_OFFICE_CD) AS STORE_NM,
        tmp.PROD_NM,
        tssd.SALE_QTY,
        tssd.SALE_AMT,
        tssd.MEMBR_SAVE_POINT,
        tssd.MEMBR_USE_POINT
        FROM
        TB_SL_SALE_DTL tssd,
        TB_MS_PRODUCT tmp
        WHERE 1=1
        AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                AND tssd.STORE_CD = #{storeCd}
            ]]>
        </if>
        AND tssd.SALE_DATE = #{saleDate}
        AND tssd.POS_NO = #{posNo}
        AND tssd.BILL_NO = #{billNo}
        AND tssd.HQ_BRAND_CD = tmp.HQ_BRAND_CD
        AND tssd.STORE_CD = tmp.STORE_CD
        AND tssd.PROD_CD = tmp.PROD_CD
    </select>

</mapper>