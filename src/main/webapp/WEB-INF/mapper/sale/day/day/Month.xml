<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    MonthMapper.xml
    기간별매출 > 월별탭
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2019.12.09     최초작성
-->
<mapper namespace="kr.co.solbipos.sale.day.month.service.impl.MonthMapper">

    <!-- 월별종합탭 - 월별종합조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_HDR_PAY, TB_SL_SALE_DTL
        COMMENTS : [매출]헤더 와 [매출]헤더_결제, [매출]상세
    -->
    <select id="getMonthTotalList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthTotalList */
        SELECT  TO_CHAR(TO_DATE(tsdt.SALE_YM, 'yyyymm'), 'yyyy-mm') YEAR_MONTH,
                tsdt.STORE_CNT,
                tsdt.SALE_CNT,
                tsdt.TOT_SALE_AMT,
                tsdt.TOT_DC_AMT,
                tsdt.REAL_SALE_AMT,
                tsdt.BILL_CNT,
                tsdt.BILL_UPRC,
                tsdt.GA_AMT,
                tsdt.VAT_AMT,
                tsdt.TOT_TIP_AMT,
                tsdt.TOT_ETC_AMT,
                tsdt.CUP_AMT,
            <foreach collection="arrPayCol" item="item" separator=",">
                tsdt.PAY_AMT_${item} AS PAY${item}
            </foreach> ,
                tsdt.TOT_PAY_AMT,
                tsddd.GEN_REAL_SALE_AMT,
                DECODE(tsdt.REAL_SALE_AMT, 0, 0, (tsddd.GEN_REAL_SALE_AMT / tsdt.REAL_SALE_AMT)*100) AS GEN_REAL_SALE_RATE,
                tsddd.DLVR_REAL_SALE_AMT,
                DECODE(tsdt.REAL_SALE_AMT, 0, 0, (tsddd.DLVR_REAL_SALE_AMT / tsdt.REAL_SALE_AMT)*100) AS DLVR_REAL_SALE_RATE,
                tsddd.PACK_REAL_SALE_AMT,
                DECODE(tsdt.REAL_SALE_AMT, 0, 0, (tsddd.PACK_REAL_SALE_AMT / tsdt.REAL_SALE_AMT)*100) AS PACK_REAL_SALE_RATE
        FROM    (
                    SELECT  SUBSTR(SALE_DATE,0,6) AS SALE_YM,
                            COUNT(DISTINCT STORE_CD) AS STORE_CNT,
                            COUNT(DISTINCT SALE_DATE) AS SALE_CNT,
                            SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                            SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                            SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                            SUM(REAL_SALE_CNT) AS BILL_CNT,
                            DECODE(NVL(SUM(REAL_SALE_CNT), 0), 0, 0, (ROUND(SUM(REAL_SALE_AMT) / SUM(REAL_SALE_CNT)))) AS BILL_UPRC,
                            SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT,
                            SUM(VAT_AMT) AS VAT_AMT,
                            SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
                            SUM(TOT_ETC_AMT) AS TOT_ETC_AMT,
                            SUM(CUP_AMT) AS CUP_AMT,
                            <foreach collection="arrPayCol" item="item" separator="+">
                                <if test="item != '02' and item != '021'">
                                    SUM(NVL(PAY_AMT_${item}, 0))
                                </if>
                            </foreach> +  SUM(NVL(NON_CASH_AMT, 0)) +  SUM(NVL(APPR_CASH_AMT, 0)) AS TOT_PAY_AMT,
                            <foreach collection="arrPayCol" item="item" separator=",">
                                <if test="item != '02' and item != '021'">
                                    SUM(NVL(PAY_AMT_${item}, 0)) AS PAY_AMT_${item}
                                </if>
                            </foreach>,
                            SUM(NVL(NON_CASH_AMT, 0)) AS PAY_AMT_02,
                            SUM(NVL(APPR_CASH_AMT, 0)) AS PAY_AMT_021
                    FROM    TB_SL_DAILY_TOTAL
                    WHERE   HQ_OFFICE_CD = #{membrOrgnCd}
                    AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}||'31'
                    <if test='storeCdQuery != null and storeCdQuery != ""'>
                        AND STORE_CD IN (${storeCdQuery})
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                            OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                            )
                    </if>
                    GROUP BY    SUBSTR(SALE_DATE,0,6)
                ) tsdt,
                (	SELECT 	SUBSTR(SALE_DATE,0,6) AS SALE_YM,
                            SUM(CASE WHEN DLVR_PACK_FG = '1' THEN REAL_SALE_AMT ELSE 0 END) AS GEN_REAL_SALE_AMT,
                            SUM(CASE WHEN DLVR_PACK_FG = '2' THEN REAL_SALE_AMT ELSE 0 END) AS DLVR_REAL_SALE_AMT,
                            SUM(CASE WHEN DLVR_PACK_FG = '3' THEN REAL_SALE_AMT ELSE 0 END) AS PACK_REAL_SALE_AMT
                    FROM 	TB_SL_DAILY_DTL_DLVR
                    WHERE   HQ_OFFICE_CD = #{membrOrgnCd}
                    AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}||'31'
                    <if test='storeCdQuery != null and storeCdQuery != ""'>
                        AND STORE_CD IN (${storeCdQuery})
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                            OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                            )
                    </if>
                    GROUP BY    SUBSTR(SALE_DATE,0,6)
                ) tsddd
        WHERE   tsdt.SALE_YM = tsddd.SALE_YM (+)  -- TB_SL_DAILY_PROD_DLVR 테이블이 생기기 전 매출이 없는 경우 나오지 않음
    </select>

    <!-- 월별종합탭 - 월별종합조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_HDR_PAY, TB_SL_SALE_DTL
        COMMENTS : [매출]헤더 와 [매출]헤더_결제, [매출]상세
    -->
    <!--<select id="getMonthTotalList"  parameterType="MonthVO" resultType="DefaultMap">-->
        <!--/* MonthMapper.getMonthTotalList */-->
        <!--SELECT-->
        <!--tsshpd.YEAR_MONTH,-->
        <!--tsshpd.STORE_CNT,-->
        <!--tsshpd.SALE_CNT,-->
        <!--tsshpd.TOT_SALE_AMT,-->
        <!--tsshpd.TOT_DC_AMT,-->
        <!--tsshpd.REAL_SALE_AMT,-->
        <!--tsshpd.BILL_CNT,-->
        <!--tsshpd.BILL_UPRC,-->
        <!--tsshpd.GA_AMT,-->
        <!--tsshpd.VAT_AMT,-->
        <!--tsshpd.TOT_TIP_AMT,-->
        <!--tsshpd.TOT_ETC_AMT,-->
        <!--<foreach collection="arrPayCol" item="item" separator="+">-->
            <!--NVL(tsshpd.PAY${item}, 0)-->
        <!--</foreach> AS TOT_PAY_AMT,-->
        <!--<foreach collection="arrPayCol" item="item" separator=",">-->
            <!--NVL(tsshpd.PAY${item}, 0) AS PAY${item}-->
        <!--</foreach> ,-->
        <!--tsshpd.GEN_REAL_SALE_AMT,-->
        <!--NVL(ROUND(tsshpd.GEN_REAL_SALE_AMT/tsshpd.REAL_SALE_AMT*100),0) AS GEN_REAL_SALE_AMT_PER,-->
        <!--tsshpd.DLVR_REAL_SALE_AMT,-->
        <!--NVL(ROUND(tsshpd.DLVR_REAL_SALE_AMT/tsshpd.REAL_SALE_AMT*100),0) AS DLVR_REAL_SALE_AMT_PER,-->
        <!--tsshpd.PACK_REAL_SALE_AMT,-->
        <!--NVL(ROUND(tsshpd.PACK_REAL_SALE_AMT/tsshpd.REAL_SALE_AMT*100),0) AS PACK_REAL_SALE_AMT_PER-->
        <!--FROM-->
        <!--(-->
            <!--SELECT-->
            <!--HQ_OFFICE_CD,-->
            <!--YEAR_MONTH,-->
            <!--COUNT(DISTINCT STORE_CD) AS STORE_CNT,-->
            <!--COUNT(DISTINCT SALE_DATE) AS SALE_CNT,-->
            <!--SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,-->
            <!--SUM(TOT_DC_AMT) AS TOT_DC_AMT,-->
            <!--SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,-->
            <!--COUNT(BILL_NO) AS BILL_CNT,-->
            <!--ROUND(SUM(REAL_SALE_AMT) / COUNT(BILL_NO)) AS BILL_UPRC,-->
            <!--SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT,-->
            <!--SUM(VAT_AMT) AS VAT_AMT,-->
            <!--SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,-->
            <!--SUM(TOT_ETC_AMT) AS TOT_ETC_AMT,-->
            <!--<foreach collection="arrPayCol" item="item" separator=",">-->
                <!--SUM(PAY${item}) AS PAY${item}-->
            <!--</foreach> ,-->
            <!--SUM(GEN_REAL_SALE_AMT) AS GEN_REAL_SALE_AMT,-->
            <!--SUM(DLVR_REAL_SALE_AMT) AS DLVR_REAL_SALE_AMT,-->
            <!--SUM(PACK_REAL_SALE_AMT) AS PACK_REAL_SALE_AMT-->
            <!--FROM-->
            <!--(-->
                <!--SELECT-->
                <!--tssh.SALE_DATE,-->
                <!--TO_CHAR(TO_DATE(tssh.SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,-->
                <!--tssh.HQ_OFFICE_CD,-->
                <!--tssh.STORE_CD,-->
                <!--tssh.TOT_SALE_AMT,-->
                <!--tssh.TOT_DC_AMT,-->
                <!--tssh.REAL_SALE_AMT,-->
                <!--tssh.BILL_NO,-->
                <!--tssh.VAT_AMT,-->
                <!--tssh.TOT_TIP_AMT,-->
                <!--tssh.TOT_ETC_AMT,-->
                <!--tsshp.PAY_CD,-->
                <!--tsshp.PAY_AMT,-->
                <!--tssd.GEN_REAL_SALE_AMT,-->
                <!--tssd.DLVR_REAL_SALE_AMT,-->
                <!--tssd.PACK_REAL_SALE_AMT-->
                <!--FROM TB_SL_SALE_HDR tssh,-->
                <!--TB_SL_SALE_HDR_PAY tsshp,-->
                <!--(-->
                    <!--SELECT-->
                    <!--HQ_OFFICE_CD,-->
                    <!--HQ_BRAND_CD,-->
                    <!--STORE_CD,-->
                    <!--SALE_DATE,-->
                    <!--POS_NO,-->
                    <!--BILL_NO,-->
                    <!--SUM(CASE WHEN DLVR_PACK_FG = '1' THEN REAL_SALE_AMT ELSE 0 END) AS GEN_REAL_SALE_AMT,-->
                    <!--SUM(CASE WHEN DLVR_PACK_FG = '2' THEN REAL_SALE_AMT ELSE 0 END) AS DLVR_REAL_SALE_AMT,-->
                    <!--SUM(CASE WHEN DLVR_PACK_FG = '3' THEN REAL_SALE_AMT ELSE 0 END) AS PACK_REAL_SALE_AMT-->
                    <!--FROM TB_SL_SALE_DTL-->
                    <!--GROUP BY HQ_OFFICE_CD, HQ_BRAND_CD, STORE_CD, SALE_DATE, POS_NO, BILL_NO-->
                <!--) tssd-->
                <!--WHERE 1=1-->
                <!--AND tssh.HQ_OFFICE_CD = #{membrOrgnCd}-->
                <!--AND tssh.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'-->
                <!--<if test='storeCds != null and storeCds != ""'>-->
                    <!--AND tssh.STORE_CD IN-->
                    <!--<foreach collection="storeCdList" item="item" open="("  separator="," close=")" >-->
                        <!--#{item}-->
                    <!--</foreach>-->
                <!--</if>-->
                <!--AND tsshp.HQ_OFFICE_CD (+)= tssh.HQ_OFFICE_CD-->
                <!--AND tsshp.HQ_BRAND_CD (+)= tssh.HQ_BRAND_CD-->
                <!--AND tsshp.STORE_CD (+)= tssh.STORE_CD-->
                <!--AND tsshp.SALE_DATE (+)= tssh.SALE_DATE-->
                <!--AND tsshp.POS_NO (+)= tssh.POS_NO-->
                <!--AND tsshp.BILL_NO (+)= tssh.BILL_NO-->
                <!--AND tssd.HQ_OFFICE_CD (+)= tssh.HQ_OFFICE_CD-->
                <!--AND tssd.HQ_BRAND_CD (+)= tssh.HQ_BRAND_CD-->
                <!--AND tssd.STORE_CD (+)= tssh.STORE_CD-->
                <!--AND tssd.SALE_DATE (+)= tssh.SALE_DATE-->
                <!--AND tssd.POS_NO (+)= tssh.POS_NO-->
                <!--AND tssd.BILL_NO (+)= tssh.BILL_NO-->
            <!--)-->
            <!--PIVOT-->
            <!--(-->
                <!--SUM(PAY_AMT)-->
                <!--FOR PAY_CD-->
                <!--IN (${pivotPayCol})-->
                <!--/* IN ('01' AS PAY01,-->
                <!--'02' AS PAY02,-->
                <!--'03' AS PAY03,-->
                <!--'04' AS PAY04,-->
                <!--'05' AS PAY05,-->
                <!--'06' AS PAY06,-->
                <!--'07' AS PAY07,-->
                <!--'08' AS PAY08,-->
                <!--'09' AS PAY09,-->
                <!--'10' AS PAY10,-->
                <!--'11' AS PAY11,-->
                <!--'12' AS PAY12,-->
                <!--'13' AS PAY13,-->
                <!--'14' AS PAY14,-->
                <!--'15' AS PAY15,-->
                <!--'16' AS PAY16,-->
                <!--'17' AS PAY17,-->
                <!--'18' AS PAY18)*/-->
            <!--)-->
            <!--GROUP BY HQ_OFFICE_CD, YEAR_MONTH-->
        <!--) tsshpd-->
        <!--WHERE 1=1-->
        <!--ORDER BY tsshpd.YEAR_MONTH-->
    <!--</select>-->

    <!-- 할인구별별탭 - 할인구분별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR_DC
        COMMENTS : [매출]헤더_할인
    -->
    <select id="getMonthDcList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthDcList */
        SELECT
        YEAR_MONTH,
        <foreach collection="arrDcCol" item="item" separator="+">
            NVL(DC${item}, 0)
        </foreach> AS TOT_DC_AMT,
        <foreach collection="arrDcCol" item="item" separator=",">
            NVL(DC${item}, 0) AS DC${item}
        </foreach>
        FROM
        (
            SELECT
            YEAR_MONTH,
            <foreach collection="arrDcCol" item="item" separator=",">
                SUM(DC${item}) AS DC${item}
            </foreach>
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tsshd.SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,
                tsshd.DC_CD,
                tsshd.DC_AMT
                FROM TB_SL_SALE_HDR_DC tsshd
                WHERE 1=1
                AND tsshd.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tsshd.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'
                <if test='storeCdQuery != null and storeCdQuery != ""'>
                    AND tsshd.STORE_CD IN (${storeCdQuery})
                </if>
                <if test='orgnFg != null and orgnFg == "H"'>
                    AND (
                            'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                        OR   tsshd.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                        )
                </if>
            )
            PIVOT
            (
                SUM(DC_AMT)
                FOR DC_CD
                IN (${pivotDcCol})
                /* IN ('01' AS DC01,
                '02' AS DC02,
                '03' AS DC03,
                '04' AS DC04,
                '05' AS DC05,
                '06' AS DC06,
                '07' AS DC07,
                '08' AS DC08,
                '09' AS DC09)*/
            )
            GROUP BY YEAR_MONTH
        )
        ORDER BY YEAR_MONTH
    </select>

    <!-- 과면세별탭 - 과면세별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR
        COMMENTS : [매출]헤더
    -->
    <select id="getMonthTaxList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthTaxList */
        SELECT  TO_CHAR(TO_DATE(SUBSTR(SALE_DATE, 0, 6), 'yyyymm'), 'yyyy-mm') YEAR_MONTH,
                COUNT(DISTINCT STORE_CD) AS STORE_CNT,
                COUNT(DISTINCT SALE_DATE) AS SALE_CNT,
                SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(TAX_SALE_AMT) AS TAX_SALE_AMT,
                SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT,
                SUM(VAT_AMT) AS VAT_AMT,
                SUM(NO_TAX_SALE_AMT) AS NO_TAX_SALE_AMT,
                SUM(NET_SALE_AMT) AS NET_SALE_AMT
        FROM    TB_SL_DAILY_TOTAL
        WHERE   HQ_OFFICE_CD = #{membrOrgnCd}
        AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND STORE_CD IN (${storeCdQuery})
        </if>
        <if test='orgnFg != null and orgnFg == "H"'>
            AND (
                    'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                )
        </if>
        GROUP BY SUBSTR(SALE_DATE, 0, 6)
        ORDER BY SUBSTR(SALE_DATE, 0, 6)
    </select>

    <!-- 시간대별탭 - 시간대별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR
        COMMENTS : [매출]헤더
    -->
    <select id="getMonthTimeList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthTimeList */
        <if test="optionFg != null and optionFg.toString() == 'time'">
        SELECT tssh.YEAR_MONTH
            , COUNT(tssh.STORE_cd) AS STORE_CNT
            , SUM(tssh.REAL_SALE_AMT) AS REAL_SALE_AMT
            , SUM(tssh.SALE_CNT) AS SALE_CNT
            , SUM(tssh.TOT_GUEST_CNT) AS TOT_GUEST_CNT
            ${sQuery1}
        FROM (
                SELECT TO_CHAR(TO_DATE(SALE_YM, 'yyyymm'), 'yyyy-mm') YEAR_MONTH
                     , STORE_CD
                     , SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
                     , SUM(SALE_CNT) AS SALE_CNT
                     , SUM(GUEST_CNT_1) AS TOT_GUEST_CNT
                     ${sQuery2}
                  FROM TB_SL_MONTHLY_TIME
                 WHERE HQ_OFFICE_CD = #{membrOrgnCd}
                   AND SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                    <if test='storeCdQuery != null and storeCdQuery != ""'>
                        AND STORE_CD IN (${storeCdQuery})
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                            OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                            )
                    </if>
                    <if test='startTime != "0" or endTime != "23"'>
                       AND SALE_HOUR BETWEEN #{startTime} AND #{endTime}
                   </if>
                    GROUP BY SALE_YM, STORE_CD
                ) tssh
        GROUP BY tssh.YEAR_MONTH
        ORDER BY tssh.YEAR_MONTH
        </if>
        <if test="optionFg != null and optionFg.toString() == 'timeSlot'">
        SELECT tssh.YEAR_MONTH
            , COUNT(tssh.STORE_cd) AS STORE_CNT
            , SUM(tssh.REAL_SALE_AMT) AS REAL_SALE_AMT
            , SUM(tssh.SALE_CNT) AS SALE_CNT
            , SUM(tssh.TOT_GUEST_CNT) AS TOT_GUEST_CNT
            ${sQuery1}
        FROM (
                SELECT YEAR_MONTH
                     , STORE_CD
                     , SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
                     , SUM(SALE_CNT) AS SALE_CNT
                     , SUM(GUEST_CNT) AS TOT_GUEST_CNT
                     ${sQuery2}
                  FROM (
                        SELECT TO_CHAR(TO_DATE(SALE_YM, 'yyyymm'), 'yyyy-mm') YEAR_MONTH
                        ,       STORE_CD
                        ,       SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
                        ,       SUM(SALE_CNT) AS SALE_CNT
                        ,       SUM(GUEST_CNT_1) AS GUEST_CNT
                        ,	    thn.TIME_SLOT
                        FROM    TB_SL_MONTHLY_TIME tsmt,
                                (
                                SELECT  MIN(NMCODE_CD) KEEP(DENSE_RANK FIRST ORDER BY NMCODE_ITEM_1) || LPAD(MAX(NMCODE_CD) KEEP(DENSE_RANK LAST ORDER BY NMCODE_ITEM_1) + 1, 2, '0') AS TIME_SLOT,
                                        MIN(NMCODE_CD) KEEP(DENSE_RANK FIRST ORDER BY NMCODE_ITEM_1) AS START_TIME,
                                        MAX(NMCODE_CD) KEEP(DENSE_RANK LAST ORDER BY NMCODE_ITEM_1) AS END_TIME
                                <!-- 프차 -->
                                <if test='hqOfficeCd != null and hqOfficeCd != "00000"'>
                                    FROM    TB_HQ_NMCODE
                                    WHERE 	HQ_OFFICE_CD = #{membrOrgnCd}
                                </if>
                                <!-- 단독매장 -->
                                <if test='hqOfficeCd != null and hqOfficeCd == "00000"'>
                                    FROM 	TB_MS_STORE_NMCODE
                                    WHERE 	STORE_CD = #{storeCd}
                                </if>
                                AND		NMCODE_GRP_CD ='001'
                                GROUP BY NMCODE_NM
                                ) thn
                            WHERE   HQ_OFFICE_CD = #{membrOrgnCd}
                            AND     SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                            AND     tsmt.SALE_HOUR BETWEEN thn.START_TIME AND thn.END_TIME
                            <if test='storeCdQuery != null and storeCdQuery != ""'>
                                AND STORE_CD IN (${storeCdQuery})
                            </if>
                            <if test='orgnFg != null and orgnFg == "H"'>
                                AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                                OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                                )
                            </if>
                            <if test='timeSlot != null and timeSlot != ""'>
                                AND TIME_SLOT = replace(#{timeSlot},'~','')
                            </if>
                            GROUP BY SALE_YM, STORE_CD, TIME_SLOT
                             )
                    GROUP BY YEAR_MONTH, STORE_CD
                ) tssh
        GROUP BY tssh.YEAR_MONTH
        ORDER BY tssh.YEAR_MONTH
        </if>
    </select>

    <!-- 상품분류별탭 - 상품분류별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL, TB_HQ_PRODUCT, TB_HQ_PRODUCT_CLASS, TB_HQ_PRODUCT_BARCD,
                   TB_MS_STORE, TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_MS_PRODUCT_BARCD
        COMMENTS : [매출]상세, [본사]상품, [본사]상품_분류, [본사]상품_바코드
                   [매장]매장 정보, [매장]상품, [매장]상품_분류, [매장]상품_바코드
    -->
    <select id="getMonthProdClassList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthProdClassList */
        <choose>
            <!-- 분류없음 -->
            <when test='level != null and level == "Level0"'>
                SELECT
                YEAR_MONTH,
                COUNT(DISTINCT STORE_CD) AS STORE_CNT,
                SUM(REAL_SALE_AMT) AS TOT_REAL_SALE_AMT,
                SUM(SALE_QTY) AS TOT_SALE_QTY
                FROM
                (
                    SELECT
                    TO_CHAR(TO_DATE(tsmp.SALE_YM, 'yyyymm'), 'yyyy-mm') YEAR_MONTH,
                    tsmp.STORE_CD,
                    tsmp.PROD_CD,
                    tmp.PROD_NM,
                    tmpb.BARCD_CD,
                    tsmp.REAL_SALE_AMT AS REAL_SALE_AMT,
                    tsmp.TOT_SALE_QTY AS SALE_QTY,
                    FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'CD_STR') AS PATH
                    FROM TB_SL_MONTHLY_PROD tsmp,
                    TB_MS_PRODUCT tmp,
                    TB_MS_PRODUCT_BARCD tmpb
                    WHERE 1=1
                    AND tsmp.HQ_OFFICE_CD = #{membrOrgnCd}
                    <if test='storeCdQuery != null and storeCdQuery != ""'>
                        AND tsmp.STORE_CD IN (${storeCdQuery})
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                            OR   tsmp.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                            )
                    </if>
                    AND tsmp.SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                    <if test="prodCd != null and prodCd != ''">
                        AND tsmp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                    </if>
                    <if test="prodNm != null and prodNm != ''">
                        AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                    </if>
                    <if test="barCd != null and barCd != ''">
                        AND tmpb.BARCD_CD LIKE '%'|| #{barCd} ||'%'
                    </if>
                    AND tmp.STORE_CD = tsmp.STORE_CD
                    AND tmp.PROD_CD = tsmp.PROD_CD
                    AND tmpb.STORE_CD (+)= tmp.STORE_CD
                    AND tmpb.PROD_CD (+)= tmp.PROD_CD
                )
                WHERE 1=1
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND PATH LIKE '%'|| #{prodClassCd} ||'%'
                </if>
                GROUP BY YEAR_MONTH
                ORDER BY YEAR_MONTH
            </when>
            <!-- 분류있음 -->
            <when test='level != null and level != "Level0"'>
                SELECT
                tba.YEAR_MONTH,
                tba.STORE_CNT,
                ${pivotProdClassCol1}
                FROM
                (
                    SELECT
                    YEAR_MONTH,
                    COUNT(DISTINCT STORE_CD) AS STORE_CNT,
                    ${pivotProdClassCol2}
                    FROM
                    (
                        SELECT
                        YEAR_MONTH,
                        STORE_CD,
                        REAL_SALE_AMT,
                        SALE_QTY,
                        SUBSTR(PATH, 0, 5) AS Level1,
                        SUBSTR(PATH, 7, 5) AS Level2,
                        SUBSTR(PATH, 13, 5) AS Level3
                        FROM
                        (
                            SELECT
                            YEAR_MONTH,
                            STORE_CD,
                            REAL_SALE_AMT,
                            SALE_QTY,
                            FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'CD_STR') AS PATH
                            FROM
                            (
                                SELECT
                                TO_CHAR(TO_DATE(tsmp.SALE_YM, 'yyyymm'), 'yyyy-mm') YEAR_MONTH,
                                tsmp.STORE_CD,
                                tmp.PROD_CLASS_CD,
                                SUM(tsmp.REAL_SALE_AMT) AS REAL_SALE_AMT,
                                SUM(tsmp.TOT_SALE_QTY) AS SALE_QTY
                                FROM TB_SL_MONTHLY_PROD tsmp,
                                TB_MS_PRODUCT tmp,
                                TB_MS_PRODUCT_BARCD tmpb
                                WHERE 1=1
                                AND tsmp.HQ_OFFICE_CD = #{membrOrgnCd}
                                <if test='storeCdQuery != null and storeCdQuery != ""'>
                                    AND tsmp.STORE_CD IN (${storeCdQuery})
                                </if>
                                <if test='orgnFg != null and orgnFg == "H"'>
                                    AND (
                                            'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                                        OR   tsmp.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                                        )
                                </if>
                                AND tsmp.SALE_YM BETWEEN #{startMonth} AND #{endMonth}
                                <if test="prodCd != null and prodCd != ''">
                                    AND tsmp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                                </if>
                                <if test="prodNm != null and prodNm != ''">
                                    AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                                </if>
                                <if test="barCd != null and barCd != ''">
                                    AND tmpb.BARCD_CD LIKE '%'|| #{barCd} ||'%'
                                </if>
                                <if test="prodClassCd != null and prodClassCd != ''">
                                    AND tmp.PROD_CLASS_CD = #{prodClassCd}
                                </if>
                                AND tmp.STORE_CD = tsmp.STORE_CD
                                AND tmp.PROD_CD = tsmp.PROD_CD
                                AND tmpb.STORE_CD (+)= tmp.STORE_CD
                                AND tmpb.PROD_CD (+)= tmp.PROD_CD
                                GROUP BY tsmp.SALE_YM, tsmp.STORE_CD, tmp.PROD_CLASS_CD
                            )
                        )
                        <!--WHERE 1=1-->
                        <!--AND ${level} IN-->
                        <!--<foreach collection="arrProdClassCd" item="item" open="(" close=")" separator=",">-->
                            <!--#{item}-->
                        <!--</foreach>-->
                    )
                    PIVOT
                    (
                        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                        SUM(SALE_QTY) AS SALE_QTY
                        FOR ${level} IN (${pivotProdClassCol3})
                    )
                    GROUP BY YEAR_MONTH
                ) tba
                ORDER BY tba.YEAR_MONTH
            </when>
        </choose>
        <!--<choose>-->
            <!--&lt;!&ndash; 본사 &ndash;&gt;-->
            <!--<when test='orgnFg != null and orgnFg == "H"'>-->
                <!--SELECT-->
                <!--tba.YEAR_MONTH,-->
                <!--tba.STORE_CNT,-->
                <!--${pivotProdClassCol1}-->
                <!--FROM-->
                <!--(-->
                    <!--SELECT-->
                    <!--YEAR_MONTH,-->
                    <!--COUNT(DISTINCT STORE_CD) AS STORE_CNT,-->
                    <!--${pivotProdClassCol2}-->
                    <!--FROM-->
                    <!--(-->
                        <!--SELECT *-->
                        <!--FROM-->
                        <!--(-->
                            <!--SELECT-->
                            <!--TO_CHAR(TO_DATE(tssd.SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,-->
                            <!--tssd.STORE_CD,-->
                            <!--tssd.PROD_CD,-->
                            <!--thp.PROD_NM,-->
<!--&#45;&#45;                             thp.PROD_CLASS_CD,-->
                            <!--thpb.BARCD_CD,-->
                            <!--tssd.SALE_AMT,-->
                            <!--tssd.SALE_QTY,-->
<!--&#45;&#45;                             thpc_p.PATH,-->
                            <!--REPLACE(SUBSTR(thpc_p.PATH, 0, 6) ,'/','') AS Level1,-->
                            <!--REPLACE(SUBSTR(thpc_p.PATH, 7, 6) ,'/','') AS Level2,-->
                            <!--REPLACE(SUBSTR(thpc_p.PATH, 13, 6) ,'/','') AS Level3-->
                            <!--FROM TB_SL_SALE_DTL tssd,-->
                            <!--TB_HQ_PRODUCT thp,-->
                            <!--TB_HQ_PRODUCT_CLASS thpc,-->
                            <!--(-->
                                <!--SELECT-->
                                <!--thpc.PROD_CLASS_CD-->
                                <!--, SYS_CONNECT_BY_PATH (thpc.PROD_CLASS_CD,'/') PATH-->
                                <!--FROM TB_HQ_PRODUCT_CLASS thpc-->
                                <!--WHERE 1=1-->
                                <!--AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}-->
                                <!--START WITH thpc.P_PROD_CLASS_CD = '00000' AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}-->
                                <!--CONNECT BY thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{membrOrgnCd}-->
                            <!--) thpc_p,-->
                            <!--TB_HQ_PRODUCT_BARCD thpb-->
                            <!--WHERE 1=1-->
                            <!--AND thp.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD-->
                            <!--AND thp.PROD_CD = tssd.PROD_CD-->
                            <!--AND thpc.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD-->
                            <!--AND thpc.PROD_CLASS_CD = thp.PROD_CLASS_CD-->
                            <!--AND thpc_p.PROD_CLASS_CD = thp.PROD_CLASS_CD-->
                            <!--AND thpb.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD-->
                            <!--AND thpb.PROD_CD (+)= thp.PROD_CD-->
                            <!--AND thpb.PROD_CD (+)= tssd.PROD_CD-->
                            <!--AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}-->
                            <!--AND tssd.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'-->
                            <!--<if test='storeCds != null and storeCds != ""'>-->
                                <!--AND tssd.STORE_CD IN-->
                                <!--<foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >-->
                                    <!--#{item}-->
                                <!--</foreach>-->
                            <!--</if>-->
                            <!--<if test="prodCd != null and prodCd != ''">-->
                                <!--AND tssd.PROD_CD LIKE '%'|| #{prodCd} ||'%'-->
                            <!--</if>-->
                            <!--<if test="prodNm != null and prodNm != ''">-->
                                <!--AND thp.PROD_NM LIKE '%'|| #{prodNm} ||'%'-->
                            <!--</if>-->
                            <!--<if test="barCd != null and barCd != ''">-->
                                <!--AND thpb.BARCD_CD LIKE '%'|| #{barCd} ||'%'-->
                            <!--</if>-->
                        <!--)-->
                        <!--WHERE 1=1-->
                        <!--AND ${level} IN-->
                        <!--<foreach collection="arrProdClassCd" item="item" open="(" close=")" separator=",">-->
                            <!--${item}-->
                        <!--</foreach>-->
                        <!--<if test="prodClassCd != null and prodClassCd != ''">-->
                            <!--AND (      Level1 = #{prodClassCd}-->
                                    <!--OR Level2 = #{prodClassCd}-->
                                    <!--OR Level3 = #{prodClassCd}-->
                                <!--)-->
                        <!--</if>-->
                    <!--)-->
                    <!--PIVOT-->
                    <!--(-->
                        <!--SUM(SALE_AMT) AS SALE_AMT,-->
                        <!--SUM(SALE_QTY) AS SALE_QTY-->
                        <!--FOR ${level} IN (${pivotProdClassCol3})-->
                    <!--)-->
                    <!--GROUP BY YEAR_MONTH-->
                <!--) tba-->
                <!--WHERE 1=1-->
                <!--ORDER BY tba.YEAR_MONTH-->
            <!--</when>-->
            <!--&lt;!&ndash; 매장 &ndash;&gt;-->
            <!--<when test='orgnFg != null and orgnFg == "S"'>-->
                <!--SELECT-->
                <!--tba.YEAR_MONTH,-->
                <!--tba.STORE_CNT,-->
                <!--${pivotProdClassCol1}-->
                <!--FROM-->
                <!--(-->
                    <!--SELECT-->
                    <!--YEAR_MONTH,-->
                    <!--COUNT(DISTINCT STORE_CD) AS STORE_CNT,-->
                    <!--${pivotProdClassCol2}-->
                    <!--FROM-->
                    <!--(-->
                        <!--SELECT *-->
                        <!--FROM-->
                        <!--(-->
                            <!--SELECT-->
                            <!--TO_CHAR(TO_DATE(tssd.SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,-->
                            <!--tssd.STORE_CD,-->
                            <!--tmp.PROD_NM,-->
                            <!--tssd.PROD_CD,-->
<!--&#45;&#45;                             tmp.PROD_CLASS_CD,-->
                            <!--tmpb.BARCD_CD,-->
                            <!--tssd.SALE_AMT,-->
                            <!--tssd.SALE_QTY,-->
<!--&#45;&#45;                             tmpc_p.PATH,-->
                            <!--REPLACE(SUBSTR(tmpc_p.PATH, 0, 6) ,'/','') AS Level1,-->
                            <!--REPLACE(SUBSTR(tmpc_p.PATH, 7, 6) ,'/','') AS Level2,-->
                            <!--REPLACE(SUBSTR(tmpc_p.PATH, 13, 6) ,'/','') AS Level3-->
                            <!--FROM TB_SL_SALE_DTL tssd,-->
                            <!--TB_MS_STORE tms,-->
                            <!--TB_MS_PRODUCT tmp,-->
                            <!--TB_MS_PRODUCT_CLASS tmpc,-->
                            <!--(-->
                                <!--SELECT-->
                                <!--tmpc.PROD_CLASS_CD,-->
                                <!--SYS_CONNECT_BY_PATH (tmpc.PROD_CLASS_CD, '/') PATH-->
                                <!--FROM (SELECT * FROM TB_MS_PRODUCT_CLASS WHERE STORE_CD = #{storeCd}) tmpc-->
                                <!--WHERE 1=1-->
                                <!--START WITH tmpc.P_PROD_CLASS_CD = '00000' AND tmpc.STORE_CD = #{storeCd}-->
                                <!--CONNECT BY tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}-->
                            <!--) tmpc_p,-->
                            <!--TB_MS_PRODUCT_BARCD tmpb-->
                            <!--WHERE 1=1-->
                            <!--AND tms.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD-->
                            <!--AND tms.STORE_CD = tssd.STORE_CD-->
                            <!--AND tmp.STORE_CD = tssd.STORE_CD-->
                            <!--AND tmp.PROD_CD = tssd.PROD_CD-->
                            <!--AND tmpc.STORE_CD = tssd.STORE_CD-->
                            <!--AND tmpc.PROD_CLASS_CD = tmp.PROD_CLASS_CD-->
                            <!--AND tmpc_p.PROD_CLASS_CD = tmp.PROD_CLASS_CD-->
                            <!--AND tmpb.STORE_CD (+)= tmp.STORE_CD-->
                            <!--AND tmpb.PROD_CD (+)= tmp.PROD_CD-->
                            <!--AND tmpb.PROD_CD (+)= tssd.PROD_CD-->
                            <!--AND tssd.HQ_OFFICE_CD = #{membrOrgnCd}-->
                            <!--AND tssd.STORE_CD = #{storeCd}-->
                            <!--AND tssd.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'-->
                            <!--<if test="prodCd != null and prodCd != ''">-->
                                <!--AND tssd.PROD_CD LIKE '%'|| #{prodCd} ||'%'-->
                            <!--</if>-->
                            <!--<if test="prodNm != null and prodNm != ''">-->
                                <!--AND thp.PROD_NM LIKE '%'|| #{prodNm} ||'%'-->
                            <!--</if>-->
                            <!--<if test="barCd != null and barCd != ''">-->
                                <!--AND thpb.BARCD_CD LIKE '%'|| #{barCd} ||'%'-->
                            <!--</if>-->
                        <!--)-->
                        <!--WHERE 1=1-->
                        <!--AND ${level} IN-->
                        <!--<foreach collection="arrProdClassCd" item="item" open="(" close=")" separator=",">-->
                            <!--${item}-->
                        <!--</foreach>-->
                        <!--<if test="prodClassCd != null and prodClassCd != ''">-->
                            <!--AND (      Level1 = #{prodClassCd}-->
                                    <!--OR Level2 = #{prodClassCd}-->
                                    <!--OR Level3 = #{prodClassCd}-->
                                <!--)-->
                        <!--</if>-->
                    <!--)-->
                    <!--PIVOT-->
                    <!--(-->
                        <!--SUM(SALE_AMT) AS SALE_AMT,-->
                        <!--SUM(SALE_QTY) AS SALE_QTY-->
                        <!--FOR ${level} IN (${pivotProdClassCol3})-->
                    <!--)-->
                    <!--GROUP BY YEAR_MONTH-->
                <!--) tba-->
                <!--WHERE 1=1-->
                <!--ORDER BY tba.YEAR_MONTH-->
            <!--</when>-->
        <!--</choose>-->
    </select>

    <!-- 코너별탭 - 코너별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL
        COMMENTS : [매출]상세
    -->
    <select id="getMonthCornerList"  parameterType="MonthVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getMonthCornerList */
        SELECT
        YEAR_MONTH,
        STORE_CNT,
        <foreach collection="arrCornerCol" item="item" separator="+">
            NVL(CORNR_${item}_REAL_SALE_AMT, 0)
        </foreach> AS TOT_REAL_SALE_AMT,
        <foreach collection="arrCornerCol" item="item" separator="+">
            NVL(CORNR_${item}_SALE_QTY, 0)
        </foreach> AS TOT_SALE_QTY,
        <foreach collection="arrCornerCol" item="item" separator=",">
            NVL(CORNR_${item}_REAL_SALE_AMT,0) AS CORNR_${item}_REAL_SALE_AMT
        </foreach> ,
        <foreach collection="arrCornerCol" item="item" separator=",">
            NVL(CORNR_${item}_SALE_QTY,0) AS CORNR_${item}_SALE_QTY
        </foreach>
--         NVL(CORNR_A00000101_REAL_SALE_AMT,0) AS CORNR_A00000101_REAL_SALE_AMT,
--         NVL(CORNR_A00000101_SALE_QTY,0) AS CORNR_A00000101_SALE_QTY,
        FROM
        (
            SELECT
            YEAR_MONTH,
            COUNT(STORE_CD) AS STORE_CNT,
            <foreach collection="arrCornerCol" item="item" separator=",">
                SUM(CORNR_${item}_REAL_SALE_AMT) AS CORNR_${item}_REAL_SALE_AMT
            </foreach> ,
            <foreach collection="arrCornerCol" item="item" separator=",">
                SUM(CORNR_${item}_SALE_QTY) AS CORNR_${item}_SALE_QTY
            </foreach>
--             SUM(CORNR_A00000101_REAL_SALE_AMT) AS CORNR_A00000101_REAL_SALE_AMT,
--             SUM(CORNR_A00000101_SALE_QTY) AS CORNR_A00000101_SALE_QTY,
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tsdcp.SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,
                tsdcp.STORE_CD,
                SUM(tsdcp.REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(tsdcp.TOT_SALE_QTY) AS SALE_QTY,
                (tsdcp.STORE_CD || tsdcp.CORNR_CD) AS STORE_CORNR_CD
                FROM TB_SL_DAILY_CORNR_PROD tsdcp
                WHERE 1=1
                AND tsdcp.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tsdcp.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'
                <if test='storeCd != null and storeCd != ""'>
                    <![CDATA[
                        AND tsdcp.STORE_CD = #{storeCd}
                    ]]>
                </if>
                GROUP BY tsdcp.SALE_DATE, tsdcp.STORE_CD, tsdcp.CORNR_CD
            )
            PIVOT
            (
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(SALE_QTY) AS SALE_QTY
                FOR STORE_CORNR_CD
                IN (${pivotCornerCol})
                /*IN ('A00000101' AS CORNR_A00000101,
                'DS0000201' AS CORNR_DS0000201,
                'DS0000601' AS CORNR_DS0000601)*/
            )
            GROUP BY YEAR_MONTH
        )
        ORDER BY YEAR_MONTH
    </select>

    <!-- 외식테이블별탭 - 외식테이블별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR
        COMMENTS : [매출]헤더
    -->
    <select id="getMonthTableList"  parameterType="MonthVO" resultType="DefaultMap">
        /* DayOfWeekMapper.getMonthTableList */
        SELECT
        YEAR_MONTH,
        <foreach collection="arrTableCol" item="item" separator="+">
            NVL(TBL${item}_REAL_SALE_AMT, 0)
        </foreach> AS TOT_REAL_SALE_AMT,
        <foreach collection="arrTableCol" item="item" separator="+">
            NVL(TBL${item}_TBL_CNT, 0)
        </foreach> AS TOT_TBL_CNT,
        <foreach collection="arrTableCol" item="item" separator="+">
            NVL(TBL${item}_GUEST_CNT, 0)
        </foreach> AS TOT_GUEST_CNT,
        <foreach collection="arrTableCol" item="item" separator=",">
            NVL(TBL${item}_REAL_SALE_AMT,0) AS TBL${item}_REAL_SALE_AMT
        </foreach> ,
        <foreach collection="arrTableCol" item="item" separator=",">
            NVL(TBL${item}_TBL_CNT,0) AS TBL${item}_TBL_CNT
        </foreach> ,
        <foreach collection="arrTableCol" item="item" separator=",">
            NVL(TBL${item}_GUEST_CNT,0) AS TBL${item}_GUEST_CNT
        </foreach>
--         NVL(TBL000_REAL_SALE_AMT,0) AS TBL000_REAL_SALE_AMT,
--         NVL(TBL000_TBL_CNT,0) AS TBL000_TBL_CNT,
--         NVL(TBL000_TOT_GUEST_CNT,0) AS TBL000_TOT_GUEST_CNT
        FROM
        (
            SELECT
            YEAR_MONTH,
            <foreach collection="arrTableCol" item="item" separator=",">
                SUM(TBL${item}_REAL_SALE_AMT) AS TBL${item}_REAL_SALE_AMT
            </foreach> ,
            <foreach collection="arrTableCol" item="item" separator=",">
                SUM(TBL${item}_TBL_CNT) AS TBL${item}_TBL_CNT
            </foreach> ,
            <foreach collection="arrTableCol" item="item" separator=",">
                SUM(TBL${item}_GUEST_CNT) AS TBL${item}_GUEST_CNT
            </foreach>
--             SUM(TBL000_REAL_SALE_AMT) AS TBL000_REAL_SALE_AMT,
--             SUM(TBL000_TBL_CNT) AS TBL000_TBL_CNT,
--             SUM(TBL000_TOT_GUEST_CNT) AS TBL000_TOT_GUEST_CNT
            FROM
            (
                SELECT
                TO_CHAR(TO_DATE(tssh.SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,
                tssh.REAL_SALE_AMT,
                1 AS TBL_CNT,
                tssh.TOT_GUEST_CNT,
                tssh.TBL_CD
                FROM TB_SL_SALE_HDR tssh
                WHERE 1=1
                AND tssh.HQ_OFFICE_CD = #{membrOrgnCd}
                AND tssh.STORE_CD = #{storeCd}
                AND tssh.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'
                <if test='tableCd != null and tableCd != ""'>
                    <![CDATA[
                        AND tssh.TBL_CD = #{tableCd}
                    ]]>
                </if>
                AND tssh.TBL_CD != '000'
            )
            PIVOT
            (
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(TBL_CNT) AS TBL_CNT,
                SUM(TOT_GUEST_CNT) AS GUEST_CNT
                FOR TBL_CD
                IN (${pivotTableCol})
                /*IN ('000' AS TBL000,
                '001' AS TBL001)*/
            )
            GROUP BY YEAR_MONTH
        )
        ORDER BY YEAR_MONTH
    </select>

    <!-- 포스별탭 - 포스별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL
        COMMENTS : [매출]상세
    -->
    <select id="getMonthPosList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthPosList */
        SELECT	DECODE(GROUPING(STORE_POS_NO), 1, 'TOTAL', STORE_POS_NO) AS STORE_POS_NO,
                YEAR_MONTH,
                SUM(SALE_AMT) AS SALE_AMT,
                SUM(DC_AMT) AS DC_AMT,
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(SALE_QTY) AS SALE_QTY
        FROM    (
                SELECT 	STORE_CD || POS_NO AS STORE_POS_NO,
                        TO_CHAR(TO_DATE(SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,
                        SUM(SALE_AMT) AS SALE_AMT,
                        SUM(DC_AMT) AS DC_AMT,
                        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                        SUM(SALE_QTY) AS SALE_QTY
                FROM 	TB_SL_SALE_DTL tssd
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'
                <if test='storeCdQuery != null and storeCdQuery != ""'>
                    AND STORE_CD IN (${storeCdQuery})
                </if>
                GROUP BY STORE_CD || POS_NO, SALE_DATE
                )
        GROUP BY YEAR_MONTH,  ROLLUP(STORE_POS_NO)
    </select>
<!--    <select id="getMonthPosList"  parameterType="MonthVO" resultType="DefaultMap">-->
<!--        /* MonthMapper.getMonthPosList */-->
<!--        SELECT-->
<!--        YEAR_MONTH,-->
<!--        <foreach collection="arrPosCol" item="item" separator="+">-->
<!--            NVL(POS_${item}_SALE_AMT, 0)-->
<!--        </foreach> AS TOT_SALE_AMT,-->
<!--        <foreach collection="arrPosCol" item="item" separator="+">-->
<!--            NVL(POS_${item}_DC_AMT, 0)-->
<!--        </foreach> AS TOT_DC_AMT,-->
<!--        <foreach collection="arrPosCol" item="item" separator="+">-->
<!--            NVL(POS_${item}_REAL_SALE_AMT, 0)-->
<!--        </foreach> AS TOT_REAL_SALE_AMT,-->
<!--        <foreach collection="arrPosCol" item="item" separator="+">-->
<!--            NVL(POS_${item}_SALE_QTY, 0)-->
<!--        </foreach> AS TOT_SALE_QTY,-->
<!--        <foreach collection="arrPosCol" item="item" separator=",">-->
<!--            NVL(POS_${item}_SALE_AMT,0) AS POS_${item}_SALE_AMT-->
<!--        </foreach> ,-->
<!--        <foreach collection="arrPosCol" item="item" separator=",">-->
<!--            NVL(POS_${item}_DC_AMT,0) AS POS_${item}_DC_AMT-->
<!--        </foreach> ,-->
<!--        <foreach collection="arrPosCol" item="item" separator=",">-->
<!--            NVL(POS_${item}_REAL_SALE_AMT,0) AS POS_${item}_REAL_SALE_AMT-->
<!--        </foreach> ,-->
<!--        <foreach collection="arrPosCol" item="item" separator=",">-->
<!--            NVL(POS_${item}_SALE_QTY,0) AS POS_${item}_SALE_QTY-->
<!--        </foreach>-->
<!--&#45;&#45;         SUM(POS_A00000101_SALE_AMT) AS POS_A00000101_SALE_AMT,-->
<!--&#45;&#45;         SUM(POS_A00000101_DC_AMT) AS POS_A00000101_DC_AMT,-->
<!--&#45;&#45;         SUM(POS_A00000101_REAL_SALE_AMT) AS POS_A00000101_REAL_SALE_AMT,-->
<!--&#45;&#45;         SUM(POS_A00000101_SALE_QTY) AS POS_A00000101_SALE_QTY-->
<!--        FROM-->
<!--        (-->
<!--            SELECT-->
<!--            YEAR_MONTH,-->
<!--            <foreach collection="arrPosCol" item="item" separator=",">-->
<!--                SUM(POS_${item}_SALE_AMT) AS POS_${item}_SALE_AMT-->
<!--            </foreach> ,-->
<!--            <foreach collection="arrPosCol" item="item" separator=",">-->
<!--                SUM(POS_${item}_DC_AMT) AS POS_${item}_DC_AMT-->
<!--            </foreach> ,-->
<!--            <foreach collection="arrPosCol" item="item" separator=",">-->
<!--                SUM(POS_${item}_REAL_SALE_AMT) AS POS_${item}_REAL_SALE_AMT-->
<!--            </foreach> ,-->
<!--            <foreach collection="arrPosCol" item="item" separator=",">-->
<!--                SUM(POS_${item}_SALE_QTY) AS POS_${item}_SALE_QTY-->
<!--            </foreach>-->
<!--            FROM-->
<!--            (-->
<!--                SELECT-->
<!--                TO_CHAR(TO_DATE(SALE_DATE, 'yyyymmdd'), 'yyyy-mm') YEAR_MONTH,-->
<!--                SUM(tssd.SALE_AMT) AS SALE_AMT,-->
<!--                SUM(tssd.DC_AMT) AS DC_AMT,-->
<!--                SUM(tssd.REAL_SALE_AMT) AS REAL_SALE_AMT,-->
<!--                SUM(tssd.SALE_QTY) AS SALE_QTY,-->
<!--                (tssd.STORE_CD || tssd.POS_NO) AS STORE_POS_NO-->
<!--                FROM TB_SL_SALE_DTL tssd-->
<!--                WHERE 1=1-->
<!--                AND tssd.HQ_OFFICE_CD = #{hqOfficeCd}-->
<!--                AND tssd.SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth} ||'31'-->
<!--                <if test='storeCds != null and storeCds != ""'>-->
<!--                    AND tssd.STORE_CD IN-->
<!--                    <foreach collection="storeCdList" item="item" open=" (" separator="," close=")" >-->
<!--                        #{item}-->
<!--                    </foreach>-->
<!--                </if>-->
<!--                GROUP BY tssd.SALE_DATE, tssd.STORE_CD, tssd.POS_NO-->
<!--            )-->
<!--            PIVOT-->
<!--            (-->
<!--                SUM(SALE_AMT) AS SALE_AMT,-->
<!--                SUM(DC_AMT) AS DC_AMT,-->
<!--                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,-->
<!--                SUM(SALE_QTY) AS SALE_QTY-->
<!--                FOR STORE_POS_NO-->
<!--                IN (${pivotPosCol})-->
<!--                /*IN ('A00000101' AS POS_A00000101,-->
<!--                'DS0000201' AS POS_DS0000201,-->
<!--                'DS0000601' AS POS_DS0000601)*/-->
<!--            )-->
<!--            GROUP BY YEAR_MONTH-->
<!--        )-->
<!--        ORDER BY YEAR_MONTH-->
<!--    </select>-->

    <!--  사원카드별탭 - 사원카드별 매출조회-->
    <!--
        TABLE    : TB_SL_SALE_DTL
        COMMENTS : [매출]상세
    -->
    <select id="getMonthEmpCardList"  parameterType="MonthVO" resultType="DefaultMap">
        /* MonthMapper.getMonthEmpCardList */
        SELECT  B.OFFICE_NM
        ,       B.OFFICE_DEPT_NM
        ,       B.OFFICE_EMP_NO
        ,       B.OFFICE_EMP_NM
        ,		C.PROD_NM
        ,		teec.EMPLOYEE_NO
        ,		teec.EMPLOYEE_NM
        ,		teec.DIV_NM
        ,		teec.DEPT_NM
        ,		teec.POSITION_NM
        ,		SUM(DECODE(A.SALE_AMT, 0, 0, ROUND(C.PAY_AMT*B.SALE_AMT/A.SALE_AMT, 0))) AS SALE_AMT
        FROM    (
                SELECT  STORE_CD
                ,       SALE_DATE
                ,       POS_NO
                ,       BILL_NO
                ,       SUM(SALE_AMT) AS SALE_AMT
                FROM    TB_SL_SALE_PAY_EMP_CARD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}  ||'31'
                <if test='storeCdQuery != null and storeCdQuery != ""'>
                    AND STORE_CD IN (${storeCdQuery})
                </if>
                <if test='orgnFg != null and orgnFg == "H"'>
                    AND (
                            'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                        OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                        )
                </if>
                GROUP
                BY      STORE_CD
                ,       SALE_DATE
                ,       POS_NO
                ,       BILL_NO
                ) A
        ,       (
                SELECT  STORE_CD
                ,       SALE_DATE
                ,       POS_NO
                ,       BILL_NO
                ,       OFFICE_NM
                ,       OFFICE_DEPT_NM
                ,       OFFICE_EMP_NO
                ,       OFFICE_EMP_NM
                ,       OFFICE_EMP_CARD_NO
                ,       SUM(SALE_AMT) AS SALE_AMT
                FROM    TB_SL_SALE_PAY_EMP_CARD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}  ||'31'
                <if test='storeCdQuery != null and storeCdQuery != ""'>
                    AND STORE_CD IN (${storeCdQuery})
                </if>
                <if test='orgnFg != null and orgnFg == "H"'>
                    AND (
                            'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                        OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                        )
                </if>
                GROUP
                BY      STORE_CD
                ,       SALE_DATE
                ,       POS_NO
                ,       BILL_NO
                ,       OFFICE_NM
                ,       OFFICE_DEPT_NM
                ,       OFFICE_EMP_NO
                ,       OFFICE_EMP_NM
                ,       OFFICE_EMP_CARD_NO
                ) B
        ,       (
                SELECT  A.STORE_CD
                ,       A.SALE_DATE
                ,       A.POS_NO
                ,       A.BILL_NO
                ,       A.PROD_CD
                ,		B.PROD_NM
                ,       A.PAY_AMT
                FROM	(
                        SELECT  STORE_CD
                        ,       SALE_DATE
                        ,       POS_NO
                        ,       BILL_NO
                        ,       PROD_CD
                        ,       SUM(PAY_AMT) AS PAY_AMT
                        FROM    TB_SL_SALE_DTL_PAY
                        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                        AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}  ||'31'
                        <if test='storeCdQuery != null and storeCdQuery != ""'>
                            AND STORE_CD IN (${storeCdQuery})
                        </if>
                        <if test='orgnFg != null and orgnFg == "H"'>
                            AND (
                                    'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                                OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                                )
                        </if>
                        AND 	PAY_CD = '17'
                        GROUP
                        BY      STORE_CD
                        ,       SALE_DATE
                        ,       POS_NO
                        ,       BILL_NO
                        ,       PROD_CD
                        ) A,
                        TB_MS_PRODUCT B
                WHERE 	B.STORE_CD = A.STORE_CD
                AND     B.PROD_CD  = A.PROD_CD
                ) C
        ,      TB_EM_EMPLOYEE_CARD teec
        WHERE   B.STORE_CD = A.STORE_CD
        AND 	B.SALE_DATE = A.SALE_DATE
        AND 	B.POS_NO = A.POS_NO
        AND 	B.BILL_NO = A.BILL_NO
        AND 	C.STORE_CD = A.STORE_CD
        AND 	C.SALE_DATE = A.SALE_DATE
        AND 	C.POS_NO = A.POS_NO
        AND 	C.BILL_NO = A.BILL_NO
        AND teec.EMPLOYEE_CARD_NO (+) = B.OFFICE_EMP_CARD_NO
        <if test='hqOfficeCd != null and hqOfficeCd != "00000"'>
            AND teec.EMPLOYEE_ORGN_CD (+) = #{hqOfficeCd}
        </if>
        <if test='hqOfficeCd != null and hqOfficeCd == "00000"'>
            AND teec.EMPLOYEE_ORGN_CD (+) = B.STORE_CD
        </if>
        GROUP
        BY  B.OFFICE_NM
        ,  B.OFFICE_DEPT_NM
        ,  B.OFFICE_EMP_NO
        ,  B.OFFICE_EMP_NM
        ,  C.PROD_NM
        ,		teec.EMPLOYEE_NO
        ,		teec.EMPLOYEE_NM
        ,		teec.DIV_NM
        ,		teec.DEPT_NM
        ,		teec.POSITION_NM
        ORDER
        BY  B.OFFICE_NM
        ,  B.OFFICE_DEPT_NM
        ,  B.OFFICE_EMP_NO
        ,  B.OFFICE_EMP_NM
        ,  C.PROD_NM
        ,		teec.EMPLOYEE_NO
        ,		teec.EMPLOYEE_NM
        ,		teec.DIV_NM
        ,		teec.DEPT_NM
        ,		teec.POSITION_NM
    </select>
</mapper>