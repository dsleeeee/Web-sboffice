<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    ProdClassMapper.xml
    상품별 > 분류별상품 탭
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김진       2020.02.06     최초작성
    2       김설아     2021.01.04
-->
<mapper namespace="kr.co.solbipos.sale.status.prod.cls.service.impl.ProdClassMapper">

    <!-- 분류별상품탭 - 조회 -->
    <!--
        TABLE    :
        PARAM    :
        COMMENTS :
    -->
    <select id="getProdClassList" parameterType="prodClassVO" resultType="DefaultMap">
        /* USE : ProdClassMapper.getProdClassList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'CD_STR') AS PATH,
        FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'NM_STR') AS PATH_NM,
        PROD_CD,
        PROD_NM,
        BARCD_CD,
        SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
        SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
        SUM(TOT_DC_AMT) AS TOT_DC_AMT,
        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM
        (
            SELECT
            --FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'CD_STR') AS PATH, --CD_STR
            --FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM, --NM_STR
            tmp.STORE_CD,
            tmp.PROD_CLASS_CD,
            tsdp.PROD_CD,
            tmp.PROD_NM,
            tmpb.BARCD_CD,
            SUM(tsdp.TOT_SALE_QTY) AS TOT_SALE_QTY,
            SUM(tsdp.TOT_SALE_AMT) AS TOT_SALE_AMT,
            SUM(tsdp.TOT_DC_AMT) AS TOT_DC_AMT,
            SUM(tsdp.REAL_SALE_AMT) AS REAL_SALE_AMT
            FROM TB_SL_DAILY_PROD tsdp,
            TB_MS_PRODUCT tmp,
            TB_MS_PRODUCT_BARCD tmpb
            WHERE 1=1
            AND tsdp.HQ_OFFICE_CD = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
                AND tsdp.STORE_CD IN
                <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test='orgnFg != null and orgnFg == "H"'>
                AND (
                        'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                    OR  tsdp.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                    )
            </if>
            AND tsdp.SALE_DATE BETWEEN #{startDate} AND #{endDate}
            <if test="prodCd != null and prodCd != ''">
                AND tsdp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
            </if>
            <if test="prodNm != null and prodNm != ''">
                AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
            </if>
            <if test="prodClassCd != null and prodClassCd != ''">
                <if test='orgnFg != null and orgnFg == "H"'>
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_HQ_PRODUCT_CLASS
                                                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='orgnFg != null and orgnFg == "S"'>
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_MS_PRODUCT_CLASS
                                                WHERE STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
            </if>
            AND tmp.STORE_CD = tsdp.STORE_CD
            AND tmp.PROD_CD = tsdp.PROD_CD
            AND tmpb.STORE_CD (+)= tmp.STORE_CD
            AND tmpb.PROD_CD (+)= tmp.PROD_CD
            GROUP BY tsdp.PROD_CD, tmp.PROD_NM, tmpb.BARCD_CD, tmp.STORE_CD, tmp.PROD_CLASS_CD
        )
        WHERE 1=1
        GROUP BY PROD_CD, PROD_NM, BARCD_CD, FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'CD_STR'), FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'NM_STR')
        ORDER BY PROD_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 분류별상품탭 - 엑셀 조회 -->
    <!--
        TABLE    :
        PARAM    :
        COMMENTS :
    -->
    <select id="getProdClassExcelList" parameterType="prodClassVO" resultType="DefaultMap">
        /* USE : ProdClassMapper.getProdClassExcelList */
        SELECT
        FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'CD_STR') AS PATH,
        FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'NM_STR') AS PATH_NM,
        PROD_CD,
        PROD_NM,
        BARCD_CD,
        SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
        SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
        SUM(TOT_DC_AMT) AS TOT_DC_AMT,
        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
        FROM
        (
            SELECT
            --FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'CD_STR') AS PATH, --CD_STR
            --FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM, --NM_STR
            tmp.STORE_CD,
            tmp.PROD_CLASS_CD,
            tsdp.PROD_CD,
            tmp.PROD_NM,
            tmpb.BARCD_CD,
            SUM(tsdp.TOT_SALE_QTY) AS TOT_SALE_QTY,
            SUM(tsdp.TOT_SALE_AMT) AS TOT_SALE_AMT,
            SUM(tsdp.TOT_DC_AMT) AS TOT_DC_AMT,
            SUM(tsdp.REAL_SALE_AMT) AS REAL_SALE_AMT
            FROM TB_SL_DAILY_PROD tsdp,
            TB_MS_PRODUCT tmp,
            TB_MS_PRODUCT_BARCD tmpb
            WHERE 1=1
            AND tsdp.HQ_OFFICE_CD = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
                AND tsdp.STORE_CD IN
                <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test='orgnFg != null and orgnFg == "H"'>
                AND (
                    'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                OR  tsdp.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                )
            </if>
            AND tsdp.SALE_DATE BETWEEN #{startDate} AND #{endDate}
            <if test="prodCd != null and prodCd != ''">
                AND tsdp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
            </if>
            <if test="prodNm != null and prodNm != ''">
                AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
            </if>
            <if test="prodClassCd != null and prodClassCd != ''">
                <if test='orgnFg != null and orgnFg == "H"'>
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_HQ_PRODUCT_CLASS
                                                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test='orgnFg != null and orgnFg == "S"'>
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_MS_PRODUCT_CLASS
                                                WHERE STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
            </if>
            AND tmp.STORE_CD = tsdp.STORE_CD
            AND tmp.PROD_CD = tsdp.PROD_CD
            AND tmpb.STORE_CD (+)= tmp.STORE_CD
            AND tmpb.PROD_CD (+)= tmp.PROD_CD
            GROUP BY tsdp.PROD_CD, tmp.PROD_NM, tmpb.BARCD_CD, tmp.STORE_CD, tmp.PROD_CLASS_CD
        )
        WHERE 1=1
        GROUP BY PROD_CD, PROD_NM, BARCD_CD, FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'CD_STR'), FN_GET_PROD_CLASS_CD_NM_STR(STORE_CD, PROD_CLASS_CD, 'NM_STR')
        ORDER BY PROD_CD
    </select>

</mapper>