<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.base.store.tableattr.service.impl.TableAttrMapper">

  <select id="selectXmlByStore" parameterType="DefaultMap" resultType="String">
    /* TableAttrMapper.selectXmlByStore */
     SELECT XML
       FROM TB_WB_STORE_TABLE_CONFG_XML A
      WHERE A.STORE_CD = #{storeCd}
        AND A.CONFG_FG = #{confgFg}
  	<if test='confgSubFg != null and confgSubFg != ""'>
        AND A.CONFG_SUB_FG = #{confgSubFg}
    </if>
        AND A.USE_YN = 'Y'
        AND ROWNUM = 1
  </select>

  <select id="selectXmlByStoreTable" parameterType="DefaultMap" resultType="String">
    /* TableAttrMapper.selectXmlByStore */
    SELECT XML
      FROM (
      		SELECT XML, MOD_DT
      		  FROM (
      		  		SELECT XML, NVL(MOD_DT,1) AS MOD_DT
      		  		  FROM TB_WB_STORE_TABLE_CONFG_XML A
      		  		 WHERE A.STORE_CD = #{storeCd}
      		  		   AND A.CONFG_FG = '30'
      		  		   AND A.CONFG_SUB_FG = #{tblTypeFg}
      		  		   AND A.USE_YN = 'Y'
      		  		 UNION ALL
      		  		SELECT XML, NVL(MOD_DT,1) AS MOD_DT
      		  		  FROM TB_WB_STORE_TABLE_CONFG_XML A
      		  		 WHERE A.STORE_CD = #{storeCd}
      		  		   AND A.CONFG_FG = '40'
      		  		   AND A.CONFG_SUB_FG = #{confgSubFg}
      		  		   AND A.USE_YN = 'Y'
      		  	   )
      		 ORDER BY MOD_DT DESC
			)
	  WhERE ROWNUM = 1
  </select>

  <select id="selectTblAttrCommCode" resultType="tableAttrVO">
    /* TableAttrMapper.selectTblAttrCommCode */
     SELECT NMCODE_GRP_CD,
            NMCODE_CD,
            NMCODE_NM,
            NMCODE_ITEM_1,
            NMCODE_ITEM_2,
            USE_COL_NM,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
      FROM TB_CM_NMCODE
     WHERE NMCODE_GRP_CD = '207'
     ORDER BY NMCODE_CD ASC
  </select>

  <select id="selectDefaultXml" parameterType="DefaultMap" resultType="tableAttrVO">
    /* TableAttrMapper.selectDefaultXml */
     SELECT TBL_TYPE_FG,
            ATTR_CD,
            ATTR_NM,
            X,
            Y,
            WIDTH,
            HEIGHT,
            TEXTALIGN_FG,
            '' TEXTVALIGN_FG,
            IMG_NM,
            FONT_NM,
            FONT_SIZE,
            FONT_STYLE_FG,
            FONT_COLOR,
            USE_YN
       FROM TB_CM_TABLE_ATTR A
            , (
            	SELECT NMCODE_CD
            	  FROM TB_CM_NMCODE
            	 WHERE NMCODE_GRP_CD = '035'
            ) B
      WHERE A.TBL_TYPE_FG = B.NMCODE_CD
        AND A.USE_YN = 'Y'
        AND A.TBL_TYPE_FG = #{tblTypeFg}
      ORDER BY TBL_TYPE_FG, ATTR_CD
  </select>

  <update id="insertStoreConfgXml" parameterType="DefaultMap">
    /* TableAttrMapper.insertStoreConfgXml */
    INSERT INTO TB_WB_STORE_TABLE_CONFG_XML A
    (
        A.STORE_CD,
        A.CONFG_FG,
        A.CONFG_SUB_FG,
        A.XML,
        A.USE_YN,
        A.REG_DT,
        A.REG_ID
    )
    VALUES (
        #{storeCd},
        #{confgFg},
        #{confgSubFg},
        #{xml:CLOB},
        #{useYn},
        #{regDt},
        #{regId}
    )
  </update>

  <update id="updateStoreConfgXml" parameterType="DefaultMap">
    /* TableAttrMapper.updateStoreConfgXml */
    UPDATE TB_WB_STORE_TABLE_CONFG_XML A
       SET A.XML = #{xml:CLOB},
           A.USE_YN = #{useYn},
           A.MOD_DT = #{regDt},
           A.MOD_ID = #{regId}
     WHERE STORE_CD = #{storeCd}
       AND CONFG_FG = #{confgFg}
       AND CONFG_SUB_FG = #{confgSubFg}
  </update>

  <update id="_mergeStoreConfgXml" parameterType="DefaultMap">
    /* TableAttrMapper.mergeStoreConfgXml */
    MERGE INTO TB_WB_STORE_TABLE_CONFG_XML A
    USING (SELECT #{storeCd} STORE_CD,
                  #{confgFg} CONFG_FG,
                  #{confgSubFg} CONFG_SUB_FG
             FROM DUAL
          ) ORG
    ON (  A.STORE_CD = ORG.STORE_CD
      AND A.CONFG_FG = ORG.CONFG_FG
      AND A.CONFG_SUB_FG = ORG.CONFG_SUB_FG
      )

    WHEN MATCHED THEN
    UPDATE
       SET A.XML = #{xml:CLOB},
           A.USE_YN = #{useYn},
           A.MOD_DT = #{regDt},
           A.MOD_ID = #{regId}

    WHEN NOT MATCHED THEN
    INSERT (
        A.STORE_CD,
        A.CONFG_FG,
        A.CONFG_SUB_FG,
        A.XML,
        A.USE_YN,
        A.REG_DT,
        A.REG_ID
    )
    VALUES (
        #{storeCd},
        #{confgFg},
        #{confgSubFg},
        #{xml:CLOB},
        #{useYn},
        #{regDt},
        #{regId}
    )
  </update>

  <update id="mergeStoreTableAttr" parameterType="tableAttrVO">
    /* TableAttrMapper.mergeStoreTableAttr */
    MERGE INTO TB_MS_TABLE_ATTR A
    USING (SELECT #{storeCd} STORE_CD,
                  #{tblTypeFg} TBL_TYPE_FG,
                  LPAD(#{attrCd}, 2, '0') ATTR_CD
             FROM DUAL
          ) ORG
    ON (  A.STORE_CD = ORG.STORE_CD
      AND A.TBL_TYPE_FG = ORG.TBL_TYPE_FG
      AND A.ATTR_CD = ORG.ATTR_CD)

     WHEN MATCHED THEN
    UPDATE
       SET A.ATTR_NM = #{attrNm},
           A.X = #{x},
           A.Y = #{y},
           A.WIDTH = #{width},
           A.HEIGHT = #{height},
           A.TEXTALIGN_FG = #{textalignFg},
           A.IMG_NM = #{imgNm},
           A.FONT_NM = #{fontNm},
           A.FONT_SIZE = #{fontSize},
           A.FONT_STYLE_FG = #{fontStyleFg},
           A.FONT_COLOR = #{fontColor},
           A.USE_YN = nvl(#{useYn},'Y'),

           A.MOD_DT = #{regDt},
           A.MOD_ID = #{regId}

    WHEN NOT MATCHED THEN
    INSERT (
        A.STORE_CD,
        A.TBL_TYPE_FG,
        A.ATTR_CD,
        A.ATTR_NM,
        A.X,
        A.Y,
        A.WIDTH,
        A.HEIGHT,
        A.TEXTALIGN_FG,
        A.IMG_NM,
        A.FONT_NM,
        A.FONT_SIZE,
        A.FONT_STYLE_FG,
        A.FONT_COLOR,
        A.USE_YN,
        A.REG_DT,
        A.REG_ID,
        A.MOD_DT,
        A.MOD_ID
    )
    VALUES (
        #{storeCd},
        #{tblTypeFg},
        LPAD(#{attrCd}, 2, '0'),
        #{attrNm},
        #{x},
        #{y},
        #{width},
        #{height},
        #{textalignFg},
        #{imgNm},
        #{fontNm},
        #{fontSize},
        #{fontStyleFg},
        #{fontColor},
        nvl(#{useYn},'Y'),
        #{regDt},
        #{regId},
        #{regDt},
        #{regId}
    )
  </update>

  <update id="mergeStoreTableNumAttr" parameterType="tableAttrVO">
    /* TableAttrMapper.mergeStoreTableNumAttr */
    MERGE INTO TB_MS_TABLE_ATTR_NEW A
    USING (SELECT #{storeCd} STORE_CD,
                  LPAD(#{tblCd}, 3, '0') TBL_CD,
                  LPAD(#{attrCd}, 2, '0') ATTR_CD
             FROM DUAL
          ) ORG
    ON (  A.STORE_CD = ORG.STORE_CD
      AND A.TBL_CD = ORG.TBL_CD
      AND A.ATTR_CD = ORG.ATTR_CD)

     WHEN MATCHED THEN
    UPDATE
       SET A.ATTR_NM = #{attrNm},
           A.X = #{x},
           A.Y = #{y},
           A.WIDTH = #{width},
           A.HEIGHT = #{height},
           A.TEXTALIGN_FG = #{textalignFg},
           A.IMG_NM = #{imgNm},
           A.FONT_NM = #{fontNm},
           A.FONT_SIZE = #{fontSize},
           A.FONT_STYLE_FG = #{fontStyleFg},
           A.FONT_COLOR = #{fontColor},
           A.USE_YN = #{useYn},

           A.MOD_DT = #{regDt},
           A.MOD_ID = #{regId}

    WHEN NOT MATCHED THEN
    INSERT (
        A.STORE_CD,
        A.TBL_CD,
        A.ATTR_CD,
        A.ATTR_NM,
        A.X,
        A.Y,
        A.WIDTH,
        A.HEIGHT,
        A.TEXTALIGN_FG,
        A.IMG_NM,
        A.FONT_NM,
        A.FONT_SIZE,
        A.FONT_STYLE_FG,
        A.FONT_COLOR,
        A.USE_YN,
        A.REG_DT,
        A.REG_ID,
        A.MOD_DT,
        A.MOD_ID
    )
    VALUES (
        #{storeCd},
        LPAD(#{tblCd}, 3, '0'),
        LPAD(#{attrCd}, 2, '0'),
        #{attrNm},
        #{x},
        #{y},
        #{width},
        #{height},
        #{textalignFg},
        #{imgNm},
        #{fontNm},
        #{fontSize},
        #{fontStyleFg},
        #{fontColor},
        #{useYn},
        #{regDt},
        #{regId},
        #{regDt},
        #{regId}
    )
  </update>
</mapper>