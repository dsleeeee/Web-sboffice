<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    StoreManage.xml
    매장관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김지은     2018.06.08     최초작성
-->

<mapper namespace="kr.co.solbipos.store.manage.storemanage.service.impl.StoreManageMapper">

  <!-- 매장목록 조회 -->
  <!--
      TABLE    : TB_MS_STORE, TB_HQ_OFFICE
      PARAM    : storeManageVO
      COMMENTS : 매장목록을 조회한다.
  -->
  <select id="getStoreList" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : StoreManageMapper.getStoreList */
    <include refid="CmmSQL.PagingTemplateHeader"/>
      SELECT '[' || tho.HQ_OFFICE_CD || '] ' || tho.HQ_OFFICE_NM AS HQ_OFFICE_CD_NM,
             tho.HQ_OFFICE_CD,
             tho.HQ_OFFICE_NM,
             tms.STORE_CD,
             tms.STORE_NM,
             NVL(tms.CLS_FG, tho.CLS_FG) AS CLS_FG,
             NVL(tms.SYS_STAT_FG,  tho.SYS_STAT_FG) AS SYS_STAT_FG,
             tms.SYS_OPEN_DATE,
             TO_CHAR(TO_DATE(tms.SYS_OPEN_DATE, 'YYYYMMDD') , 'YYYY/MM/DD')
            <include refid="CmmSQL.PagingTemplateCount"/>
        FROM TB_HQ_OFFICE tho,
             TB_MS_STORE tms
       WHERE tms.HQ_OFFICE_CD (+)= tho.HQ_OFFICE_CD
      <if test='hqOfficeCd != null and hqOfficeCd != ""'>
         AND tho.HQ_OFFICE_CD LIKE '%'||#{hqOfficeCd}||'%'
      </if>
      <if test='hqOfficeNm != null and hqOfficeNm != ""'>
         AND tho.HQ_OFFICE_NM LIKE '%'||#{hqOfficeNm}||'%'
      </if>
      <if test='storeCd != null and storeCd != ""'>
         AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
      </if>
      <if test='storeNm != null and storeNm != ""'>
         AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
      </if>
      <if test='bizNo != null and bizNo != ""'>
         AND tms.BIZ_NO LIKE '%'||#{bizNo}||'%'
      </if>
      <if test='clsFg != null and clsFg.toString() != ""'>
         AND tms.CLS_FG = #{clsFg}
      </if>
      <if test='sysStatFg != null and sysStatFg.toString() != ""'>
         AND tms.SYS_STAT_FG = #{sysStatFg}
      </if>
       ORDER BY tho.HQ_OFFICE_CD, tms.STORE_CD, tms.SYS_OPEN_DATE ASC
       <include refid="CmmSQL.PagingTemplateBottom"/>
  </select>

  <!-- 매장상세정보 조회 -->
  <!--
      TABLE    : TB_MS_STORE
      PARAM    : storeManageVO
      COMMENTS : 선택된 매장의 상세 정보를 조회한다.
  -->
  <select id="getStoreDetail" parameterType="storeManageVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getStoreDetail */
    <![CDATA[
    SELECT tms.STORE_CD,
           tms.STORE_NM,
           tms.OWNER_NM,
           tms.HQ_OFFICE_CD,
           tms.BIZ_STORE_NM,
           tms.BIZ_NO,
           SUBSTR(tms.BIZ_NO, 0, 3) AS BIZ_NO1,
           SUBSTR(tms.BIZ_NO, 4, 2) AS BIZ_NO2,
           SUBSTR(tms.BIZ_NO, 6, 5) AS BIZ_NO3,
           tms.TEL_NO,
           tms.FAX_NO,
           tms.EMAIL_ADDR,
           tms.HMPG_ADDR,
           tms.POST_NO,
           tms.ADDR,
           tms.ADDR_DTL,
           tms.AREA_CD,
           tms.AGENCY_CD,
           tms.VAN_CD,
           tms.SYS_STAT_FG,
           TO_CHAR(TO_DATE(tms.SYS_OPEN_DATE, 'YYYYMMDD'), 'YYYY.MM.DD') AS SYS_OPEN_DATE,
           TO_CHAR(TO_DATE(tms.SYS_CLOSURE_DATE, 'YYYYMMDD'), 'YYYY.MM.DD') AS SYS_CLOSURE_DATE,
           tms.CLS_FG,
           tms.REMARK,
           tms.SYS_REMARK,
           tms.HD_REMARK
      FROM TB_MS_STORE tms
     WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
       AND tms.STORE_CD = #{storeCd}
     ]]>
  </select>

  <!-- 매장 콤보리스트  조회 -->
  <!--
      TABLE    : TB_MS_STORE
      PARAM    : storeManageVO
      COMMENTS : 매장정보관리의 매장환경 복사에서 사용할 매장콤보리스트를 조회한다.
  -->
  <select id="getStoreComboList" parameterType="storeManageVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getStoreComboList */
    <![CDATA[
    SELECT '' AS VALUE,
           '선택' AS NAME
      FROM DUAL
     UNION
    SELECT STORE_CD AS VALUE,
           '['||STORE_CD||'] '||STORE_NM AS NAME
      FROM TB_MS_STORE
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
     ORDER BY VALUE NULLS FIRST
    ]]>
  </select>

  <!-- 매장환경조회 팝업 데이터  (매장정보) 조회  -->
  <!--
      TABLE    : TB_MS_STORE, TB_HQ_OFFICE, TB_CM_NMCODE
      PARAM    : storeManageVO
      COMMENTS : 매장환경 조회 버튼 클릭시 나타나는 팝업의 데이터를 조회한다.
  -->
  <select id="getStoreEnvInfo" parameterType="storeManageVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getStoreEnvInfo */
    <![CDATA[
    SELECT '['||tms.HQ_OFFICE_CD||'] '||thq.HQ_OFFICE_NM AS HQ_OFFICE_NM,
           '['||tms.STORE_CD||'] '||tms.STORE_NM AS STORE_NM,
           tcm.NMCODE_NM
      FROM TB_MS_STORE tms,
           TB_HQ_OFFICE thq,
           TB_CM_NMCODE tcm
     WHERE thq.HQ_OFFICE_CD = tms.HQ_OFFICE_CD
       AND tms.STORE_CD = #{storeCd}
       AND tcm.NMCODE_GRP_CD = '003'
       AND tms.CLS_FG = tcm.NMCODE_CD
    ]]>
  </select>

  <!-- 매장환경조회 팝업 데이터  (포스정보) 조회  -->
  <!--
      TABLE    : TB_MS_POS_ENVST, TB_CM_ENVST_DTL
      PARAM    : storeManageVO
      COMMENTS : 매장환경 조회 버튼 클릭시 나타나는 팝업의 데이터를 조회한다.
  -->
  <select id="getStorePosInfo" parameterType="storeManageVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getStorePosInfo */
    <![CDATA[
    SELECT tmp.POS_FG,
           tmp.ENVST_CD,
           tmp.ENVST_VAL,
           tcd.ENVST_VAL_NM
      FROM TB_MS_POS_ENVST tmp,
           TB_CM_ENVST_DTL tcd
     WHERE tmp.STORE_CD = #{storeCd}
       AND tmp.ENVST_CD = '201'
       AND tmp.ENVST_CD = tcd.ENVST_CD
       AND tmp.ENVST_VAL = tcd.ENVST_VAL_CD
    ]]>
  </select>

  <!-- 매장환경조회 팝업 데이터  (주방프린터) 조회  -->
  <!--
      TABLE    : TB_MS_PRINTER, TB_CM_ENVST_DTL
      PARAM    : storeManageVO
      COMMENTS : 매장환경 조회 버튼 클릭시 나타나는 팝업의 데이터를 조회한다.
  -->
  <select id="getStorePrintInfo" parameterType="storeManageVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getStorePrintInfo */
    <![CDATA[
    SELECT tmp.PRTER_NO,
           tcd.ENVST_VAL_NM
      FROM TB_MS_PRINTER tmp,
           TB_CM_ENVST_DTL tcd
     WHERE tmp.STORE_CD = #{storeCd}
       AND tcd.ENVST_VAL_CD = tmp.PRTER_KIND_FG
       AND tcd.ENVST_CD = '206'
    ]]>
  </select>

  <!-- 신규 매장코드 조회  -->
  <!--
      TABLE    : TB_MS_STORE
      PARAM    : storeManageVO
      COMMENTS : 신규매장 등록을 위한 매장 코드 조회
  -->
  <select id="getStoreCd" parameterType="storeManageVO" resultType="String">
    /* USE : StoreManageMapper.getStoreCd */
    <if test='sysStatFg.toString() == "DEMO"'>
      SELECT 'DS'||LPAD(TO_CHAR(NVL(MAX(SUBSTR(STORE_CD, 3, 6)), 0) + 1), 5, '0') AS STORE_CD
        FROM TB_MS_STORE
       WHERE SYS_STAT_FG = '9'
    </if>
    <if test='sysStatFg.toString() != "DEMO"'>
      SELECT 'S'||LPAD(TO_CHAR(NVL(MAX(SUBSTR(STORE_CD, 2, 6)), 0) + 1), 6, '0') STORE_CD
        FROM TB_MS_STORE
       WHERE SYS_STAT_FG != '9'
    </if>
  </select>

  <!-- 포스프로그램 구분 환경값 조회  -->
  <!--
      TABLE    : TB_HQ_ENVST
      PARAM    : storeManageVO
      COMMENTS : 본사의 포스프로그램 구분값을 조회한다.
  -->
  <!--
  <select id="getPosEnvValue" parameterType="storeManageVO" resultType="String">
    /* USE : StoreManageMapper.getPosEnvValue */
      SELECT ENVST_VAL
        FROM TB_HQ_ENVST
       WHERE HQ_OFFICE_CD = #{hqOfficeCd}
         AND ENVST_CD = '100'
  </select>
  -->

  <!-- 신규 매장정보 저장 -->
  <!--
      TABLE    : TB_MS_STORE
      PARAM    : storeManageVO
      COMMENTS : 신규 매장을 등록한다.
  -->
  <insert id="saveStoreInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.saveStoreInfo */
    INSERT INTO TB_MS_STORE
    (
      STORE_CD,
      STORE_NM,
      OWNER_NM,
      HQ_OFFICE_CD,
      BIZ_NO,
      BIZ_STORE_NM,
      TEL_NO,
      FAX_NO,
      EMAIL_ADDR,
      HMPG_ADDR,
      POST_NO,
      ADDR,
      ADDR_DTL,
      AREA_CD,
      CLS_FG,
      SYS_STAT_FG,
      SYS_OPEN_DATE,
      SYS_CLOSURE_DATE,
      VAN_CD,
      AGENCY_CD,
      REMARK,
      SYS_REMARK,
      HD_REMARK,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      #{storeNm},
      #{ownerNm},
      #{hqOfficeCd},
      #{bizNo},
      #{bizStoreNm},
      #{telNo},
      #{faxNo},
      #{emailAddr},
      #{hmpgAddr},
      #{postNo},
      #{addr},
      #{addrDtl},
      #{areaCd},
      #{clsFg},
      #{sysStatFg},
      #{sysOpenDate},
      #{sysClosureDate},
      #{vanCd},
      #{agencyCd},
      #{remark},
      #{sysRemark},
      #{hqRemark},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 매장정보 수정 -->
  <!--
      TABLE    : TB_MS_STORE
      PARAM    : storeManageVO
      COMMENTS : 매장정보를 수정한다.
  -->
  <insert id="updateStoreInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.updateStoreInfo */
    UPDATE TB_MS_STORE
       SET STORE_NM = #{storeNm},
           OWNER_NM = #{ownerNm},
           BIZ_NO = #{bizNo},
           BIZ_STORE_NM = #{bizStoreNm},
           TEL_NO = #{telNo},
           FAX_NO = #{faxNo},
           EMAIL_ADDR = #{emailAddr},
           HMPG_ADDR = #{hmpgAddr},
           POST_NO = #{postNo},
           ADDR = #{addr},
           ADDR_DTL = #{addrDtl},
           AREA_CD = #{areaCd},
           CLS_FG = #{clsFg},
           SYS_STAT_FG = #{sysStatFg},
           SYS_OPEN_DATE = #{sysOpenDate},
           SYS_CLOSURE_DATE = #{sysClosureDate},
           VAN_CD = #{vanCd},
           AGENCY_CD = #{agencyCd},
           REMARK = #{remark},
           SYS_REMARK = #{sysRemark},
           HD_REMARK = #{hqRemark},
           MOD_DT = #{modDt},
           MOD_ID = #{modId}
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
       AND STORE_CD = #{storeCd}
  </insert>


  <!-- 매장 분류 복사 -->
  <!--
      TABLE    : TB_MS_PRODUCT_CLASS
      PARAM    : storeManageVO
      COMMENTS : 해당 브랜드의 분류를 복사하여 매장 분류로 등록한다.
  -->
  <insert id="copyClsInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.copyClsInfo */
    INSERT INTO TB_MS_PRODUCT_CLASS
    (
      STORE_CD,
      PROD_CLASS_CD,
      PROD_CLASS_NM,
      P_PROD_CLASS_CD,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           PROD_CLASS_CD,
           PROD_CLASS_NM,
           P_PROD_CLASS_CD,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_HQ_PRODUCT_CLASS
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
  </insert>

  <!-- 매장 기본 사용자 등록 -->
  <!--
      TABLE    : TB_MS_EMPLOYEE
      PARAM    : storeManageVO
      COMMENTS : 해당 매장의 기본사용자를 등록한다. (관리자)
  -->
  <insert id="insertStoreDefaultUser" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertStoreDefaultUser */
    INSERT INTO TB_MS_EMPLOYEE
    (
      STORE_CD,
      EMP_NO,
      EMP_NM,
      EMP_PWD,
      WEB_USE_YN,
      USER_ID,
      MP_NO,
      EMAIL_ADDR,
      POST_NO,
      ADDR,
      ADDR_DTL,
      SERVICE_FG,
      SMS_RECV_YN,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      #{posEmpNo},
      #{ownerNm},
      #{posUserPwd},
      'Y',
      #{userId},
      #{telNo},
      #{emailAddr},
      #{postNo},
      #{addr},
      #{addrDtl},
      '1',
      'N',
      'Y',
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 웹 사용자 등록  -->
  <!--
      TABLE    : TB_WB_USER_INFO
      PARAM    : storeManageVO
      COMMENTS : 웹 사용자를 등록한다.
  -->
  <insert id="insertStoreWebUser" parameterType="DefaultMap">
    /* USE : StoreManageMapper.insertStoreWebUser */
    INSERT INTO TB_WB_USER_INFO
    (
      USER_ID,
      USER_PWD,
      AUTH_GRP_CD,
      LOGIN_FAIL_CNT,
      USER_STAT_FG,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{userId},
      #{userPwd},
      '000004',
      0,
      '99',
      'Y',
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 포스 출력물 마스터 등록 (단독매장) -->
  <!--
      TABLE    : TB_MS_PRINT
      PARAM    : storeManageVO
      COMMENTS : 포스출력물의 기본 템플릿을 저장한다.
  -->
  <insert id="insertDefaultPrintTemplete" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertDefaultPrintTemplete */
    INSERT INTO TB_MS_PRINT
    (
      STORE_CD,
      PRT_CLASS_CD,
      PRT_FORM,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           PRT_CLASS_CD,
           PRT_FORM,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_CM_PRINT_TEMPL
     WHERE (PRT_CLASS_CD, TEMPLT_CD) IN
     (
     SELECT PRT_CLASS_CD,
            MIN(TEMPLT_CD)
       FROM TB_CM_PRINT_TEMPL
      GROUP BY PRT_CLASS_CD
      )
  </insert>

  <!-- 포스 출력물 마스터 등록 (프랜차이즈) -->
  <!--
      TABLE    : TB_MS_PRINT
      PARAM    : storeManageVO
      COMMENTS : 포스출력물의 기본 템플릿을 저장한다.
  -->
  <insert id="insertHqPrintTemplete" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertHqPrintTemplete */
    INSERT INTO TB_MS_PRINT
    (
      STORE_CD,
      PRT_CLASS_CD,
      PRT_FORM,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           PRT_CLASS_CD,
           PRT_FORM,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_HQ_PRINT
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
  </insert>

  <!-- 포스마스터 등록 -->
  <!--
      TABLE    : TB_MS_POS
      PARAM    : storeManageVO
      COMMENTS : 포스출력물의 기본 템플릿을 저장한다.
  -->
  <insert id="insertPosInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertPosInfo */
    INSERT INTO TB_MS_POS
    (
      STORE_CD,
      POS_NO,
      POS_NM,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      LPAD(#{posNo}, 2, '0'),
      LPAD(#{posNo}, 2, '0'),
      'Y',
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 회원 기본등급 등록 -->
  <!--
      TABLE    : TB_MB_MEMBER_CLASS
      PARAM    : storeManageVO
      COMMENTS : 회원 기본등급을 저장한다.
  -->
  <insert id="insertMemberClass" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertMemberClass */
    INSERT INTO TB_MB_MEMBER_CLASS
    (
      MEMBR_ORGN_CD,
      MEMBR_CLASS_CD,
      MEMBR_CLASS_NM,
      DC_RATE,
      POINT_SAVE_FG,
      DEFLT_YN,
      NEW_JOIN_SAVE_POINT,
      FIRST_SALE_SAVE_POINT,
      MIN_USE_POINT,
      ANVSR_POINT_SAVE_FG,
      ANVSR_SAVE_POINT,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      '000',
      '기본',
      0,
      '1',
      'Y',
      0,
      0,
      0,
      '1',
      0,
      'Y',
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>


  <!-- 테이블 기본 그룹 생성 -->
  <!--
      TABLE    : TB_MS_TABLE_GROUP
      PARAM    : storeManageVO
      COMMENTS : 매장의 테이블 기본그룹을 생성한다.
  -->
  <insert id="insertTabGroup" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertTabGroup */
    INSERT INTO TB_MS_TABLE_GROUP
    (
      STORE_CD,
      TBL_GRP_CD,
      TBL_GRP_NM,
      TBL_GRP_FG,
      DISP_SEQ,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      (SELECT NVL( MAX(TBL_GRP_CD) , 0 ) + 1 FROM TB_MS_TABLE_GROUP WHERE STORE_CD = #{storeCd}),
      '기본그룹1',
      '1',
      1,
      'Y',
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 매장환경 등록 -->
  <!--
      TABLE    : TB_MS_STORE_ENVST
      PARAM    : storeManageVO
      COMMENTS : 매장환경값을 등록한다.
  -->
  <insert id="insertStoreEnvInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertStoreEnvInfo */
    INSERT INTO TB_MS_STORE_ENVST
    (
      STORE_CD,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           ENVST_CD,
           ENVST_VAL,
           DIRCT_IN_YN,
           USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_STORE_ENVST
     WHERE STORE_CD = #{copyStoreCd}
       AND ENVST_CD IN (SELECT ENVST_CD FROM TB_CM_ENVST WHERE ENVST_FG = '00')
       AND ENVST_CD NOT IN (SELECT ENVST_CD FROM TB_MS_STORE_ENVST WHERE STORE_CD = #{storeCd})
  </insert>

  <!-- 외식환경 등록 -->
  <!--
      TABLE    : TB_MS_STORE_ENVST
      PARAM    : storeManageVO
      COMMENTS : 외식환경값을 등록한다.
  -->
  <insert id="insertFoodEnvInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertFoodEnvInfo */
    INSERT INTO TB_MS_STORE_ENVST
    (
      STORE_CD,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           ENVST_CD,
           ENVST_VAL,
           DIRCT_IN_YN,
           USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_STORE_ENVST
     WHERE STORE_CD = #{copyStoreCd}
       AND ENVST_CD IN (SELECT ENVST_CD FROM TB_CM_ENVST WHERE ENVST_FG = '01')
       AND ENVST_CD NOT IN (SELECT ENVST_CD FROM TB_MS_STORE_ENVST WHERE STORE_CD = #{storeCd})
  </insert>

  <!-- 포스환경 등록 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storeManageVO
      COMMENTS : 포스 환경변수를 등록한다.
  -->
  <insert id="insertPosEnvInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertPosEnvInfo */
    INSERT INTO TB_MS_POS_ENVST
    (
      STORE_CD,
      POS_NO,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      POS_FG,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           POS_NO,
           ENVST_CD,
           ENVST_VAL,
           DIRCT_IN_YN,
           POS_FG,
           USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_POS_ENVST
     WHERE STORE_CD = #{copyStoreCd}
       AND POS_NO IN (SELECT POS_NO FROM TB_MS_POS_ENVST WHERE STORE_CD = #{storeCd})
  </insert>

  <!-- 포스 기능키 등록 -->
  <!--
      TABLE    : TB_MS_POS_FNKEY
      PARAM    : storeManageVO
      COMMENTS : 포스 기능키를 등록한다.
  -->
  <insert id="insertPosFunKeyInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertPosFunKeyInfo */
    INSERT INTO TB_MS_POS_FNKEY
    (
      STORE_CD,
      POS_NO,
      FNKEY_NO,
      DISP_SEQ,
      COL_POSI,
      ROW_POSI,
      WIDTH,
      HEIGHT,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           POS_NO,
           FNKEY_NO,
           DISP_SEQ,
           COL_POSI,
           ROW_POSI,
           WIDTH,
           HEIGHT,
           USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_POS_FNKEY
     WHERE STORE_CD = #{copyStoreCd}
       AND POS_NO IN (SELECT POS_NO FROM TB_MS_POS WHERE STORE_CD = #{storeCd})
  </insert>

  <!-- 주방 프린터 환경 등록 -->
  <!--
      TABLE    : TB_MS_PRINTER
      PARAM    : storeManageVO
      COMMENTS : 주방 프린터 환경값을 등록한다.
  -->
  <insert id="insertKitchenPrintEnvInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertKitchenPrintEnvInfo */
    INSERT INTO TB_MS_PRINTER
    (
      STORE_CD,
      PRTER_NO,
      PRTER_NM,
      POS_NO,
      PRTER_KIND_FG,
      PRTER_PORT_FG,
      PRTER_SPEED_FG,
      PRTER_NET_IP,
      PRTER_NET_PORT,
      PRTER_OUTPUT_QTY,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           PRTER_NO,
           PRTER_NM,
           POS_NO,
           PRTER_KIND_FG,
           PRTER_PORT_FG,
           PRTER_SPEED_FG,
           PRTER_NET_IP,
           PRTER_NET_PORT,
           PRTER_OUTPUT_QTY,
           USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_PRINTER
     WHERE STORE_CD = #{copyStoreCd}
       AND POS_NO IN (SELECT POS_NO FROM TB_MS_POS WHERE STORE_CD = #{storeCd})
  </insert>


  <!-- 판매가  복사 -->
  <!--
      TABLE    : TB_MS_PRODUCT_SALE_PRICE
      PARAM    : storeManageVO
      COMMENTS : 프랜차이즈 매장의 경우 공급가를 복사한다.
  -->
  <insert id="copySaleUprc" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.copySaleUprc */
    INSERT INTO TB_MS_PRODUCT_SALE_PRICE
    (
      STORE_CD,
      PROD_CD,
      SALE_PRC_FG,
      START_DATE,
      END_DATE,
      SALE_UPRC,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           PROD_CD,
           SALE_PRC_FG,
           START_DATE,
           END_DATE,
           SALE_UPRC,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_PRODUCT_SALE_PRICE
     WHERE STORE_CD = #{copyStoreCd}
  </insert>

  <!-- 공급가 복사 -->
  <!--
      TABLE    : TB_MS_PRODUCT
      PARAM    : storeManageVO
      COMMENTS : 프랜차이즈 매장의 경우 공급가를 복사한다.
  -->
  <update id="updateSplyUprc" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.updateSplyUprc */
    <![CDATA[
    UPDATE TB_MS_PRODUCT A
       SET SPLY_UPRC = (SELECT SPLY_UPRC FROM TB_MS_PRODUCT WHERE STORE_CD = #{copyStoreCd} AND PROD_CD = A.PROD_CD),
           MOD_DT = #{modDt},
           MOD_ID = #{modId}
     WHERE STORE_CD = #{storeCd}
       AND PROD_CD IN (SELECT A.PROD_CD
                         FROM TB_MS_PRODUCT A,
                              TB_MS_PRODUCT B
                        WHERE A.STORE_CD = #{copyStoreCd}
                          AND B.STORE_CD = #{storeCd}
                          AND B.PROD_CD = A.PROD_CD
                          AND B.SPLY_UPRC <> A.SPLY_UPRC
                        )
    ]]>
  </update>


  <!-- 터치분류 복사 -->
  <!--
      TABLE    : TB_MS_TOUCH_CLASS
      PARAM    : storeManageVO
      COMMENTS : 매장의 터치 분류를 복사한다.
  -->
  <insert id="copyTouchkeyCls" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.copyTouchkeyCls */
    INSERT INTO TB_MS_TOUCH_CLASS
    (
      STORE_CD,
      TUKEY_GRP_CD,
      TUKEY_CLASS_CD,
      TUKEY_CLASS_NM,
      PAGE_NO,
      X,
      Y,
      WIDTH,
      HEIGHT,
      IN_FG,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           TUKEY_GRP_CD,
           TUKEY_CLASS_CD,
           TUKEY_CLASS_NM,
           PAGE_NO,
           X,
           Y,
           WIDTH,
           HEIGHT,
           IN_FG,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_TOUCH_CLASS
     WHERE STORE_CD = #{copyStoreCd}
       AND IN_FG = #{inFg}
  </insert>


  <!-- 터치키 복사 -->
  <!--
      TABLE    : TB_MS_PRINTER
      PARAM    : storeManageVO
      COMMENTS : 매장의 터치키를 복사한다.
  -->
  <insert id="copyTouchkey" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.copyTouchkey */
    INSERT INTO TB_MS_TOUCH
    (
      STORE_CD,
      TUKEY_CLASS_CD,
      TUKEY_CD,
      PROD_CD,
      PAGE_NO,
      X,
      Y,
      WIDTH,
      HEIGHT,
      IN_FG,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           tmt.TUKEY_CLASS_CD,
           tmt.TUKEY_CD,
           tmt.PROD_CD,
           tmt.PAGE_NO,
           tmt.X,
           tmt.Y,
           tmt.WIDTH,
           tmt.HEIGHT,
           tmt.IN_FG,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_TOUCH tmt,
           TB_MS_PRODUCT tmp
     WHERE tmt.STORE_CD = #{copyStoreCd}
       AND tmt.IN_FG = #{inFg}
       AND tmp.STORE_CD = #{storeCd}
       AND tmp.PROD_CD = tmt.PROD_CD
  </insert>

  <!-- 매장환경 정보 조회 -->
  <!--
      TABLE    : TB_CM_ENVST, TB_CM_ENVST_DTL, TB_MS_STORE_ENVST, TB_CM_NMCODE
      PARAM    : storeEnvVO
      COMMENTS : 해당 그룹의 매장환경값을 조회한다.
  -->
  <select id="getEnvGroupList" parameterType="storeEnvVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getEnvGroupList */
    <![CDATA[
    SELECT tce2.ENVST_GRP_CD,
           tcn.NMCODE_NM AS ENVST_GRP_NM,
           tce2.ENVST_CD,
           tce2.ENVST_NM,
           tce2.DIRCT_IN_YN,
           tce2.REMARK,
           tce2.ENVST_VAL_CD,
           tce2.ENVST_VAL_NM,
           tce2.DEFLT_YN,
           tce2.TARGT_FG,
           DECODE(tms.ENVST_CD, NULL, 'N', 'Y') AS EXIST_FG,
           tms.ENVST_VAL AS SEL_ENVST_VAL,
           tce3.ENVST_CD_CNT
      FROM (
      SELECT tce.ENVST_GRP_CD,
             tce.ENVST_CD,
             tce.ENVST_NM,
             tce.ENVST_FG,
             tce.TARGT_FG,
             tce.DIRCT_IN_YN,
             tce.REMARK,
             tcd.ENVST_VAL_CD,
             tcd.ENVST_VAL_NM,
             tcd.DEFLT_YN
        FROM TB_CM_ENVST tce,
             TB_CM_ENVST_DTL tcd
       WHERE tce.TARGT_FG IN ('S','C','X')
         AND tce.ENVST_FG = #{envstFg}
         AND tce.USE_YN = 'Y'
         AND tcd.ENVST_CD (+)= tce.ENVST_CD
           ) tce2,
          (
      SELECT tce.ENVST_GRP_CD,
             COUNT(*) AS ENVST_CD_CNT
        FROM TB_CM_ENVST tce
       WHERE tce.TARGT_FG IN ('S','C','X')
         AND tce.ENVST_FG = #{envstFg}
         AND tce.USE_YN = 'Y'
       GROUP BY tce.ENVST_GRP_CD
           ) tce3,
           TB_MS_STORE_ENVST tms,
           TB_CM_NMCODE tcn
     WHERE tms.STORE_CD (+)= #{storeCd}
       AND tms.ENVST_CD (+)= tce2.ENVST_CD
       AND tcn.NMCODE_GRP_CD = '004'
       AND tcn.NMCODE_CD = tce2.ENVST_GRP_CD
       AND tce3.ENVST_GRP_CD = tce2.ENVST_GRP_CD
     ORDER BY tce2.ENVST_GRP_CD, tce2.ENVST_CD, tce2.ENVST_VAL_CD
     ]]>
  </select>

  <!-- 매장환경 정보 저장 -->
  <!--
      TABLE    : TB_MS_STORE_ENVST
      PARAM    : storeEnvVO
      COMMENTS : 매장의 매장환경값을 저장한다.
  -->
  <insert id="insertStoreConfig" parameterType="DefaultMap">
    /* USE : StoreManageMapper.insertStoreConfig */
    INSERT INTO TB_MS_STORE_ENVST
    (
      STORE_CD,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      #{envstCd},
      #{envstVal},
      #{dirctInYn},
      #{useYn},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 매장환경 정보 수정 -->
  <!--
      TABLE    : TB_MS_STORE_ENVST
      PARAM    : storeEnvVO
      COMMENTS : 매장의 매장환경값을 수정한다.
  -->
  <update id="updateStoreConfig" parameterType="DefaultMap">
    /* USE : StoreManageMapper.updateStoreConfig */
    UPDATE TB_MS_STORE_ENVST
       SET ENVST_VAL = #{envstVal},
           MOD_DT = #{modDt},
           MOD_ID = #{modId}
     WHERE STORE_CD = #{storeCd}
       AND ENVST_CD = #{envstCd}
  </update>

  <!-- 매장 포스환경 정보 조회 -->
  <!--
      TABLE    : TB_CM_ENVST, TB_CM_ENVST_DTL, TB_MS_STORE_ENVST, TB_CM_NMCODE
      PARAM    : storeEnvVO
      COMMENTS : 해당 그룹의 매장환경값을 조회한다.
  -->
  <select id="getPosEnvGroupList" parameterType="storePosEnvVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getPosEnvGroupList */
    <![CDATA[
    SELECT tce2.ENVST_GRP_CD,
           tcn.NMCODE_NM AS ENVST_GRP_NM,
           tce2.ENVST_CD,
           tce2.ENVST_NM,
           tce2.ENVST_FG,
           tce2.DIRCT_IN_YN,
           tce2.REMARK,
           tce2.ENVST_VAL_CD,
           tce2.ENVST_VAL_NM,
           tce2.DEFLT_YN,
           tce2.TARGT_FG,
           DECODE(tms.ENVST_CD, NULL, 'N', 'Y') AS EXIST_FG,
           tms.ENVST_VAL AS SEL_ENVST_VAL,
           tce3.ENVST_CD_CNT
      FROM (
      SELECT tce.ENVST_GRP_CD,
             tce.ENVST_CD,
             tce.ENVST_NM,
             tce.ENVST_FG,
             tce.TARGT_FG,
             tce.DIRCT_IN_YN,
             tce.REMARK,
             tcd.ENVST_VAL_CD,
             tcd.ENVST_VAL_NM,
             tcd.DEFLT_YN
        FROM TB_CM_ENVST tce,
             TB_CM_ENVST_DTL tcd
       WHERE tce.TARGT_FG IN ('S','C','X')
         AND tce.ENVST_FG = #{envstFg}
         AND tce.USE_YN = 'Y'
         AND tcd.ENVST_CD (+)= tce.ENVST_CD
           ) tce2,
          (
       SELECT tce.ENVST_GRP_CD,
             COUNT(*) AS ENVST_CD_CNT
        FROM TB_CM_ENVST tce
       WHERE tce.TARGT_FG IN ('S','C','X')
         AND tce.ENVST_FG = #{envstFg}
         AND tce.USE_YN = 'Y'
       GROUP BY tce.ENVST_GRP_CD
           ) tce3,
           TB_MS_POS_ENVST tms,
           TB_CM_NMCODE tcn
     WHERE tms.STORE_CD (+)= #{storeCd}
       AND tms.POS_NO (+)= #{posNo}
       AND tms.ENVST_CD (+)= tce2.ENVST_CD
       AND tcn.NMCODE_GRP_CD = '004'
       AND tcn.NMCODE_CD = tce2.ENVST_GRP_CD
       AND tce3.ENVST_GRP_CD = tce2.ENVST_GRP_CD
     ORDER BY tce2.ENVST_GRP_CD, tce2.ENVST_CD, tce2.ENVST_VAL_CD
     ]]>
  </select>

  <!-- 매장 포스환경 등록 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storeManageVO
      COMMENTS : 포스 환경변수를 등록한다.
  -->
  <insert id="insertPosConfig" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertPosEnvInfo */
    INSERT INTO TB_MS_POS_ENVST
    (
      STORE_CD,
      POS_NO,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      POS_FG,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      #{posNo},
      #{envstCd},
      #{envstVal},
      #{dirctInYn},
      #{posFg},
      #{useYn},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 매장 포스 환경 정보 수정 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storePosEnvVO
      COMMENTS : 매장의 포스환경값을 수정한다.
  -->
  <update id="updatePosConfig" parameterType="DefaultMap">
    /* USE : StoreManageMapper.updatePosConfig */
    UPDATE TB_MS_POS_ENVST
       SET ENVST_VAL = #{envstVal},
           MOD_DT = #{modDt},
           MOD_ID = #{modId}
     WHERE STORE_CD = #{storeCd}
       AND ENVST_CD = #{envstCd}
       AND POS_NO   = #{posNo}
  </update>

  <!-- 포스 목록 조회 -->
  <!--
      TABLE    : TB_MS_POS
      PARAM    : storePosEnvVO
      COMMENTS : 포스환경정보에서 보여줄 매장의 포스 목록을 조회한다.
  -->
  <select id="getPosList" parameterType="storePosEnvVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getPosList */
    <![CDATA[
    SELECT ROWNUM,
           POS_NO,
           '['||POS_NO||']'||DECODE(POS_NM, NULL, 'POS'||POS_NO, POS_NM) AS POS_CD_NM,
           POS_NM
      FROM TB_MS_POS
     WHERE STORE_CD = #{storeCd}
     ]]>
  </select>

  <!-- 그룹목록 조회 -->
  <!--
      TABLE    : TB_MS_TABLE_GROUP
      PARAM    : storePosEnvVO
      COMMENTS : 포스그룹설정 selectBox 용 그룹목록 조회
  -->
  <select id="getGroupList" parameterType="storePosEnvVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getGroupList */
    <![CDATA[
    SELECT TBL_GRP_CD,
           TBL_GRP_NM
      FROM TB_MS_TABLE_GROUP
     WHERE STORE_CD = #{storeCd}
     ]]>
  </select>

  <!-- 테이블 그룹설정 정보 저장 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storePosEnvVO
      COMMENTS : 포스환경설정 > 테이블 그룹설정정보 저장
  -->
  <insert id="savePosTabGrp" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.savePosTabGrp */
    MERGE INTO TB_MS_POS_ENVST tme
   USING DUAL
      ON (
          tme.STORE_CD = #{storeCd}
      AND tme.POS_NO = #{posNo}
      AND tme.ENVST_CD = #{envstCd}
         )
      WHEN MATCHED THEN
           UPDATE SET tme.ENVST_VAL = #{envstVal},
                      tme.MOD_DT = #{modDt},
                      tme.MOD_ID = #{modId}
      WHEN NOT MATCHED THEN
           INSERT ( STORE_CD,
                    POS_NO,
                    ENVST_CD,
                    ENVST_VAL,
                    DIRCT_IN_YN,
                    POS_FG,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID)
            VALUES ( #{storeCd},
                     #{posNo},
                     #{envstCd},
                     #{envstVal},
                     'N',
                     '3',
                     'Y',
                     #{regDt},
                     #{regId},
                     #{modDt},
                     #{modId}
                  )
  </insert>

  <!-- 포스명칭설정 정보 저장 -->
  <!--
      TABLE    : TB_MS_POS
      PARAM    : storePosEnvVO
      COMMENTS : 포스환경설정 > 포스명칭설정정보 저장
  -->
  <update id="updatePosNm" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.updatePosNm */
    UPDATE TB_MS_POS
     SET POS_NM = #{posNm},
         MOD_DT = #{modDt},
         MOD_ID = #{modId}
   WHERE STORE_CD = #{storeCd}
     AND POS_NO = #{posNo}
  </update>

  <!-- 복사 타켓 포스 데이터 삭제 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storePosEnvVO
      COMMENTS : 포스 셋팅 복사 기능 중, 타켓 포스의 데이터 삭제
  -->
  <delete id="deletePosEnvTarget" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.deletePosEnvTarget */
    DELETE  TB_MS_POS_ENVST
    WHERE   STORE_CD = #{storeCd}
    AND     POS_NO  = LPAD(#{targetPosNo}, 2, '0')
  </delete>

  <!-- 복사 타켓 포스 데이터 복사 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storePosEnvVO
      COMMENTS : 포스 셋팅 복사 기능 중, 포스 환경 복사
  -->
  <insert id="copyPosEnvInfo" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.copyPosEnvInfo */
    INSERT INTO TB_MS_POS_ENVST
    (
      STORE_CD,
      POS_NO,
      ENVST_CD,
      ENVST_VAL,
      DIRCT_IN_YN,
      POS_FG,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           LPAD(#{targetPosNo}, 2, '0'),
           ENVST_CD,
           ENVST_VAL,
           DIRCT_IN_YN,
           POS_FG,
           USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_POS_ENVST
     WHERE STORE_CD = #{storeCd}
       AND POS_NO = #{posNo}
  </insert>

  <!-- 포스 셋팅 복사, 메인포스 지정 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storePosEnvVO
      COMMENTS : 포스 셋팅 복사 기능 중, 메인포스는 하나여야 하므로 복사하는 대상포스는 서브포스가 되어야 함
  -->
  <update id="updatePosEnv" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.updatePosEnv */
    UPDATE TB_MS_POS_ENVST
       SET ENVST_VAL = #{envstVal}
     WHERE STORE_CD = #{storeCd}
       AND POS_NO = LPAD(#{targetPosNo}, 2, '0')
       AND ENVST_CD = #{envstCd}
  </update>

  <!-- 타켓 포스 데이터 삭제 -->
  <!--
      TABLE    : TB_MS_POS
      PARAM    : storePosEnvVO
      COMMENTS : 포스 셋팅 복사 기능 중, 타켓 포스의 데이터 삭제
  -->
  <delete id="deletePosTarget" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.deletePosTarget */
    DELETE  TB_MS_POS
    WHERE   STORE_CD = #{storeCd}
    AND     POS_NO  = LPAD(#{targetPosNo}, 2, '0')
  </delete>

  <!-- 포스마스터 복사 -->
  <!--
      TABLE    : TB_MS_POS
      PARAM    : storeManageVO
      COMMENTS : 포스 설정 복사시, 포스 마스터 복사
  -->
  <insert id="copyPosInfo" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.copyPosInfo */
    INSERT INTO TB_MS_POS
    (
      STORE_CD,
      POS_NO,
      POS_NM,
      USE_YN,
      REMARK,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      LPAD(#{targetPosNo}, 2, '0'),
      ( SELECT POS_NM FROM TB_MS_POS WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} )  ,
      'Y',
      'POS'||#{targetPosNo},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>


  <!-- 타켓 포스 기능키 데이터 삭제 -->
  <!--
      TABLE    : TB_MS_POS_FNKEY
      PARAM    : storePosEnvVO
      COMMENTS : 포스 셋팅 복사 기능 중, 타켓 포스의 데이터 삭제
  -->
  <delete id="deletePosFunkeyTarget" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.deletePosFunkeyTarget */
    DELETE  TB_MS_POS_FNKEY
    WHERE   STORE_CD = #{storeCd}
    AND     POS_NO  = LPAD(#{targetPosNo}, 2, '0')
  </delete>


  <!-- 포스 기능키 복사 -->
  <!--
      TABLE    : TB_MS_POS_FNKEY
      PARAM    : storePosEnvVO
      COMMENTS : 포스 기능키를 등록한다.
  -->
  <insert id="copyPosFunKeyInfo" parameterType="storePosEnvVO" >
    /* USE : StoreManageMapper.copyPosFunKeyInfo */
    INSERT INTO TB_MS_POS_FNKEY
    (
      STORE_CD,
      POS_NO,
      FNKEY_NO,
      DISP_SEQ,
      COL_POSI,
      ROW_POSI,
      WIDTH,
      HEIGHT,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    SELECT #{storeCd},
           LPAD(#{targetPosNo}, 2, '0'),
           tpk.FNKEY_NO,
           tpk.DISP_SEQ,
           tpk.COL_POSI,
           tpk.ROW_POSI,
           tpk.WIDTH,
           tpk.HEIGHT,
           tpk.USE_YN,
           #{regDt},
           #{regId},
           #{modDt},
           #{modId}
      FROM TB_MS_POS_FNKEY tpk,
           TB_MS_STORE_FNKEY tsf,
           TB_MS_POS_ENVST tpe
     WHERE 1=1
       AND tpk.STORE_CD = #{storeCd}
       AND tpk.POS_NO = #{posNo}
       AND tsf.STORE_CD = tpk.STORE_CD
       AND tsf.FNKEY_NO = tpk.FNKEY_NO
       AND tpe.ENVST_CD = '4019'
       AND tpe.STORE_CD = tpk.STORE_CD
       AND tpe.POS_NO = LPAD(#{targetPosNo}, 2, '0')
       AND 'T' = DECODE(tpe.ENVST_VAL, '00', DECODE(tsf.POS_FG, '0', 'T', 1, 'F', '2', 'T'),
                                       '01', DECODE(tsf.POS_FG, '0', 'T', 1, 'F', '2', 'T'),
                                       '02', 'T')
  </insert>

  <!-- 포스 설치여부 체크 -->
  <!--
      TABLE    : TB_CM_INSTLL
      PARAM    : storePosEnvVO
      COMMENTS : 포스 삭제를 위한 포스 설치여부 체크
  -->
  <select id="chkInstallPos" parameterType="storePosEnvVO" resultType="Integer">
    /* USE : StoreManageMapper.chkInstallPos */
    SELECT COUNT(1) CNT
      FROM TB_CM_INSTLL
     WHERE STORE_CD = #{storeCd}
       AND POS_NO = #{posNo}
       AND INST_FG IN ('1', '2')
  </select>

  <!-- 매출자료 존재여부 체크 -->
  <!--
      TABLE    : TB_SL_SALE_HDR
      PARAM    : storePosEnvVO
      COMMENTS : 포스 삭제를 위한 포스 설치여부 체크
  -->
  <select id="chkSaleYn" parameterType="storePosEnvVO" resultType="Integer">
    /* USE : StoreManageMapper.chkSaleYn */
    SELECT COUNT(1) CNT
      FROM TB_SL_SALE_HDR
     WHERE STORE_CD = #{storeCd}
       AND POS_NO = #{posNo}
  </select>

  <!-- 포스 데이터 삭제 -->
  <!--
      TABLE    : TB_MS_POS_ENVST
      PARAM    : storePosEnvVO
      COMMENTS : 포스 삭제 처리 중, 타켓 포스의 데이터 삭제
  -->
  <delete id="deletePosEnv" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.deletePosEnv */
    DELETE  TB_MS_POS_ENVST
    WHERE   STORE_CD = #{storeCd}
    AND     POS_NO  = #{posNo}
  </delete>

  <!-- 포스 기능키 데이터 삭제 -->
  <!--
      TABLE    : TB_MS_POS_FNKEY
      PARAM    : storePosEnvVO
      COMMENTS : 포스 삭제 처리 중, 타켓 포스의 데이터 삭제
  -->
  <delete id="deletePosFunkey" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.deletePosFunkey */
    DELETE  TB_MS_POS_FNKEY
    WHERE   STORE_CD = #{storeCd}
    AND     POS_NO  = #{posNo}
  </delete>

  <!-- 포스 마스터 데이터 삭제 -->
  <!--
      TABLE    : TB_MS_POS
      PARAM    : storePosEnvVO
      COMMENTS : 포스 삭제 처리 중, 타켓 포스의 데이터 삭제
  -->
  <delete id="deletePosMaster" parameterType="storePosEnvVO">
    /* USE : StoreManageMapper.deletePosMaster */
    DELETE  TB_MS_POS
    WHERE   STORE_CD = #{storeCd}
    AND     POS_NO  = #{posNo}
  </delete>

  <!-- 주방프린터 목록 조회 -->
  <!--
      TABLE    : TB_MS_PRINTER, TB_MS_PRODUCT
      PARAM    : storeEnvVO
      COMMENTS : 주방프린터 목록을 조회
  -->
  <select id="getKitchenPrintInfo" parameterType="storeEnvVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getKitchenPrintInfo */
    SELECT ROWNUM AS NO,
           tmt.STORE_CD,
           tmt.PRTER_NO,
           tmt.PRTER_NM,
           tmt.POS_NO,
           tmt.PRTER_KIND_FG,
           tmt.PRTER_PORT_FG,
           tmt.PRTER_SPEED_FG,
           tmt.PRTER_NET_IP,
           tmt.PRTER_NET_PORT,
           tmt.PRTER_OUTPUT_QTY,
           tmp.CNT
      FROM TB_MS_PRINTER tmt,
           (
      SELECT STORE_CD, COUNT(PROD_CD) AS CNT
        FROM TB_MS_PRODUCT
       WHERE STORE_CD = #{storeCd}
         AND USE_YN = 'Y'
       GROUP BY STORE_CD
           ) tmp
     WHERE tmt.STORE_CD =  #{storeCd}
       AND tmt.USE_YN = 'Y'
       AND tmp.STORE_CD (+)= tmt.STORE_CD
  </select>

  <!-- 주방프린터 등록 -->
  <!--
      TABLE    : TB_MS_PRINTER
      PARAM    : kitchenPrintVO
      COMMENTS : 매장의 주방프린터를 등록한다.
  -->
  <insert id="insertKitchenPrint" parameterType="DefaultMap" >
    /* USE : StoreManageMapper.insertKitchenPrint */
    INSERT INTO TB_MS_PRINTER
    (
      STORE_CD,
      PRTER_NO,
      PRTER_NM,
      POS_NO,
      PRTER_KIND_FG,
      PRTER_PORT_FG,
      PRTER_SPEED_FG,
      PRTER_NET_IP,
      PRTER_NET_PORT,
      PRTER_OUTPUT_QTY,
      USE_YN,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      LPAD(#{prterNo}, 2, '0'),
      #{prterNm},
      #{posNo},
      #{prterKindFg},
      #{prterPortFg},
      #{prterSpeedFg},
      #{prterNetIp},
      #{prterNetPort},
      #{prterOutputQty},
      #{useYn},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 주방프린터 수정 -->
  <!--
      TABLE    : TB_MS_PRINTER
      PARAM    : kitchenPrintVO
      COMMENTS : 매장의 주방프린터 정보를 수정한다.
  -->
  <update id="updateKitchenPrint" parameterType="DefaultMap">
    /* USE : StoreManageMapper.updateKitchenPrint */
    UPDATE TB_MS_PRINTER
       SET PRTER_NM = #{prterNm},
           POS_NO = #{posNo},
           PRTER_KIND_FG = #{prterKindFg},
           PRTER_PORT_FG = #{prterPortFg},
           PRTER_SPEED_FG = #{prterSpeedFg},
           PRTER_NET_IP = #{prterNetIp},
           PRTER_NET_PORT = #{prterNetPort},
           PRTER_OUTPUT_QTY = #{prterOutputQty},
           USE_YN = #{useYn}
     WHERE STORE_CD = #{storeCd}
       AND PRTER_NO = LPAD(#{prterNo}, 2, '0')
  </update>


  <!-- 주방프린터 삭제 -->
  <!--
      TABLE    : TB_MS_PRINTER
      PARAM    : kitchenPrintVO
      COMMENTS : 매장의 주방프린터 정보를 삭제한다.
  -->
  <delete id="deleteKitchenPrint" parameterType="kitchenPrintVO">
    /* USE : StoreManageMapper.deleteKitchenPrint */
    DELETE TB_MS_PRINTER
     WHERE STORE_CD = #{storeCd}
       AND PRTER_NO = LPAD(#{prterNo}, 2, '0')
  </delete>

  <!-- 상품 분류 조회  -->
  <!--
      TABLE    : TB_MS_PRODUCT
      PARAM    : storeProductVO
      COMMENTS : 주방프린터 연결상품 목록 생성을 위한 상품 분류 조회
  -->
  <select id="getProdClass" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : StoreManageMapper.getProdClass */
    SELECT STORE_CD,
           PROD_CLASS_CD,
           PROD_CLASS_NM,
           P_PROD_CLASS_CD,
      FROM TB_MS_PRODUCT_CLASS
     WHERE STORE_CD = #{storeCd}
  </select>


  <!-- 주방프린터 연결상품 조회 -->
  <!--
      TABLE    : TB_MS_PRODUCT
      PARAM    : storeProductVO
      COMMENTS : 주방프린터 연결상품 조회
  -->
  <select id="getPrintProductInfo" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : StoreManageMapper.getPrintProductInfo */
    SELECT STORE_CD,
           PROD_CD,
           PROD_NM,
           PROD_CLASS_CD,
           #{prterNo} AS PRTER_NO
      FROM TB_MS_PRODUCT
     WHERE STORE_CD = #{storeCd}
     <if test='printYn != null and printYn.toString() == "Y"'>
       AND PROD_CD IN (SELECT PROD_CD
                         FROM TB_MS_PRINTER_PROD
                        WHERE STORE_CD = #{storeCd}
                          AND PRTER_NO = #{prterNo})
     </if>
     <if test='printYn != null and printYn.toString() != "Y"'>
     AND PROD_CD NOT IN (SELECT PROD_CD
                           FROM TB_MS_PRINTER_PROD
                          WHERE STORE_CD = #{storeCd}
                            AND PRTER_NO = #{prterNo})
     </if>
  </select>

  <!-- 주방프린터 연결상품 등록 -->
  <!--
      TABLE    : TB_MS_PRINTER_PROD
      PARAM    : storeProductVO
      COMMENTS : 주방프린터 연결상품 등록
  -->
  <insert id="insertKitchenPrintProduct" parameterType="storeProductVO">
    /* USE : StoreManageMapper.insertKitchenPrintProduct */
    INSERT INTO TB_MS_PRINTER_PROD
    (
      STORE_CD,
      PRTER_NO,
      PROD_CD,
      REG_DT,
      REG_ID,
      MOD_DT,
      MOD_ID
    )
    VALUES
    (
      #{storeCd},
      #{prterNo},
      #{prodCd},
      #{regDt},
      #{regId},
      #{modDt},
      #{modId}
    )
  </insert>

  <!-- 주방프린터 연결상품 삭제 -->
  <!--
      TABLE    : TB_MS_PRINTER_PROD
      PARAM    : storeProductVO
      COMMENTS : 주방프린터 연결상품 등록
  -->
  <delete id="deleteKitchenPrintProduct" parameterType="storeProductVO">
    /* USE : StoreManageMapper.deleteKitchenPrintProduct */
    DELETE TB_MS_PRINTER_PROD
     WHERE STORE_CD = #{storeCd}
       AND PRTER_NO = #{prterNo}
       AND PROD_CD = #{prodCd}
  </delete>

  <!-- 터치키 복사 - 본사 목록 조회 -->
  <!--
      TABLE    : TB_HQ_OFFICE
      COMMENTS : 터치키복사에서 복사할 본사목록 조회
  -->
  <select id="getHqList" resultType="DefaultMap">
    /* USE : StoreManageMapper.getHqList */
    SELECT '' AS VALUE,
           '선택' AS NAME
      FROM DUAL
     UNION
    SELECT HQ_OFFICE_CD AS VALUE,
           '[' || HQ_OFFICE_CD || '] ' || HQ_OFFICE_NM AS NAME
      FROM TB_HQ_OFFICE
     ORDER BY VALUE NULLS FIRST, VALUE ASC
  </select>

  <!-- 터치키 복사 - 브랜드 목록 조회 -->
  <!--
      TABLE    : TB_HQ_BRAND
      PARAM    : hqBrandVO
      COMMENTS : 터치키복사에서 복사할 브랜드목록 조회
  -->
  <select id="getHqBrandList" parameterType="hqBrandVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getHqBrandList */
    SELECT '' AS VALUE,
           '선택' AS NAME
      FROM DUAL
     UNION
    SELECT HQ_BRAND_CD AS VALUE,
           '[' || HQ_BRAND_CD || '] ' || HQ_BRAND_NM AS NAME
      FROM TB_HQ_BRAND
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
     ORDER BY VALUE NULLS FIRST, VALUE ASC
  </select>


  <!-- 터치키 복사 - 매장 목록 조회 -->
  <!--
      TABLE    : TB_MS_STORE
      PARAM    : hqBrandVO
      COMMENTS : 터치키복사에서 복사할 브랜드목록 조회
  -->
  <select id="getTouchKeyStoreList" parameterType="hqBrandVO" resultType="DefaultMap">
    /* USE : StoreManageMapper.getTouchKeyStoreList */
    SELECT '' AS VALUE,
           '선택' AS NAME
      FROM DUAL
     UNION
    SELECT STORE_CD AS VALUE,
           '[' || STORE_CD || '] ' || STORE_NM AS NAME
      FROM TB_MS_STORE
     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
       AND HQ_OFFICE_CD = #{hqOfficeCd}
     ORDER BY VALUE NULLS FIRST, VALUE ASC
  </select>



  <!-- 벤사, 코너 조회 -->
  <select id="getVanCornrList" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : StoreManageMapper.getVanCornrList */
    SELECT tms.STORE_CD,
           NVL2( tmc.CORNR_CD, tmc.CORNR_CD, '00' ) AS CORNR_CD,
           NVL2( tmc.CORNR_NM, tmc.CORNR_NM, '기본코너') AS CORNR_NM,
           NVL2( tmc.OWNER_NM, tmc.OWNER_NM, tms.OWNER_NM) AS OWNER_NM,
           NVL2( tmc.BIZ_NO, tmc.BIZ_NO, tms.BIZ_NO ) AS BIZ_NO,
           NVL2( tmc.TEL_NO, tmc.TEL_NO, tms.TEL_NO ) AS TEL_NO,
           NVL2( tmc.VAN_CD, tmc.VAN_CD, '' ) AS VAN_CD,
           NVL2( tmc.VAN_SER_NO, tmc.VAN_SER_NO, '' ) AS VAN_SER_NO,
           NVL2( tmc.VAN_TERMNL_NO, tmc.VAN_TERMNL_NO, '') AS VAN_TERMNL_NO
      FROM TB_MS_STORE tms,
           TB_MS_CORNER tmc
     WHERE tmc.STORE_CD (+)= tms.STORE_CD
       AND tms.STORE_CD = #{storeCd}
       AND tmc.CORNR_CD (+)= '00'

  </select>

  <!-- 설치 포스수 조회 -->
  <select id="getInstPosCnt" parameterType="DefaultMap" resultType="Integer">
      /* USE : StoreManageMapper.getInstPosCnt */
      SELECT COUNT(*)
        FROM TB_MS_POS
       WHERE STORE_CD = #{storeCd}
  </select>

  <!-- 코너별 승인 목록 조회 -->
  <select id="getCornrApproveList" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : StoreManageMapper.getCornrApproveList */
    <![CDATA[
    SELECT tmc.STORE_CD,
           tmc.CORNR_CD,
           tmc.CORNR_NM,
           tmc.OWNER_NM,
           tmc.BIZ_NO,
           tmc.TEL_NO,
           tmc.VAN_CD,
           tmc.VAN_SER_NO,
           tmc.VAN_TERMNL_NO,
           tmc.CORNR_NM AS BEFORE_CORNR_NM,
           tmc.OWNER_NM AS BEFORE_OWNER_NM,
           tmc.BIZ_NO AS BEFORE_BIZ_NO,
           tmc.TEL_NO AS BEFORE_TEL_NO,
           tmc.VAN_CD AS BEFORE_VAN_CD,
           tmc.VAN_SER_NO AS BEFORE_VAN_SER_NO,
           tmc.VAN_TERMNL_NO AS BEFORE_VAN_TERMNL_NO
      FROM TB_MS_CORNER tmc
     WHERE STORE_CD = #{storeCd}
       AND CORNR_CD <> '00'
     ORDER BY CORNR_CD
      ]]>
  </select>

  <!-- 포스별 승인 목록 조회 -->
  <select id="getPosApproveList" parameterType="DefaultMap" resultType="DefaultMap">
    /* USE : StoreManageMapper.getPosApproveList */
    <![CDATA[
     SELECT tmp.STORE_CD,
            tmp.POS_NO,
            tmp.POS_NM,
            tmp.HW_AUTH_KEY,
            tmp.POS_VER_NO,
            tmp.VAN_CERT_YN,
            tmp.VAN_TERMNL_NO,
            tmp.VAN_TERMNL_NO AS BEFORE_VAN_TERMNL_NO,
            TO_CHAR(TO_DATE(tmp.REG_DT, 'YYYYMMDDHH24MISS'), 'YYYY.MM.DD') VAN_CERT_START_DATE,
            TO_CHAR(TO_DATE(tmp.MOD_DT, 'YYYYMMDDHH24MISS'), 'YYYY.MM.DD') VAN_CERT_END_DATE
       FROM TB_MS_POS tmp
      WHERE tmp.STORE_CD = #{storeCd}
      ORDER BY tmp.POS_NO
      ]]>
  </select>
</mapper>
