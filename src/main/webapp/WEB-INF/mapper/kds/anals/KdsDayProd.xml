<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.kds.anals.chart.service.impl.KdsMapper">
    <select id="getKdsDayProd" parameterType="KdsVO" resultType="DefaultMap">
        /* KdsMapper.getKdsDayProd */
	SELECT
		A.LV1_CD,
		A.LV2_CD,
		A.LV2_NM,
		A.LV3_CD,
		A.LV3_NM,
		A.LV1_NM,
		A.LV2_NM_FULL,
		A.LV3_NM_FULL,
		C.PROD_CD,
		B.PROD_NM,
		C.STORE_CD,
		D.STORE_NM,
		C.SALE_DATE,
		SUM(C.SALE_QTY) AS SALE_QTY ,
		<if test='makeDate == 0'>
			SUM(C.AVG_S_CK_TO_E_CK) AS AVG_MAKE,
		</if>
		<if test="makeDate == 1">
			SUM(C.AVG_L_OD_TO_E_CK) AS AVG_MAKE,
		</if>
		<if test='picDate == 0'>
			 SUM(C.AVG_S_OD_TO_E_PK) AS AVG_PIC,
		</if>
		<if test="picDate == 1">
			SUM(C.AVG_E_CK_TO_E_PK) AS AVG_PIC,
		</if>
		COUNT(*) OVER() AS TOT_CNT
	FROM
		(
		SELECT
			A.P_PROD_CLASS_CD AS LV1_CD, A.PROD_CLASS_CD AS LV2_CD, A.PROD_CLASS_NM AS LV2_NM, B.PROD_CLASS_CD AS LV3_CD, B.PROD_CLASS_NM AS LV3_NM, (
			SELECT
				SF_GET_PROD_CLASSES('H', #{hqOfficeCd}, A.P_PROD_CLASS_CD)
			FROM
				DUAL) AS LV1_NM, (
			SELECT
				SF_GET_PROD_CLASSES('H', #{hqOfficeCd}, A.PROD_CLASS_CD )
			FROM
				DUAL) AS LV2_NM_FULL, (
			SELECT
				SF_GET_PROD_CLASSES('H', #{hqOfficeCd}, B.PROD_CLASS_CD )
			FROM
				DUAL) AS LV3_NM_FULL
		FROM
			(
			SELECT
				HQ_OFFICE_CD, P_PROD_CLASS_CD, PROD_CLASS_CD, PROD_CLASS_NM
			FROM
				TB_HQ_PRODUCT_CLASS
			WHERE
				HQ_OFFICE_CD = #{hqOfficeCd}
				AND P_PROD_CLASS_CD IN (
				SELECT
					PROD_CLASS_CD
				FROM
					TB_HQ_PRODUCT_CLASS
				WHERE
					HQ_OFFICE_CD = #{hqOfficeCd}
					AND P_PROD_CLASS_CD = '00000' ) ) A, TB_HQ_PRODUCT_CLASS B
		WHERE
			B.P_PROD_CLASS_CD IN (
			SELECT
				PROD_CLASS_CD
			FROM
				TB_HQ_PRODUCT_CLASS
			WHERE
				HQ_OFFICE_CD = #{hqOfficeCd}
				AND P_PROD_CLASS_CD IN (
				SELECT
					PROD_CLASS_CD
				FROM
					TB_HQ_PRODUCT_CLASS
				WHERE
					HQ_OFFICE_CD = #{hqOfficeCd}
					AND P_PROD_CLASS_CD = '00000' ) )
			AND A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
			AND A.PROD_CLASS_CD = B.P_PROD_CLASS_CD ) A,
		TB_HQ_PRODUCT B,
		TB_OD_ORDER_DTL_KDS_DAILY C,
		TB_MS_STORE D
	WHERE
		B.PROD_CD = C.PROD_CD
		AND B.PROD_CLASS_CD = A.LV3_CD
		AND C.STORE_CD = D.STORE_CD(+)
		AND B.HQ_OFFICE_CD = #{hqOfficeCd}
		AND C.STORE_CD = #{storeCd}
		AND C.SALE_DATE BETWEEN #{kdsDayStartDate} AND #{kdsDayEndDate}
	GROUP BY
		A.LV1_CD,
		A.LV2_CD,
		A.LV2_NM,
		A.LV3_CD,
		A.LV3_NM,
		A.LV1_NM,
		A.LV2_NM_FULL,
		A.LV3_NM_FULL,
		C.PROD_CD,
		B.PROD_NM,
		C.STORE_CD,
		C.SALE_DATE,
		D.STORE_NM
    </select>
</mapper>
