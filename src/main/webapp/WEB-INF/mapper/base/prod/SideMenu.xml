<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    SideMenu.xml
    사이드메뉴 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       노현수     2018.11.14     최초작성
-->
<mapper namespace="kr.co.solbipos.base.prod.sidemenu.service.impl.SideMenuMapper">

    <!-- 속성분류 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 사이드메뉴 속성의 분류목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getAttrClassList" parameterType="sideMenuAttrClassVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getAttrClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                    thpsc.HQ_BRAND_CD,
                    thpsc.SDATTR_CLASS_CD,
                    thpsc.SDATTR_CLASS_NM,
                    (SELECT COUNT(*) FROM TB_HQ_PRODUCT_SDATTR WHERE HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD AND SDATTR_CLASS_CD = thpsc.SDATTR_CLASS_CD AND USE_YN = 'Y' ) AS CNT
                FROM
                    TB_HQ_PRODUCT_SDATTR_CLASS thpsc
                WHERE
                    thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpsc.USE_YN = 'Y'
                ORDER BY
                    thpsc.SDATTR_CLASS_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                    tmpsc.MS_BRAND_CD,
                    tmpsc.SDATTR_CLASS_CD,
                    tmpsc.SDATTR_CLASS_NM,
                    (SELECT COUNT(*) FROM TB_MS_PRODUCT_SDATTR WHERE STORE_CD = tmpsc.STORE_CD AND SDATTR_CLASS_CD = tmpsc.SDATTR_CLASS_CD AND USE_YN = 'Y') AS CNT
                FROM
                    TB_MS_PRODUCT_SDATTR_CLASS tmpsc
                WHERE
                    tmpsc.STORE_CD = #{storeCd}
                    AND tmpsc.USE_YN = 'Y'
                ORDER BY
                    tmpsc.SDATTR_CLASS_CD
            </when>
        </choose>
    </select>

    <!-- 속성분류 생성시 분류코드 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 속성분류 생성시 분류코드 생성한다. ( 본사/매장 )
    -->
    <select id="getAttrClassCode" parameterType="sideMenuAttrClassVO" resultType="String">
        <choose>
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(SDATTR_CLASS_CD), '0') + 1, 5, '0')
                FROM TB_HQ_PRODUCT_SDATTR_CLASS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(SDATTR_CLASS_CD), '79999') + 1, 5, '0')
                FROM TB_MS_PRODUCT_SDATTR_CLASS
                WHERE STORE_CD = #{storeCd}
                  AND SDATTR_CLASS_CD > 79999
            </when>
        </choose>
    </select>

    <!-- 속성분류 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 속성분류를 생성한다.
    -->
    <insert id="insertAttrClassList" parameterType="sideMenuAttrClassVO">
        /* USE : SideMenuMapper.insertAttrClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_SDATTR_CLASS
                (
                    HQ_OFFICE_CD,
                    HQ_BRAND_CD,
                    SDATTR_CLASS_CD,
                    SDATTR_CLASS_NM,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{hqOfficeCd},
                    #{hqBrandCd, jdbcType=VARCHAR},
                    #{sdattrClassCd},
                    #{sdattrClassNm},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_SDATTR_CLASS
                (
                    STORE_CD,
                    MS_BRAND_CD,
                    SDATTR_CLASS_CD,
                    SDATTR_CLASS_NM,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{storeCd},
                    #{msBrandCd, jdbcType=VARCHAR},
                    #{sdattrClassCd},
                    #{sdattrClassNm},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 속성분류 수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 속성분류를 수정한다.
    -->
    <update id="updateAttrClassList" parameterType="sideMenuAttrClassVO">
        /* USE : SideMenuMapper.updateAttrClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDATTR_CLASS
                SET
                    HQ_BRAND_CD = #{hqBrandCd, jdbcType=VARCHAR},
                    SDATTR_CLASS_NM = #{sdattrClassNm},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDATTR_CLASS_CD = #{sdattrClassCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDATTR_CLASS
                SET
                    MS_BRAND_CD = #{msBrandCd, jdbcType=VARCHAR},
                    SDATTR_CLASS_NM = #{sdattrClassNm},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDATTR_CLASS_CD = #{sdattrClassCd}
            </when>
        </choose>
    </update>

    <!-- 속성분류 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 속성분류를 삭제한다.
    -->
    <update id="deleteAttrClassList" parameterType="sideMenuAttrClassVO">
        /* USE : SideMenuMapper.deleteAttrClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDATTR_CLASS
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDATTR_CLASS_CD = #{sdattrClassCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDATTR_CLASS
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDATTR_CLASS_CD = #{sdattrClassCd}
            </when>
        </choose>
    </update>

    <!--  사이드메뉴-속성탭-속성분류 생성시 매장적용  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 본사 사이드메뉴 속성의 속성분류를 매장에 생성한다.
    -->
    <select id="insertHqAttrClassListToStore" statementType="CALLABLE"  parameterType="sideMenuAttrClassVO" resultType="String">
        /* USE : SideMenuMapper.insertHqAttrClassListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDATTR_CLASS.SP_HQ_PRODUCT_SDATTR_CLASS_I
          (
            #{hqOfficeCd},
            #{sdattrClassCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!--  사이드메뉴-속성탭-속성분류 수정시 매장적용  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 본사 사이드메뉴  속성의 속성분류를 매장에 적용시킨다.
    -->
    <select id="updateHqAttrClassListToStore" statementType="CALLABLE"  parameterType="sideMenuAttrClassVO" resultType="String">
        /* USE : SideMenuMapper.updateHqAttrClassListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDATTR_CLASS.SP_HQ_PRODUCT_SDATTR_CLASS_U
          (
            #{hqOfficeCd},
            #{sdattrClassCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!--  사이드메뉴-속성탭-속성분류 삭제시 매장적용  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    : sideMenuAttrClassVO
        COMMENTS : 본사 사이드메뉴  속성의 속성분류를 매장에서 제외시킨다.
    -->
    <select id="deleteHqAttrClassListToStore" statementType="CALLABLE"  parameterType="sideMenuAttrClassVO" resultType="String">
        /* USE : SideMenuMapper.deleteHqAttrClassListToStore   */
        {
             CALL PKG_HQ_PRODUCT_SDATTR_CLASS.SP_HQ_PRODUCT_SDATTR_CLASS_D
          (
            #{hqOfficeCd},
            #{sdattrClassCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 속성 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_SDATTR
        PARAM    : sideMenuAttrCdVO
        COMMENTS : 사이드메뉴 속성목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getAttrCdList" parameterType="sideMenuAttrCdVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getAttrCdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                    thps.SDATTR_CD,
                    thps.SDATTR_NM,
                    thps.SDATTR_CLASS_CD,
                    thps.DISP_SEQ
                FROM
                    TB_HQ_PRODUCT_SDATTR thps
                WHERE
                    thps.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thps.SDATTR_CLASS_CD = #{sdattrClassCd}
                    AND thps.USE_YN = 'Y'
                ORDER BY
                    thps.DISP_SEQ
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                    tmps.SDATTR_CD,
                    tmps.SDATTR_NM,
                    tmps.SDATTR_CLASS_CD,
                    tmps.DISP_SEQ
                FROM
                    TB_MS_PRODUCT_SDATTR tmps
                WHERE
                    tmps.STORE_CD = #{storeCd}
                    AND tmps.SDATTR_CLASS_CD = #{sdattrClassCd}
                    AND tmps.USE_YN = 'Y'
                ORDER BY
                    tmps.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 속성생성 시 속성코드 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_SDATTR
        PARAM    : sideMenuAttrCdVO
        COMMENTS : 속성생성 시 속성코드를 생성한다. ( 본사/매장 )
    -->
    <select id="getAttrCode" parameterType="sideMenuAttrCdVO" resultType="String">
        <choose>
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(SDATTR_CD), '0') + 1, 10, '0')
                FROM TB_HQ_PRODUCT_SDATTR
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(SDATTR_CD), '7999999999') + 1, 10, '0')
                FROM TB_MS_PRODUCT_SDATTR
                WHERE STORE_CD = #{storeCd}
                  AND SDATTR_CD > 7999999999
            </when>
        </choose>
    </select>

    <!-- 속성 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_SDATTR
        PARAM    : sideMenuAttrCdVO
        COMMENTS : 속성을 생성한다.
    -->
    <insert id="insertAttrCdList" parameterType="sideMenuAttrCdVO">
        /* USE : SideMenuMapper.insertAttrCdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_SDATTR
                (
                    HQ_OFFICE_CD,
                    SDATTR_CD,
                    SDATTR_NM,
                    SDATTR_CLASS_CD,
                    DISP_SEQ,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{hqOfficeCd},
                    #{sdattrCd} ,
                    #{sdattrNm},
                    #{sdattrClassCd},
                    #{dispSeq},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_SDATTR
                (
                    STORE_CD,
                    SDATTR_CD,
                    SDATTR_NM,
                    SDATTR_CLASS_CD,
                    DISP_SEQ,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{storeCd},
                    #{sdattrCd} ,
                    #{sdattrNm},
                    #{sdattrClassCd},
                    #{dispSeq},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 속성 수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_SDATTR
        PARAM    : sideMenuAttrCdVO
        COMMENTS : 속성을 수정한다.
    -->
    <update id="updateAttrCdList" parameterType="sideMenuAttrCdVO">
        /* USE : SideMenuMapper.updateAttrCdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDATTR
                SET
                    SDATTR_NM = #{sdattrNm},
                    DISP_SEQ = #{dispSeq},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDATTR_CD = #{sdattrCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDATTR
                SET
                    SDATTR_NM = #{sdattrNm},
                    DISP_SEQ = #{dispSeq},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDATTR_CD = #{sdattrCd}
            </when>
        </choose>
    </update>

    <!-- 속성분류 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR, TB_MS_PRODUCT_SDATTR
        PARAM    : sideMenuAttrCdVO
        COMMENTS : 속성분류를 삭제한다.
    -->
    <update id="deleteAttrCdList" parameterType="sideMenuAttrCdVO">
        /* USE : SideMenuMapper.deleteAttrCdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDATTR
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDATTR_CD = #{sdattrCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDATTR
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDATTR_CD = #{sdattrCd}
            </when>
        </choose>
    </update>

    <!--  사이드메뉴-속성탭-속성 생성시 매장적용  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDATTR
        PARAM    : SideMenuAttrCdVO
        COMMENTS : 본사 사이드메뉴 속성분류의 속성을 매장에 생성한다.
    -->
    <select id="insertHqAttrCdListToStore" statementType="CALLABLE"  parameterType="SideMenuAttrCdVO" resultType="String">
        /* USE : SideMenuMapper.insertHqAttrCdListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDATTR.SP_HQ_PRODUCT_SDATTR_I
          (
            #{hqOfficeCd},
            #{sdattrCd},
            #{sdattrClassCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!--  사이드메뉴-속성탭-속성 수정시 매장적용  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDATTR
        PARAM    : SideMenuAttrCdVO
        COMMENTS : 본사 사이드메뉴 속성분류의 속성을 매장에 적용시킨다.
    -->
    <select id="updateHqAttrCdListToStore" statementType="CALLABLE"  parameterType="SideMenuAttrCdVO" resultType="String">
        /* USE : SideMenuMapper.updateHqAttrCdListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDATTR.SP_HQ_PRODUCT_SDATTR_U
          (
            #{hqOfficeCd},
            #{sdattrCd},
            #{sdattrClassCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!--  사이드메뉴-속성탭-속성 삭제시 매장적용  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDATTR
        PARAM    : SideMenuAttrCdVO
        COMMENTS : 본사 사이드메뉴 속성분류의 속성을 매장에서 제외시킨다.
    -->
    <select id="deleteHqAttrCdListToStore" statementType="CALLABLE"  parameterType="SideMenuAttrCdVO" resultType="String">
        /* USE : SideMenuMapper.deleteHqAttrCdListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDATTR.SP_HQ_PRODUCT_SDATTR_D
          (
            #{hqOfficeCd},
            #{sdattrCd},
            #{sdattrClassCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 선택그룹 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 사이드메뉴 선택그룹 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getMenuGrpList" parameterType="sideMenuSelGroupVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getMenuGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                    thpsg.HQ_BRAND_CD,
                    thpsg.SDSEL_GRP_CD,
                    thpsg.SDSEL_GRP_NM,
                    thpsg.PROD_CD,
                    (SELECT COUNT(*) FROM TB_HQ_PRODUCT_SDSEL_CLASS WHERE HQ_OFFICE_CD = thpsg.HQ_OFFICE_CD  AND SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD AND USE_YN  = 'Y') AS CNT,
                    NVL(thpsg.FIX_PROD_FG, '0') AS FIX_PROD_FG,
                    NVL(thpsg.SDSEL_TYPE_FG, 'C') AS SDSEL_TYPE_FG
                FROM
                    TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                WHERE
                    thpsg.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpsg.USE_YN = 'Y'
                    AND thpsg.SDSEL_TYPE_FG = #{sdselTypeFg}
                    <if test='sdselGrpCd != null and sdselGrpCd != ""'>
                        AND thpsg.SDSEL_GRP_CD LIKE '%'||#{sdselGrpCd}||'%'
                    </if>
                    <if test='sdselGrpNm != null and sdselGrpNm != ""'>
                        AND thpsg.SDSEL_GRP_NM LIKE '%'||#{sdselGrpNm}||'%'
                    </if>
                    <if test='(sdselProdCd != null and sdselProdCd != "") or (sdselProdNm != null and sdselProdNm != "")'>
                        AND thpsg.SDSEL_GRP_CD IN (
                                                        SELECT DISTINCT(thpsc.SDSEL_GRP_CD)
                                                        FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp
                                                        INNER JOIN TB_HQ_PRODUCT thp ON thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                                                        AND thpsp.PROD_CD = thp.PROD_CD
                                                        AND (
                                                                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                                                                OR
                                                                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                                                            )
                                                        INNER JOIN TB_HQ_PRODUCT_SDSEL_CLASS thpsc ON thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                                                        AND thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD
                                                        WHERE thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                                                        <if test='sdselProdCd != null and sdselProdCd != ""'>
                                                            AND thpsp.PROD_CD LIKE '%'||#{sdselProdCd}||'%'
                                                        </if>
                                                        <if test='sdselProdNm != null and sdselProdNm != ""'>
                                                            AND thp.PROD_NM LIKE '%'||#{sdselProdNm}||'%'
                                                        </if>
                                                        AND thpsp.USE_YN = 'Y'
                                                        AND thpsc.USE_YN = 'Y'
                                                 )
                    </if>
                ORDER BY
                    thpsg.SDSEL_GRP_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                    tmpsg.MS_BRAND_CD,
                    tmpsg.SDSEL_GRP_CD,
                    tmpsg.SDSEL_GRP_NM,
                    (SELECT COUNT(*) FROM TB_MS_PRODUCT_SDSEL_CLASS WHERE STORE_CD = tmpsg.STORE_CD  AND SDSEL_GRP_CD = tmpsg.SDSEL_GRP_CD AND USE_YN  = 'Y') AS CNT,
                    NVL(tmpsg.FIX_PROD_FG, '0') AS FIX_PROD_FG,
                    NVL(tmpsg.SDSEL_TYPE_FG, 'C') AS SDSEL_TYPE_FG
                FROM
                    TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                WHERE
                    tmpsg.STORE_CD = #{storeCd}
                    AND tmpsg.USE_YN = 'Y'
                    AND tmpsg.SDSEL_TYPE_FG = #{sdselTypeFg}
                    <if test='sdselGrpCd != null and sdselGrpCd != ""'>
                        AND tmpsg.SDSEL_GRP_CD LIKE '%'||#{sdselGrpCd}||'%'
                    </if>
                    <if test='sdselGrpNm != null and sdselGrpNm != ""'>
                        AND tmpsg.SDSEL_GRP_NM LIKE '%'||#{sdselGrpNm}||'%'
                    </if>
                    <if test='(sdselProdCd != null and sdselProdCd != "") or (sdselProdNm != null and sdselProdNm != "")'>
                        AND tmpsg.SDSEL_GRP_CD IN (
                                                        SELECT DISTINCT(tmpsc.SDSEL_GRP_CD)
                                                        FROM TB_MS_PRODUCT_SDSEL_PROD tmpsp
                                                        INNER JOIN TB_MS_PRODUCT tmp ON tmpsp.STORE_CD = tmp.STORE_CD
                                                        AND tmpsp.PROD_CD = tmp.PROD_CD
                                                        AND (
                                                                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                                                                OR
                                                                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                                                             )
                                                        INNER JOIN TB_MS_PRODUCT_SDSEL_CLASS tmpsc ON tmpsc.STORE_CD = tmpsp.STORE_CD
                                                        AND tmpsc.SDSEL_CLASS_CD = tmpsp.SDSEL_CLASS_CD
                                                        WHERE tmpsp.STORE_CD = #{storeCd}
                                                        <if test='sdselProdCd != null and sdselProdCd != ""'>
                                                            AND tmpsp.PROD_CD LIKE '%'||#{sdselProdCd}||'%'
                                                        </if>
                                                        <if test='sdselProdNm != null and sdselProdNm != ""'>
                                                            AND tmp.PROD_NM LIKE '%'||#{sdselProdNm}||'%'
                                                        </if>
                                                        AND tmpsp.USE_YN = 'Y'
                                                        AND tmpsc.USE_YN = 'Y'
                                                  )
                    </if>
                ORDER BY
                    tmpsg.SDSEL_GRP_CD
            </when>
        </choose>
    </select>

    <!-- 선택그룹 생성 시 그룹코드 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 선택그룹 생성 시 그룹코드를 생성한다. ( 본사/매장 )
    -->
    <select id="getMenuGrpCode" parameterType="sideMenuSelGroupVO" resultType="String">
        <choose>
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(SDSEL_GRP_CD), '0') + 1, 6, '0')
                FROM TB_HQ_PRODUCT_SDSEL_GROUP
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(SDSEL_GRP_CD), '799999') + 1, 6, '0')
                FROM TB_MS_PRODUCT_SDSEL_GROUP
                WHERE STORE_CD = #{storeCd}
                  AND SDSEL_GRP_CD > 799999
            </when>
        </choose>
    </select>

    <!-- 선택그룹 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 선택그룹을 생성한다.
    -->
    <insert id="insertMenuGrpList" parameterType="sideMenuSelGroupVO">
        /* USE : SideMenuMapper.insertMenuGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_SDSEL_GROUP
                (
                    HQ_OFFICE_CD,
                    HQ_BRAND_CD,
                    SDSEL_GRP_CD,
                    SDSEL_GRP_NM,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    FIX_PROD_FG,
                    SDSEL_TYPE_FG
                ) VALUES (
                    #{hqOfficeCd},
                    #{hqBrandCd},
                    #{sdselGrpCd},
                    #{sdselGrpNm},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{fixProdFg},
                    #{sdselTypeFg}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_SDSEL_GROUP
                (
                    STORE_CD,
                    MS_BRAND_CD,
                    SDSEL_GRP_CD,
                    SDSEL_GRP_NM,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    FIX_PROD_FG,
                    SDSEL_TYPE_FG
                ) VALUES (
                    #{storeCd},
                    #{msBrandCd},
                    #{sdselGrpCd},
                    #{sdselGrpNm},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{fixProdFg},
                    #{sdselTypeFg}
                )
            </when>
        </choose>
    </insert>

    <!-- 선택그룹 수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 선택그룹을 수정한다.
    -->
    <update id="updateMenuGrpList" parameterType="sideMenuSelGroupVO">
        /* USE : SideMenuMapper.updateMenuGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDSEL_GROUP
                SET
                    SDSEL_GRP_NM = #{sdselGrpNm},
                    HQ_BRAND_CD = #{hqBrandCd},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    FIX_PROD_FG = #{fixProdFg},
                    SDSEL_TYPE_FG = #{sdselTypeFg}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDSEL_GROUP
                SET
                    SDSEL_GRP_NM = #{sdselGrpNm},
                    MS_BRAND_CD = #{msBrandCd},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    FIX_PROD_FG = #{fixProdFg},
                    SDSEL_TYPE_FG = #{sdselTypeFg}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
        </choose>
    </update>

    <!-- 선택그룹 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 선택그룹을 삭제한다.
    -->
    <update id="deleteMenuGrpList" parameterType="sideMenuSelGroupVO">
        /* USE : SideMenuMapper.deleteMenuGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDSEL_GROUP
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDSEL_GROUP
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
        </choose>
    </update>

    <!-- 사이드메뉴-선택메뉴탭-선택그룹 생성시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 본사 사이드메뉴 선택그룹을 매장에 적용시킨다.
    -->
    <select id="insertHqMenuGrpListToStore" statementType="CALLABLE"  parameterType="sideMenuSelGroupVO" resultType="String">
        /* USE : SideMenuMapper.insertHqMenuGrpListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_GROUP.SP_HQ_PRODUCT_SDSEL_GROUP_I
          (
            #{hqOfficeCd},
            #{sdselGrpCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 사이드메뉴-선택메뉴탭-선택그룹 수정시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 본사 사이드메뉴 선택그룹을 매장에 적용시킨다.
    -->
    <select id="updateHqMenuGrpListToStore" statementType="CALLABLE"  parameterType="sideMenuSelGroupVO" resultType="String">
        /* USE : SideMenuMapper.updateHqMenuGrpListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_GROUP.SP_HQ_PRODUCT_SDSEL_GROUP_U
          (
            #{hqOfficeCd},
            #{sdselGrpCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 사이드메뉴-선택메뉴탭-선택그룹 삭제시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    : sideMenuSelGroupVO
        COMMENTS : 본사 사이드메뉴 선택상품을 매장에서 제외시킨다.
    -->
    <select id="deleteHqMenuGrpListToStore" statementType="CALLABLE"  parameterType="sideMenuSelGroupVO" resultType="String">
        /* USE : SideMenuMapper.deleteHqMenuGrpListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_GROUP.SP_HQ_PRODUCT_SDSEL_GROUP_D
          (
            #{hqOfficeCd},
            #{sdselGrpCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 선택분류 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 사이드메뉴 선택분류 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getMenuClassList" parameterType="sideMenuSelClassVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getMenuClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                    thpsc.SDSEL_CLASS_CD,
                    thpsc.SDSEL_CLASS_NM,
                    thpsc.SDSEL_GRP_CD,
                    thpsc.DISP_SEQ,
                    thpsc.SDSEL_QTY,
                    (SELECT COUNT(*) FROM TB_HQ_PRODUCT_SDSEL_PROD WHERE HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD AND SDSEL_CLASS_CD = thpsc.SDSEL_CLASS_CD AND USE_YN = 'Y') AS CNT,
                    (SELECT SUM(ADD_PROD_QTY) FROM TB_HQ_PRODUCT_SDSEL_PROD WHERE HQ_OFFICE_CD = thpsc.HQ_OFFICE_CD AND SDSEL_CLASS_CD = thpsc.SDSEL_CLASS_CD AND USE_YN = 'Y' AND FIX_PROD_FG = '1') AS FIX_PROD_CNT,
                    NVL(thpsc.REQUIRE_YN, 'N') AS REQUIRE_YN,
                    NVL(thpsc.REG_STORE_FG, '0') AS REG_STORE_FG
                FROM
                    TB_HQ_PRODUCT_SDSEL_CLASS thpsc
                WHERE
                    thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpsc.SDSEL_GRP_CD = #{sdselGrpCd}
                    AND thpsc.USE_YN = 'Y'
                ORDER BY
                    thpsc.DISP_SEQ
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                    tmpsc.SDSEL_CLASS_CD,
                    tmpsc.SDSEL_CLASS_NM,
                    tmpsc.SDSEL_GRP_CD,
                    tmpsc.DISP_SEQ,
                    tmpsc.SDSEL_QTY,
                    (SELECT COUNT(*) FROM TB_MS_PRODUCT_SDSEL_PROD WHERE STORE_CD = tmpsc.STORE_CD AND SDSEL_CLASS_CD = tmpsc.SDSEL_CLASS_CD AND USE_YN = 'Y') AS CNT,
                    (SELECT SUM(ADD_PROD_QTY) FROM TB_MS_PRODUCT_SDSEL_PROD WHERE STORE_CD = tmpsc.STORE_CD AND SDSEL_CLASS_CD = tmpsc.SDSEL_CLASS_CD AND USE_YN = 'Y' AND FIX_PROD_FG = '1') AS FIX_PROD_CNT,
                    NVL(tmpsc.REQUIRE_YN, 'N') AS REQUIRE_YN
                FROM
                    TB_MS_PRODUCT_SDSEL_CLASS tmpsc
                WHERE
                    tmpsc.STORE_CD = #{storeCd}
                    AND tmpsc.SDSEL_GRP_CD = #{sdselGrpCd}
                    AND tmpsc.USE_YN = 'Y'
                ORDER BY
                    tmpsc.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 선택분류 생성 시 분류코드 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 선택분류 생성 시 분류코드를 생성한다. ( 본사/매장 )
    -->
    <select id="getMenuClassCode" parameterType="sideMenuSelClassVO" resultType="String">
        <choose>
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(SDSEL_CLASS_CD), '0') + 1, 6, '0')
                FROM TB_HQ_PRODUCT_SDSEL_CLASS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(SDSEL_CLASS_CD), '799999') + 1, 6, '0')
                FROM TB_MS_PRODUCT_SDSEL_CLASS
                WHERE STORE_CD = #{storeCd}
                  AND SDSEL_CLASS_CD > 799999
            </when>
        </choose>
    </select>

    <!-- 선택분류 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 선택분류를 생성한다.
    -->
    <insert id="insertMenuClassList" parameterType="sideMenuSelClassVO">
        /* USE : SideMenuMapper.insertMenuClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_SDSEL_CLASS
                (
                    HQ_OFFICE_CD,
                    SDSEL_CLASS_CD,
                    SDSEL_CLASS_NM,
                    SDSEL_GRP_CD,
                    DISP_SEQ,
                    SDSEL_QTY,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    REQUIRE_YN,
                    REG_STORE_FG
                ) VALUES (
                    #{hqOfficeCd},
                    #{sdselClassCd},
                    #{sdselClassNm},
                    #{sdselGrpCd},
                    #{dispSeq},
                    #{sdselQty},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{requireYn},
                    #{regStoreFg}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_SDSEL_CLASS
                (
                    STORE_CD,
                    SDSEL_CLASS_CD,
                    SDSEL_CLASS_NM,
                    SDSEL_GRP_CD,
                    DISP_SEQ,
                    SDSEL_QTY,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    REQUIRE_YN
                ) VALUES (
                    #{storeCd},
                    #{sdselClassCd},
                    #{sdselClassNm},
                    #{sdselGrpCd},
                    #{dispSeq},
                    #{sdselQty},
                    'Y',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{requireYn}
                )
            </when>
        </choose>
    </insert>

    <!-- 선택분류 수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 선택분류를 수정한다.
    -->
    <update id="updateMenuClassList" parameterType="sideMenuSelClassVO">
        /* USE : SideMenuMapper.updateMenuClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDSEL_CLASS
                SET
                    SDSEL_CLASS_NM = #{sdselClassNm},
                    DISP_SEQ = #{dispSeq},
                    SDSEL_QTY = #{sdselQty},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    REQUIRE_YN = #{requireYn},
                    REG_STORE_FG = #{regStoreFg}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDSEL_CLASS
                SET
                    SDSEL_CLASS_NM = #{sdselClassNm},
                    DISP_SEQ = #{dispSeq},
                    SDSEL_QTY = #{sdselQty},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    REQUIRE_YN = #{requireYn}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
        </choose>
    </update>

    <!-- 선택분류 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 선택분류를 삭제한다.
    -->
    <update id="deleteMenuClassList" parameterType="sideMenuSelClassVO">
        /* USE : SideMenuMapper.deleteMenuClassList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDSEL_CLASS
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDSEL_CLASS
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND SDSEL_GRP_CD = #{sdselGrpCd}
            </when>
        </choose>
    </update>

    <!-- 사이드메뉴-선택메뉴탭-선택분류 생성시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 본사 사이드메뉴 속성분류를 매장에 생성한다.
    -->
    <select id="insertHqMenuClassListToStore" statementType="CALLABLE"  parameterType="sideMenuSelClassVO" resultType="String">
        /* USE : SideMenuMapper.insertHqMenuClassListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDSEL_CLASS.SP_HQ_PRODUCT_SDSEL_CLASS_I
          (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{sdselGrpCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 사이드메뉴-선택메뉴탭-선택분류 수정시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 본사 사이드메뉴 속성분류를 매장에 적용시킨다.
    -->
    <select id="saveHqMenuClassListToStore" statementType="CALLABLE"  parameterType="sideMenuSelClassVO" resultType="String">
        /* USE : SideMenuMapper.saveHqMenuClassListToStore   */
        {
            CALL PKG_HQ_PRODUCT_SDSEL_CLASS.SP_HQ_PRODUCT_SDSEL_CLASS_U
          (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{sdselGrpCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 사이드메뉴-선택메뉴탭-선택분류 삭제시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 본사 사이드메뉴 속성분류를 매장에서 제외시킨다.
    -->
    <select id="deleteHqMenuClassListToStore" statementType="CALLABLE"  parameterType="sideMenuSelClassVO" resultType="String">
        /* USE : SideMenuMapper.deleteHqMenuClassListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_CLASS.SP_HQ_PRODUCT_SDSEL_CLASS_D
          (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{sdselGrpCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 선택할 상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 사이드메뉴 선택상품 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getProdList" parameterType="sideMenuSelProdVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                    thp.HQ_OFFICE_CD,
                    thp.PROD_CD,
                    thp.PROD_NM,
                    thp.PROD_CLASS_CD,
                    ( SELECT SF_GET_PROD_CLASSES('H', thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                    thp.ORGPLCE_CD, -- TODO 원산지명 조회 필요
                    thp.PO_UNIT_FG
                    <include refid="CmmSQL.PagingTemplateCount"/>
                FROM
                    TB_HQ_PRODUCT thp
                WHERE
                    thp.HQ_OFFICE_CD = #{hqOfficeCd}
                    <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD = #{prodCd} --상품코드
                    </if>
                    <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                    </if>
                    AND thp.USE_YN = 'Y'
                    <!-- AND thp.SIDE_PROD_YN = 'N' -->
                    AND thp.PROD_CD NOT IN (
                                            SELECT prod_cd
                                              FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp
                                             WHERE thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                                               AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                                               AND thpsp.USE_YN = 'Y'
                                            )
                    AND FN_GET_SDSEL_TYPE_FG(#{hqOfficeCd}, thp.SDSEL_GRP_CD) = 'S'
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                <if test='prodClassCd != null and prodClassCd != ""'>
                    AND thp.PROD_CLASS_CD IN (
                                                    SELECT  PROD_CLASS_CD
                                                      FROM  TB_HQ_PRODUCT_CLASS
                                                     WHERE  HQ_OFFICE_CD = #{hqOfficeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY
                    thp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                    tmp.STORE_CD,
                    tmp.PROD_CD,
                    tmp.PROD_NM,
                    tmp.PROD_CLASS_CD,
                    ( SELECT SF_GET_PROD_CLASSES('S', tmp.STORE_CD, tmp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                    tmp.ORGPLCE_CD, -- TODO 원산지명 조회 필요
                    tmp.PO_UNIT_FG,
                    tmp.REG_DT
                    <include refid="CmmSQL.PagingTemplateCount"/>
                FROM
                    TB_MS_PRODUCT tmp
                WHERE
                    tmp.STORE_CD = #{storeCd}
                    <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD = #{prodCd} --상품코드
                    </if>
                    <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                    </if>
                    <if test="sideEnvstVal != null and sideEnvstVal != ''">
                        AND tmp.REG_FG = 'H' --사이드메뉴생성구분이 세트상품만생성(BBQ)이면 본사에서 등록한 상품만 조회
                    </if>
                    AND tmp.USE_YN = 'Y'
                    <!-- AND tmp.SIDE_PROD_YN = 'N' -->
                    AND tmp.PROD_CD NOT IN (
                                            SELECT prod_cd
                                            FROM TB_MS_PRODUCT_SDSEL_PROD tmpsp
                                            WHERE tmpsp.STORE_CD = #{storeCd}
                                            AND tmpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                                            AND tmpsp.USE_YN = 'Y'
                                            )
                    AND FN_GET_SDSEL_TYPE_FG(#{storeCd}, tmp.SDSEL_GRP_CD) = 'S'
                    AND (
                            ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                            OR
                            ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                        )
                <if test='prodClassCd != null and prodClassCd != ""'>
                    AND tmp.PROD_CLASS_CD IN (
                                                    SELECT PROD_CLASS_CD
                                                      FROM TB_MS_PRODUCT_CLASS
                                                     WHERE STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                               CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                ORDER BY
                    tmp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 선택상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 사이드메뉴 선택상품 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getMenuProdList" parameterType="sideMenuSelProdVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getMenuProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                    thpsc.SDSEL_GRP_CD,
                    thpsp.SDSEL_CLASS_CD,
                    thpsp.PROD_CD,
                    thp.PROD_NM,
                    thpsp.ADD_PROD_UPRC,
                    thpsp.ADD_PROD_QTY,
                    thpsp.DISP_SEQ,
                    NVL(thpsp.FIX_PROD_FG, '0') AS FIX_PROD_FG,
                    NVL(thpsp.REG_STORE_FG, '0') AS REG_STORE_FG,
                    NVL(thpsp.PRINT_YN, 'Y') AS PRINT_YN
                FROM
                    TB_HQ_PRODUCT_SDSEL_PROD thpsp
                LEFT OUTER JOIN TB_HQ_PRODUCT thp ON
                    thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND thpsp.PROD_CD = thp.PROD_CD
                    AND (
                            ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                            OR
                            ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                        )
                INNER JOIN TB_HQ_PRODUCT_SDSEL_CLASS thpsc ON
                    thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                    AND thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD
              WHERE
                    thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                    AND thpsp.USE_YN = 'Y'
                ORDER BY
                    thpsp.DISP_SEQ
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                    tmpsc.SDSEL_GRP_CD,
                    tmpsp.SDSEL_CLASS_CD,
                    tmpsp.PROD_CD,
                    tmp.PROD_NM,
                    tmpsp.ADD_PROD_UPRC,
                    tmpsp.ADD_PROD_QTY,
                    tmpsp.DISP_SEQ,
                    NVL(tmpsp.FIX_PROD_FG, '0') AS FIX_PROD_FG,
                    NVL(tmpsp.PRINT_YN, 'Y') AS PRINT_YN
                FROM
                    TB_MS_PRODUCT_SDSEL_PROD tmpsp
                LEFT OUTER JOIN TB_MS_PRODUCT tmp ON
                    tmpsp.STORE_CD = tmp.STORE_CD
                    AND tmpsp.PROD_CD = tmp.PROD_CD
                    AND (
                            ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                            OR
                            ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                        )
                INNER JOIN TB_MS_PRODUCT_SDSEL_CLASS tmpsc ON
                    tmpsc.STORE_CD = tmpsp.STORE_CD
                    AND tmpsc.SDSEL_CLASS_CD = tmpsp.SDSEL_CLASS_CD
                WHERE
                    tmpsp.STORE_CD = #{storeCd}
                    AND tmpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                    AND tmpsp.USE_YN = 'Y'
                ORDER BY
                    tmpsp.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 선택상품 생성 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 선택상품을 생성한다.
    -->
    <insert id="insertMenuProdList" parameterType="sideMenuSelProdVO">
        /* USE : SideMenuMapper.insertMenuProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_SDSEL_PROD thpsp
                USING DUAL
                    ON (
                            thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                            AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                            AND thpsp.PROD_CD = #{prodCd}
                        )
                WHEN MATCHED THEN
                    UPDATE
                    SET thpsp.USE_YN = 'Y',
                        thpsp.DISP_SEQ = #{dispSeq},
                        thpsp.MOD_DT = #{modDt},
                        thpsp.MOD_ID = #{modId},
                        thpsp.REG_STORE_FG = #{regStoreFg},
                        thpsp.PRINT_YN = #{printYn}
                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        HQ_OFFICE_CD,
                        SDSEL_CLASS_CD,
                        PROD_CD,
                        ADD_PROD_UPRC,
                        ADD_PROD_QTY,
                        DISP_SEQ,
                        USE_YN,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID,
                        FIX_PROD_FG,
                        REG_STORE_FG,
                        PRINT_YN
                    ) VALUES (
                        #{hqOfficeCd},
                        #{sdselClassCd},
                        #{prodCd},
                        #{addProdUprc},
                        #{addProdQty},
                        #{dispSeq},
                        'Y',
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        #{fixProdFg},
                        #{regStoreFg},
                        #{printYn}
                    )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_SDSEL_PROD tmpsp
                USING DUAL
                    ON (
                            tmpsp.STORE_CD = #{storeCd}
                            AND tmpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                            AND tmpsp.PROD_CD = #{prodCd}
                        )
                WHEN MATCHED THEN
                    UPDATE
                    SET tmpsp.USE_YN = 'Y',
                        tmpsp.DISP_SEQ = #{dispSeq},
                        tmpsp.MOD_DT = #{modDt},
                        tmpsp.MOD_ID = #{modId},
                        tmpsp.PRINT_YN = #{printYn}
                WHEN NOT MATCHED THEN
                    INSERT
                    (
                        STORE_CD,
                        SDSEL_CLASS_CD,
                        PROD_CD,
                        ADD_PROD_UPRC,
                        ADD_PROD_QTY,
                        DISP_SEQ,
                        USE_YN,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID,
                        FIX_PROD_FG,
                        PRINT_YN
                    ) VALUES (
                        #{storeCd},
                        #{sdselClassCd},
                        #{prodCd},
                        #{addProdUprc},
                        #{addProdQty},
                        #{dispSeq},
                        'Y',
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        #{fixProdFg},
                        #{printYn}
                    )
            </when>
        </choose>
    </insert>

    <!-- 선택상품 수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 선택상품을 수정한다.
    -->
    <update id="updateMenuProdList" parameterType="sideMenuSelProdVO">
        /* USE : SideMenuMapper.updateMenuProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDSEL_PROD
                SET
                    ADD_PROD_UPRC = #{addProdUprc},
                    ADD_PROD_QTY = #{addProdQty},
                    DISP_SEQ = #{dispSeq},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    FIX_PROD_FG = #{fixProdFg},
                    REG_STORE_FG = #{regStoreFg},
                    PRINT_YN = #{printYn}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDSEL_PROD
                SET
                    ADD_PROD_UPRC = #{addProdUprc},
                    ADD_PROD_QTY = #{addProdQty},
                    DISP_SEQ = #{dispSeq},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    FIX_PROD_FG = #{fixProdFg},
                    PRINT_YN = #{printYn}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </update>

    <!-- 선택상품 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 선택상품을 삭제한다.
    -->
    <update id="deleteMenuProdList" parameterType="sideMenuSelProdVO">
        /* USE : SideMenuMapper.deleteMenuProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_SDSEL_PROD
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    HQ_OFFICE_CD = #{hqOfficeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_SDSEL_PROD
                SET
                    USE_YN = 'N',
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                WHERE
                    STORE_CD = #{storeCd}
                    AND SDSEL_CLASS_CD = #{sdselClassCd}
                    AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </update>

    <!-- 사이드메뉴-선택메뉴탭-선택상품 생성시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 본사 사이드메뉴 선택상품을 매장에 생성한다.
    -->
    <select id="insertHqMenuProdListToStore" statementType="CALLABLE"  parameterType="sideMenuSelProdVO" resultType="String">
        /* USE : SideMenuMapper.insertHqMenuProdListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_PROD.SP_HQ_PRODUCT_SDSEL_PROD_I
          (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{prodCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 사이드메뉴-선택메뉴탭-선택상품 수정시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 본사 사이드메뉴 선택상품을 매장에 적용시킨다.
    -->
    <select id="saveHqMenuProdListToStore" statementType="CALLABLE"  parameterType="sideMenuSelProdVO" resultType="String">
        /* USE : SideMenuMapper.saveHqMenuProdListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_PROD.SP_HQ_PRODUCT_SDSEL_PROD_U
          (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{prodCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 사이드메뉴-선택메뉴탭-선택상품 삭제시 매장적용 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelProdVO
        COMMENTS : 본사 사이드메뉴 선택상품을 매장에서 제외시킨다.
    -->
    <select id="deleteHqMenuProdListToStore" statementType="CALLABLE"  parameterType="sideMenuSelProdVO" resultType="String">
        /* USE : SideMenuMapper.deleteHqMenuProdListToStore */
        {
          CALL PKG_HQ_PRODUCT_SDSEL_PROD.SP_HQ_PRODUCT_SDSEL_PROD_D
          (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{prodCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>


    <!-- 선택분류에 등록된 선택상품 개수 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : sideMenuSelClassVO
        COMMENTS : 선택분류에 등록된 선택상품 개수 조회한다. ( 본사/매장 )
    -->
    <select id="getSideMenuSelClassProdCnt" parameterType="sideMenuSelClassVO" resultType="Integer">
      /* USE : SideMenuMapper.getSideMenuSelClassProdCnt */
      <choose>
        <!-- 본사 -->
        <when test='orgnFg != null and orgnFg == "H"'>
          SELECT COUNT(PROD_CD) AS PROD_CNT
            FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp
           WHERE thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
             AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd}
             AND thpsp.USE_YN = 'Y'
        </when>
        <!-- 매장 -->
        <when test='orgnFg != null and orgnFg == "S"'>
          SELECT COUNT(PROD_CD) AS PROD_CNT
            FROM TB_MS_PRODUCT_SDSEL_PROD tmpsp
           WHERE tmpsp.STORE_CD = #{storeCd}
           AND tmpsp.SDSEL_CLASS_CD = #{sdselClassCd}
           AND tmpsp.USE_YN = 'Y'
        </when>
      </choose>
    </select>

    <!-- 선택그룹에 등록된 선택분류 개수 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
        PARAM    : sideMenuSelClassVO
        COMMENTS : 선택분류에 등록된 선택상품 개수 조회한다. ( 본사/매장 )
    -->
    <select id="getSideMenuSelGrpClassCnt" parameterType="sideMenuSelClassVO" resultType="Integer">
      /* USE : SideMenuMapper.getSideMenuSelGrpClassCnt */
      <choose>
        <!-- 본사 -->
        <when test='orgnFg != null and orgnFg == "H"'>
          SELECT COUNT(SDSEL_CLASS_CD) AS CLASS_CNT
            FROM TB_HQ_PRODUCT_SDSEL_CLASS thpsc
           WHERE thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
             AND thpsc.SDSEL_GRP_CD = #{sdselGrpCd}
             AND thpsc.USE_YN = 'Y'
        </when>
        <!-- 매장 -->
        <when test='orgnFg != null and orgnFg == "S"'>
          SELECT COUNT(SDSEL_CLASS_CD) AS CLASS_CNT
            FROM TB_MS_PRODUCT_SDSEL_CLASS tmpsc
           WHERE tmpsc.STORE_CD = #{storeCd}
             AND tmpsc.SDSEL_GRP_CD = #{sdselClassCd}
            AND tmpsc.USE_YN = 'Y'
        </when>
      </choose>
    </select>

    <!-- 사이드메뉴-사이드메뉴관리탭 상품 목록 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_CLASS, TB_HQ_PRODUCT_BARCD,TB_HQ_PRODUCT_SDATTR_CLASS,TB_HQ_PRODUCT_SDSEL_GROUP
                   TB_MS_PRODUCT, TB_MS_PRODUCT_CLASS, TB_MS_PRODUCT_BARCD,TB_MS_PRODUCT_SDATTR_CLASS,TB_MS_PRODUCT_SDSEL_GROUP
        COMMENTS : [본사]상품, [본사]상품_분류, [본사]상품_바코드, [본사]속성, [본사]선택그룹
                   [매장]상품, [매장]상품_분류, [매장]상품_바코드, [매장]속성, [매장]선택그룹
    -->
    <select id="getSideMenuManageProdList"  parameterType="sideMenuManageVO" resultType="DefaultMap">
        /* SideMenuMapper.getSideMenuManageProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT thp.PROD_CD,
                        thp.PROD_NM,
                        FN_GET_PROD_CLASS_CD_NM_STR(thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM,
                        thp.PROD_CLASS_CD,
                        thp.HQ_BRAND_CD,
                        thb.HQ_BRAND_NM,
                        thp.SALE_PROD_YN,
                        thp.ORGPLCE_CD,
                        thp.STOCK_PROD_YN,
                        thp.VAT_FG,
                        thp.SIDE_PROD_YN,
                        thp.SDATTR_CLASS_CD,
                        thpsc.SDATTR_CLASS_NM,
                        thp.SDSEL_GRP_CD,
                        thpsg.SDSEL_GRP_NM,
                        thp.USE_YN,
                        thp.PO_PROD_FG,
                        thp.PROD_TIP_YN
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_HQ_PRODUCT thp,
                        TB_HQ_PRODUCT_CLASS thpc,
                        TB_HQ_BRAND thb,
                        TB_HQ_PRODUCT_SDATTR_CLASS thpsc,
                        TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                 WHERE 1=1
                   AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_HQ_PRODUCT_CLASS
                                                 WHERE 1=1
                                                   AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    )
                </if>
                <if test="hqBrandCd != null and hqBrandCd != ''">
                    AND thp.HQ_BRAND_CD = #{hqBrandCd}
                </if>
                <if test="sideProdYn != null and sideProdYn != ''">
                    AND thp.SIDE_PROD_YN = #{sideProdYn}
                </if>
                <if test='sdattrClassNone != null and sdattrClassNone == "Y"'>
                    AND thp.SDATTR_CLASS_CD IS NULL
                </if>
                <if test='sdSelGrpNone != null and sdSelGrpNone == "Y"'>
                    AND thp.SDSEL_GRP_CD IS NULL
                </if>
                <if test="sdattrClassCd != null and sdattrClassCd != ''">
                    AND thp.SDATTR_CLASS_CD = #{sdattrClassCd}
                </if>
                <if test="sdselGrpCd != null and sdselGrpCd != ''">
                    AND thp.SDSEL_GRP_CD = #{sdselGrpCd}
                </if>
                    AND thpc.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND thpc.PROD_CLASS_CD = thp.PROD_CLASS_CD
                    AND thb.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                    AND thb.HQ_BRAND_CD (+)= thp.HQ_BRAND_CD
                    AND thpsc.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                    AND thpsc.SDATTR_CLASS_CD (+)= thp.SDATTR_CLASS_CD
                    AND thpsg.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                    AND thpsg.SDSEL_GRP_CD (+)= thp.SDSEL_GRP_CD
                  ORDER
                     BY thp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD,
                        tmp.PROD_NM,
                        FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM,
                        tmp.PROD_CLASS_CD,
                        tmp.HQ_BRAND_CD,
                        tmb.MS_BRAND_NM,
                        tmp.SALE_PROD_YN,
                        tmp.ORGPLCE_CD,
                        tmp.STOCK_PROD_YN,
                        tmp.VAT_FG,
                        tmp.SIDE_PROD_YN,
                        tmp.SDATTR_CLASS_CD,
                        tmpsc.SDATTR_CLASS_NM,
                        tmp.SDSEL_GRP_CD,
                        tmpsg.SDSEL_GRP_NM,
                        tmp.USE_YN,
                        tmp.PO_PROD_FG,
                        tmp.PROD_TIP_YN,
                        tmp.REG_FG
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_MS_PRODUCT tmp,
                        TB_MS_PRODUCT_CLASS tmpc,
                        TB_MS_BRAND tmb,
                        TB_MS_PRODUCT_SDATTR_CLASS tmpsc,
                        TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                  WHERE 1=1
                    AND tmp.STORE_CD = #{storeCd}
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_MS_PRODUCT_CLASS
                                                 WHERE 1=1
                                                   AND STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test="hqBrandCd != null and hqBrandCd != ''">
                    AND tmp.HQ_BRAND_CD = #{hqBrandCd}
                </if>
                <if test="sideProdYn != null and sideProdYn != ''">
                    AND tmp.SIDE_PROD_YN = #{sideProdYn}
                </if>
                <if test='sdattrClassNone != null and sdattrClassNone == "Y"'>
                    AND tmp.SDATTR_CLASS_CD IS NULL
                </if>
                <if test='sdSelGrpNone != null and sdSelGrpNone == "Y"'>
                    AND tmp.SDSEL_GRP_CD IS NULL
                </if>
                <if test="sdattrClassCd != null and sdattrClassCd != ''">
                    AND tmp.SDATTR_CLASS_CD = #{sdattrClassCd}
                </if>
                <if test="sdselGrpCd != null and sdselGrpCd != ''">
                    AND tmp.SDSEL_GRP_CD = #{sdselGrpCd}
                </if>
                    AND tmpc.STORE_CD = tmp.STORE_CD
                    AND tmpc.PROD_CLASS_CD = tmp.PROD_CLASS_CD
                    AND tmb.STORE_CD (+)= tmp.STORE_CD
                    AND tmb.MS_BRAND_CD (+)= tmp.HQ_BRAND_CD
                    AND tmpsc.STORE_CD (+)= tmp.STORE_CD
                    AND tmpsc.SDATTR_CLASS_CD (+)= tmp.SDATTR_CLASS_CD
                    AND tmpsg.STORE_CD (+)= tmp.STORE_CD
                    AND tmpsg.SDSEL_GRP_CD (+)= tmp.SDSEL_GRP_CD
                 ORDER
                     BY tmp.PROD_CD
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 사이드메뉴-사이드메뉴관리탭 상품정보일괄변경 저장(사이드메뉴여부, 속성, 선택메뉴) -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        COMMENTS : [본사]상품, [매장]상품
    -->
    <update id="saveSideMenuManageProdBatch" parameterType="sideMenuManageVO">
        /* SideMenuMapper.saveSideMenuManageProdBatch */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT
                   SET SIDE_PROD_YN = #{sideProdYn},
                        SDATTR_CLASS_CD = #{sdattrClassCd},
                        SDSEL_GRP_CD = #{sdselGrpCd},
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
                 WHERE 1=1
                   AND HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT
                   SET SIDE_PROD_YN = #{sideProdYn},
                        SDATTR_CLASS_CD = #{sdattrClassCd},
                        SDSEL_GRP_CD = #{sdselGrpCd},
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
                 WHERE 1=1
                   AND STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </update>

    <!-- 사이드메뉴-사이드메뉴관리탭 상품정보일괄변경 저장 매장에 update(사이드메뉴여부, 속성, 선택메뉴) -->
    <!--
        TABLE    : TB_MS_PRODUCT
        COMMENTS : [매장]상품
    -->
    <update id="saveSideMenuManageProdBatchStoreUpdate" parameterType="sideMenuManageVO">
        /* SideMenuMapper.saveSideMenuManageProdBatchStoreUpdate */
            UPDATE TB_MS_PRODUCT
               SET SIDE_PROD_YN = #{sideProdYn},
                    SDATTR_CLASS_CD = #{sdattrClassCd},
                    SDSEL_GRP_CD = #{sdselGrpCd},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
             WHERE 1=1
               AND STORE_CD IN (
                                  SELECT STORE_CD
                                    FROM TB_MS_STORE tms
                                   WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
                            )
               AND PROD_CD = #{prodCd}
    </update>

    <!-- 사이드메뉴-사이드메뉴관리탭 속성 콤보박스 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDATTR_CLASS, TB_MS_PRODUCT_SDATTR_CLASS
        PARAM    :
        COMMENTS : 사이드메뉴-사이드메뉴관리탭 속성 콤보박스 조회
    -->
    <select id="getSideMenuAttrClassCombo" parameterType="sideMenuManageVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getSideMenuAttrClassCombo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT '' AS VALUE,
                        '전체' AS NAME
                  FROM DUAL
                 UNION
                SELECT thpsc.SDATTR_CLASS_CD AS VALUE,
                        thpsc.SDATTR_CLASS_NM AS NAME
                  FROM TB_HQ_PRODUCT_SDATTR_CLASS thpsc
                 WHERE thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
                   AND thpsc.USE_YN = 'Y'
                ORDER
                  BY VALUE NULLS FIRST, VALUE ASC
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT '' AS VALUE,
                        '전체' AS NAME
                  FROM DUAL
                 UNION
                SELECT tmpsc.SDATTR_CLASS_CD AS VALUE,
                        tmpsc.SDATTR_CLASS_NM AS NAME
                  FROM TB_MS_PRODUCT_SDATTR_CLASS tmpsc
                 WHERE tmpsc.STORE_CD = #{storeCd}
                   AND tmpsc.USE_YN = 'Y'
                 ORDER
                    BY VALUE NULLS FIRST, VALUE ASC
            </when>
        </choose>
    </select>

    <!-- 사이드메뉴-사이드메뉴관리탭 선택메뉴 콤보박스  -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    :
        COMMENTS : 사이드메뉴-사이드메뉴관리탭 선택메뉴 콤보박스 조회
    -->
    <select id="getSideMenuSdselGrpCdCombo" parameterType="sideMenuManageVO" resultType="DefaultMap">
        /* USE : SideMenuMapper.getSideMenuSdselGrpCdCombo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT '' AS VALUE,
                        '전체' AS NAME
                  FROM DUAL
                 UNION
                SELECT thpsg.SDSEL_GRP_CD AS VALUE,
                        thpsg.SDSEL_GRP_NM AS NAME
                  FROM TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                 WHERE thpsg.HQ_OFFICE_CD = #{hqOfficeCd}
                   AND thpsg.USE_YN = 'Y'
                 ORDER
                    BY VALUE NULLS FIRST, VALUE ASC
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT '' AS VALUE,
                        '전체' AS NAME
                  FROM DUAL
                 UNION
                SELECT tmpsg.SDSEL_GRP_CD AS VALUE,
                        tmpsg.SDSEL_GRP_NM AS NAME
                  FROM TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                 WHERE tmpsg.STORE_CD = #{storeCd}
                   AND tmpsg.USE_YN = 'Y'
                 ORDER
                    BY VALUE NULLS FIRST, VALUE ASC
            </when>
        </choose>
    </select>


    <!-- 선택분류 생성시 표기순번 자동채번 -->
    <!--
        TABLE    :
        PARAM    :
        COMMENTS :
    -->
    <select id="getDispSeqCode" parameterType="sideMenuSelClassVO" resultType="String">
        /* SideMenuMapper.getDispSeqCode */
        <choose>
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL(MAX(DISP_SEQ), '0') + 1
                FROM TB_HQ_PRODUCT_SDSEL_CLASS
                WHERE 1=1
                AND HQ_OFFICE_CD = #{hqOfficeCd}
                AND SDSEL_GRP_CD = #{applySdselGrpCd}
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL(MAX(DISP_SEQ), '0') + 1
                FROM TB_MS_PRODUCT_SDSEL_CLASS
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND SDSEL_GRP_CD = #{applySdselGrpCd}
            </when>
        </choose>
    </select>

    <!-- 사이드메뉴-선택메뉴 탭-선택분류복사 팝업 - 선택분류 복사 insert -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getSdselClassCopySaveInsertClass" parameterType="sideMenuSelClassVO">
        /* SideMenuMapper.getSdselClassCopySaveInsertClass */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_SDSEL_CLASS
                (
                    HQ_OFFICE_CD,
                    SDSEL_CLASS_CD,
                    SDSEL_CLASS_NM,
                    SDSEL_GRP_CD,
                    SDSEL_QTY,
                    DISP_SEQ,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    MAP_CLASS_CD,
                    RCVKIND,
                    REQUIRE_YN
                )
                SELECT
                A.HQ_OFFICE_CD,
                #{applySdselClassCd} AS SDSEL_CLASS_CD,
                A.SDSEL_CLASS_NM,
                #{applySdselGrpCd} AS SDSEL_GRP_CD,
                A.SDSEL_QTY,
                #{applyDispSeq} AS DISP_SEQ,
                A.USE_YN,
                #{regDt} AS REG_DT,
                #{regId} AS REG_ID,
                #{modDt} AS MOD_DT,
                #{modId} AS MOD_ID,
                A.MAP_CLASS_CD,
                A.RCVKIND,
                A.REQUIRE_YN
                FROM TB_HQ_PRODUCT_SDSEL_CLASS A
                WHERE 1=1
                AND A.HQ_OFFICE_CD = #{hqOfficeCd}
                AND A.SDSEL_GRP_CD = #{copySdselGrpCd}
                AND A.SDSEL_CLASS_CD = #{copySdselClassCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_SDSEL_CLASS
                (
                    STORE_CD,
                    SDSEL_CLASS_CD,
                    SDSEL_CLASS_NM,
                    SDSEL_GRP_CD,
                    SDSEL_QTY,
                    DISP_SEQ,
                    USE_YN,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    MAP_CLASS_CD,
                    RCVKIND,
                    REQUIRE_YN
                )
                SELECT
                A.STORE_CD,
                #{applySdselClassCd} AS SDSEL_CLASS_CD,
                A.SDSEL_CLASS_NM,
                #{applySdselGrpCd} AS SDSEL_GRP_CD,
                A.SDSEL_QTY,
                #{applyDispSeq} AS DISP_SEQ,
                A.USE_YN,
                #{regDt} AS REG_DT,
                #{regId} AS REG_ID,
                #{modDt} AS MOD_DT,
                #{modId} AS MOD_ID,
                A.MAP_CLASS_CD,
                A.RCVKIND,
                A.REQUIRE_YN
                FROM TB_MS_PRODUCT_SDSEL_CLASS A
                WHERE 1=1
                AND A.STORE_CD = #{storeCd}
                AND A.SDSEL_GRP_CD = #{copySdselGrpCd}
                AND A.SDSEL_CLASS_CD = #{copySdselClassCd}
            </when>
        </choose>
    </insert>

    <!-- 사이드메뉴-선택메뉴 탭-선택분류복사 팝업 - 선택상품 복사 merge -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getSdselClassCopySaveMergeProd" parameterType="sideMenuSelClassVO">
        /* SideMenuMapper.getSdselClassCopySaveMergeProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_SDSEL_PROD A
                USING (
                        SELECT
                        C.HQ_OFFICE_CD,
                        #{applySdselClassCd} AS SDSEL_CLASS_CD,
                        C.PROD_CD,
                        C.ADD_PROD_UPRC,
                        C.ADD_PROD_QTY,
                        C.DISP_SEQ,
                        C.USE_YN,
                        #{regDt} AS REG_DT,
                        #{regId} AS REG_ID,
                        #{modDt} AS MOD_DT,
                        #{modId} AS MOD_ID,
                        C.RCVKIND,
                        C.FIX_PROD_FG
                        FROM TB_HQ_PRODUCT_SDSEL_PROD C
                        WHERE 1=1
                        AND C.HQ_OFFICE_CD = #{hqOfficeCd}
                        AND C.SDSEL_CLASS_CD = #{copySdselClassCd}
                    ) B
                ON  (
                        A.HQ_OFFICE_CD = B.HQ_OFFICE_CD AND A.SDSEL_CLASS_CD = B.SDSEL_CLASS_CD AND A.PROD_CD = B.PROD_CD
                    )
                WHEN NOT MATCHED THEN
                    INSERT (
                        A.HQ_OFFICE_CD,
                        A.SDSEL_CLASS_CD,
                        A.PROD_CD,
                        A.ADD_PROD_UPRC,
                        A.ADD_PROD_QTY,
                        A.DISP_SEQ,
                        A.USE_YN,
                        A.REG_DT,
                        A.REG_ID,
                        A.MOD_DT,
                        A.MOD_ID,
                        A.RCVKIND,
                        A.FIX_PROD_FG
                    ) VALUES (
                        B.HQ_OFFICE_CD,
                        B.SDSEL_CLASS_CD,
                        B.PROD_CD,
                        B.ADD_PROD_UPRC,
                        B.ADD_PROD_QTY,
                        B.DISP_SEQ,
                        B.USE_YN,
                        B.REG_DT,
                        B.REG_ID,
                        B.MOD_DT,
                        B.MOD_ID,
                        B.RCVKIND,
                        B.FIX_PROD_FG
                    )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_SDSEL_PROD A
                USING (
                        SELECT
                        C.STORE_CD,
                        #{applySdselClassCd} AS SDSEL_CLASS_CD,
                        C.PROD_CD,
                        C.ADD_PROD_UPRC,
                        C.ADD_PROD_QTY,
                        C.DISP_SEQ,
                        C.USE_YN,
                        #{regDt} AS REG_DT,
                        #{regId} AS REG_ID,
                        #{modDt} AS MOD_DT,
                        #{modId} AS MOD_ID,
                        C.RCVKIND,
                        C.FIX_PROD_FG,
                        C.SOLD_OUT_YN
                        FROM TB_MS_PRODUCT_SDSEL_PROD C
                        WHERE 1=1
                        AND C.STORE_CD = #{storeCd}
                        AND C.SDSEL_CLASS_CD = #{copySdselClassCd}
                    ) B
                ON  (
                        A.STORE_CD = B.STORE_CD AND A.SDSEL_CLASS_CD = B.SDSEL_CLASS_CD AND A.PROD_CD = B.PROD_CD
                    )
                WHEN NOT MATCHED THEN
                    INSERT (
                        A.STORE_CD,
                        A.SDSEL_CLASS_CD,
                        A.PROD_CD,
                        A.ADD_PROD_UPRC,
                        A.ADD_PROD_QTY,
                        A.DISP_SEQ,
                        A.USE_YN,
                        A.REG_DT,
                        A.REG_ID,
                        A.MOD_DT,
                        A.MOD_ID,
                        A.RCVKIND,
                        A.FIX_PROD_FG,
                        A.SOLD_OUT_YN
                    ) VALUES (
                        B.STORE_CD,
                        B.SDSEL_CLASS_CD,
                        B.PROD_CD,
                        B.ADD_PROD_UPRC,
                        B.ADD_PROD_QTY,
                        B.DISP_SEQ,
                        B.USE_YN,
                        B.REG_DT,
                        B.REG_ID,
                        B.MOD_DT,
                        B.MOD_ID,
                        B.RCVKIND,
                        B.FIX_PROD_FG,
                        B.SOLD_OUT_YN
                    )
            </when>
        </choose>
    </insert>

    <!-- 사이드메뉴-선택메뉴 탭-선택분류복사 팝업 - 선택상품 매장에 내려줌 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getSdselClassCopySaveMergeProdStore" parameterType="sideMenuSelClassVO">
        /* SideMenuMapper.getSdselClassCopySaveMergeProdStore */
        MERGE INTO TB_MS_PRODUCT_SDSEL_PROD A
        USING (
                SELECT
                D.STORE_CD,
                #{applySdselClassCd} AS SDSEL_CLASS_CD,
                C.PROD_CD,
                C.ADD_PROD_UPRC,
                C.ADD_PROD_QTY,
                C.DISP_SEQ,
                C.USE_YN,
                #{regDt} AS REG_DT,
                #{regId} AS REG_ID,
                #{modDt} AS MOD_DT,
                #{modId} AS MOD_ID,
                C.RCVKIND,
                C.FIX_PROD_FG,
                '' AS SOLD_OUT_YN
                FROM TB_HQ_PRODUCT_SDSEL_PROD C,
                TB_MS_STORE D
                WHERE 1=1
                AND C.HQ_OFFICE_CD = #{hqOfficeCd}
                AND C.SDSEL_CLASS_CD = #{copySdselClassCd}
                AND D.HQ_OFFICE_CD = C.HQ_OFFICE_CD
            ) B
        ON  (
                A.STORE_CD = B.STORE_CD AND A.SDSEL_CLASS_CD = B.SDSEL_CLASS_CD AND A.PROD_CD = B.PROD_CD
            )
        WHEN NOT MATCHED THEN
            INSERT (
                A.STORE_CD,
                A.SDSEL_CLASS_CD,
                A.PROD_CD,
                A.ADD_PROD_UPRC,
                A.ADD_PROD_QTY,
                A.DISP_SEQ,
                A.USE_YN,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID,
                A.RCVKIND,
                A.FIX_PROD_FG,
                A.SOLD_OUT_YN
            ) VALUES (
                B.STORE_CD,
                B.SDSEL_CLASS_CD,
                B.PROD_CD,
                B.ADD_PROD_UPRC,
                B.ADD_PROD_QTY,
                B.DISP_SEQ,
                B.USE_YN,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID,
                B.RCVKIND,
                B.FIX_PROD_FG,
                B.SOLD_OUT_YN
            )
    </insert>

    <!-- 선택분류 적용매장등록 팝업 - 선택분류 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSdselClassCodeComboList" parameterType="SideMenuSelClassVO" resultType="DefaultMap">
        /* SideMenuMapper.getSdselClassCodeComboList */
        SELECT
        thpsc.SDSEL_CLASS_CD AS VALUE,
        (thpsc.SDSEL_CLASS_NM || DECODE(thpsc.REG_STORE_FG, '1', ' (제외매장)', '2', ' (허용매장)', null)) AS NAME
        FROM TB_HQ_PRODUCT_SDSEL_CLASS thpsc
        WHERE 1=1
        AND thpsc.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thpsc.SDSEL_GRP_CD = #{sdselGrpCd}
        AND thpsc.USE_YN = 'Y'
        AND thpsc.REG_STORE_FG IN ('1', '2')
        ORDER BY thpsc.SDSEL_CLASS_CD
    </select>

    <!-- 선택분류 적용매장등록 팝업 - 적용매장 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSdselClassRegStoreList" parameterType="SideMenuSelClassVO" resultType="DefaultMap">
        /* SideMenuMapper.getSdselClassRegStoreList */
        SELECT
        thpscrs.STORE_CD,
        tms.STORE_NM,
        thpscrs.SDSEL_CLASS_CD
        FROM TB_HQ_PRODUCT_SDSEL_CLASS_REG_STORE thpscrs,
        TB_MS_STORE tms,
        TB_MS_STORE_INFO tmsi
        WHERE 1=1
        AND thpscrs.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thpscrs.SDSEL_CLASS_CD = #{sdselClassCd}
        <if test="storeCd != null and storeCd != ''">
            AND thpscrs.STORE_CD LIKE '%' || #{storeCd} || '%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%' || #{storeNm} || '%'
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        AND tms.HQ_OFFICE_CD (+)= thpscrs.HQ_OFFICE_CD
        AND tms.STORE_CD (+)= thpscrs.STORE_CD
        AND tmsi.STORE_CD (+)= tms.STORE_CD
        ORDER BY thpscrs.STORE_CD
    </select>

    <!-- 선택분류 적용매장등록 팝업 - 미적용매장 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSdselClassNoRegStoreList" parameterType="SideMenuSelClassVO" resultType="DefaultMap">
        /* SideMenuMapper.getSdselClassNoRegStoreList */
        SELECT
        tms.STORE_CD,
        tms.STORE_NM,
        #{sdselClassCd} AS SDSEL_CLASS_CD
        FROM TB_MS_STORE tms,
        TB_MS_STORE_INFO tmsi
        WHERE 1=1
        AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tms.STORE_CD NOT IN (SELECT STORE_CD FROM TB_HQ_PRODUCT_SDSEL_CLASS_REG_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND SDSEL_CLASS_CD = #{sdselClassCd})
        <if test="storeCd != null and storeCd != ''">
            AND tms.STORE_CD LIKE '%' || #{storeCd} || '%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%' || #{storeNm} || '%'
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        AND tmsi.STORE_CD (+)= tms.STORE_CD
        ORDER BY tms.STORE_CD
    </select>

    <!-- 선택분류 적용매장등록 팝업 - 저장 insert -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getSdselClassRegStoreSaveInsert" parameterType="SideMenuSelClassVO">
        /* SideMenuMapper.getSdselClassRegStoreSaveInsert */
        INSERT INTO TB_HQ_PRODUCT_SDSEL_CLASS_REG_STORE
        (
            HQ_OFFICE_CD,
            SDSEL_CLASS_CD,
            STORE_CD,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        ) VALUES (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{storeCd},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 선택분류 적용매장등록 팝업 - 저장 delete -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getSdselClassRegStoreSaveDelete" parameterType="SideMenuSelClassVO">
        /* SideMenuMapper.getSdselClassRegStoreSaveDelete */
        DELETE
        TB_HQ_PRODUCT_SDSEL_CLASS_REG_STORE
        WHERE 1=1
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        AND SDSEL_CLASS_CD = #{sdselClassCd}
        AND STORE_CD = #{storeCd}
    </delete>

    <!-- 선택상품 적용매장등록 팝업 - 선택상품 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSdselProdCodeComboList" parameterType="sideMenuSelProdVO" resultType="DefaultMap">
        /* SideMenuMapper.getSdselProdCodeComboList */
        SELECT
        thpsp.PROD_CD AS VALUE,
        (thp.PROD_NM || DECODE(thpsp.REG_STORE_FG, '1', ' (제외매장)', '2', ' (허용매장)', null)) AS NAME
        FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp,
        TB_HQ_PRODUCT thp
        WHERE 1=1
        AND thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd}
        AND thpsp.USE_YN = 'Y'
        AND thpsp.REG_STORE_FG IN ('1', '2')
        AND thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
        AND thp.PROD_CD = thpsp.PROD_CD
        ORDER BY thpsp.PROD_CD
    </select>

    <!-- 선택상품 적용매장등록 팝업 - 적용매장 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSdselProdRegStoreList" parameterType="sideMenuSelProdVO" resultType="DefaultMap">
        /* SideMenuMapper.getSdselProdRegStoreList */
        SELECT
        thpsprs.STORE_CD,
        tms.STORE_NM,
        thpsprs.SDSEL_CLASS_CD,
        thpsprs.PROD_CD
        FROM TB_HQ_PRODUCT_SDSEL_PROD_REG_STORE thpsprs,
        TB_MS_STORE tms,
        TB_MS_STORE_INFO tmsi
        WHERE 1=1
        AND thpsprs.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thpsprs.SDSEL_CLASS_CD = #{sdselClassCd}
        AND thpsprs.PROD_CD = #{prodCd}
        <if test="storeCd != null and storeCd != ''">
            AND thpsprs.STORE_CD LIKE '%' || #{storeCd} || '%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%' || #{storeNm} || '%'
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        AND tms.HQ_OFFICE_CD (+)= thpsprs.HQ_OFFICE_CD
        AND tms.STORE_CD (+)= thpsprs.STORE_CD
        AND tmsi.STORE_CD (+)= tms.STORE_CD
        ORDER BY thpsprs.STORE_CD
    </select>

    <!-- 선택상품 적용매장등록 팝업 - 미적용매장 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getSdselProdNoRegStoreList" parameterType="sideMenuSelProdVO" resultType="DefaultMap">
        /* SideMenuMapper.getSdselProdNoRegStoreList */
        SELECT
        tms.STORE_CD,
        tms.STORE_NM,
        #{sdselClassCd} AS SDSEL_CLASS_CD,
        #{prodCd} AS PROD_CD
        FROM TB_MS_STORE tms,
        TB_MS_STORE_INFO tmsi
        WHERE 1=1
        AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tms.STORE_CD NOT IN (SELECT STORE_CD FROM TB_HQ_PRODUCT_SDSEL_PROD_REG_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND SDSEL_CLASS_CD = #{sdselClassCd} AND PROD_CD = #{prodCd})
        <if test="storeCd != null and storeCd != ''">
            AND tms.STORE_CD LIKE '%' || #{storeCd} || '%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%' || #{storeNm} || '%'
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        AND tmsi.STORE_CD (+)= tms.STORE_CD
        ORDER BY tms.STORE_CD
    </select>

    <!-- 선택상품 적용매장등록 팝업 - 저장 insert -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <insert id="getSdselProdRegStoreSaveInsert" parameterType="sideMenuSelProdVO">
        /* SideMenuMapper.getSdselProdRegStoreSaveInsert */
        INSERT INTO TB_HQ_PRODUCT_SDSEL_PROD_REG_STORE
        (
            HQ_OFFICE_CD,
            SDSEL_CLASS_CD,
            PROD_CD,
            STORE_CD,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        ) VALUES (
            #{hqOfficeCd},
            #{sdselClassCd},
            #{prodCd},
            #{storeCd},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 선택상품 적용매장등록 팝업 - 저장 delete -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getSdselProdRegStoreSaveDelete" parameterType="sideMenuSelProdVO">
        /* SideMenuMapper.getSdselProdRegStoreSaveDelete */
        DELETE
        TB_HQ_PRODUCT_SDSEL_PROD_REG_STORE
        WHERE 1=1
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        AND SDSEL_CLASS_CD = #{sdselClassCd}
        AND PROD_CD = #{prodCd}
        AND STORE_CD = #{storeCd}
    </delete>

    <!-- 선택분류 적용매장 전체 삭제 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getSdselClassRegStoreDeleteAll" parameterType="SideMenuSelClassVO">
        /* SideMenuMapper.getSdselClassRegStoreDeleteAll */
        DELETE
        TB_HQ_PRODUCT_SDSEL_CLASS_REG_STORE
        WHERE 1=1
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        AND SDSEL_CLASS_CD = #{sdselClassCd}
    </delete>

    <!-- 선택상품 적용매장 전체 삭제 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <delete id="getSdselProdRegStoreDeleteAll" parameterType="sideMenuSelProdVO">
        /* SideMenuMapper.getSdselProdRegStoreDeleteAll */
        DELETE
        TB_HQ_PRODUCT_SDSEL_PROD_REG_STORE
        WHERE 1=1
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        AND SDSEL_CLASS_CD = #{sdselClassCd}
        AND PROD_CD = #{prodCd}
    </delete>

</mapper>