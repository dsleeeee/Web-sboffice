<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.posExcclc.posExcclc.service.impl.PosExcclcMapper">

	<!-- POS정산내역 - 리스트 조회 -->
    <!--
        TABLE    : TB_SL_DAILY_POS_PROD, TB_SL_DAILY_POS, TB_MS_POS
        PARAM    : posExcclcVO
        COMMENTS : POS정산내역 - 리스트를 조회한다.
    -->
    <select id="getPosExcclcList" parameterType="posExcclcVO" resultType="DefaultMap">
        <include refid="CmmSQL.PagingTemplateHeader"/>
    	SELECT 	TPE.HQ_OFFICE_CD
    	,		TPE.STORE_CD
			     , (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = TPE.STORE_CD) AS STORE_NM
			     , TPE.SALE_DATE
			     , TPE.POS_NO
			     , TPE.REG_SEQ
			     , TPE.CLOSE_FG_SEQ
			     , TPE.CLOSE_FG_NM
			     , TO_CHAR(TO_DATE(TPE.REG_DT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD HH24:MI:SS') AS REG_DT
			----------------------------
			     , NVL((SELECT SUM(NVL(TPES.TOT_SALE_AMT,0))
			          FROM TB_PS_EXACTCALC_SALE TPES
			         WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPES.STORE_CD
			         AND TPE.SALE_DATE = TPES.SALE_DATE
			         AND TPE.POS_NO = TPES.POS_NO
			         AND TPE.REG_SEQ = TPES.REG_SEQ
			       ),0) AS TOT_SALE_AMT
			    , NVL((SELECT SUM(NVL(TPES.TOT_DC_AMT,0))
			          FROM TB_PS_EXACTCALC_SALE TPES
			         WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPES.STORE_CD
			         AND TPE.SALE_DATE = TPES.SALE_DATE
			         AND TPE.POS_NO = TPES.POS_NO
			         AND TPE.REG_SEQ = TPES.REG_SEQ
			       ),0) AS TOT_DC_AMT
			    , NVL((SELECT SUM(NVL(TPES.REAL_SALE_AMT,0))
			          FROM TB_PS_EXACTCALC_SALE TPES
			         WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPES.STORE_CD
			         AND TPE.SALE_DATE = TPES.SALE_DATE
			         AND TPE.POS_NO = TPES.POS_NO
			         AND TPE.REG_SEQ = TPES.REG_SEQ
			       ),0) AS REAL_SALE_AMT
			
			--    , NVL(SUM(TPES.TOT_SALE_AMT),0)  AS TOT_SALE_AMT
			--    , NVL(SUM(TPES.TOT_DC_AMT),0)    AS TOT_DC_AMT
			--    , NVL(SUM(TPES.REAL_SALE_AMT),0) AS REAL_SALE_AMT
			------------------------------
			    , NVL((SELECT SUM(TPEF.FUND_AMT)
			          FROM TB_PS_EXACTCALC_FUND TPEF
			         WHERE TPE.HQ_OFFICE_CD = TPEF.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEF.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEF.STORE_CD
			         AND TPE.SALE_DATE = TPEF.SALE_DATE
			         AND TPE.POS_NO = TPEF.POS_NO
			         AND TPE.REG_SEQ = TPEF.REG_SEQ
			       ),0) AS FUND_AMT
			--    , NVL(SUM(TPEF.FUND_AMT),0)       AS FUND_AMT
			------------------------------     -- 기존 현금 금액 - 현금영수 금액
				, NVL((SELECT SUM(TPEC.CASH_EXACT_AMT)
					 FROM TB_PS_EXACTCALC_CASH TPEC --현금
					WHERE TPE.HQ_OFFICE_CD = TPEC.HQ_OFFICE_CD
					AND TPE.HQ_BRAND_CD = TPEC.HQ_BRAND_CD
					AND TPE.STORE_CD = TPEC.STORE_CD
					AND TPE.SALE_DATE = TPEC.SALE_DATE
					AND TPE.POS_NO = TPEC.POS_NO
					AND TPE.REG_SEQ = TPEC.REG_SEQ
					AND TPEC.CASH_EXACT_CD = '02' <!-- 현금정산구분(NM_GRP_CD: 064) - [02 : 현금판매]  -->
				)
			 	-
				(SELECT	SUM(CASE WHEN TSSPC.APPR_PROC_FG IN ('1','2','4') THEN TSSPC.SALE_AMT ELSE 0 END)<!-- 현금영수증 -->
				FROM	TB_SL_SALE_PAY_CASH TSSPC
				WHERE	TPE.HQ_OFFICE_CD = TSSPC.HQ_OFFICE_CD
				AND		TPE.HQ_BRAND_CD = TSSPC.HQ_BRAND_CD
				AND		TPE.STORE_CD = TSSPC.STORE_CD
				AND		TPE.SALE_DATE = TSSPC.SALE_DATE
-- 				AND		TPE.POS_NO = TSSPC.POS_NO
				), 0) AS CASH_EXACT_AMT
		--    , NVL(SUM(TPEC.CASH_EXACT_AMT),0)AS CASH_EXACT_AMT
			------------------------------ -- 기존 현금 금액이 없으면 현금영수 금액도 0원으로 출력
				, CASE WHEN NVL((SELECT SUM(TPEC.CASH_EXACT_AMT)
					FROM TB_PS_EXACTCALC_CASH TPEC --현금
					WHERE TPE.HQ_OFFICE_CD = TPEC.HQ_OFFICE_CD
					AND TPE.HQ_BRAND_CD = TPEC.HQ_BRAND_CD
					AND TPE.STORE_CD = TPEC.STORE_CD
					AND TPE.SALE_DATE = TPEC.SALE_DATE
					AND TPE.POS_NO = TPEC.POS_NO
					AND TPE.REG_SEQ = TPEC.REG_SEQ
					AND TPEC.CASH_EXACT_CD = '02' <!-- 현금정산구분(NM_GRP_CD: 064) - [02 : 현금판매]  -->
					), 0) = 0 THEN 0
				    ELSE
				    (NVL((SELECT SUM(CASE WHEN TSSPC.APPR_PROC_FG IN ('1','2','4') THEN TSSPC.SALE_AMT ELSE 0 END)
				    FROM TB_SL_SALE_PAY_CASH TSSPC
				    WHERE TPE.HQ_OFFICE_CD = TSSPC.HQ_OFFICE_CD
					AND TPE.HQ_BRAND_CD = TSSPC.HQ_BRAND_CD
					AND TPE.STORE_CD = TSSPC.STORE_CD
					AND TPE.SALE_DATE = TSSPC.SALE_DATE
-- 					AND TPE.POS_NO = TSSPC.POS_NO
					),0))
				    END AS CASH_BILL_SALE_AMT
			------------------------------
			    , NVL((SELECT SUM(DECODE(TPEI.ACCNT_FG,'1',TPEI.ACCNT_AMT, 0))
			          FROM TB_PS_EXACTCALC_IOMONEY TPEI --시재
			         WHERE TPE.HQ_OFFICE_CD = TPEI.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEI.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEI.STORE_CD
			         AND TPE.SALE_DATE = TPEI.SALE_DATE
			         AND TPE.POS_NO = TPEI.POS_NO
			       ),0) AS ACCNT_IN_AMT
			    , NVL((SELECT SUM(DECODE(TPEI.ACCNT_FG,'2',TPEI.ACCNT_AMT, 0))
			          FROM TB_PS_EXACTCALC_IOMONEY TPEI --시재
			         WHERE TPE.HQ_OFFICE_CD = TPEI.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEI.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEI.STORE_CD
			         AND TPE.SALE_DATE = TPEI.SALE_DATE
			         AND TPE.POS_NO = TPEI.POS_NO
			         AND TPE.REG_SEQ = TPEI.REG_SEQ
			       ),0) AS ACCNT_OUT_AMT
			--     , SUM(DECODE(TPEI.ACCNT_FG,'1',TPEI.ACCNT_AMT, 0)) AS ACCNT_IN_AMT
			--     , SUM(DECODE(TPEI.ACCNT_FG,'2',TPEI.ACCNT_AMT, 0)) AS ACCNT_OUT_AMT
			------------------------------
			    , NVL((SELECT SUM(TPECT.CASH_TICKET_AMT)
			          FROM TB_PS_EXACTCALC_CASH_TICKET TPECT
			         WHERE TPE.HQ_OFFICE_CD = TPECT.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPECT.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPECT.STORE_CD
			         AND TPE.SALE_DATE = TPECT.SALE_DATE
			         AND TPE.POS_NO = TPECT.POS_NO
			         AND TPE.REG_SEQ = TPECT.REG_SEQ
			       ),0) AS CASH_TICKET_AMT
			--     , NVL(SUM(TPECT.CASH_TICKET_AMT),0) AS CASH_TICKET_AMT
			------------------------------
			    , NVL((SELECT SUM(TPEL.LOST_AMT)
			          FROM TB_PS_EXACTCALC_LOST TPEL  --과부족
			         WHERE TPE.HQ_OFFICE_CD = TPEL.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEL.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEL.STORE_CD
			         AND TPE.SALE_DATE = TPEL.SALE_DATE
			         AND TPE.POS_NO = TPEL.POS_NO
			         AND TPE.REG_SEQ = TPEL.REG_SEQ
			       ),0) AS LOST_AMT
			--     , NVL(SUM(TPEL.LOST_AMT),0) AS LOST_AMT
			----------------------------
			<include refid="CmmSQL.PagingTemplateCount"/>
			  FROM (
			      SELECT TPE.CLOSE_FG_SEQ
			          , DECODE(TPE.CLOSE_FG_SEQ, '1', '개점', '2', '중간마감', '일마감') AS CLOSE_FG_NM
			           , TPE.HQ_OFFICE_CD
			           , TPE.HQ_BRAND_CD
			          , TPE.STORE_CD
			           , TPE.SALE_DATE
			           , TPE.POS_NO
			           , TPE.REG_SEQ
			           , TPE.REG_DT
			        FROM (
			            SELECT '1'  AS CLOSE_FG_SEQ
			                , '1'  AS CLOSE_POS_SEQ
			                 , TPE.HQ_OFFICE_CD
			                 , TPE.HQ_BRAND_CD
			                 , TPE.STORE_CD
			                 , TPE.SALE_DATE
			                 , TPE.POS_NO
			                 , TPE.REG_SEQ
			                 , TPE.OPEN_DT   AS REG_DT
			              FROM TB_PS_EXACTCALC TPE
			             WHERE TPE.HQ_OFFICE_CD = #{hqOfficeCd}
                           <if test='arrStoreCd != null and arrStoreCd != ""'>
                               AND TPE.STORE_CD IN
                               <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                                   #{item}
                               </foreach>
                           </if>
						   <if test='orgnFg != null and orgnFg == "H"'>
							AND (
									'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
								OR	TPE.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
								)
						   </if>
                           <if test='startDate != null and startDate != ""'>
                               AND TPE.SALE_DATE >= #{startDate}
                           </if>
                           <if test='endDate != null and endDate != ""'>
                               AND TPE.SALE_DATE <![CDATA[<= ]]> #{endDate}
                           </if>
                           <if test='closeFg != null and closeFg != "" and closeFg.toString() != "1"'>
                               AND 1 = 2
                           </if>
			               --AND TPE.CLOSE_FG = '1'
			               AND TPE.REG_SEQ = '00'
			
			            UNION ALL
			
			            SELECT '2'  AS CLOSE_FG_SEQ
			                , '2'  AS CLOSE_POS_SEQ
			                 , TPE.HQ_OFFICE_CD
			                 , TPE.HQ_BRAND_CD
			                 , TPE.STORE_CD
			                 , TPE.SALE_DATE
			                 , TPE.POS_NO
			                 , TPE.REG_SEQ
			                 , TPE.CLOSE_DT AS REG_DT
			              FROM TB_PS_EXACTCALC TPE
			             WHERE TPE.HQ_OFFICE_CD = #{hqOfficeCd}
                            <if test='arrStoreCd != null and arrStoreCd != ""'>
                                AND TPE.STORE_CD IN
                                <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                                    #{item}
                                </foreach>
                            </if>
							<if test='orgnFg != null and orgnFg == "H"'>
								AND (
										'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
									OR	TPE.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
									)
							</if>
                            <if test='startDate != null and startDate != ""'>
                                AND TPE.SALE_DATE >= #{startDate}
                            </if>
                            <if test='endDate != null and endDate != ""'>
                                AND TPE.SALE_DATE <![CDATA[<= ]]> #{endDate}
                            </if>
                            <if test='closeFg != null and closeFg != "" and closeFg.toString() != "2"'>
                                AND 1 = 2
                            </if>
			               AND TPE.REG_SEQ >= '01'
			
			            UNION ALL
			
			            SELECT '3'  AS CLOSE_FG_SEQ
			                , '3'  AS CLOSE_POS_SEQ
			                 , TPE.HQ_OFFICE_CD
			                 , TPE.HQ_BRAND_CD
			                 , TPE.STORE_CD
			                 , TPE.SALE_DATE
			                 , TPE.POS_NO
			                 , TPE.REG_SEQ
			                 , TPE.CLOSE_DT AS REG_DT
			              FROM TB_PS_EXACTCALC TPE
			             WHERE TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		                <if test='arrStoreCd != null and arrStoreCd != ""'>
                            AND TPE.STORE_CD IN
                            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
						<if test='orgnFg != null and orgnFg == "H"'>
							AND (
									'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
								OR	TPE.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
								)
						</if>
			            <if test='startDate != null and startDate != ""'>
                            AND TPE.SALE_DATE >= #{startDate}
                        </if>
                        <if test='endDate != null and endDate != ""'>
                            AND TPE.SALE_DATE <![CDATA[<= ]]> #{endDate}
                        </if>
                        <if test='closeFg != null and closeFg != "" and closeFg.toString() != "3"'>
                            AND 1 = 2
                        </if>
                         --  AND TPE.CLOSE_FG = '2'
			               AND TPE.REG_SEQ = '00'
			             ) TPE
			      ) TPE
			
			 GROUP BY TPE.HQ_OFFICE_CD
			    , TPE.HQ_BRAND_CD
			     , TPE.STORE_CD
			     , TPE.SALE_DATE
			     , TPE.POS_NO
			     , TPE.REG_SEQ
			    , TPE.CLOSE_FG_SEQ
			     , TPE.CLOSE_FG_NM
			     , TPE.REG_DT
			 ORDER BY TPE.STORE_CD, TPE.SALE_DATE, TPE.CLOSE_FG_SEQ
	   <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <select id="getPosExcclcDetailInfo" parameterType="posExcclcVO" resultType="DefaultMap">
		SELECT A.STORE_CD
		     , (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = A.STORE_CD) AS STORE_NM
		     , A.OPEN_DT
		     , A.CLOSE_DT
		     , A.TOT_SALE_AMT
		     , A.TOT_DC_AMT
		     , A.REAL_SALE_AMT
		     , A.TOT_BILL_CNT
		     , A.TOT_BILL_TRAN
		     , A.TOT_TIP_AMT
		     , A.TOT_ETC_AMT
		     , A.TOT_DEPOSIT_CNT
		     , A.RTN_BILL_CNT
		     , A.RTN_BILL_AMT
		     , B.PAY_AMT_CARD
		     , CASE WHEN B.PAY_AMT_CASH = 0 THEN 0 ELSE B.PAY_AMT_CASH - H.PAY_AMT_CASH_BILL END AS PAY_AMT_CASH  -- 기존현금금액 - 현금영수금액
		     , CASE WHEN B.PAY_AMT_CASH = 0 THEN 0 ELSE H.PAY_AMT_CASH_BILL END AS PAY_AMT_CASH_BILL   -- 기존현금금액이 없으면 현금영수금액도 0원으로 출력(현금영수금액을 구하는 테이블은 정산 테이블이 아니라서 정산전에도 금액이 보임)
		     , B.PAY_AMT_PAYCO
		     , B.PAY_AMT_VPOINT
		     , B.PAY_AMT_VCOUPN
		     , B.PAY_AMT_VCHARGE
		     , B.PAY_AMT_MPAY
		     , B.PAY_AMT_MCOUPN
		     , B.PAY_AMT_MEMBR
		     , B.PAY_AMT_PREPAID
		     , B.PAY_AMT_POSTPAID
		     , B.PAY_AMT_COUPN
		     , B.PAY_AMT_GIFT
		     , B.PAY_AMT_FSTMP
		     , B.PAY_AMT_PARTNER
		     , B.PAY_AMT_OKCSB
		     , B.PAY_AMT_EMP_CARD
		     , B.PAY_AMT_EMP_TEMPORARY
		     , B.PAY_AMT_PREV
		     , C.DC_AMT_GENERAL
		     , C.DC_AMT_COUPN
		     , C.DC_AMT_MEMBR
		     , C.DC_AMT_PARTNER
		     , C.DC_AMT_SERVICE
		     , C.DC_AMT_PROMTN
		     , C.DC_AMT_PACK
		     , C.DC_AMT_SITE
		     , C.DC_AMT_VCOUPN
		     , D.ACCNT_IN_AMT
		     , D.ACCNT_OUT_AMT
		     , E.CASH_TICKET_AMT_10
		     , E.CASH_TICKET_AMT_50
		     , E.CASH_TICKET_AMT_100
		     , E.CASH_TICKET_AMT_500
		     , E.CASH_TICKET_AMT_1000
		     , E.CASH_TICKET_AMT_5000
		     , E.CASH_TICKET_AMT_10000
		     , E.CASH_TICKET_AMT_50000
		     , E.CASH_TICKET_AMT_100000
		     , E.CASH_TICKET_AMT_ECT
		     , F.EXACT_AMT_CASH
		     , F.EXACT_AMT_GIFT
		     , F.LOST_AMT_CASH
		     , F.LOST_AMT_GIFT
			 , G.NONSALE_CNT_1
		     , G.NONSALE_AMT_1
		     , G.NONSALE_CNT_2
		     , G.NONSALE_AMT_2
		     , G.NONSALE_CNT_3
		     , G.NONSALE_AMT_3
		     , G.NONSALE_CNT_4
		     , G.NONSALE_AMT_4
		     , G.NONSALE_CNT_5
		     , G.NONSALE_AMT_5
		  FROM (
		      SELECT TPE.STORE_CD
		           , TO_CHAR(TO_DATE(TPE.OPEN_DT,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') AS OPEN_DT     
		          , TO_CHAR(TO_DATE(TPE.CLOSE_DT,'YYYYMMDDHH24MISS'),'YYYY-MM-DD HH24:MI:SS') AS CLOSE_DT   
		           , SUM(NVL(TPES.TOT_SALE_AMT,0)) AS TOT_SALE_AMT  
		           , SUM(NVL(TPES.TOT_DC_AMT,0)) AS TOT_DC_AMT    
		           , SUM(NVL(TPES.REAL_SALE_AMT,0)) AS REAL_SALE_AMT
		           , SUM(NVL(TPES.TOT_BILL_CNT,0)) AS TOT_BILL_CNT 
		           , TRUNC(SUM(NVL(TPES.TOT_BILL_AMT,0))/DECODE(SUM(NVL(TPES.TOT_BILL_CNT,0)),0,NULL,SUM(NVL(TPES.TOT_BILL_CNT,0))),0) AS TOT_BILL_TRAN
		           , SUM(NVL(TPES.TOT_TIP_AMT,0))  AS TOT_TIP_AMT  
		           , SUM(NVL(TPES.TOT_ETC_AMT,0))  AS TOT_ETC_AMT
		           , SUM(NVL(TPEC.SALES_COUNT,0)) AS TOT_DEPOSIT_CNT
		           , SUM(NVL(TPES.RTN_BILL_CNT,0)) AS RTN_BILL_CNT
		           , SUM(NVL(TPES.RTN_BILL_AMT,0)) AS RTN_BILL_AMT 
		        FROM TB_PS_EXACTCALC TPE
		           , TB_PS_EXACTCALC_SALE TPES
		      	   , TB_PS_EXACTCALC_CUP TPEC
		       WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPES.STORE_CD(+)
		         AND TPE.SALE_DATE = TPES.SALE_DATE(+)
		         AND TPE.POS_NO = TPES.POS_NO(+)
		         AND TPE.REG_SEQ = TPES.REG_SEQ(+)
				 AND TPE.HQ_OFFICE_CD = TPEC.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPEC.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPEC.STORE_CD(+)
		         AND TPE.SALE_DATE = TPEC.SALE_DATE(+)
		         AND TPE.POS_NO = TPEC.POS_NO(+)
		         AND TPE.REG_SEQ = TPEC.REG_SEQ(+)
		         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	         		         
		      GROUP BY TPE.STORE_CD
		              , TPE.SALE_DATE
		              , TPE.POS_NO
		              , TPE.OPEN_DT
		              , TPE.CLOSE_DT
		       )A
		     , (
		      SELECT SUM(DECODE(TPEP.PAY_CD,'01', TPEP.PAY_AMT, 0)) AS PAY_AMT_CARD
		           , SUM(DECODE(TPEP.PAY_CD,'02', TPEP.PAY_AMT, 0)) AS PAY_AMT_CASH
		           , SUM(DECODE(TPEP.PAY_CD,'03', TPEP.PAY_AMT, 0)) AS PAY_AMT_PAYCO
		           , SUM(DECODE(TPEP.PAY_CD,'04', TPEP.PAY_AMT, 0)) AS PAY_AMT_VPOINT
		           , SUM(DECODE(TPEP.PAY_CD,'05', TPEP.PAY_AMT, 0)) AS PAY_AMT_VCOUPN
		           , SUM(DECODE(TPEP.PAY_CD,'06', TPEP.PAY_AMT, 0)) AS PAY_AMT_VCHARGE
		           , SUM(DECODE(TPEP.PAY_CD,'07', TPEP.PAY_AMT, 0)) AS PAY_AMT_MPAY
		           , SUM(DECODE(TPEP.PAY_CD,'08', TPEP.PAY_AMT, 0)) AS PAY_AMT_MCOUPN
		           , SUM(DECODE(TPEP.PAY_CD,'09', TPEP.PAY_AMT, 0)) AS PAY_AMT_MEMBR
		           , SUM(DECODE(TPEP.PAY_CD,'10', TPEP.PAY_AMT, 0)) AS PAY_AMT_PREPAID
		           , SUM(DECODE(TPEP.PAY_CD,'11', TPEP.PAY_AMT, 0)) AS PAY_AMT_POSTPAID
		           , SUM(DECODE(TPEP.PAY_CD,'12', TPEP.PAY_AMT, 0)) AS PAY_AMT_COUPN
		           , SUM(DECODE(TPEP.PAY_CD,'13', TPEP.PAY_AMT, 0)) AS PAY_AMT_GIFT
		           , SUM(DECODE(TPEP.PAY_CD,'14', TPEP.PAY_AMT, 0)) AS PAY_AMT_FSTMP
		           , SUM(DECODE(TPEP.PAY_CD,'15', TPEP.PAY_AMT, 0)) AS PAY_AMT_PARTNER
		           , SUM(DECODE(TPEP.PAY_CD,'16', TPEP.PAY_AMT, 0)) AS PAY_AMT_OKCSB
		           , SUM(DECODE(TPEP.PAY_CD,'17', TPEP.PAY_AMT, 0)) AS PAY_AMT_EMP_CARD
		           , SUM(DECODE(TPEP.PAY_CD,'18', TPEP.PAY_AMT, 0)) AS PAY_AMT_EMP_TEMPORARY
		          , SUM(DECODE(TPEP.PAY_CD,'19', TPEP.PAY_AMT, 0)) AS PAY_AMT_PREV
		        FROM TB_PS_EXACTCALC TPE
		           , TB_PS_EXACTCALC_PAY TPEP  
		       WHERE TPE.HQ_OFFICE_CD = TPEP.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPEP.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPEP.STORE_CD(+)
		         AND TPE.SALE_DATE = TPEP.SALE_DATE(+)
		         AND TPE.POS_NO = TPEP.POS_NO(+)
		         AND TPE.REG_SEQ = TPEP.REG_SEQ(+)
		         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}		         
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	 
		      GROUP BY TPE.STORE_CD
		              , TPE.SALE_DATE
		              , TPE.POS_NO
		       )B
		     , (
		      SELECT SUM(DECODE(TPED.DC_CD,'01', TPED.DC_AMT, 0)) AS DC_AMT_GENERAL
		           , SUM(DECODE(TPED.DC_CD,'02', TPED.DC_AMT, 0)) AS DC_AMT_COUPN
		           , SUM(DECODE(TPED.DC_CD,'03', TPED.DC_AMT, 0)) AS DC_AMT_MEMBR
		           , SUM(DECODE(TPED.DC_CD,'04', TPED.DC_AMT, 0)) AS DC_AMT_PARTNER
		           , SUM(DECODE(TPED.DC_CD,'05', TPED.DC_AMT, 0)) AS DC_AMT_SERVICE
		           , SUM(DECODE(TPED.DC_CD,'06', TPED.DC_AMT, 0)) AS DC_AMT_PROMTN
		           , SUM(DECODE(TPED.DC_CD,'07', TPED.DC_AMT, 0)) AS DC_AMT_PACK
		           , SUM(DECODE(TPED.DC_CD,'08', TPED.DC_AMT, 0)) AS DC_AMT_SITE
		           , SUM(DECODE(TPED.DC_CD,'09', TPED.DC_AMT, 0)) AS DC_AMT_VCOUPN
		        FROM TB_PS_EXACTCALC TPE
		          , TB_PS_EXACTCALC_DC TPED
		       WHERE TPE.HQ_OFFICE_CD = TPED.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPED.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPED.STORE_CD(+)
		         AND TPE.SALE_DATE = TPED.SALE_DATE(+)
		         AND TPE.POS_NO = TPED.POS_NO(+)
		         AND TPE.REG_SEQ = TPED.REG_SEQ(+)
		         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	
		      GROUP BY TPE.STORE_CD
		              , TPE.SALE_DATE
		              , TPE.POS_NO
		       )C
		     , (
		      SELECT SUM(DECODE(TPEI.ACCNT_FG,'1',TPEI.ACCNT_AMT, 0)) AS ACCNT_IN_AMT    
		           , SUM(DECODE(TPEI.ACCNT_FG,'2',TPEI.ACCNT_AMT, 0)) AS ACCNT_OUT_AMT   
		        FROM TB_PS_EXACTCALC TPE
		           , TB_PS_EXACTCALC_IOMONEY TPEI --시재
		       WHERE TPE.HQ_OFFICE_CD = TPEI.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPEI.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPEI.STORE_CD(+)
		         AND TPE.SALE_DATE = TPEI.SALE_DATE(+)
		         AND TPE.POS_NO = TPEI.POS_NO(+)
		         AND TPE.REG_SEQ = TPEI.REG_SEQ(+)
		         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	
		      GROUP BY TPE.STORE_CD
		              , TPE.SALE_DATE
		              , TPE.POS_NO
		       )D
		     , (
		      SELECT SUM(DECODE(TPECT.CASH_TICKET_CD,'01',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_10     
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'02',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_50     
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'03',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_100   
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'04',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_500    
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'05',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_1000     
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'06',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_5000    
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'07',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_10000     
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'08',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_50000    
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'09',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_100000     
		           , SUM(DECODE(TPECT.CASH_TICKET_CD,'10',TPECT.CASH_TICKET_AMT, 0)) AS CASH_TICKET_AMT_ECT 
		        FROM TB_PS_EXACTCALC TPE
		           , TB_PS_EXACTCALC_CASH_TICKET TPECT
		       WHERE TPE.HQ_OFFICE_CD = TPECT.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPECT.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPECT.STORE_CD(+)
		         AND TPE.SALE_DATE = TPECT.SALE_DATE(+)
		         AND TPE.POS_NO = TPECT.POS_NO(+)
		         AND TPE.REG_SEQ = TPECT.REG_SEQ(+)
		         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	
		      GROUP BY TPE.STORE_CD
		              , TPE.SALE_DATE
		              , TPE.POS_NO
		       )E
		     , (
		      SELECT SUM(DECODE(TPEL.LOST_CD,'01',TPEL.EXACT_AMT, 0)) AS EXACT_AMT_CASH     
		           , SUM(DECODE(TPEL.LOST_CD,'02',TPEL.EXACT_AMT, 0)) AS EXACT_AMT_GIFT    
		           , SUM(DECODE(TPEL.LOST_CD,'01',TPEL.LOST_AMT, 0)) AS LOST_AMT_CASH      
		           , SUM(DECODE(TPEL.LOST_CD,'02',TPEL.LOST_AMT, 0)) AS LOST_AMT_GIFT    
		        FROM TB_PS_EXACTCALC TPE
		           , TB_PS_EXACTCALC_LOST TPEL  
		       WHERE TPE.HQ_OFFICE_CD = TPEL.HQ_OFFICE_CD(+)
		         AND TPE.HQ_BRAND_CD = TPEL.HQ_BRAND_CD(+)
		         AND TPE.STORE_CD = TPEL.STORE_CD(+)
		         AND TPE.SALE_DATE = TPEL.SALE_DATE(+)
		         AND TPE.POS_NO = TPEL.POS_NO(+)
		         AND TPE.REG_SEQ = TPEL.REG_SEQ(+)
		         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	
		      GROUP BY TPE.STORE_CD
		              , TPE.SALE_DATE
		              , TPE.POS_NO
       		)F
       		, (
	        SELECT SUM(DECODE(TPEN.NONSALE_FG,'1',TPEN.NONSALE_CNT, 0)) AS NONSALE_CNT_1    
	          , SUM(DECODE(TPEN.NONSALE_FG,'1',TPEN.NONSALE_AMT, 0)) AS NONSALE_AMT_1    
	          , SUM(DECODE(TPEN.NONSALE_FG,'2',TPEN.NONSALE_CNT, 0)) AS NONSALE_CNT_2     
	          , SUM(DECODE(TPEN.NONSALE_FG,'2',TPEN.NONSALE_AMT, 0)) AS NONSALE_AMT_2     
	          , SUM(DECODE(TPEN.NONSALE_FG,'3',TPEN.NONSALE_CNT, 0)) AS NONSALE_CNT_3     
	          , SUM(DECODE(TPEN.NONSALE_FG,'3',TPEN.NONSALE_AMT, 0)) AS NONSALE_AMT_3   
	          , SUM(DECODE(TPEN.NONSALE_FG,'4',TPEN.NONSALE_CNT, 0)) AS NONSALE_CNT_4    
	          , SUM(DECODE(TPEN.NONSALE_FG,'4',TPEN.NONSALE_AMT, 0)) AS NONSALE_AMT_4      
	          , SUM(DECODE(TPEN.NONSALE_FG,'5',TPEN.NONSALE_CNT, 0)) AS NONSALE_CNT_5     
	          , SUM(DECODE(TPEN.NONSALE_FG,'5',TPEN.NONSALE_AMT, 0)) AS NONSALE_AMT_5     
	        FROM TB_PS_EXACTCALC TPE
	           , TB_PS_EXACTCALC_NONSALE TPEN 
	       WHERE TPE.HQ_OFFICE_CD = TPEN.HQ_OFFICE_CD(+)
	         AND TPE.HQ_BRAND_CD = TPEN.HQ_BRAND_CD(+)
	         AND TPE.STORE_CD = TPEN.STORE_CD(+)
	         AND TPE.SALE_DATE = TPEN.SALE_DATE(+)
	         AND TPE.POS_NO = TPEN.POS_NO(+)
	         AND TPE.REG_SEQ = TPEN.REG_SEQ(+)
	         AND TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		         AND TPE.STORE_CD = #{storeCd}
		         AND TPE.SALE_DATE = REPLACE(#{saleDate},'-','')
		         AND TPE.POS_NO = #{posNo}
		         AND TPE.REG_SEQ = #{regSeq}	
	      GROUP BY TPE.STORE_CD
	              , TPE.SALE_DATE
	              , TPE.POS_NO
	       )G
			,(
			-- 현금,현금영수증 분리
			SELECT	NVL(MAX(SUM(CASE WHEN APPR_PROC_FG IN ('1','2','4') THEN SALE_AMT ELSE 0 END)), 0) AS PAY_AMT_CASH_BILL -- 현금영수증
			FROM    TB_SL_SALE_PAY_CASH
			WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
		  	AND 	STORE_CD = #{storeCd}
		  	AND 	SALE_DATE = REPLACE(#{saleDate},'-','')
		  	AND 	POS_NO = #{posNo}
			GROUP BY STORE_CD, SALE_DATE, POS_NO
			) H
    </select>
    
    <select id="getPosExcclcExcelList" parameterType="posExcclcVO" resultType="DefaultMap">
    	SELECT TPE.HQ_OFFICE_CD
    	,		TPE.STORE_CD
			     , (SELECT STORE_NM FROM TB_MS_STORE WHERE STORE_CD = TPE.STORE_CD) AS STORE_NM
			     , TPE.SALE_DATE
			     , TPE.POS_NO
			     , TPE.REG_SEQ
			     , TPE.CLOSE_FG_SEQ
			     , TPE.CLOSE_FG_NM
			     , TO_CHAR(TO_DATE(TPE.REG_DT,'YYYYMMDDHH24MISS'),'YYYY.MM.DD HH24:MI:SS') AS REG_DT
			----------------------------
			     , NVL((SELECT SUM(NVL(TPES.TOT_SALE_AMT,0))
			          FROM TB_PS_EXACTCALC_SALE TPES
			         WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPES.STORE_CD
			         AND TPE.SALE_DATE = TPES.SALE_DATE
			         AND TPE.POS_NO = TPES.POS_NO
			         AND TPE.REG_SEQ = TPES.REG_SEQ
			       ),0) AS TOT_SALE_AMT
			    , NVL((SELECT SUM(NVL(TPES.TOT_DC_AMT,0))
			          FROM TB_PS_EXACTCALC_SALE TPES
			         WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPES.STORE_CD
			         AND TPE.SALE_DATE = TPES.SALE_DATE
			         AND TPE.POS_NO = TPES.POS_NO
			         AND TPE.REG_SEQ = TPES.REG_SEQ
			       ),0) AS TOT_DC_AMT
			    , NVL((SELECT SUM(NVL(TPES.REAL_SALE_AMT,0))
			          FROM TB_PS_EXACTCALC_SALE TPES
			         WHERE TPE.HQ_OFFICE_CD = TPES.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPES.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPES.STORE_CD
			         AND TPE.SALE_DATE = TPES.SALE_DATE
			         AND TPE.POS_NO = TPES.POS_NO
			         AND TPE.REG_SEQ = TPES.REG_SEQ
			       ),0) AS REAL_SALE_AMT
			
			--    , NVL(SUM(TPES.TOT_SALE_AMT),0)  AS TOT_SALE_AMT
			--    , NVL(SUM(TPES.TOT_DC_AMT),0)    AS TOT_DC_AMT
			--    , NVL(SUM(TPES.REAL_SALE_AMT),0) AS REAL_SALE_AMT
			------------------------------
			    , NVL((SELECT SUM(TPEF.FUND_AMT)
			          FROM TB_PS_EXACTCALC_FUND TPEF
			         WHERE TPE.HQ_OFFICE_CD = TPEF.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEF.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEF.STORE_CD
			         AND TPE.SALE_DATE = TPEF.SALE_DATE
			         AND TPE.POS_NO = TPEF.POS_NO
			         AND TPE.REG_SEQ = TPEF.REG_SEQ
			       ),0) AS FUND_AMT
			--    , NVL(SUM(TPEF.FUND_AMT),0)       AS FUND_AMT
			------------------------------
			------------------------------		-- 기존 현금 금액 - 현금영수 금액
				, NVL((SELECT SUM(TPEC.CASH_EXACT_AMT)
						FROM TB_PS_EXACTCALC_CASH TPEC --현금
						WHERE TPE.HQ_OFFICE_CD = TPEC.HQ_OFFICE_CD
						AND TPE.HQ_BRAND_CD = TPEC.HQ_BRAND_CD
						AND TPE.STORE_CD = TPEC.STORE_CD
						AND TPE.SALE_DATE = TPEC.SALE_DATE
						AND TPE.POS_NO = TPEC.POS_NO
						AND TPE.REG_SEQ = TPEC.REG_SEQ
						AND TPEC.CASH_EXACT_CD = '02' <!-- 현금정산구분(NM_GRP_CD: 064) - [02 : 현금판매]  -->
						)
						-
						(SELECT	SUM(CASE WHEN TSSPC.APPR_PROC_FG IN ('1','2','4') THEN TSSPC.SALE_AMT ELSE 0 END)<!-- 현금영수증 -->
						FROM	TB_SL_SALE_PAY_CASH TSSPC
						WHERE	TPE.HQ_OFFICE_CD = TSSPC.HQ_OFFICE_CD
						AND		TPE.HQ_BRAND_CD = TSSPC.HQ_BRAND_CD
						AND		TPE.STORE_CD = TSSPC.STORE_CD
						AND		TPE.SALE_DATE = TSSPC.SALE_DATE
-- 						AND		TPE.POS_NO = TSSPC.POS_NO
					), 0) AS CASH_EXACT_AMT
		--    , NVL(SUM(TPEC.CASH_EXACT_AMT),0)AS CASH_EXACT_AMT
		------------------------------ -- 기존 현금 금액이 없으면 현금영수 금액도 0원으로 출력
				, CASE WHEN NVL((SELECT SUM(TPEC.CASH_EXACT_AMT)
									FROM TB_PS_EXACTCALC_CASH TPEC --현금
									WHERE TPE.HQ_OFFICE_CD = TPEC.HQ_OFFICE_CD
									AND TPE.HQ_BRAND_CD = TPEC.HQ_BRAND_CD
									AND TPE.STORE_CD = TPEC.STORE_CD
									AND TPE.SALE_DATE = TPEC.SALE_DATE
									AND TPE.POS_NO = TPEC.POS_NO
									AND TPE.REG_SEQ = TPEC.REG_SEQ
									AND TPEC.CASH_EXACT_CD = '02' <!-- 현금정산구분(NM_GRP_CD: 064) - [02 : 현금판매]  -->
									), 0) = 0 THEN 0
									ELSE
									(NVL((SELECT SUM(CASE WHEN TSSPC.APPR_PROC_FG IN ('1','2','4') THEN TSSPC.SALE_AMT ELSE 0 END)
									FROM TB_SL_SALE_PAY_CASH TSSPC
									WHERE TPE.HQ_OFFICE_CD = TSSPC.HQ_OFFICE_CD
									AND TPE.HQ_BRAND_CD = TSSPC.HQ_BRAND_CD
									AND TPE.STORE_CD = TSSPC.STORE_CD
									AND TPE.SALE_DATE = TSSPC.SALE_DATE
							-- 		AND TPE.POS_NO = TSSPC.POS_NO
								),0))
				END AS CASH_BILL_SALE_AMT
		------------------------------
			    , NVL((SELECT SUM(DECODE(TPEI.ACCNT_FG,'1',TPEI.ACCNT_AMT, 0))
			          FROM TB_PS_EXACTCALC_IOMONEY TPEI --시재
			         WHERE TPE.HQ_OFFICE_CD = TPEI.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEI.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEI.STORE_CD
			         AND TPE.SALE_DATE = TPEI.SALE_DATE
			         AND TPE.POS_NO = TPEI.POS_NO
			         AND TPE.REG_SEQ = TPEI.REG_SEQ
			       ),0) AS ACCNT_IN_AMT
			    , NVL((SELECT SUM(DECODE(TPEI.ACCNT_FG,'2',TPEI.ACCNT_AMT, 0))
			          FROM TB_PS_EXACTCALC_IOMONEY TPEI --시재
			         WHERE TPE.HQ_OFFICE_CD = TPEI.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEI.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEI.STORE_CD
			         AND TPE.SALE_DATE = TPEI.SALE_DATE
			         AND TPE.POS_NO = TPEI.POS_NO
			         AND TPE.REG_SEQ = TPEI.REG_SEQ
			       ),0) AS ACCNT_OUT_AMT
			--     , SUM(DECODE(TPEI.ACCNT_FG,'1',TPEI.ACCNT_AMT, 0)) AS ACCNT_IN_AMT
			--     , SUM(DECODE(TPEI.ACCNT_FG,'2',TPEI.ACCNT_AMT, 0)) AS ACCNT_OUT_AMT
			------------------------------
			    , NVL((SELECT SUM(TPECT.CASH_TICKET_AMT)
			          FROM TB_PS_EXACTCALC_CASH_TICKET TPECT
			         WHERE TPE.HQ_OFFICE_CD = TPECT.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPECT.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPECT.STORE_CD
			         AND TPE.SALE_DATE = TPECT.SALE_DATE
			         AND TPE.POS_NO = TPECT.POS_NO
			         AND TPE.REG_SEQ = TPECT.REG_SEQ
			       ),0) AS CASH_TICKET_AMT
			--     , NVL(SUM(TPECT.CASH_TICKET_AMT),0) AS CASH_TICKET_AMT
			------------------------------
			    , NVL((SELECT SUM(TPEL.LOST_AMT)
			          FROM TB_PS_EXACTCALC_LOST TPEL  --과부족
			         WHERE TPE.HQ_OFFICE_CD = TPEL.HQ_OFFICE_CD
			         AND TPE.HQ_BRAND_CD = TPEL.HQ_BRAND_CD
			         AND TPE.STORE_CD = TPEL.STORE_CD
			         AND TPE.SALE_DATE = TPEL.SALE_DATE
			         AND TPE.POS_NO = TPEL.POS_NO
			         AND TPE.REG_SEQ = TPEL.REG_SEQ
			       ),0) AS LOST_AMT
			--     , NVL(SUM(TPEL.LOST_AMT),0) AS LOST_AMT
			----------------------------
			  FROM (
			      SELECT TPE.CLOSE_FG_SEQ
			          , DECODE(TPE.CLOSE_FG_SEQ, '1', '개점', '2', '중간마감', '일마감') AS CLOSE_FG_NM
			           , TPE.HQ_OFFICE_CD
			           , TPE.HQ_BRAND_CD
			          , TPE.STORE_CD
			           , TPE.SALE_DATE
			           , TPE.POS_NO
			           , TPE.REG_SEQ
			           , TPE.REG_DT
			        FROM (
			            SELECT '1'  AS CLOSE_FG_SEQ
			                , '1'  AS CLOSE_POS_SEQ
			                 , TPE.HQ_OFFICE_CD
			                 , TPE.HQ_BRAND_CD
			                 , TPE.STORE_CD
			                 , TPE.SALE_DATE
			                 , TPE.POS_NO
			                 , TPE.REG_SEQ
			                 , TPE.OPEN_DT   AS REG_DT
			              FROM TB_PS_EXACTCALC TPE
			             WHERE TPE.HQ_OFFICE_CD = #{hqOfficeCd}
                           <if test='arrStoreCd != null and arrStoreCd != ""'>
                               AND TPE.STORE_CD IN
                               <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                                   #{item}
                               </foreach>
                           </if>
							<if test='orgnFg != null and orgnFg == "H"'>
								AND (
										'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
									OR	TPE.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
									)
							</if>
                           <if test='startDate != null and startDate != ""'>
                               AND TPE.SALE_DATE >= #{startDate}
                           </if>
                           <if test='endDate != null and endDate != ""'>
                               AND TPE.SALE_DATE <![CDATA[<= ]]> #{endDate}
                           </if>
                           <if test='closeFg != null and closeFg != "" and closeFg.toString() != "1"'>
                               AND 1 = 2
                           </if>
			               --AND TPE.CLOSE_FG = '1'
			               AND TPE.REG_SEQ = '00'
			
			            UNION ALL
			
			            SELECT '2'  AS CLOSE_FG_SEQ
			                , '2'  AS CLOSE_POS_SEQ
			                 , TPE.HQ_OFFICE_CD
			                 , TPE.HQ_BRAND_CD
			                 , TPE.STORE_CD
			                 , TPE.SALE_DATE
			                 , TPE.POS_NO
			                 , TPE.REG_SEQ
			                 , TPE.CLOSE_DT AS REG_DT
			              FROM TB_PS_EXACTCALC TPE
			             WHERE TPE.HQ_OFFICE_CD = #{hqOfficeCd}
                            <if test='arrStoreCd != null and arrStoreCd != ""'>
                                AND TPE.STORE_CD IN
                                <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                                    #{item}
                                </foreach>
                            </if>
							<if test='orgnFg != null and orgnFg == "H"'>
								AND (
										'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
									OR	TPE.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
									)
							</if>
                            <if test='startDate != null and startDate != ""'>
                                AND TPE.SALE_DATE >= #{startDate}
                            </if>
                            <if test='endDate != null and endDate != ""'>
                                AND TPE.SALE_DATE <![CDATA[<= ]]> #{endDate}
                            </if>
                            <if test='closeFg != null and closeFg != "" and closeFg.toString() != "2"'>
                                AND 1 = 2
                            </if>
			               AND TPE.REG_SEQ >= '01'
			
			            UNION ALL
			
			            SELECT '3'  AS CLOSE_FG_SEQ
			                , '3'  AS CLOSE_POS_SEQ
			                 , TPE.HQ_OFFICE_CD
			                 , TPE.HQ_BRAND_CD
			                 , TPE.STORE_CD
			                 , TPE.SALE_DATE
			                 , TPE.POS_NO
			                 , TPE.REG_SEQ
			                 , TPE.CLOSE_DT AS REG_DT
			              FROM TB_PS_EXACTCALC TPE
			             WHERE TPE.HQ_OFFICE_CD = #{hqOfficeCd}
		                <if test='arrStoreCd != null and arrStoreCd != ""'>
                            AND TPE.STORE_CD IN
                            <foreach collection="arrStoreCd" item="item" open="("  separator="," close=")">
                                #{item}
                            </foreach>
                        </if>
						<if test='orgnFg != null and orgnFg == "H"'>
							AND (
									'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
								OR	TPE.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
								)
						</if>
			            <if test='startDate != null and startDate != ""'>
                            AND TPE.SALE_DATE >= #{startDate}
                        </if>
                        <if test='endDate != null and endDate != ""'>
                            AND TPE.SALE_DATE <![CDATA[<= ]]> #{endDate}
                        </if>
                        <if test='closeFg != null and closeFg != "" and closeFg.toString() != "3"'>
                            AND 1 = 2
                        </if>
                         --  AND TPE.CLOSE_FG = '2'
			               AND TPE.REG_SEQ = '00'
			             ) TPE
			      ) TPE
			
			 GROUP BY TPE.HQ_OFFICE_CD
			    , TPE.HQ_BRAND_CD
			     , TPE.STORE_CD
			     , TPE.SALE_DATE
			     , TPE.POS_NO
			     , TPE.REG_SEQ
			    , TPE.CLOSE_FG_SEQ
			     , TPE.CLOSE_FG_NM
			     , TPE.REG_DT
			 ORDER BY TPE.STORE_CD, TPE.SALE_DATE, TPE.CLOSE_FG_SEQ
    </select>
</mapper>
