<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.stock.adj.adj.service.impl.AdjMapper">

    <!-- 조정관리 - 조정관리 리스트 조회(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정관리 리스트를 조회한다.
    -->
    <select id="getHqAdjList" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getHqAdjList */
        <![CDATA[
        SELECT  tsha.ADJ_DATE, tsha.HQ_OFFICE_CD, tsha.SEQ_NO
        ,       tsha.ADJ_TITLE, tsha.PROC_FG, tsha.DTL_CNT
        ,       tsha.CONFM_DATE
        ,       SUBSTR(tsha.REG_DT,0,8) AS REG_DATE
        ,		tsha.ADJ_STORAGE_CD, tsha.REASON_CD AS ADJ_REASON, SUBSTR(tsha.MOD_DT,0,8) AS MOD_DATE, tsha.REG_ID, tsha.MOD_ID, tsha.CONFM_ID
        FROM    TB_ST_HQ_ADJUST tsha
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     ADJ_DATE  BETWEEN #{startDate} AND #{endDate}
        ]]>
        <if test='procFg != null and procFg != ""'>
            AND tsha.PROC_FG = #{procFg}
        </if>
        <if test='adjReason != null and adjReason != ""'>
            AND tsha.REASON_CD = #{adjReason}
        </if>
        <![CDATA[
        ORDER BY tsha.ADJ_DATE DESC, tsha.SEQ_NO DESC
        ]]>
    </select>


    <!-- 조정관리 - 조정관리 리스트 조회(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정관리 리스트를 조회한다.
    -->
    <select id="getStAdjList" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getStAdjList */
        <![CDATA[
        SELECT  tssa.ADJ_DATE, tssa.STORE_CD, tssa.SEQ_NO
        ,       tssa.ADJ_TITLE, tssa.PROC_FG, tssa.DTL_CNT
        ,       tssa.CONFM_DATE
        ,       SUBSTR(tssa.REG_DT,0,8) AS REG_DATE
        ,		tssa.ADJ_STORAGE_CD, tssa.REASON_CD AS ADJ_REASON, SUBSTR(tssa.MOD_DT,0,8) AS MOD_DATE, tssa.REG_ID, tssa.MOD_ID, tssa.CONFM_ID
        FROM    TB_ST_STORE_ADJUST tssa
        WHERE   STORE_CD  = #{storeCd}
        AND     ADJ_DATE  BETWEEN #{startDate} AND #{endDate}
        ]]>
        <if test='procFg != null and procFg != ""'>
            AND tssa.PROC_FG = #{procFg}
        </if>
        <if test='adjReason != null and adjReason != ""'>
            AND tssa.REASON_CD = #{adjReason}
        </if>
        <![CDATA[
        ORDER BY tssa.ADJ_DATE DESC, tssa.SEQ_NO DESC
        ]]>
    </select>


    <!-- 조정관리 - 조정 진행구분 및 제목 조회(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 진행구분 및 제목을 조회한다.
    -->
    <select id="getHqProcFgCheck" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getHqProcFgCheck */
        <![CDATA[
        SELECT  tsha.PROC_FG, tsha.ADJ_TITLE, tsha.ADJ_STORAGE_CD, ths.STORAGE_NM, tsha.REASON_CD AS ADJ_REASON
        FROM    TB_ST_HQ_ADJUST tsha
        ,       TB_HQ_STORAGE               ths
        WHERE   tsha.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     tsha.ADJ_DATE      = #{adjDate}
        AND     tsha.SEQ_NO        = #{seqNo}
		AND     tsha.HQ_OFFICE_CD      = ths.HQ_OFFICE_CD
		AND     tsha.ADJ_STORAGE_CD    = ths.STORAGE_CD
        ]]>
    </select>


    <!-- 조정관리 - 조정 진행구분 및 제목 조회(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 진행구분 및 제목을 조회한다.
    -->
    <select id="getStProcFgCheck" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getStProcFgCheck */
        <![CDATA[
        SELECT  tssa.PROC_FG, tssa.ADJ_TITLE, tssa.ADJ_STORAGE_CD, tms.STORAGE_NM, tssa.REASON_CD AS ADJ_REASON
        FROM    TB_ST_STORE_ADJUST tssa
        ,       TB_MS_STORAGE               tms
        WHERE   tssa.STORE_CD      = #{storeCd}
        AND     tssa.ADJ_DATE      = #{adjDate}
        AND     tssa.SEQ_NO        = #{seqNo}
        AND		tssa.STORE_CD		= tms.STORE_CD
        AND		tssa.ADJ_STORAGE_CD = tms.STORAGE_CD
        ]]>
    </select>


    <!-- 조정관리 - 조정등록 상품 리스트 조회(본사) -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_ST_HQ_ADJUST_DTL, TB_ST_HQ_STOCK_CUR, TB_ST_HQ_STOCK_MONTHLY, TB_HQ_PRODUCT_BARCD
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정등록 리스트를 조회한다.
    -->
    <select id="getHqAdjRegistList" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getHqAdjRegistList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        <![CDATA[
        SELECT  thpb.BARCD_CD, thp.PROD_CD, thp.PROD_NM, thp.PO_UNIT_QTY
        ,       NVL((SELECT MAX(SALE_UPRC) KEEP(DENSE_RANK FIRST ORDER BY REG_DT DESC)
                       FROM TB_HQ_PRODUCT_SALE_PRICE
                      WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                        AND PROD_CD = thp.PROD_CD
                        AND #{adjDate} BETWEEN START_DATE AND END_DATE
                     ), 0) AS SALE_UPRC
        ,       NVL(tshsc.AVG_COST_UPRC, thp.COST_UPRC) AS COST_UPRC
        ,       NVL(NVL(tshad.CURR_QTY, tshsc.CURR_QTY), 0) AS CURR_QTY
        ,       tshad.ADJ_QTY
        ,       tshad.ADJ_AMT
        ,       tshad.REMARK
        ,       DECODE(tshad.PROD_CD, NULL, 'I', 'U') AS ADJ_PROD_STATUS
        ]]>
        <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM    TB_HQ_PRODUCT thp
        ,       TB_ST_HQ_ADJUST_DTL tshad
        ,       (   SELECT  tshsc.PROD_CD, tshsc.CURR_QTY, tshsm.AVG_COST_UPRC
                    FROM    TB_ST_HQ_STOCK_CUR tshsc
                    ,       TB_ST_HQ_STOCK_MONTHLY tshsm
                    WHERE   tshsc.HQ_OFFICE_CD    	=   #{hqOfficeCd}
                    AND		tshsc.STORAGE_CD		=	#{storageCd}
                    AND		tshsc.STORAGE_CD IN (SELECT X.STORAGE_CD FROM TB_HQ_STORAGE X WHERE X.HQ_OFFICE_CD  =   #{hqOfficeCd} AND X.AREA_FG    =   #{areaFg})
                    AND     tshsm.IOSTOCK_YM  (+) 	=   SUBSTR(#{adjDate}, 0, 6)
                    AND     tshsm.HQ_OFFICE_CD(+) 	=   tshsc.HQ_OFFICE_CD
                    AND     tshsm.PROD_CD     (+) 	=   tshsc.PROD_CD
                )   tshsc
        ,       TB_HQ_PRODUCT_BARCD thpb
        WHERE   thp.HQ_OFFICE_CD        =   #{hqOfficeCd}
        AND     thp.STOCK_PROD_YN       =   'Y'
        AND     thp.USE_YN              =   'Y'
        AND     tshad.PROD_CD       (+) =   thp.PROD_CD
        AND     tshad.HQ_OFFICE_CD  (+) =   #{hqOfficeCd}
        AND     tshad.ADJ_DATE      (+) =   #{adjDate}
        AND     tshad.SEQ_NO        (+) =   #{seqNo}
        AND     tshsc.PROD_CD       (+) =   thp.PROD_CD
        AND     thpb.HQ_OFFICE_CD   (+) =   thp.HQ_OFFICE_CD
        AND     thpb.PROD_CD        (+) =   thp.PROD_CD
        ]]>
        <if test='prodCd != null and prodCd != ""'>
            AND thp.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND thpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='prodClassCd != null and prodClassCd != ""'>
            AND thp.PROD_CLASS_CD IN  ( SELECT  #{prodClassCd} AS PROD_CLASS_CD
            FROM    DUAL
            UNION
            SELECT  thpc.PROD_CLASS_CD
            FROM    TB_HQ_PRODUCT_CLASS thpc
            WHERE   thpc.HQ_OFFICE_CD = #{hqOfficeCd}
            START WITH  thpc.P_PROD_CLASS_CD = #{prodClassCd} AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
            CONNECT BY  thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
            )
        </if>
        <if test='arrVendrCd != null and arrVendrCd != ""'>
            AND thp.PROD_CD IN  ( SELECT  PROD_CD
            FROM    TB_HQ_VENDOR_PROD
            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
            AND     VENDR_CD IN
            <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test='prodBarcdCd != null and prodBarcdCd != ""'>
            AND (thp.PROD_CD = #{prodBarcdCd} OR thpb.BARCD_CD = #{prodBarcdCd})
        </if>
        <if test='adjFg == "Y"'>
            AND tshad.ADJ_QTY IS NOT NULL
        </if>
        <if test='adjFg == "N"'>
            AND tshad.ADJ_QTY IS NULL
        </if>
        <![CDATA[
        ORDER
        BY      thp.PROD_CD
        ]]>
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 조정관리 - 조정등록 상품 리스트 조회(매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_ST_STORE_ADJUST_DTL, TB_ST_STORE_STOCK_CUR, TB_ST_STORE_STOCK_MONTHLY, TB_MS_PRODUCT_BARCD
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정등록 리스트를 조회한다.
    -->
    <select id="getStAdjRegistList" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getStAdjRegistList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        <![CDATA[
        SELECT  tmpb.BARCD_CD, tmp.PROD_CD, tmp.PROD_NM, tmp.PO_UNIT_QTY
        ,       NVL((SELECT MAX(SALE_UPRC) KEEP(DENSE_RANK FIRST ORDER BY REG_DT DESC)
                       FROM TB_MS_PRODUCT_SALE_PRICE
                      WHERE STORE_CD = tmp.STORE_CD
                        AND PROD_CD = tmp.PROD_CD
                        AND #{adjDate} BETWEEN START_DATE AND END_DATE
                     ), 0) AS SALE_UPRC
        ,       tmp.COST_UPRC
        ,       NVL(NVL(tssad.CURR_QTY, tsssc.CURR_QTY), 0) AS CURR_QTY
        ,       tssad.ADJ_QTY
        ,       tssad.ADJ_AMT
        ,       tssad.REMARK
        ,       DECODE(tssad.PROD_CD, NULL, 'I', 'U') AS ADJ_PROD_STATUS
        ]]>
        <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM    TB_MS_PRODUCT tmp
        ,       TB_ST_STORE_ADJUST_DTL tssad
        ,       TB_ST_STORE_STOCK_CUR tsssc
        ,       TB_MS_PRODUCT_BARCD tmpb
        WHERE   tmp.STORE_CD        =   #{storeCd}
        AND     tmp.STOCK_PROD_YN       =   'Y'
        AND     tmp.USE_YN              =   'Y'
        AND     tssad.PROD_CD       (+) =   tmp.PROD_CD
        AND     tssad.STORE_CD      (+) =   #{storeCd}
        AND     tssad.ADJ_DATE      (+) =   #{adjDate}
        AND     tssad.SEQ_NO        (+) =   #{seqNo}
        AND     tsssc.STORE_CD      (+) =   tmp.STORE_CD
        AND     tsssc.STORAGE_CD    (+) =   '999'
        AND     tsssc.PROD_CD       (+) =   tmp.PROD_CD
        AND     tmpb.STORE_CD       (+) =   tmp.STORE_CD
        AND     tmpb.PROD_CD        (+) =   tmp.PROD_CD
        ]]>
        <if test='prodCd != null and prodCd != ""'>
            AND tmp.PROD_CD = #{prodCd}
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='barcdCd != null and barcdCd != ""'>
            AND tmpb.BARCD_CD = #{barcdCd}
        </if>
        <if test='prodClassCd != null and prodClassCd != ""'>
            AND tmp.PROD_CLASS_CD IN  ( SELECT  #{prodClassCd} AS PROD_CLASS_CD
            FROM    DUAL
            UNION
            SELECT  tmpc.PROD_CLASS_CD
            FROM    TB_MS_PRODUCT_CLASS tmpc
            WHERE   tmpc.STORE_CD = #{storeCd}
            START WITH  tmpc.P_PROD_CLASS_CD = #{prodClassCd} AND tmpc.STORE_CD = #{storeCd}
            CONNECT BY  tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}
            )
        </if>
        <if test='arrVendrCd != null and arrVendrCd != ""'>
            AND tmp.PROD_CD IN  ( SELECT  PROD_CD
            FROM    TB_MS_VENDOR_PROD
            WHERE   STORE_CD  = #{storeCd}
            AND     VENDR_CD IN
            <foreach collection="arrVendrCd" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
            )
        </if>
        <if test='prodBarcdCd != null and prodBarcdCd != ""'>
            AND (tmp.PROD_CD = #{prodBarcdCd} OR tmpb.BARCD_CD = #{prodBarcdCd})
        </if>
        <if test='adjFg == "Y"'>
            AND tssad.ADJ_QTY IS NOT NULL
        </if>
        <if test='adjFg == "N"'>
            AND tssad.ADJ_QTY IS NULL
        </if>
        <![CDATA[
        ORDER
        BY      tmp.PROD_CD
        ]]>
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 조정관리 - 조정등록 신규 SEQ 조회(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정등록 신규 SEQ를 조회한다.
    -->
    <select id="getHqNewSeqNo" parameterType="adjVO" resultType="String">
        /* USE : AdjMapper.getHqNewSeqNo */
        <![CDATA[
        SELECT  NVL(MAX(tsha.SEQ_NO), 0)+1 AS SEQ_NO
        FROM    TB_ST_HQ_ADJUST tsha
        WHERE   tsha.HQ_OFFICE_CD  =  #{hqOfficeCd}
        AND     tsha.ADJ_DATE      =  #{adjDate}
        ]]>
    </select>


    <!-- 조정관리 - 조정등록 신규 SEQ 조회(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정등록 신규 SEQ를 조회한다.
    -->
    <select id="getStNewSeqNo" parameterType="adjVO" resultType="String">
        /* USE : AdjMapper.getStNewSeqNo */
        <![CDATA[
        SELECT  NVL(MAX(tssa.SEQ_NO), 0)+1 AS SEQ_NO
        FROM    TB_ST_STORE_ADJUST tssa
        WHERE   tssa.STORE_CD  =  #{storeCd}
        AND     tssa.ADJ_DATE      =  #{adjDate}
        ]]>
    </select>


    <!-- 조정관리 - 조정 상세 리스트 조회(본사) -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_ST_HQ_ADJUST_DTL, TB_ST_HQ_STOCK_CUR, TB_ST_HQ_STOCK_MONTHLY
                 , TB_HQ_PRODUCT_BARCD, TB_ST_HQ_STOCK_DAILY
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상세 리스트를 조회한다.
    -->
    <select id="getHqAdjDtlList" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getHqAdjDtlList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        <![CDATA[
        SELECT  thpb.BARCD_CD, thp.PROD_CD, thp.PROD_NM, thp.PO_UNIT_QTY
        ,       NVL((SELECT MAX(SALE_UPRC) KEEP(DENSE_RANK FIRST ORDER BY REG_DT DESC)
                       FROM TB_HQ_PRODUCT_SALE_PRICE
                      WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                        AND PROD_CD = thp.PROD_CD
                        AND #{adjDate} BETWEEN START_DATE AND END_DATE
                     ), 0) AS SALE_UPRC
        ,       NVL(tshsm.AVG_COST_UPRC, thp.COST_UPRC) AS COST_UPRC
        ,       tshad.CURR_QTY
        ,       tshad.ADJ_QTY
        ,       tshad.ADJ_AMT
        ,       tshad.REMARK
        ,       'U' AS ADJ_PROD_STATUS
        ,		tsha.ADJ_STORAGE_CD
        ]]>
        <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM    TB_ST_HQ_ADJUST		tsha
        ,		TB_ST_HQ_ADJUST_DTL tshad
        ,       TB_HQ_PRODUCT thp
        ,       (   SELECT  tshsm.PROD_CD
                    ,       tshsm.AVG_COST_UPRC
                    ,       (tshsm.BASE_QTY + NVL(IOSTOCK_QTY, 0)) AS CMPT_DATE_QTY
                    FROM    (   SELECT  tshsm.IOSTOCK_YM, tshsm.HQ_OFFICE_CD
                                ,       tshsm.PROD_CD, tshsm.BASE_QTY, tshsm.AVG_COST_UPRC
                                FROM    TB_ST_HQ_STOCK_MONTHLY tshsm
                                WHERE   tshsm.HQ_OFFICE_CD  =   #{hqOfficeCd}
                                AND     tshsm.IOSTOCK_YM    =   SUBSTR(#{adjDate}, 0, 6)
                            ) tshsm
                    ,       (   SELECT  tshsd.IOSTOCK_DATE, tshsd.HQ_OFFICE_CD
                                ,       tshsd.PROD_CD
                                ,       SUM(tshsd.IOSTOCK_QTY) AS IOSTOCK_QTY
                                FROM    TB_ST_HQ_STOCK_DAILY tshsd
                                WHERE   tshsd.HQ_OFFICE_CD  =   #{hqOfficeCd}
                                AND     tshsd.IOSTOCK_DATE  =   #{adjDate}
                                GROUP
                                BY      tshsd.IOSTOCK_DATE, tshsd.HQ_OFFICE_CD
                                ,       tshsd.PROD_CD
                            ) tshsd
                    WHERE   tshsd.PROD_CD(+)=   tshsm.PROD_CD
                )   tshsm
        ,       TB_HQ_PRODUCT_BARCD thpb
        WHERE   tshad.HQ_OFFICE_CD      =   #{hqOfficeCd}
        AND     tshad.ADJ_DATE          =   #{adjDate}
        AND     tshad.SEQ_NO            =   #{seqNo}
        AND		tshad.HQ_OFFICE_CD     =   tsha.HQ_OFFICE_CD
        AND     tshad.ADJ_DATE       	=   tsha.ADJ_DATE
        AND     tshad.SEQ_NO           =   tsha.SEQ_NO
        AND     tshad.HQ_OFFICE_CD      =   thp.HQ_OFFICE_CD
        AND     tshad.PROD_CD           =   thp.PROD_CD
        AND     tshsm.PROD_CD       (+) =   tshad.PROD_CD
        AND     thpb.HQ_OFFICE_CD   (+) =   tshad.HQ_OFFICE_CD
        AND     thpb.PROD_CD        (+) =   tshad.PROD_CD
        ORDER
        BY      tshad.PROD_CD
        ]]>
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 조정관리 - 조정 상세 리스트 조회(매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_ST_STORE_ADJUST_DTL, TB_ST_HQ_STOCK_CUR, TB_ST_STORE_STOCK_MONTHLY
                 , TB_MS_PRODUCT_BARCD, TB_ST_STORE_STOCK_DAILY
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상세 리스트를 조회한다.
    -->
    <select id="getStAdjDtlList" parameterType="adjVO" resultType="DefaultMap">
        /* USE : AdjMapper.getStAdjDtlList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        <![CDATA[
        SELECT  tmpb.BARCD_CD, tmp.PROD_CD, tmp.PROD_NM, tmp.PO_UNIT_QTY
        ,       NVL((SELECT MAX(SALE_UPRC) KEEP(DENSE_RANK FIRST ORDER BY REG_DT DESC)
                       FROM TB_MS_PRODUCT_SALE_PRICE
                      WHERE STORE_CD = tmp.STORE_CD
                        AND PROD_CD = tmp.PROD_CD
                        AND #{adjDate} BETWEEN START_DATE AND END_DATE
                     ), 0) AS SALE_UPRC
        ,       tmp.COST_UPRC
        ,       tssad.CURR_QTY
        ,       tssad.ADJ_QTY
        ,       tssad.ADJ_AMT
        ,       tssad.REMARK
        ,       'U' AS ADJ_PROD_STATUS
        ,		tssa.ADJ_STORAGE_CD
        ]]>
        <include refid="CmmSQL.PagingTemplateCount"/>
        <![CDATA[
        FROM    TB_ST_STORE_ADJUST		tssa
        ,		TB_ST_STORE_ADJUST_DTL tssad
        ,       TB_MS_PRODUCT tmp
        ,       TB_MS_PRODUCT_BARCD tmpb
        WHERE   tssad.STORE_CD          =   #{storeCd}
        AND     tssad.ADJ_DATE          =   #{adjDate}
        AND     tssad.SEQ_NO            =   #{seqNo}
        AND		tssad.STORE_CD     		=   tssa.STORE_CD
        AND     tssad.ADJ_DATE       	=   tssa.ADJ_DATE
        AND     tssad.SEQ_NO           	=   tssa.SEQ_NO
        AND     tssad.STORE_CD          =   tmp.STORE_CD
        AND     tssad.PROD_CD           =   tmp.PROD_CD
        AND     tmpb.STORE_CD       (+) =   tssad.STORE_CD
        AND     tmpb.PROD_CD        (+) =   tssad.PROD_CD
        ORDER
        BY      tssad.PROD_CD
        ]]>
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 조정관리 - 조정 DTL 전부 삭제(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정일자, SEQ_NO 에 해당하는 DTL을 전부 삭제한다.
    -->
    <delete id="deleteHqAllAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.deleteHqAllAdjDtl */
        DELETE  TB_ST_HQ_ADJUST_DTL
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
    </delete>


    <!-- 조정관리 - 조정 DTL 전부 삭제(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정일자, SEQ_NO 에 해당하는 DTL을 전부 삭제한다.
    -->
    <delete id="deleteStAllAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.deleteStAllAdjDtl */
        DELETE  TB_ST_STORE_ADJUST_DTL
        WHERE   STORE_CD      = #{storeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
    </delete>


    <!-- 조정관리 - 조정 HD 삭제(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정일자, SEQ_NO 에 해당하는 HD를 삭제한다.
    -->
    <delete id="deleteHqAdjHd" parameterType="adjVO">
        /* USE : AdjMapper.deleteHqAdjHd */
        DELETE  TB_ST_HQ_ADJUST
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
    </delete>


    <!-- 조정관리 - 조정 HD 삭제(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정일자, SEQ_NO 에 해당하는 HD를 삭제한다.
    -->
    <delete id="deleteStAdjHd" parameterType="adjVO">
        /* USE : AdjMapper.deleteStAdjHd */
        DELETE  TB_ST_STORE_ADJUST
        WHERE   STORE_CD      = #{storeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
    </delete>


    <!-- 조정관리 - 조정 상품 DTL 등록(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상품 DTL을 등록한다.
    -->
    <insert id="insertHqAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.insertHqAdjDtl */
        INSERT INTO TB_ST_HQ_ADJUST_DTL
        (
            HQ_OFFICE_CD,
            ADJ_DATE,
            SEQ_NO,
            HQ_BRAND_CD,
            PROD_CD,
            COST_UPRC,
            PO_UNIT_QTY,
            CURR_QTY,
            ADJ_QTY,
            ADJ_AMT,
            REMARK,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd},
            #{adjDate},
            #{seqNo},
            #{hqBrandCd},
            #{prodCd},
            #{costUprc},
            #{poUnitQty},
            #{currQty},
            #{adjQty},
            #{adjAmt},
            #{remark},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>


    <!-- 조정관리 - 조정 상품 DTL 등록(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상품 DTL을 등록한다.
    -->
    <insert id="insertStAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.insertStAdjDtl */
        INSERT INTO TB_ST_STORE_ADJUST_DTL
        (
            STORE_CD,
            ADJ_DATE,
            SEQ_NO,
            HQ_BRAND_CD,
            PROD_CD,
            COST_UPRC,
            PO_UNIT_QTY,
            CURR_QTY,
            ADJ_QTY,
            ADJ_AMT,
            REMARK,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{storeCd},
            #{adjDate},
            #{seqNo},
            #{hqBrandCd},
            #{prodCd},
            #{costUprc},
            #{poUnitQty},
            #{currQty},
            #{adjQty},
            #{adjAmt},
            #{remark},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>


    <!-- 조정관리 - 조정 상품 DTL 수정(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상품 DTL을 수정한다.
    -->
    <update id="updateHqAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.updateHqAdjDtl */
        UPDATE  TB_ST_HQ_ADJUST_DTL
        SET     ADJ_QTY   = #{adjQty}
        ,       ADJ_AMT   = #{adjAmt}
        ,       REMARK    = #{remark}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
        AND     PROD_CD       = #{prodCd}
    </update>


    <!-- 조정관리 - 조정 상품 DTL 수정(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상품 DTL을 수정한다.
    -->
    <update id="updateStAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.updateStAdjDtl */
        UPDATE  TB_ST_STORE_ADJUST_DTL
        SET     ADJ_QTY   = #{adjQty}
        ,       ADJ_AMT   = #{adjAmt}
        ,       REMARK    = #{remark}
        WHERE   STORE_CD      = #{storeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
        AND     PROD_CD       = #{prodCd}
    </update>


    <!-- 조정관리 - 조정 상품 DTL 삭제(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상품 DTL을 삭제한다.
    -->
    <delete id="deleteHqAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.deleteHqAdjDtl */
        DELETE  TB_ST_HQ_ADJUST_DTL
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
        AND     PROD_CD       = #{prodCd}
    </delete>


    <!-- 조정관리 - 조정 상품 DTL 삭제(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 상품 DTL을 삭제한다.
    -->
    <delete id="deleteStAdjDtl" parameterType="adjVO">
        /* USE : AdjMapper.deleteStAdjDtl */
        DELETE  TB_ST_STORE_ADJUST_DTL
        WHERE   STORE_CD      = #{storeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
        AND     PROD_CD       = #{prodCd}
    </delete>


    <!-- 조정관리 - 조정 HD 등록(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST, TB_ST_HQ_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 HD을 등록한다.
    -->
    <insert id="insertHqAdjHd" parameterType="adjVO">
        /* USE : AdjMapper.insertHqAdjHd */
        INSERT INTO TB_ST_HQ_ADJUST
        (
            HQ_OFFICE_CD,
            STORAGE_CD,
            ADJ_DATE,
            SEQ_NO,
            ADJ_TITLE,
            PROC_FG,
            ADJ_STORAGE_CD,
            DTL_CNT,
            TOT_ADJ_AMT,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            REASON_CD
        )
        SELECT  #{hqOfficeCd}
             ,       #{storageCd}
             ,       #{adjDate}
             ,       #{seqNo}
             ,       #{adjTitle}
             ,       #{procFg}
             ,       #{adjStorageCd}
              ,      tshad.DTL_CNT
             ,       tshad.TOT_ADJ_AMT
             ,       #{regDt}
             ,       #{regId}
             ,       #{modDt}
             ,       #{modId}
             ,       #{adjReason}
        FROM DUAL a,
        (
            SELECT SUM(DTL_CNT) AS DTL_CNT, SUM(TOT_ADJ_AMT) AS TOT_ADJ_AMT
            FROM
            (
                SELECT 0 AS DTL_CNT, 0 AS TOT_ADJ_AMT
                FROM dual
                UNION ALL
                SELECT NVL(COUNT(tshad.PROD_CD), 0) AS DTL_CNT
                ,       NVL(SUM(tshad.ADJ_AMT), 0) AS TOT_ADJ_AMT
                FROM    TB_ST_HQ_ADJUST_DTL tshad
                WHERE   tshad.HQ_OFFICE_CD  =   #{hqOfficeCd}
                AND     tshad.ADJ_DATE      =   #{adjDate}
                AND     tshad.SEQ_NO        =   #{seqNo}
                GROUP
                    BY      tshad.HQ_OFFICE_CD
                     ,       #{storageCd}
                     ,       tshad.ADJ_DATE
                     ,       tshad.SEQ_NO
                     ,       #{adjTitle}
                     ,       #{procFg}
                     ,       #{regDt}
                     ,       #{regId}
                     ,       #{modDt}
                     ,       #{modId}
                     ,       #{adjReason}
            )
        ) tshad
    </insert>


    <!-- 조정관리 - 조정 HD 등록(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST, TB_ST_STORE_ADJUST_DTL
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 HD을 등록한다.
    -->
    <insert id="insertStAdjHd" parameterType="adjVO">
        /* USE : AdjMapper.insertStAdjHd */
        INSERT INTO TB_ST_STORE_ADJUST
        (
            STORE_CD,
            STORAGE_CD,
            ADJ_DATE,
            SEQ_NO,
            ADJ_TITLE,
            PROC_FG,
            ADJ_STORAGE_CD,
            DTL_CNT,
            TOT_ADJ_AMT,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            REASON_CD
        )
        SELECT  #{storeCd}
             ,       #{storageCd}
             ,       #{adjDate}
             ,       #{seqNo}
             ,       #{adjTitle}
             ,       #{procFg}
             ,       #{adjStorageCd}
              ,      tshad.DTL_CNT
             ,       tshad.TOT_ADJ_AMT
             ,       #{regDt}
             ,       #{regId}
             ,       #{modDt}
             ,       #{modId}
             ,       #{adjReason}
        FROM DUAL a,
        (
           SELECT SUM(DTL_CNT) AS DTL_CNT, SUM(TOT_ADJ_AMT) AS TOT_ADJ_AMT
            FROM
            (
                SELECT 0 AS DTL_CNT, 0 AS TOT_ADJ_AMT
                FROM dual
                UNION ALL
                SELECT NVL(COUNT(tshad.PROD_CD), 0) AS DTL_CNT
                ,       NVL(SUM(tshad.ADJ_AMT), 0) AS TOT_ADJ_AMT
                FROM    TB_ST_STORE_ADJUST_DTL tshad
                WHERE   tshad.STORE_CD      =   #{storeCd}
                AND     tshad.ADJ_DATE      =   #{adjDate}
                AND     tshad.SEQ_NO        =   #{seqNo}
                GROUP
                    BY      tshad.STORE_CD
                     ,       #{storageCd}
                     ,       tshad.ADJ_DATE
                     ,       tshad.SEQ_NO
                     ,       #{adjTitle}
                     ,       #{procFg}
                     ,       #{regDt}
                     ,       #{regId}
                     ,       #{modDt}
                     ,       #{modId}
                     ,       #{adjReason}
            )
        ) tshad
    </insert>


    <!-- 조정관리 - 조정 HD 수정(본사) -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 HD을 수정한다.
    -->
    <update id="updateHqAdjHd" parameterType="adjVO">
        /* USE : AdjMapper.updateHqAdjHd */
        UPDATE  TB_ST_HQ_ADJUST
        SET     (DTL_CNT, TOT_ADJ_AMT)
                                 = (   SELECT  NVL(COUNT(tshad.PROD_CD), 0)
                                            ,       NVL(SUM(tshad.ADJ_AMT), 0)
                                       FROM    TB_ST_HQ_ADJUST_DTL tshad
                                       WHERE   tshad.HQ_OFFICE_CD  =   #{hqOfficeCd}
                                         AND     tshad.ADJ_DATE      =   #{adjDate}
                                         AND     tshad.SEQ_NO        =   #{seqNo}
            )
          ,       ADJ_TITLE   = #{adjTitle}
          ,       REASON_CD = #{adjReason}
          ,       ADJ_STORAGE_CD = #{adjStorageCd}
          ,       PROC_FG     = #{procFg}
          ,       CONFM_DATE  = DECODE(#{procFg}, '0', NULL, SUBSTR(#{modDt}, 0, 8))
          ,       CONFM_ID    = DECODE(#{procFg}, '0', NULL, #{modId})
          ,       MOD_DT      = #{modDt}
          ,       MOD_ID      = #{modId}
        WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
    </update>


    <!-- 조정관리 - 조정 HD 수정(매장) -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST
        PARAM    : adjVO
        COMMENTS : 조정관리 - 조정 HD을 수정한다.
    -->
    <update id="updateStAdjHd" parameterType="adjVO">
        /* USE : AdjMapper.updateStAdjHd */
        UPDATE  TB_ST_STORE_ADJUST
        SET     (DTL_CNT, TOT_ADJ_AMT)
                                 = (   SELECT  NVL(COUNT(tssad.PROD_CD), 0)
                                            ,       NVL(SUM(tssad.ADJ_AMT), 0)
                                       FROM    TB_ST_STORE_ADJUST_DTL tssad
                                       WHERE   tssad.STORE_CD  =   #{storeCd}
                                         AND     tssad.ADJ_DATE      =   #{adjDate}
                                         AND     tssad.SEQ_NO        =   #{seqNo}
            )
          ,       ADJ_TITLE   = #{adjTitle}
          ,       REASON_CD = #{adjReason}
          ,       ADJ_STORAGE_CD = #{adjStorageCd}
          ,       PROC_FG     = #{procFg}
          ,       CONFM_DATE  = DECODE(#{procFg}, '0', NULL, SUBSTR(#{modDt}, 0, 8))
          ,       CONFM_ID    = DECODE(#{procFg}, '0', NULL, #{modId})
          ,       MOD_DT      = #{modDt}
          ,       MOD_ID      = #{modId}
        WHERE   STORE_CD      = #{storeCd}
        AND     ADJ_DATE      = #{adjDate}
        AND     SEQ_NO        = #{seqNo}
    </update>


    <!--                엑셀업로드 시작                 -->
    <!--  조정관리 엑셀업로드 - 엑셀업로드 수량추가 -->
    <!--
        TABLE    : TB_ST_STORE_TEMP_EXCEL, TB_ST_STORE_ADJUST_DTL
        PARAM    : excelUploadStoreVO
        COMMENTS : 조정관리 엑셀업로드 - 엑셀업로드 수량추가인 경우 기존에 등록된 내역을 TEMP 테이블에 입력한다.
    -->
    <insert id="insertExcelUploadAddQty" parameterType="excelUploadStoreVO">
        /* USE : AdjMapper.insertExcelUploadAddQty */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_ST_STORE_TEMP_EXCEL
                (   SESSION_ID
                ,   HQ_OFFICE_CD
                ,   PROD_CD
                ,   QTY
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                SELECT  #{sessionId}
                ,       #{hqOfficeCd}
                ,       PROD_CD
                ,       ADJ_QTY
                ,       #{regDt}
                ,       #{regId}
                ,       #{modDt}
                ,       #{modId}
                FROM    TB_ST_HQ_ADJUST_DTL
                WHERE   HQ_OFFICE_CD=  #{hqOfficeCd}
                AND     ADJ_DATE    =  #{date}
                AND     SEQ_NO      =  #{seqNo}
                AND     PROD_CD     IN (  SELECT  PROD_CD
                FROM    TB_ST_STORE_TEMP_EXCEL
                WHERE   SESSION_ID  = #{sessionId}
                AND     PROD_CD     IS NOT  NULL
                AND     PROD_CD     IN (  SELECT  PROD_CD
                FROM    TB_HQ_PRODUCT
                WHERE   HQ_OFFICE_CD  =  #{hqOfficeCd}
                AND     STOCK_PROD_YN = 'Y'
                AND     USE_YN        = 'Y'
                )
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_ST_STORE_TEMP_EXCEL
                (   SESSION_ID
                ,   STORE_CD
                ,   PROD_CD
                ,   QTY
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                SELECT  #{sessionId}
                ,       #{storeCd}
                ,       PROD_CD
                ,       ADJ_QTY
                ,       #{regDt}
                ,       #{regId}
                ,       #{modDt}
                ,       #{modId}
                FROM    TB_ST_STORE_ADJUST_DTL
                WHERE   STORE_CD    =  #{storeCd}
                AND     ADJ_DATE    =  #{date}
                AND     SEQ_NO      =  #{seqNo}
                AND     PROD_CD     IN (  SELECT  PROD_CD
                FROM    TB_ST_STORE_TEMP_EXCEL
                WHERE   SESSION_ID  = #{sessionId}
                AND     PROD_CD     IS NOT  NULL
                AND     PROD_CD     IN (  SELECT  PROD_CD
                FROM    TB_MS_PRODUCT
                WHERE   STORE_CD  =  #{storeCd}
                AND     STOCK_PROD_YN = 'Y'
                AND     USE_YN        = 'Y'
                )
                )
            </when>
        </choose>
    </insert>


    <!--  조정관리 엑셀업로드 - 기존 데이터중 엑셀업로드 한 데이터와 같은 상품 삭제 -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL, TB_ST_STORE_TEMP_EXCEL
        PARAM    : excelUploadStoreVO
        COMMENTS : 조정관리 엑셀업로드 - 기존 데이터중 엑셀업로드 한 데이터와 같은 상품은 삭제한다.
    -->
    <delete id="deleteAdjToExcelUploadData" parameterType="excelUploadStoreVO">
        /* USE : AdjMapper.deleteAdjToExcelUploadData */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE  TB_ST_HQ_ADJUST_DTL
                WHERE   HQ_OFFICE_CD  = #{hqOfficeCd}
                AND     ADJ_DATE      = #{date}
                AND     SEQ_NO        = #{seqNo}
                AND     PROD_CD       IN  ( SELECT  PROD_CD
                FROM    TB_ST_STORE_TEMP_EXCEL
                WHERE   SESSION_ID  = #{sessionId}
                AND     PROD_CD     IS NOT NULL
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_ST_STORE_ADJUST_DTL
                WHERE   STORE_CD      = #{storeCd}
                AND     ADJ_DATE      = #{date}
                AND     SEQ_NO        = #{seqNo}
                AND     PROD_CD       IN  ( SELECT  PROD_CD
                FROM    TB_ST_STORE_TEMP_EXCEL
                WHERE   SESSION_ID  = #{sessionId}
                AND     PROD_CD     IS NOT NULL
                )
            </when>
        </choose>
    </delete>


    <!--  조정관리 엑셀업로드 - 엑셀업로드 한 수량을 조정수량으로 입력 -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL, TB_ST_STORE_TEMP_EXCEL, TB_HQ_PRODUCT, TB_ST_HQ_STOCK_CUR, TB_ST_HQ_STOCK_MONTHLY
                   TB_ST_STORE_ADJUST_DTL, TB_ST_STORE_TEMP_EXCEL, TB_MS_PRODUCT, TB_ST_STORE_STOCK_CUR, TB_ST_STORE_STOCK_MONTHLY
        PARAM    : excelUploadStoreVO
        COMMENTS : 조정관리 엑셀업로드 - 엑셀업로드 한 수량을 조정수량으로 입력한다.
    -->
    <insert id="insertAdjToExcelUploadData" parameterType="excelUploadStoreVO">
        /* USE : AdjMapper.insertAdjToExcelUploadData */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_ST_HQ_ADJUST_DTL A
                USING
                (
                SELECT  #{hqOfficeCd} AS HQ_OFFICE_CD
                ,       #{date} AS ADJ_DATE
                ,       #{seqNo} AS SEQ_NO
                ,       '00' AS HQ_BRAND_CD
                ,       tpte.PROD_CD
                ,       tpte.COST_UPRC AS COST_UPRC
                ,       tpte.PO_UNIT_QTY
                ,       NVL(tsssc.CURR_QTY,0) AS CURR_QTY
                ,       tpte.QTY AS ADJ_QTY
                ,       tpte.COST_UPRC * tpte.QTY AS ADJ_AMT
                ,       tpte.REMARK
                ,       #{regDt} AS REG_DT
                ,       #{regId} AS REG_ID
                ,       #{modDt} AS MOD_DT
                ,       #{modId} AS MOD_ID
                FROM    (   SELECT  tpte.HQ_OFFICE_CD
                ,       tpte.PROD_CD
                ,       thp.PO_UNIT_QTY
                ,       NVL(MAX(thp.COST_UPRC), 0) AS COST_UPRC
                ,       SUM(tpte.QTY)    AS QTY
                ,       MAX(tpte.REMARK) AS REMARK
                FROM    TB_ST_STORE_TEMP_EXCEL tpte
                ,       TB_HQ_PRODUCT thp
                WHERE   tpte.SESSION_ID     =   #{sessionId}
                AND     tpte.PROD_CD        IS NOT  NULL
                AND     thp.HQ_OFFICE_CD    =   #{hqOfficeCd}
                AND     thp.PROD_CD         =   tpte.PROD_CD
                AND     thp.STOCK_PROD_YN   =   'Y'
                AND     thp.USE_YN          =   'Y'
                GROUP
                BY      tpte.HQ_OFFICE_CD
                ,       tpte.PROD_CD
                ,       thp.PO_UNIT_QTY
                ) tpte
                ,       TB_ST_HQ_STOCK_CUR tsssc
                WHERE   tsssc.HQ_OFFICE_CD  (+) =   tpte.HQ_OFFICE_CD
                AND     tsssc.storage_cd    (+) =   '999'
                AND     tsssc.PROD_CD       (+) =   tpte.PROD_CD
                )   B
                ON (
                A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                AND A.ADJ_DATE = B.ADJ_DATE
                AND A.SEQ_NO = B.SEQ_NO
                AND A.PROD_CD = B.PROD_CD
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                A.COST_UPRC     = B.COST_UPRC,
                A.PO_UNIT_QTY   = B.PO_UNIT_QTY,
                A.CURR_QTY      = B.CURR_QTY,
                A.ADJ_QTY       = A.ADJ_QTY + B.ADJ_QTY,
                A.ADJ_AMT       = A.ADJ_AMT + B.ADJ_AMT,
                A.REMARK        = B.REMARK,
                A.MOD_DT        = B.MOD_DT,
                A.MOD_ID        = B.MOD_ID
                WHEN NOT MATCHED THEN
                INSERT
                (   HQ_OFFICE_CD
                ,   ADJ_DATE
                ,   SEQ_NO
                ,   HQ_BRAND_CD
                ,   PROD_CD
                ,   COST_UPRC
                ,   PO_UNIT_QTY
                ,   CURR_QTY
                ,   ADJ_QTY
                ,   ADJ_AMT
                ,   REMARK
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                ) VALUES (
                B.HQ_OFFICE_CD
                ,   B.ADJ_DATE
                ,   B.SEQ_NO
                ,   B.HQ_BRAND_CD
                ,   B.PROD_CD
                ,   B.COST_UPRC
                ,   B.PO_UNIT_QTY
                ,   B.CURR_QTY
                ,   B.ADJ_QTY
                ,   B.ADJ_AMT
                ,   B.REMARK
                ,   B.REG_DT
                ,   B.REG_ID
                ,   B.MOD_DT
                ,   B.MOD_ID
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_ST_STORE_ADJUST_DTL A
                USING
                (
                SELECT  #{storeCd} AS STORE_CD
                ,       #{date}   AS ADJ_DATE
                ,       #{seqNo}  AS SEQ_NO
                ,       '00' AS HQ_BRAND_CD
                ,       tpte.PROD_CD
                ,       tpte.COST_UPRC AS COST_UPRC
                ,       tpte.PO_UNIT_QTY
                ,       NVL(tsssc.CURR_QTY,0) AS CURR_QTY
                ,       tpte.QTY AS ADJ_QTY
                ,       tpte.COST_UPRC * tpte.QTY AS ADJ_AMT
                ,       tpte.REMARK
                ,       #{regDt} AS REG_DT
                ,       #{regId} AS REG_ID
                ,       #{modDt} AS MOD_DT
                ,       #{modId} AS MOD_ID
                FROM    (   SELECT  tpte.STORE_CD
                ,       tpte.PROD_CD
                ,       tmp.PO_UNIT_QTY
                ,       NVL(MAX(tmp.COST_UPRC), 0) AS COST_UPRC
                ,       SUM(tpte.QTY)    AS QTY
                ,       MAX(tpte.REMARK) AS REMARK
                FROM    TB_ST_STORE_TEMP_EXCEL tpte
                ,       TB_MS_PRODUCT tmp
                WHERE   tpte.SESSION_ID     =   #{sessionId}
                AND     tpte.PROD_CD        IS NOT  NULL
                AND     tmp.STORE_CD        =   #{storeCd}
                AND     tmp.PROD_CD         =   tpte.PROD_CD
                AND     tmp.STOCK_PROD_YN   =   'Y'
                AND     tmp.USE_YN          =   'Y'
                GROUP
                BY      tpte.STORE_CD
                ,       tpte.PROD_CD
                ,       tmp.PO_UNIT_QTY
                ) tpte
                ,       TB_ST_STORE_STOCK_CUR tsssc
                WHERE   tsssc.STORE_CD      (+) =   tpte.STORE_CD
                AND     tsssc.storage_cd    (+) =   '999'
                AND     tsssc.PROD_CD       (+) =   tpte.PROD_CD
                ) B
                ON (
                A.STORE_CD = B.STORE_CD
                AND A.ADJ_DATE = B.ADJ_DATE
                AND A.SEQ_NO = B.SEQ_NO
                AND A.PROD_CD = B.PROD_CD
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                A.COST_UPRC     = B.COST_UPRC,
                A.PO_UNIT_QTY   = B.PO_UNIT_QTY,
                A.CURR_QTY      = B.CURR_QTY,
                A.ADJ_QTY       = A.ADJ_QTY + B.ADJ_QTY,
                A.ADJ_AMT       = A.ADJ_AMT + B.ADJ_AMT,
                A.REMARK        = B.REMARK,
                A.MOD_DT        = B.MOD_DT,
                A.MOD_ID        = B.MOD_ID
                WHEN NOT MATCHED THEN
                INSERT
                (   STORE_CD
                ,   ADJ_DATE
                ,   SEQ_NO
                ,   HQ_BRAND_CD
                ,   PROD_CD
                ,   COST_UPRC
                ,   PO_UNIT_QTY
                ,   CURR_QTY
                ,   ADJ_QTY
                ,   ADJ_AMT
                ,   REMARK
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                ) VALUES (
                B.STORE_CD
                ,   B.ADJ_DATE
                ,   B.SEQ_NO
                ,   B.HQ_BRAND_CD
                ,   B.PROD_CD
                ,   B.COST_UPRC
                ,   B.PO_UNIT_QTY
                ,   B.CURR_QTY
                ,   B.ADJ_QTY
                ,   B.ADJ_AMT
                ,   B.REMARK
                ,   B.REG_DT
                ,   B.REG_ID
                ,   B.MOD_DT
                ,   B.MOD_ID
                )
            </when>
        </choose>
    </insert>


    <!--  조정관리 엑셀업로드 - 정상 입력된 데이터 TEMP 테이블에서 삭제 -->
    <!--
        TABLE    : TB_ST_STORE_TEMP_EXCEL, TB_HQ_PRODUCT
                   TB_ST_STORE_TEMP_EXCEL, TB_MS_PRODUCT
        PARAM    : excelUploadStoreVO
        COMMENTS : 조정관리 엑셀업로드 - 정상 입력된 데이터 TEMP 테이블에서 삭제한다.
    -->
    <delete id="deleteExcelUploadCompleteData" parameterType="excelUploadStoreVO">
        /* USE : AdjMapper.deleteExcelUploadCompleteData */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE  TB_ST_STORE_TEMP_EXCEL
                WHERE   SESSION_ID  = #{sessionId}
                AND     PROD_CD     IS NOT NULL
                AND     PROD_CD     IN  ( SELECT  PROD_CD
                FROM    TB_HQ_PRODUCT
                WHERE   HQ_OFFICE_CD  =   #{hqOfficeCd}
                AND     STOCK_PROD_YN =   'Y'
                AND     USE_YN        =   'Y'
                )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_ST_STORE_TEMP_EXCEL
                WHERE   SESSION_ID  = #{sessionId}
                AND     PROD_CD     IS NOT NULL
                AND     PROD_CD     IN  ( SELECT  PROD_CD
                FROM    TB_MS_PRODUCT
                WHERE   STORE_CD      =   #{storeCd}
                AND     STOCK_PROD_YN =   'Y'
                AND     USE_YN        =   'Y'
                )
            </when>
        </choose>
    </delete>
    <!--                엑셀업로드 끝                 -->

    <select id="getAdjReason" parameterType="sessionInfoVO" resultType="DefaultMap">
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg.toString() == "HQ"'>
                SELECT  NMCODE_CD,
                NMCODE_NM
                FROM    TB_HQ_NMCODE
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     NMCODE_GRP_CD = '135'
                AND     USE_YN = 'Y'
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg.toString() == "STORE"'>
                SELECT  NMCODE_CD,
                NMCODE_NM
                FROM    TB_MS_STORE_NMCODE
                WHERE   STORE_CD = #{storeCd}
                AND     NMCODE_GRP_CD = '135'
                AND     USE_YN = 'Y'
            </when>
        </choose>
    </select>
</mapper>
