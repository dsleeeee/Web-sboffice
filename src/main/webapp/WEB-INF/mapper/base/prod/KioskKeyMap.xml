<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    KioskKeyMap.xml
    키오스크키맵관리
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       이다솜     2020.09.03     최초작성
-->

<mapper namespace="kr.co.solbipos.base.prod.kioskKeyMap.service.impl.KioskKeyMapMapper">
    <!-- 키오스크용 포스 조회 -->
    <!--
        TABLE    : TB_MS_POS_ENVST, TB_MS_POS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크용도로 사용중인 포스를 조회한다.
    -->
    <select id="getKioskPosList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
      /* USE : KioskKeyMapMapper.getKioskPosList */
      SELECT tmp.POS_NO AS NAME,
              tmp.POS_NO AS VALUE
        FROM TB_MS_POS_ENVST tmpe,
              TB_MS_POS tmp
       WHERE tmpe.STORE_CD = #{storeCd}
         AND tmp.STORE_CD = tmpe.STORE_CD
         AND tmp.POS_NO = tmpe.POS_NO
         AND tmpe.ENVST_CD = '4019'  <!-- 포스용도 -->
         AND tmpe.ENVST_VAL = '6'    <!-- 6: KIOSK -->
    </select>

    <!-- 키오스크 키맵그룹 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵그룹을 가져온다.
    -->
    <select id="getKioskTuClsTypeList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskTuClsTypeList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  DISTINCT thkc.TU_CLS_TYPE AS VALUE
                ,       NVL2(thkg.TU_CLS_TYPE_NM, '[' || thkc.TU_CLS_TYPE || ']' || thkg.TU_CLS_TYPE_NM, '[' || thkc.TU_CLS_TYPE || ']')AS NAME
                FROM    TB_HQ_KIOSK_CLS thkc
                ,       TB_HQ_KIOSK_GROUP thkg
                WHERE   thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                AND     thkc.TU_CLS_TYPE NOT IN ('00')
                ORDER BY thkc.TU_CLS_TYPE
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  DISTINCT thkc.TU_CLS_TYPE AS VALUE
                ,       NVL2(thkg.TU_CLS_TYPE_NM, '[' || thkc.TU_CLS_TYPE || ']' || thkg.TU_CLS_TYPE_NM, '[' || thkc.TU_CLS_TYPE || ']')AS NAME
                FROM    TB_MS_KIOSK_CLS thkc
                ,       TB_MS_KIOSK_GROUP thkg
                WHERE   thkc.STORE_CD = #{storeCd}
                AND     thkc.POS_NO = #{posNo}
                AND     thkc.STORE_CD = thkg.STORE_CD(+)
                AND     thkc.POS_NO = thkg.POS_NO(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                AND     thkc.TU_CLS_TYPE NOT IN ('00')
                ORDER BY thkc.TU_CLS_TYPE
            </when>
        </choose>
    </select>

    <!-- 매장수정허용분류 조회 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY_CLASS, TB_HQ_NMCODE
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장수정허용분류를 조회한다.
    -->
    <select id="getStoreModGrpList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getStoreModGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thkc.TU_CLS_TYPE
                ,       thkg.TU_CLS_TYPE_NM
                ,		thkc.TU_CLS_CD
                ,		thkc.TU_CLS_NM
                ,		NVL(thn.NMCODE_ITEM_2, 'N') AS STORE_MOD_YN
                FROM 	TB_HQ_KIOSK_CLS thkc
                ,       TB_HQ_KIOSK_GROUP thkg
                ,		TB_HQ_NMCODE thn
                WHERE 	thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                AND 	thkc.HQ_OFFICE_CD = thn.HQ_OFFICE_CD(+)
                AND 	thkc.TU_CLS_TYPE = thn.NMCODE_NM(+)
                AND 	thkc.TU_CLS_CD = thn.NMCODE_ITEM_1(+)
                AND 	'229' = thn.NMCODE_GRP_CD(+)
                <if test='tuClsType != null and tuClsType != ""'>
                    AND thkc.TU_CLS_TYPE = #{tuClsType}
                </if>
                <if test='storeModYn != null and storeModYn == "Y"'>
                    AND thn.NMCODE_ITEM_2 = 'Y'
                </if>
                <if test='storeModYn != null and storeModYn == "N"'>
                    AND (thn.NMCODE_ITEM_2 = 'N' OR thn.NMCODE_ITEM_2 IS NULL)
                </if>
                AND     thkc.TU_CLS_TYPE NOT IN ('00')
                ORDER BY thkc.TU_CLS_TYPE, thkc.TU_CLS_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	thkc.TU_CLS_TYPE
                ,       thkg.TU_CLS_TYPE_NM
                ,		thkc.TU_CLS_CD
                ,		thkc.TU_CLS_NM
                ,		NVL(thn.NMCODE_ITEM_2, 'N') AS STORE_MOD_YN
                FROM 	TB_HQ_KIOSK_CLS thkc
                ,       TB_HQ_KIOSK_GROUP thkg
                ,		TB_HQ_NMCODE thn
                WHERE 	thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
                AND     thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
                AND 	thkc.HQ_OFFICE_CD = thn.HQ_OFFICE_CD(+)
                AND 	thkc.TU_CLS_TYPE = thn.NMCODE_NM(+)
                AND 	thkc.TU_CLS_CD = thn.NMCODE_ITEM_1(+)
                AND 	'229' = thn.NMCODE_GRP_CD(+)
                <if test='tuClsType != null and tuClsType != ""'>
                    AND thkc.TU_CLS_TYPE = #{tuClsType}
                </if>
                AND thn.NMCODE_ITEM_2 = 'Y'
                AND     thkc.TU_CLS_TYPE NOT IN ('00')
                ORDER BY thkc.TU_CLS_TYPE, thkc.TU_CLS_CD
            </when>
        </choose>
    </select>


    <!-- 매장수정허용분류 저장 -->
    <!--
        TABLE    : TB_MS_STORE
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장수정허용분류를 저장한다.
    -->
    <insert id="saveStoreModGrp" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveStoreModGrp */
        <selectKey keyProperty="nmcodeCd" resultType="String" order="BEFORE">
            SELECT  LPAD(NVL(MAX(TO_NUMBER(NMCODE_CD)), 0) + 1, 4, '0')
            FROM    TB_HQ_NMCODE
            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
            AND     NMCODE_GRP_CD = '229'
        </selectKey>
        MERGE INTO TB_HQ_NMCODE thn
        USING DUAL
        ON (
            HQ_OFFICE_CD = #{hqOfficeCd}
        AND NMCODE_GRP_CD = '229'
        AND NMCODE_NM = #{tuClsType}
        AND NMCODE_ITEM_1 = #{tuClsCd}
        )
        WHEN MATCHED THEN
        UPDATE
        SET
            NMCODE_ITEM_2   = #{storeModYn}
        ,   MOD_DT          = #{modDt}
        ,   MOD_ID          = #{modId}
        WHEN NOT MATCHED THEN
        INSERT
        (
            HQ_OFFICE_CD
        ,   NMCODE_GRP_CD
        ,   NMCODE_CD
        ,   PARENT_CD
        ,   NMCODE_NM
        ,   NMCODE_ITEM_1
        ,   NMCODE_ITEM_2
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        )
        VALUES
        (
            #{hqOfficeCd}
        ,   '229'
        ,   #{nmcodeCd}
        ,   '229'
        ,   #{tuClsType}
        ,   #{tuClsCd}
        ,   #{storeModYn}
        ,   #{regDt}
        ,   #{regId}
        ,   #{modDt}
        ,   #{modId}
        )
    </insert>


    <!-- 키맵그룹_조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_GROUP, TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 터치키그룹을 조회한다.
    -->
    <select id="getClsTypeList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getClsTypeList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	DISTINCT thkc.TU_CLS_TYPE
                ,       thkg.TU_CLS_TYPE_NM
                FROM 	TB_HQ_KIOSK_CLS thkc
                ,		TB_HQ_KIOSK_GROUP thkg
                WHERE	thkc.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD (+)
                AND 	thkc.TU_CLS_TYPE = thkg.TU_CLS_TYPE (+)
                AND     thkc.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkc.TU_CLS_TYPE NOT IN ('00')
                <if test="tuClsType != null and tuClsType !=''">
                    AND thkc.TU_CLS_TYPE LIKE '%'||#{tuClsType}||'%'
                </if>
                <if test="tuClsTypeNm != null and tuClsTypeNm !=''">
                    AND thkg.TU_CLS_TYPE_NM LIKE '%'||#{tuClsTypeNm}||'%'
                </if>
                ORDER BY thkc.TU_CLS_TYPE
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT	DISTINCT tmkc.TU_CLS_TYPE
                ,       tmkg.TU_CLS_TYPE_NM
                ,       tmkc.POS_NO
                FROM 	TB_MS_KIOSK_CLS tmkc
                ,		TB_MS_KIOSK_GROUP tmkg
                WHERE	tmkc.STORE_CD = tmkg.STORE_CD (+)
                AND 	tmkc.POS_NO = tmkg.POS_NO (+)
                AND 	tmkc.TU_CLS_TYPE = tmkg.TU_CLS_TYPE (+)
                AND     tmkc.STORE_CD = #{storeCd}
                AND     tmkc.POS_NO = #{posNo}
                AND     tmkc.TU_CLS_TYPE NOT IN ('00')
                <if test="tuClsType != null and tuClsType !=''">
                    AND tmkc.TU_CLS_TYPE LIKE '%'||#{tuClsType}||'%'
                </if>
                <if test="tuClsTypeNm != null and tuClsTypeNm !=''">
                    AND tmkg.TU_CLS_TYPE_NM LIKE '%'||#{tuClsTypeNm}||'%'
                </if>
                ORDER BY tmkc.TU_CLS_TYPE
            </when>
        </choose>
    </select>

    <!-- 터치키그룹 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_GROUP, TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 터치키그룹을 저장한다.
    -->
    <insert id="saveClsType" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveClsType */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_KIOSK_GROUP thkg
                USING DUAL
                ON (
                    HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                    TU_CLS_TYPE_NM  = #{tuClsTypeNm}
                ,   MOD_DT      = #{modDt}
                ,   MOD_ID      = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                    HQ_OFFICE_CD
                ,   TU_CLS_TYPE
                ,   TU_CLS_TYPE_NM
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                )
                VALUES
                (
                    #{hqOfficeCd}
                ,   #{tuClsType}
                ,   #{tuClsTypeNm}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_GROUP A
                USING
                    (
                        SELECT 	STORE_CD
                        ,		POS_NO
                        ,		#{tuClsType} 	AS TU_CLS_TYPE
                        ,   	#{tuClsTypeNm}	AS TU_CLS_TYPE_NM
                        ,   	#{regDt}	    AS REG_DT
                        ,   	#{regId}	    AS REG_ID
                        ,   	#{modDt}	    AS MOD_DT
                        ,   	#{modId}	    AS MOD_ID
                        FROM 	TB_MS_POS_ENVST
                        WHERE 	STORE_CD 	= #{storeCd}
                        AND 	ENVST_CD 	= '4019'
                        AND 	ENVST_VAL 	= '6'
                        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                            AND POS_NO      = #{posNo}
                        </if>
                    ) B
                ON  (
                            B.STORE_CD      = A.STORE_CD
                        AND B.POS_NO        = A.POS_NO
                        AND B.TU_CLS_TYPE   = A.TU_CLS_TYPE
                    )
                WHEN MATCHED THEN
                UPDATE
                SET
                        A.TU_CLS_TYPE_NM    = B.TU_CLS_TYPE_NM
                ,       A.MOD_DT            = B.MOD_DT
                ,       A.MOD_ID            = B.MOD_ID
                WHEN NOT MATCHED THEN
                INSERT
                    (
                        A.STORE_CD
                    ,   A.POS_NO
                    ,   A.TU_CLS_TYPE
                    ,   A.TU_CLS_TYPE_NM
                    ,   A.REG_DT
                    ,   A.REG_ID
                    ,   A.MOD_DT
                    ,   A.MOD_ID
                    )
                VALUES
                    (
                        B.STORE_CD
                    ,   B.POS_NO
                    ,   B.TU_CLS_TYPE
                    ,   B.TU_CLS_TYPE_NM
                    ,   B.REG_DT
                    ,   B.REG_ID
                    ,   B.MOD_DT
                    ,   B.MOD_ID
                    )
            </when>
        </choose>
    </insert>

    <!-- 터치키그룹 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_GROUP, TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 터치키그룹을 저장한다.
    -->
    <insert id="copyKioskTuClsTypeNm" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskTuClsTypeNm */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_KIOSK_GROUP A
                USING   (
                SELECT  HQ_OFFICE_CD
                ,       #{tuClsType} AS TU_CLS_TYPE
                ,       TU_CLS_TYPE_NM
                ,       #{regDt} AS REG_DT
                ,       #{regId} AS REG_ID
                ,       #{modDt} AS MOD_DT
                ,       #{modId} AS MOD_ID
                FROM    TB_HQ_KIOSK_GROUP
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     TU_CLS_TYPE = #{orgTuClsType}
                ) B
                ON (
                    A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                AND A.TU_CLS_TYPE = B.TU_CLS_TYPE
                )
                WHEN MATCHED THEN
                UPDATE
                SET A.TU_CLS_TYPE_NM = B.TU_CLS_TYPE_NM
                ,   A.MOD_ID = B.MOD_ID
                ,   A.MOD_DT = B.MOD_DT
                WHEN NOT MATCHED THEN
                INSERT
                (
                    A.HQ_OFFICE_CD
                ,   A.TU_CLS_TYPE
                ,   A.TU_CLS_TYPE_NM
                ,   A.REG_DT
                ,   A.REG_ID
                ,   A.MOD_DT
                ,   A.MOD_ID
                )
                VALUES
                (
                    B.HQ_OFFICE_CD
                ,   B.TU_CLS_TYPE
                ,   B.TU_CLS_TYPE_NM
                ,   B.REG_DT
                ,   B.REG_ID
                ,   B.MOD_DT
                ,   B.MOD_ID
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_GROUP A
                USING   (
                            SELECT  STORE_CD
                            <choose>
                                <when test="tuClsType != null and tuClsType != ''">
                                ,   #{tuClsType} AS TU_CLS_TYPE
                                </when>
                                <otherwise>
                                ,   TU_CLS_TYPE
                                </otherwise>
                            </choose>
                            ,       #{posNo} AS POS_NO
                            ,       TU_CLS_TYPE_NM
                            ,       #{regDt} AS REG_DT
                            ,       #{regId} AS REG_ID
                            ,       #{modDt} AS MOD_DT
                            ,       #{modId} AS MOD_ID
                            FROM    TB_MS_KIOSK_GROUP
                            WHERE   STORE_CD = #{storeCd}
                            AND     POS_NO = #{orgPosNo}
                            AND     TU_CLS_TYPE = #{orgTuClsType}
                        ) B
                ON  (
                            A.STORE_CD = B.STORE_CD
                        AND A.POS_NO = B.POS_NO
                        AND A.TU_CLS_TYPE = B.TU_CLS_TYPE
                    )
                WHEN MATCHED THEN
                UPDATE
                SET A.TU_CLS_TYPE_NM = B.TU_CLS_TYPE_NM
                ,   A.MOD_ID = B.MOD_ID
                ,   A.MOD_DT = B.MOD_DT
                WHEN NOT MATCHED THEN
                INSERT
                (
                    A.STORE_CD
                ,   A.POS_NO
                ,   A.TU_CLS_TYPE
                ,   A.TU_CLS_TYPE_NM
                ,   A.REG_DT
                ,   A.REG_ID
                ,   A.MOD_DT
                ,   A.MOD_ID
                )
                VALUES
                (
                    B.STORE_CD
                ,   B.POS_NO
                ,   B.TU_CLS_TYPE
                ,   B.TU_CLS_TYPE_NM
                ,   B.REG_DT
                ,   B.REG_ID
                ,   B.MOD_DT
                ,   B.MOD_ID
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵그룹코드 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 키맵그룹 생성 시 키맵그룹코드를 생성한다.
    -->
    <select id="getKiosTuClsTypeCode" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getKiosTuClsTypeCode */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  FN_GET_MAX_CODE_KIOSK_CLS(#{hqOfficeCd}, '')  AS  GRP_CD
                FROM    DUAL
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  FN_GET_MAX_CODE_KIOSK_CLS(#{storeCd}, '')  AS  GRP_CD
                FROM    DUAL
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(분류) 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류)를 가져온다.
    -->
    <select id="getKioskCategory" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    SELECT HQ_OFFICE_CD,
                            TU_CLS_TYPE,
                            TU_CLS_CD,
                            TU_CLS_NM,
                            TU_PAGE,
                            X,
                            Y,
                            WIDTH,
                            HEIGHT,
                            INDEX_NO,
                            CLS_FG,
                            REG_DT,
                            REG_ID,
                            MOD_DT,
                            MOD_ID,
                            CLS_MEMO,
                            TU_M_CLS_FG,
                            NVL((
                            SELECT  NMCODE_ITEM_2
                            FROM    TB_HQ_NMCODE thn
                            WHERE   thn.HQ_OFFICE_CD = tmkc.HQ_OFFICE_CD
                            AND     thn.NMCODE_GRP_CD = '229'
                            AND     thn.NMCODE_NM = tmkc.TU_CLS_TYPE
                            AND     thn.NMCODE_ITEM_1 = tmkc.TU_CLS_CD
                            ), 'N') AS STORE_MOD_YN
                     FROM TB_HQ_KIOSK_CLS tmkc
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                      AND TU_CLS_TYPE = #{tuClsType}
                ORDER BY INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                    SELECT STORE_CD,
                            POS_NO,
                            TU_CLS_TYPE,
                            TU_CLS_CD,
                            TU_CLS_NM,
                            TU_PAGE,
                            X,
                            Y,
                            WIDTH,
                            HEIGHT,
                            INDEX_NO,
                            CLS_FG,
                            REG_DT,
                            REG_ID,
                            MOD_DT,
                            MOD_ID,
                            CLS_MEMO,
                            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tmkc.STORE_CD AND POS_NO = tmkc.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG,
                            NVL((
                            SELECT  NMCODE_ITEM_2
                            FROM    TB_HQ_NMCODE thn
                            WHERE   thn.HQ_OFFICE_CD = #{hqOfficeCd}
                            AND     thn.NMCODE_GRP_CD = '229'
                            AND     thn.NMCODE_NM = tmkc.TU_CLS_TYPE
                            AND     thn.NMCODE_ITEM_1 = tmkc.TU_CLS_CD
                            ), 'N') AS STORE_MOD_YN
                    FROM TB_MS_KIOSK_CLS tmkc
                   WHERE STORE_CD = #{storeCd}
                     AND POS_NO = #{posNo}
                     AND TU_CLS_TYPE = #{tuClsType}
               ORDER BY INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(분류) 저장 - 생성 시 카테고리 코드 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성 시 카테고리 코드를 생성한다.
    -->
    <select id="getKioskCategoryCode" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getKioskCategoryCode */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              SELECT LPAD(NVL(MAX(TU_CLS_CD), '0') + 1, 2, '0')
                FROM TB_HQ_KIOSK_CLS
               WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                 AND TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
              SELECT LPAD(NVL(MAX(TU_CLS_CD), '0') + 1, 2, '0')
                FROM TB_MS_KIOSK_CLS
               WHERE STORE_CD = #{storeCd}
                 AND POS_NO = #{posNo}
                 AND TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(분류) 저장 - 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성한다.
    -->
    <insert id="insertKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    INSERT INTO TB_HQ_KIOSK_CLS
                    (
                        HQ_OFFICE_CD
                    ,   TU_CLS_TYPE
                    ,   TU_CLS_CD
                    ,   TU_CLS_NM
                    ,   TU_PAGE
                    ,   X
                    ,   Y
                    ,   WIDTH
                    ,   HEIGHT
                    ,   INDEX_NO
                    ,   CLS_FG
                    ,   REG_DT
                    ,   REG_ID
                    ,   MOD_DT
                    ,   MOD_ID
                    ,   CLS_MEMO
                    ,   TU_M_CLS_FG
                    )
                    VALUES
                    (
                        #{hqOfficeCd}
                    ,   #{tuClsType}
                    ,   #{tuClsCd}
                    ,   #{tuClsNm}
                    ,   #{tuPage}
                    ,   #{x}
                    ,   #{y}
                    ,   #{width}
                    ,   #{height}
                    ,   #{indexNo}
                    ,   #{clsFg}
                    ,   #{regDt}
                    ,   #{regId}
                    ,   #{modDt}
                    ,   #{modId}
                    ,   #{clsMemo}
                    ,   #{tuMClsFg}
                    )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_CLS A
                USING
                    (
                        SELECT 	STORE_CD
                        ,		POS_NO
                        ,		#{tuClsType}    AS TU_CLS_TYPE
                        ,		#{tuClsCd}	    AS TU_CLS_CD
                        ,		#{tuClsNm}	    AS TU_CLS_NM
                        ,		#{tuPage}	    AS TU_PAGE
                        ,		#{x}            AS X
                        ,		#{y}            AS Y
                        ,		#{width}        AS WIDTH
                        ,		#{height}       AS HEIGHT
                        ,		#{indexNo}      AS INDEX_NO
                        ,		#{clsFg}        AS CLS_FG
                        ,		#{regDt}	    AS REG_DT
                        ,		#{regId}	    AS REG_ID
                        ,		#{modDt}	    AS MOD_DT
                        ,		#{modId}	    AS MOD_ID
                        ,		#{clsMemo}	    AS CLS_MEMO
                        FROM 	TB_MS_POS_ENVST
                        WHERE 	STORE_CD    = #{storeCd}
                        AND 	ENVST_CD    = '4019'
                        AND 	ENVST_VAL   = '6'
                        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                            AND POS_NO      = #{posNo}
                        </if>
                    ) B
                ON
                    (
                            B.STORE_CD 		= A.STORE_CD
                        AND B.POS_NO		= A.POS_NO
                        AND B.TU_CLS_TYPE 	= A.TU_CLS_TYPE
                        AND B.TU_CLS_CD 	= A.TU_CLS_CD
                    )
                WHEN MATCHED THEN
                UPDATE
                SET		A.TU_CLS_NM     = B.TU_CLS_NM
                ,       A.TU_PAGE       = B.TU_PAGE
                ,       A.X             = B.X
                ,       A.Y             = B.Y
                ,       A.WIDTH         = B.WIDTH
                ,       A.HEIGHT        = B.HEIGHT
                ,       A.INDEX_NO      = B.INDEX_NO
                ,       A.CLS_FG        = B.CLS_FG
                ,       A.MOD_DT        = B.MOD_DT
                ,       A.MOD_ID        = B.MOD_ID
                ,       A.CLS_MEMO      = B.CLS_MEMO
                WHEN NOT MATCHED THEN
                INSERT
                    (
                            STORE_CD
                    ,       POS_NO
                    ,       TU_CLS_TYPE
                    ,       TU_CLS_CD
                    ,       TU_CLS_NM
                    ,       TU_PAGE
                    ,       X
                    ,       Y
                    ,       WIDTH
                    ,       HEIGHT
                    ,       INDEX_NO
                    ,       CLS_FG
                    ,       REG_DT
                    ,       REG_ID
                    ,       MOD_DT
                    ,       MOD_ID
                    ,       CLS_MEMO
                    )
                VALUES
                    (
                            B.STORE_CD
                    ,       B.POS_NO
                    ,       B.TU_CLS_TYPE
                    ,       B.TU_CLS_CD
                    ,       B.TU_CLS_NM
                    ,       B.TU_PAGE
                    ,       B.X
                    ,       B.Y
                    ,       B.WIDTH
                    ,       B.HEIGHT
                    ,       B.INDEX_NO
                    ,       B.CLS_FG
                    ,       B.REG_DT
                    ,       B.REG_ID
                    ,       B.MOD_DT
                    ,       B.MOD_ID
                    ,       B.CLS_MEMO
                    )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 카테고리(분류) 저장 - 수정 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 수정한다.
    -->
    <update id="updateKioskCategory" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.updateKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                 UPDATE TB_HQ_KIOSK_CLS
                    SET TU_CLS_NM = #{tuClsNm},
                         TU_PAGE = #{tuPage},
                         X = #{x},
                         Y = #{y},
                         WIDTH = #{width},
                         HEIGHT = #{height},
                         INDEX_NO = #{indexNo},
                         CLS_FG = #{clsFg},
                         MOD_DT = #{modDt},
                         MOD_ID = #{modId},
                         CLS_MEMO = #{clsMemo}
                  WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    AND TU_CLS_TYPE = #{tuClsType}
                    AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                  UPDATE TB_MS_KIOSK_CLS
                     SET TU_CLS_NM = #{tuClsNm},
                          TU_PAGE = #{tuPage},
                          X = #{x},
                          Y = #{y},
                          WIDTH = #{width},
                          HEIGHT = #{height},
                          INDEX_NO = #{indexNo},
                          CLS_FG = #{clsFg},
                          MOD_DT = #{modDt},
                          MOD_ID = #{modId},
                          CLS_MEMO = #{clsMemo}
                   WHERE STORE_CD = #{storeCd}
                     AND POS_NO = #{posNo}
                     AND TU_CLS_TYPE = #{tuClsType}
                     AND TU_CLS_CD = #{tuClsCd}
            </when>
        </choose>
    </update>

    <!-- 키오스크 카테고리(분류) 저장 - 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제한다.
    -->
    <delete id="deleteKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE  TB_HQ_KIOSK_CLS
                WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                AND     TU_CLS_TYPE     = #{tuClsType}
                AND     TU_CLS_CD       = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_MS_KIOSK_CLS
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
                AND     TU_CLS_CD   = #{tuClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 카테고리(분류) 저장 - 카테고리 삭제 시, 카테고리에 속한 키맵도 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제 시, 카테고리에 속한 키맵도 삭제한다.
    -->
    <delete id="deleteAllKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_MS_KIOSK_KEY
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
                AND     TU_CLS_CD   = #{tuClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 카테고리(분류) 저장 - 카테고리 삭제 시, (중분류 사용) 카테고리에 속한 상품도 삭제 -->
    <!--
        TABLE    :
        PARAM    :
        COMMENTS :
    -->
    <delete id="deleteAllKioskKeyMapM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKeyMapM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_KEY
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD IN (SELECT TU_M_CLS_CD FROM TB_HQ_KIOSK_M_CLS WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND TU_CLS_TYPE = #{tuClsType} AND TU_CLS_CD = #{tuClsCd})
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_MS_KIOSK_KEY
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
                AND     TU_CLS_CD   IN (SELECT TU_M_CLS_CD FROM TB_MS_KIOSK_M_CLS WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND TU_CLS_TYPE = #{tuClsType} AND TU_CLS_CD = #{tuClsCd})
            </when>
        </choose>
    </delete>

    <!-- 키오스크 카테고리(분류) 저장 - 카테고리 삭제 시, (중분류 사용) 카테고리에 속한 중분류도 삭제 -->
    <!--
        TABLE    :
        PARAM    :
        COMMENTS :
    -->
    <delete id="deleteAllKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_MS_KIOSK_M_CLS
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
                AND     TU_CLS_CD   = #{tuClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 키맵 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키를 가져온다.
    -->
    <select id="getKioskKeyMap" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    SELECT thkk.HQ_OFFICE_CD,
                            thkk.TU_CLS_TYPE,
                            thkk.TU_CLS_CD,
                            thkk.TU_KEY_CD,
                            thkk.PROD_CD,
                            thp.PROD_NM,
                            thkk.TU_PAGE,
                            thkk.X,
                            thkk.Y,
                            thkk.WIDTH,
                            thkk.HEIGHT,
                            thkk.INDEX_NO,
                            thkk.CLS_FG,
                            thkk.REG_DT,
                            thkk.REG_ID,
                            thkk.MOD_DT,
                            thkk.MOD_ID,
                            (SELECT PROD_NM FROM TB_HQ_PRODUCT tmp2 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = thp.GROUP_PROD_CD) AS GROUP_PROD_NM,
                            thp.REMARK,
                            (SELECT LISTAGG(TO_CHAR(TO_DATE(S_SALE_TIME, 'HH24MI'), 'HH24:MI') || '~' || TO_CHAR(TO_DATE(E_SALE_TIME, 'HH24MI'), 'HH24:MI'), ',') WITHIN GROUP (ORDER BY S_SALE_TIME || '~' || E_SALE_TIME) AS SALE_TIME FROM TB_HQ_PRODUCT_SALE_TIME thpst WHERE thpst.HQ_OFFICE_CD = #{hqOfficeCd} AND thpst.PROD_CD = thp.PROD_CD ) AS SALE_TIME -- KIOSK 시간설정
                      FROM TB_HQ_KIOSK_KEY thkk,
                            TB_HQ_PRODUCT thp
                     WHERE thp.HQ_OFFICE_CD (+)= thkk.HQ_OFFICE_CD
                       AND thp.PROD_CD (+)= thkk.PROD_CD
                       AND thkk.HQ_OFFICE_CD = #{hqOfficeCd}
                       AND thkk.TU_CLS_TYPE = #{tuClsType}
                       AND thkk.TU_CLS_CD = #{tuClsCd}
                 ORDER BY thkk.INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                    SELECT tmkk.STORE_CD,
                            tmkk.POS_NO,
                            tmkk.TU_CLS_CD,
                            tmkk.TU_KEY_CD,
                            tmkk.PROD_CD,
                            tmp.PROD_NM,
                            tmkk.TU_PAGE,
                            tmkk.X,
                            tmkk.Y,
                            tmkk.WIDTH,
                            tmkk.HEIGHT,
                            tmkk.INDEX_NO,
                            tmkk.CLS_FG,
                            tmkk.REG_DT,
                            tmkk.REG_ID,
                            tmkk.MOD_DT,
                            tmkk.MOD_ID,
                            (SELECT PROD_NM FROM TB_MS_PRODUCT tmp2 WHERE STORE_CD = #{storeCd} AND PROD_CD = tmp.GROUP_PROD_CD) AS GROUP_PROD_NM,
                            DECODE(NVL(tmp.KIOSK_DISPLAY_YN, 'Y'), 'Y', '노출', 'N', '비노출') AS KIOSK_DISPLAY_YN,
                            DECODE(NVL(tmp.SOLD_OUT_YN, 'N'), 'Y', '품절', 'N', '정상') AS SOLD_OUT_YN,
                            tmp.REMARK,
                            DECODE(NVL(tmp.CHANNEL_SOLD_OUT_YN, 'N'), 'Y', '품절', 'N', '정상') AS CHANNEL_SOLD_OUT_YN,
                            (SELECT LISTAGG(TO_CHAR(TO_DATE(S_SALE_TIME, 'HH24MI'), 'HH24:MI') || '~' || TO_CHAR(TO_DATE(E_SALE_TIME, 'HH24MI'), 'HH24:MI'), ',') WITHIN GROUP (ORDER BY S_SALE_TIME || '~' || E_SALE_TIME) AS SALE_TIME FROM TB_MS_PRODUCT_SALE_TIME tmpst WHERE tmpst.STORE_CD = #{storeCd} AND tmpst.PROD_CD = tmp.PROD_CD ) AS SALE_TIME -- KIOSK 시간설정
                      FROM TB_MS_KIOSK_KEY tmkk,
                            TB_MS_PRODUCT tmp
                     WHERE tmp.STORE_CD (+)= tmkk.STORE_CD
                       AND tmp.PROD_CD (+)= tmkk.PROD_CD
                       AND tmkk.STORE_CD = #{storeCd}
                       AND tmkk.POS_NO = #{posNo}
                       AND tmkk.TU_CLS_TYPE = #{tuClsType}
                       AND tmkk.TU_CLS_CD = #{tuClsCd}
                  ORDER BY tmkk.INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 수정 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 수정한다.
    -->
    <update id="updateKioskKeyMap" parameterType="kioskKeyMapVO">
      /* USE : KioskKeyMapMapper.updateKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                    UPDATE TB_HQ_KIOSK_KEY
                       SET TU_PAGE = #{tuPage},
                            X = #{x},
                            Y = #{y},
                            WIDTH = #{width},
                            HEIGHT = #{height},
                            INDEX_NO = #{indexNo},
                            CLS_FG = #{clsFg},
                            MOD_DT = #{modDt},
                            MOD_ID = #{modId}
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                      AND TU_CLS_TYPE = #{tuClsType}
                      AND TU_CLS_CD = #{tuClsCd}
                      AND TU_KEY_CD = #{tuKeyCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                  UPDATE TB_MS_KIOSK_KEY
                     SET TU_PAGE = #{tuPage},
                          X = #{x},
                          Y = #{y},
                          WIDTH = #{width},
                          HEIGHT = #{height},
                          INDEX_NO = #{indexNo},
                          CLS_FG = #{clsFg},
                          MOD_DT = #{modDt},
                          MOD_ID = #{modId}
                   WHERE STORE_CD = #{storeCd}
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND POS_NO   = #{posNo}
                    </if>
                     AND TU_CLS_TYPE = #{tuClsType}
                     AND TU_CLS_CD = #{tuClsCd}
                     AND TU_KEY_CD = #{tuKeyCd}
            </when>
        </choose>
    </update>

    <!-- 키오스크 키맵 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 삭제한다.
    -->
    <delete id="deleteKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
                   AND TU_KEY_CD = #{tuKeyCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_KEY
                 WHERE STORE_CD = #{storeCd}
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND POS_NO      = #{posNo}
                    </if>
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
                   AND TU_KEY_CD = #{tuKeyCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_KIOSK_KEY
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵으로 등록할 상품을 조회한다. ( 본사/매장 )
    -->
    <select id="getKioskProdList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT thp.PROD_CD,
                        thp.PROD_NM,
                        NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                        (CASE WHEN thkk.PROD_CD IS NULL THEN 'N' ELSE 'Y' END) AS REG_YN,
                        (SELECT PROD_NM FROM TB_HQ_PRODUCT thp2 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = thp.GROUP_PROD_CD) AS GROUP_PROD_NM,
                        thp.REMARK,
                        (SELECT LISTAGG(TO_CHAR(TO_DATE(S_SALE_TIME, 'HH24MI'), 'HH24:MI') || '~' || TO_CHAR(TO_DATE(E_SALE_TIME, 'HH24MI'), 'HH24:MI'), ',') WITHIN GROUP (ORDER BY S_SALE_TIME || '~' || E_SALE_TIME) AS SALE_TIME FROM TB_HQ_PRODUCT_SALE_TIME thpst WHERE thpst.HQ_OFFICE_CD = #{hqOfficeCd} AND thpst.PROD_CD = thp.PROD_CD ) AS SALE_TIME -- KIOSK 시간설정
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_HQ_PRODUCT thp
                  LEFT OUTER JOIN (
                                        SELECT HQ_OFFICE_CD,
                                                PROD_CD,
                                                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                                          FROM TB_HQ_PRODUCT_SALE_PRICE
                                         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                        <![CDATA[
                                           AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                           AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                        ]]>
                                           AND SALE_PRC_FG = '1'
                                     GROUP BY HQ_OFFICE_CD, PROD_CD
                                    ) thpsp ON thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                                           AND thp.PROD_CD = thpsp.PROD_CD
                INNER JOIN TB_HQ_OFFICE tho ON tho.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                LEFT OUTER JOIN (
                                        SELECT HQ_OFFICE_CD,
                                                PROD_CD
                                          FROM TB_HQ_KIOSK_KEY
                                         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                           AND TU_CLS_TYPE = #{tuClsType}
                                           AND TU_CLS_CD = #{tuClsCd}
                                     GROUP BY HQ_OFFICE_CD, PROD_CD
                ) thkk ON thp.HQ_OFFICE_CD = thkk.HQ_OFFICE_CD
                AND thp.PROD_CD = thkk.PROD_CD
                WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_HQ_PRODUCT_CLASS
                                                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                        SELECT 1
                          FROM TB_HQ_PRODUCT_BARCD
                         WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                           AND PROD_CD = thp.PROD_CD
                           AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND thp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <choose>
                    <when test='regYn != null and regYn == "Y"'>
                        AND thkk.PROD_CD IS NOT NULL
                    </when>
                    <when test='regYn != null and regYn == "N"'>
                        AND thkk.PROD_CD IS NULL
                    </when>
                    <otherwise></otherwise>
                </choose>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD,
                        tmp.PROD_NM,
                        NVL(tmpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                        (CASE WHEN tmkk.PROD_CD IS NULL THEN 'N' ELSE 'Y' END) AS REG_YN,
                        (SELECT PROD_NM FROM TB_MS_PRODUCT tmp2 WHERE STORE_CD = #{storeCd} AND PROD_CD = tmp.GROUP_PROD_CD) AS GROUP_PROD_NM,
                        DECODE(NVL(tmp.KIOSK_DISPLAY_YN, 'Y'), 'Y', '노출', 'N', '비노출') AS KIOSK_DISPLAY_YN,
                        DECODE(NVL(tmp.SOLD_OUT_YN, 'N'), 'Y', '품절', 'N', '정상') AS SOLD_OUT_YN,
                        tmp.REMARK,
                        DECODE(NVL(tmp.CHANNEL_SOLD_OUT_YN, 'N'), 'Y', '품절', 'N', '정상') AS CHANNEL_SOLD_OUT_YN,
                        DECODE(NVL(tmp.SELFAPP_YN, 'N'), 'Y', '단종', 'N', '정상') AS SELFAPP_YN,
                        (SELECT LISTAGG(TO_CHAR(TO_DATE(S_SALE_TIME, 'HH24MI'), 'HH24:MI') || '~' || TO_CHAR(TO_DATE(E_SALE_TIME, 'HH24MI'), 'HH24:MI'), ',') WITHIN GROUP (ORDER BY S_SALE_TIME || '~' || E_SALE_TIME) AS SALE_TIME FROM TB_MS_PRODUCT_SALE_TIME tmpst WHERE tmpst.STORE_CD = #{storeCd} AND tmpst.PROD_CD = tmp.PROD_CD ) AS SALE_TIME -- KIOSK 시간설정
                <include refid="CmmSQL.PagingTemplateCount"/>
                  FROM TB_MS_PRODUCT tmp
                  LEFT OUTER JOIN (
                                          SELECT STORE_CD,
                                                  PROD_CD,
                                                  MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                                            FROM TB_MS_PRODUCT_SALE_PRICE
                                           WHERE STORE_CD = #{storeCd}
                                          <![CDATA[
                                             AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                             AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                          ]]>
                                             AND SALE_PRC_FG = '1'
                                       GROUP BY STORE_CD, PROD_CD
                                    ) tmpsp ON tmp.STORE_CD = tmpsp.STORE_CD
                                           AND tmp.PROD_CD = tmpsp.PROD_CD
                  INNER JOIN TB_MS_STORE tms ON tms.STORE_CD  = tmp.STORE_CD
                  LEFT OUTER JOIN (
                                            SELECT STORE_CD,
                                                    PROD_CD
                                              FROM TB_MS_KIOSK_KEY
                                             WHERE STORE_CD = #{storeCd}
                                               AND POS_NO = #{posNo}
                                               AND TU_CLS_TYPE = #{tuClsType}
                                               AND TU_CLS_CD = #{tuClsCd}
                                         GROUP BY STORE_CD, PROD_CD
                                    ) tmkk ON tmp.STORE_CD = tmkk.STORE_CD
                                          AND tmp.PROD_CD = tmkk.PROD_CD
                   WHERE tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT PROD_CLASS_CD
                                                  FROM TB_MS_PRODUCT_CLASS
                                                  WHERE STORE_CD = #{storeCd}
                                             START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                     CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND STORE_CD = #{storeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                                    SELECT 1
                                      FROM TB_MS_PRODUCT_BARCD
                                     WHERE STORE_CD = tmp.STORE_CD
                                       AND PROD_CD = tmp.PROD_CD
                                       AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND tmp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <choose>
                    <when test='regYn != null and regYn == "Y"'>
                        AND tmkk.PROD_CD IS NOT NULL
                    </when>
                    <when test='regYn != null and regYn == "N"'>
                        AND tmkk.PROD_CD IS NULL
                    </when>
                    <otherwise></otherwise>
                </choose>
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 관련 코드 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키를 등록하기 위한 코드값 조회한다. ( 본사/매장 )
    -->
    <select id="getKioskKeyMapCode" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMapCode */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(TU_KEY_CD),0)+1, 3, 0) AS TU_KEY_CD,
                        NVL(MAX(INDEX_NO),0)+1 AS INDEX_NO
                  FROM TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{tuClsType}
                   AND TU_CLS_CD = #{tuClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                 SELECT LPAD(NVL(MAX(TU_KEY_CD),0)+1, 3, 0) AS TU_KEY_CD,
                         NVL(MAX(INDEX_NO),0)+1 AS INDEX_NO
                   FROM TB_MS_KIOSK_KEY
                  WHERE STORE_CD = #{storeCd}
                    AND POS_NO = #{posNo}
                    AND TU_CLS_TYPE = #{tuClsType}
                    AND TU_CLS_CD = #{tuClsCd}
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 등록 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 상품을 키맵에 등록한다. ( 본사/매장 )
    -->
    <insert id="saveKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_KEY
                (
                    HQ_OFFICE_CD,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_KEY_CD,
                    PROD_CD,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                VALUES
                (
                    #{hqOfficeCd},
                    #{tuClsType},
                    #{tuClsCd},
                    #{tuKeyCd},
                    #{prodCd},
                    #{tuPage},
                    #{x},
                    #{y},
                    #{width},
                    #{height},
                    #{indexNo},
                    #{clsFg},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_KEY A
                USING
                    (
                        SELECT  #{storeCd}      AS STORE_CD
                        ,       POS_NO
                        ,       #{tuClsType}    AS TU_CLS_TYPE
                        ,       #{tuClsCd}      AS TU_CLS_CD
                        ,       #{tuKeyCd}      AS TU_KEY_CD
                        ,       #{prodCd}       AS PROD_CD
                        ,       #{tuPage}       AS TU_PAGE
                        ,       #{x}            AS X
                        ,       #{y}            AS Y
                        ,       #{width}        AS WIDTH
                        ,       #{height}       AS HEIGHT
                        ,       #{indexNo}      AS INDEX_NO
                        ,       #{clsFg}        AS CLS_FG
                        ,       #{regDt}        AS REG_DT
                        ,       #{regId}        AS REG_ID
                        ,       #{modDt}        AS MOD_DT
                        ,       #{modId}        AS MOD_ID
                        FROM 	TB_MS_POS_ENVST
                        WHERE 	STORE_CD    = #{storeCd}
                        AND 	ENVST_CD    = '4019'
                        AND 	ENVST_VAL   = '6'
                        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                            AND POS_NO      = #{posNo}
                        </if>
                    ) B
                ON
                    (
                            B.STORE_CD     = A.STORE_CD
                        AND B.POS_NO       = A.POS_NO
                        AND B.TU_CLS_CD    = A.TU_CLS_CD
                        AND B.TU_KEY_CD    = A.TU_KEY_CD
                        AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                    )
                WHEN MATCHED THEN
                UPDATE
                SET     A.PROD_CD      = B.PROD_CD
                ,       A.TU_PAGE      = B.TU_PAGE
                ,       A.X            = B.X
                ,       A.Y            = B.Y
                ,       A.WIDTH        = B.WIDTH
                ,       A.HEIGHT       = B.HEIGHT
                ,       A.INDEX_NO     = B.INDEX_NO
                ,       A.CLS_FG       = B.CLS_FG
                ,       A.MOD_DT       = B.MOD_DT
                ,       A.MOD_ID       = B.MOD_ID
                WHEN NOT MATCHED THEN
                INSERT
                    (
                            A.STORE_CD
                    ,       A.POS_NO
                    ,       A.TU_CLS_TYPE
                    ,       A.TU_CLS_CD
                    ,       A.TU_KEY_CD
                    ,       A.PROD_CD
                    ,       A.TU_PAGE
                    ,       A.X
                    ,       A.Y
                    ,       A.WIDTH
                    ,       A.HEIGHT
                    ,       A.INDEX_NO
                    ,       A.CLS_FG
                    ,       A.REG_DT
                    ,       A.REG_ID
                    ,       A.MOD_DT
                    ,       A.MOD_ID
                    )
                VALUES
                    (
                            B.STORE_CD
                    ,       B.POS_NO
                    ,       B.TU_CLS_TYPE
                    ,       B.TU_CLS_CD
                    ,       B.TU_KEY_CD
                    ,       B.PROD_CD
                    ,       B.TU_PAGE
                    ,       B.X
                    ,       B.Y
                    ,       B.WIDTH
                    ,       B.HEIGHT
                    ,       B.INDEX_NO
                    ,       B.CLS_FG
                    ,       B.REG_DT
                    ,       B.REG_ID
                    ,       B.MOD_DT
                    ,       B.MOD_ID
                    )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵 그룹복제 - 기존 카테고리(분류) 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 기존 카테고리(분류)를 복사한다. ( 본사/매장 )
    -->
    <insert id="copyKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskCategory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_CLS
                (
                    HQ_OFFICE_CD,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    CLS_MEMO,
                    TU_M_CLS_FG,
                    TU_CLS_EN_NM,
                    TU_CLS_CN_NM,
                    TU_CLS_JP_NM
                )
                SELECT HQ_OFFICE_CD,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_CLS_NM,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        CLS_MEMO,
                        TU_M_CLS_FG,
                        TU_CLS_EN_NM,
                        TU_CLS_CN_NM,
                        TU_CLS_JP_NM
                  FROM TB_HQ_KIOSK_CLS
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_CLS
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    CLS_MEMO,
                    TU_CLS_EN_NM,
                    TU_CLS_CN_NM,
                    TU_CLS_JP_NM
                )
                SELECT STORE_CD,
                        POS_NO,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_CLS_NM,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId},
                        CLS_MEMO,
                        TU_CLS_EN_NM,
                        TU_CLS_CN_NM,
                        TU_CLS_JP_NM
                  FROM TB_MS_KIOSK_CLS
                 WHERE STORE_CD = #{storeCd}
                   AND POS_NO = #{posNo}
                   AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵 그룹복제 - 기존 키맵그룹에 엮여있는 상품 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵그룹 복제 시, 기존 키맵그룹에 엮여있는 상품들도 복사한다. ( 본사/매장 )
    -->
    <insert id="copyKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskKeyMap */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_KEY
                (
                        HQ_OFFICE_CD,
                        TU_CLS_TYPE,
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                )
                SELECT HQ_OFFICE_CD,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                  FROM TB_HQ_KIOSK_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_KEY
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_KEY_CD,
                    PROD_CD,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                SELECT STORE_CD,
                        POS_NO,
                        #{tuClsType},
                        TU_CLS_CD,
                        TU_KEY_CD,
                        PROD_CD,
                        TU_PAGE,
                        X,
                        Y,
                        WIDTH,
                        HEIGHT,
                        INDEX_NO,
                        CLS_FG,
                        #{regDt},
                        #{regId},
                        #{modDt},
                        #{modId}
                FROM TB_MS_KIOSK_KEY
                WHERE STORE_CD = #{storeCd}
                  AND POS_NO = #{posNo}
                  AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵 그룹복제(다른 포스로 복제) - 기존 카테고리(분류) 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 기존 카테고리(분류)를 복사한다. ( 매장 )
    -->
    <insert id="copyPosKioskCategory" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyPosKioskCategory */
        INSERT INTO TB_MS_KIOSK_CLS
        (
        STORE_CD,
        POS_NO,
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        REG_DT,
        REG_ID,
        MOD_DT,
        MOD_ID,
        TU_CLS_EN_NM,
        TU_CLS_CN_NM,
        TU_CLS_JP_NM
        )
        SELECT STORE_CD,
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        TU_CLS_EN_NM,
        TU_CLS_CN_NM,
        TU_CLS_JP_NM
        FROM TB_MS_KIOSK_CLS
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{orgTuClsType}
    </insert>

    <!-- 키오스크 키맵 그룹복제(다른 포스로 복제) - 기존 키맵그룹에 엮여있는 상품 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵그룹 복제 시, 기존 키맵그룹에 엮여있는 상품들도 복사한다. ( 매장 )
    -->
    <insert id="copyPosKioskKeyMap" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyPosKioskKeyMap */
        INSERT INTO TB_MS_KIOSK_KEY
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT STORE_CD,
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_KEY_CD,
        PROD_CD,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_MS_KIOSK_KEY
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{orgTuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 매장리스트 조회 -->
    <!--
          TABLE    : TB_MS_STORE
          PARAM    : kioskKeyMapVO
          COMMENTS : 키오스크 키맵 매장선택팝업에서 매장리스트를 조회한다.
    -->
    <select id="getStoreList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getStoreList */
        SELECT
               *
        FROM
        (
            SELECT
            tms.HQ_OFFICE_CD,
            tms.STORE_CD,
            tms.STORE_NM,
            tms.SYS_STAT_FG,
            (SELECT COUNT(*) FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND ENVST_CD = '4019' AND ENVST_VAL = '6') AS KIOSK_POS_CNT,
            tmp.POS_NO,
            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG
            FROM TB_MS_STORE tms,
                 TB_MS_STORE_INFO tmsi,
            (
                SELECT
                tmp.STORE_CD
                <choose>
                    <when test='hqOfficeCd != null and (hqOfficeCd == "A0001" or hqOfficeCd == "DS021" or hqOfficeCd == "DS034" or hqOfficeCd == "DS062")'>
                    ,   MIN(tmp.POS_NO) AS POS_NO
                    </when>
                    <otherwise>
                    ,   tmp.POS_NO
                    </otherwise>
                </choose>
                FROM TB_MS_POS_ENVST tmpe,
                TB_MS_POS tmp
                WHERE tmpe.STORE_CD = tmp.STORE_CD
                AND tmpe.POS_NO = tmp.POS_NO
                AND tmpe.ENVST_CD = '4019'
                AND tmpe.ENVST_VAL = '6'
                <if test='hqOfficeCd != null and (hqOfficeCd == "A0001" or hqOfficeCd == "DS021" or hqOfficeCd == "DS034" or hqOfficeCd == "DS062")'>
                    GROUP
                    BY      tmp.STORE_CD
                </if>
            ) tmp
            WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tmp.STORE_CD = tms.STORE_CD
            AND tms.STORE_CD = tmsi.STORE_CD(+)
            <if test="storeCd != null and storeCd != ''">
                AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
            </if>
            <if test="storeNm != null and storeNm != ''">
                AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
            </if>
            <if test="sysStatFg != null and sysStatFg != ''">
                AND tms.SYS_STAT_FG = #{sysStatFg} --매장상태구분
            </if>
            <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
                AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
            </if>
            <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
                <if test='userBrands != null and userBrands != ""'>
                    -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                    AND tms.HQ_BRAND_CD IN
                    <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test='momsTeam != null and momsTeam != ""'>
                AND tmsi.MOMS_TEAM = #{momsTeam}
            </if>
            <if test='momsAcShop != null and momsAcShop != ""'>
                AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
            </if>
            <if test='momsAreaFg != null and momsAreaFg != ""'>
                AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
            </if>
            <if test='momsCommercial != null and momsCommercial != ""'>
                AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
            </if>
            <if test='momsShopType != null and momsShopType != ""'>
                AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
            </if>
            <if test='momsStoreManageType != null and momsStoreManageType != ""'>
                AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
            </if>
            <if test='branchCd != null and branchCd != ""'>
                AND tms.BRANCH_CD = #{branchCd}
            </if>
            <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
                AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
            </if>
            <if test='momsStoreFg02 != null and momsStoreFg02 != ""'>
                AND tmsi.MOMS_STORE_FG_02 = #{momsStoreFg02}
            </if>
            <if test='momsStoreFg03 != null and momsStoreFg03 != ""'>
                AND tmsi.MOMS_STORE_FG_03 = #{momsStoreFg03}
            </if>
            <if test='momsStoreFg04 != null and momsStoreFg04 != ""'>
                AND tmsi.MOMS_STORE_FG_04 = #{momsStoreFg04}
            </if>
            <if test='momsStoreFg05 != null and momsStoreFg05 != ""'>
                AND tmsi.MOMS_STORE_FG_05 = #{momsStoreFg05}
            </if>
            ORDER BY tms.STORE_CD, tmp.POS_NO ASC
        )
        WHERE 1=1
        <if test="tuMClsFg != null and tuMClsFg != ''">
            AND TU_M_CLS_FG = #{tuMClsFg}
        </if>
        <if test='hqOfficeCd != null and (hqOfficeCd == "A0001" or hqOfficeCd == "DS021" or hqOfficeCd == "DS034" or hqOfficeCd == "DS062")'>
            ORDER
            BY 	    STORE_CD
        </if>
    </select>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsType" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsType */
        DELETE TB_MS_KIOSK_CLS
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹명 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsTypeNm" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsTypeNm */
        DELETE TB_MS_KIOSK_GROUP
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 키맵 매장적용 전 기존 키맵그룹에 엮어있는 상품 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵 매장적용 전 기존 키맵그룹에 엮어있는 상품을 삭제한다.(카테고리(분류)기준)
    -->
    <delete id="deleteKioskKeyMapByTuClsCd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteKioskKeyMapByTuClsCd */
        DELETE  TB_MS_KIOSK_KEY
        WHERE   STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO  = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 키맵 매장적용 전 기존 키맵그룹에 엮어있는 상품 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키맵 매장적용 전 기존 키맵그룹에 엮어있는 상품을 삭제한다.(카테고리(분류)기준)
    -->
    <delete id="deleteKioskKeyMapByTuClsCd2" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteKioskKeyMapByTuClsCd2 */
        DELETE TB_MS_KIOSK_KEY
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
        AND TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                FROM 	TB_HQ_NMCODE thn
                                                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                AND     NMCODE_GRP_CD = '229'
                                                AND 	NMCODE_ITEM_2 = 'Y')
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deletePosStoreKioskCategory" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deletePosStoreKioskCategory */
        DELETE  TB_MS_KIOSK_CLS
        WHERE   STORE_CD = #{storeCd}
        AND     POS_NO = #{posNo}
        AND     TU_CLS_TYPE = #{orgTuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deletePosStoreTuClsType" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deletePosStoreTuClsType */
        DELETE  TB_MS_KIOSK_KEY
        WHERE   STORE_CD = #{storeCd}
        AND     POS_NO = #{posNo}
        AND     TU_CLS_TYPE = #{orgTuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreReg" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreReg */
        INSERT INTO TB_MS_KIOSK_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            TU_M_CLS_FG,
            TU_CLS_EN_NM,
            TU_CLS_CN_NM,
            TU_CLS_JP_NM
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        #{tuMClsFg}, -- 매장 적용시에만 UPDATE / 매장 해당컬럼 사용안함 / 수정 기록 확인용 / 매장은 [4101 KIOSK중분류사용] 사용
        TU_CLS_EN_NM,
        TU_CLS_CN_NM,
        TU_CLS_JP_NM
        FROM TB_HQ_KIOSK_CLS tmkc
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreRegStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreRegStore */
        INSERT INTO TB_MS_KIOSK_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            TU_M_CLS_FG,
            TU_CLS_EN_NM,
            TU_CLS_CN_NM,
            TU_CLS_JP_NM
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        #{tuMClsFg}, -- 매장 적용시에만 UPDATE / 매장 해당컬럼 사용안함 / 수정 기록 확인용 / 매장은 [4101 KIOSK중분류사용] 사용
        TU_CLS_EN_NM,
        TU_CLS_CN_NM,
        TU_CLS_JP_NM
        FROM TB_MS_KIOSK_CLS tmkc
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵명매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskStoreTuClsTypeNm" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskStoreTuClsTypeNm */
        INSERT INTO TB_MS_KIOSK_GROUP
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_TYPE_NM,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_TYPE_NM,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_HQ_KIOSK_GROUP
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵명매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskStoreTuClsTypeNmStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskStoreTuClsTypeNmStore */
        INSERT INTO TB_MS_KIOSK_GROUP
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_TYPE_NM,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_TYPE_NM,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_MS_KIOSK_GROUP
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskKeyMapStoreReg" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskKeyMapStoreReg */
        INSERT INTO TB_MS_KIOSK_KEY
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_KEY_CD,
        PROD_CD,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_HQ_KIOSK_KEY
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskKeyMapStoreReg2" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskKeyMapStoreReg2 */
        INSERT INTO TB_MS_KIOSK_KEY
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_KEY_CD,
        PROD_CD,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_HQ_KIOSK_KEY
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
        AND TU_CLS_TYPE || TU_CLS_CD NOT IN (    SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                FROM 	TB_HQ_NMCODE thn
                                                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                AND     NMCODE_GRP_CD = '229'
                                                AND 	NMCODE_ITEM_2 = 'Y')
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="copyKioskKeyMapStoreRegStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskKeyMapStoreRegStore */
        INSERT INTO TB_MS_KIOSK_KEY
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_KEY_CD,
        PROD_CD,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId}
        FROM TB_MS_KIOSK_KEY
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 매장적용(매장/포장) - 매장 키오스크 포스 리스트 조회 -->
    <!--
          TABLE    : TB_MS_STORE
          PARAM    : kioskKeyMapVO
          COMMENTS : 키오스크 매장적용(매장/포장) 시 매장 키오스크 포스 리스트를 조회한다.
    -->
    <select id="getStoreKioskPosList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getStoreKioskPosList */
        SELECT  A.HQ_OFFICE_CD
        ,		A.STORE_NM
        , 		A.STORE_CD
        , 		A.POS_NO
        , 		A.SYS_STAT_FG
        , 		A.ENV_4068
        ,		A.ENV_4069
        ,		(SELECT '['|| TU_CLS_TYPE || ']' || TU_CLS_TYPE_NM FROM TB_HQ_KIOSK_GROUP WHERE HQ_OFFICE_CD = A.HQ_OFFICE_CD AND TU_CLS_TYPE = A.ENV_4068) AS ENV_4068_NM
        ,		(SELECT '['|| TU_CLS_TYPE || ']' || TU_CLS_TYPE_NM FROM TB_HQ_KIOSK_GROUP WHERE HQ_OFFICE_CD = A.HQ_OFFICE_CD AND TU_CLS_TYPE = A.ENV_4069) AS ENV_4069_NM
        ,       A.TU_M_CLS_FG
        ,       A.MOD_DT_4068
        ,       A.MOD_DT_4069
        FROM
        (
            SELECT
            tms.HQ_OFFICE_CD,
            tms.STORE_NM,
            tms.STORE_CD,
            tmp.POS_NO,
            tms.SYS_STAT_FG,
            (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4068') AS ENV_4068,
            (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4069') AS ENV_4069,
            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG,
            (SELECT TO_CHAR(TO_DATE(MOD_DT, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4068') AS MOD_DT_4068,
            (SELECT TO_CHAR(TO_DATE(MOD_DT, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4069') AS MOD_DT_4069
            FROM TB_MS_STORE tms,
                 TB_MS_STORE_INFO tmsi,
            (
                SELECT
                tmp.STORE_CD
                <choose>
                    <when test='hqOfficeCd != null and (hqOfficeCd == "A0001" or hqOfficeCd == "DS021" or hqOfficeCd == "DS034" or hqOfficeCd == "DS062")'>
                    ,   MIN(tmp.POS_NO) AS POS_NO
                    </when>
                    <otherwise>
                    ,   tmp.POS_NO
                    </otherwise>
                </choose>
                FROM TB_MS_POS_ENVST tmpe,
                TB_MS_POS tmp
                WHERE tmpe.STORE_CD = tmp.STORE_CD
                AND tmpe.POS_NO = tmp.POS_NO
                AND tmpe.ENVST_CD = '4019'
                AND tmpe.ENVST_VAL = '6'
                <if test='hqOfficeCd != null and (hqOfficeCd == "A0001" or hqOfficeCd == "DS021" or hqOfficeCd == "DS034" or hqOfficeCd == "DS062")'>
                    GROUP
                    BY      tmp.STORE_CD
                </if>
            ) tmp
            WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tmp.STORE_CD = tms.STORE_CD
            AND tms.STORE_CD = tmsi.STORE_CD(+)
            <if test="storeCd != null and storeCd != ''">
                AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
            </if>
            <if test="storeNm != null and storeNm != ''">
                AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
            </if>
            <if test="sysStatFg != null and sysStatFg != ''">
                AND tms.SYS_STAT_FG = #{sysStatFg} --매장상태구분
            </if>
            <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
                AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
            </if>
            <if test='momsTeam != null and momsTeam != ""'>
                AND tmsi.MOMS_TEAM = #{momsTeam}
            </if>
            <if test='momsAcShop != null and momsAcShop != ""'>
                AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
            </if>
            <if test='momsAreaFg != null and momsAreaFg != ""'>
                AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
            </if>
            <if test='momsCommercial != null and momsCommercial != ""'>
                AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
            </if>
            <if test='momsShopType != null and momsShopType != ""'>
                AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
            </if>
            <if test='momsStoreManageType != null and momsStoreManageType != ""'>
                AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
            </if>
            <if test='branchCd != null and branchCd != ""'>
                AND tms.BRANCH_CD = #{branchCd}
            </if>
            <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
                AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
            </if>
            <if test='momsStoreFg02 != null and momsStoreFg02 != ""'>
                AND tmsi.MOMS_STORE_FG_02 = #{momsStoreFg02}
            </if>
            <if test='momsStoreFg03 != null and momsStoreFg03 != ""'>
                AND tmsi.MOMS_STORE_FG_03 = #{momsStoreFg03}
            </if>
            <if test='momsStoreFg04 != null and momsStoreFg04 != ""'>
                AND tmsi.MOMS_STORE_FG_04 = #{momsStoreFg04}
            </if>
            <if test='momsStoreFg05 != null and momsStoreFg05 != ""'>
                AND tmsi.MOMS_STORE_FG_05 = #{momsStoreFg05}
            </if>
            <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
                <if test='userBrands != null and userBrands != ""'>
                    -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                    AND tms.HQ_BRAND_CD IN
                    <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
            </if>
            ORDER BY tms.STORE_CD, tmp.POS_NO ASC
        ) A
        WHERE 1=1
        <if test="tuMClsFg != null and tuMClsFg != ''">
            AND A.TU_M_CLS_FG = #{tuMClsFg}
        </if>
        <if test="tuClsType != null and tuClsType != '' and envstCd == '4068'">
            AND A.ENV_4068 = #{tuClsType}
        </if>
        <if test="tuClsType != null and tuClsType != '' and envstCd == '4069'">
            AND A.ENV_4069 = #{tuClsType}
        </if>
    </select>

    <!-- 키오스크 매장적용(매장/포장) - 본사 환경설정값 저장 -->
    <!--
        TABLE    : TB_HQ_ENVST
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 매장적용(매장/포장) 시 본사 환경설정값(매장:4068/포장:4069)을 일괄 저장한다.
    -->
    <!--<insert id="insertHqKioskEnv" parameterType="kioskKeyMapVO">-->
        <!--/* USE : KioskKeyMapMapper.insertHqKioskEnv */-->
        <!--MERGE INTO TB_HQ_ENVST-->
        <!--USING DUAL ON-->
        <!--(-->
            <!--HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = #{envstCd}-->
        <!--)-->
        <!--WHEN MATCHED THEN-->
        <!--UPDATE-->
           <!--SET ENVST_VAL = #{envstVal},-->
                <!--MOD_DT = #{modDt},-->
                <!--MOD_ID = #{modId}-->
        <!--WHEN NOT MATCHED THEN-->
        <!--INSERT-->
         <!--(-->
                <!--HQ_OFFICE_CD,-->
                <!--ENVST_CD,-->
                <!--ENVST_VAL,-->
                <!--DIRCT_IN_YN,-->
                <!--USE_YN,-->
                <!--REG_DT,-->
                <!--REG_ID,-->
                <!--MOD_DT,-->
                <!--MOD_ID-->
          <!--)-->
          <!--VALUES-->
          <!--(-->
                <!--#{hqOfficeCd},-->
                <!--#{envstCd},-->
                <!--#{envstVal},-->
                <!--#{dirctInYn},-->
                <!--#{useYn},-->
                <!--#{regDt},-->
                <!--#{regId},-->
                <!--#{modDt},-->
                <!--#{modId}-->
           <!--)-->
    <!--</insert>-->

    <!-- 키오스크 매장적용(매장/포장) - 매장 키오스크 포스 환경설정값 일괄 저장 -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 매장적용(매장/포장) 시 매장 포스 환경설정값(매장:4068/포장:4069)을 일괄 저장한다.
    -->
    <insert id="insertStoreKioskPosEnv" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertStoreKioskPosEnv */
        MERGE INTO TB_MS_POS_ENVST A
        USING
            (
                SELECT 	STORE_CD
                ,		POS_NO
                ,		#{envstCd} AS ENVST_CD
                FROM 	TB_MS_POS_ENVST A
                WHERE 	STORE_CD    = #{storeCd}
                AND 	ENVST_CD    = '4019'
                AND 	ENVST_VAL   = '6'
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND    POS_NO   = #{posNo}
                </if>
            ) B
        ON  (
                    B.STORE_CD  = A.STORE_CD
                AND B.POS_NO    = A.POS_NO
                AND B.ENVST_CD  = A.ENVST_CD
            )
        WHEN MATCHED THEN
        UPDATE
        SET     A.ENVST_VAL   = #{envstVal}
        ,       A.MOD_DT      = #{modDt}
        ,       A.MOD_ID      = #{modId}
        ,       A.POS_FG      = 'W'
        WHEN NOT MATCHED THEN
        INSERT
            (
                STORE_CD
            ,   POS_NO
            ,   ENVST_CD
            ,   ENVST_VAL
            ,   DIRCT_IN_YN
            ,   POS_FG
            ,   USE_YN
            ,   REG_DT
            ,   REG_ID
            ,   MOD_DT
            ,   MOD_ID
            )
        VALUES
            (
                B.STORE_CD
            ,   B.POS_NO
            ,   B.ENVST_CD
            ,   #{envstVal}
            ,   #{dirctInYn}
            ,   'W'
            ,   #{useYn}
            ,   #{regDt}
            ,   #{regId}
            ,   #{modDt}
            ,   #{modId}
            )
    </insert>

    <!-- 키오스크 매장적용(매장/포장) - 키오스크 환경설정 값 가져오기 -->
    <!--
        TABLE    : TB_HQ_ENVST, TB_MS_POS_ENVST
        COMMENTS : 키오스크 매장적용(매장/포장) 시 키오스크 환경설정 값을 가져온다.
    -->
    <select id="getKioskEnv" parameterType="kioskKeyMapVO" resultType="String">
      /* USE : KioskKeyMapMapper.getKioskEnv */
        <choose>
        <!-- 본사 -->
        <when test='orgnFg != null and orgnFg == "H"'>
            SELECT ENVST_VAL
              FROM TB_HQ_ENVST
             WHERE HQ_OFFICE_CD = #{hqOfficeCd}
               AND ENVST_CD = #{envstCd}
        </when>
        <!-- 매장 -->
        <when test='orgnFg != null and orgnFg == "S"'>
            SELECT ENVST_VAL
              FROM TB_MS_POS_ENVST
             WHERE STORE_CD = #{storeCd}
               AND POS_NO = #{posNo}
               AND ENVST_CD = #{envstCd}
        </when>
        </choose>
    </select>


    <!--  키오스크 추천메뉴 - 추천메뉴코드 가져오기  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴를 가져온다.
    -->
    <select id="getRecmd" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  RECMD_CD,
                        RECMD_TYPE,
                        CASE WHEN RECMD_TYPE = '0' THEN '선택불가'
                        WHEN RECMD_TYPE = '1' AND PROD_CD IS NULL THEN '선택'
                        ELSE PROD_CD
                        END AS RECMD_PROD_CD,
                        CASE WHEN PROD_CD IS NOT NULL THEN (SELECT  PROD_NM
                                                            FROM    TB_HQ_PRODUCT thp
                                                            WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                                            AND     thp.PROD_CD = thkr.PROD_CD)
                        ELSE ''
                        END AS PROD_NM,
                        DISP_TYPE,
                        ADD_TYPE,
                        USE_YN
                FROM    TB_HQ_KIOSK_RECMD thkr
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                ORDER BY RECMD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  RECMD_CD,
                        RECMD_TYPE,
                        CASE WHEN RECMD_TYPE = '0' THEN '선택불가'
                        WHEN RECMD_TYPE = '1' AND PROD_CD IS NULL THEN '선택'
                        ELSE PROD_CD
                        END AS RECMD_PROD_CD,
                        CASE WHEN PROD_CD IS NOT NULL THEN (SELECT  PROD_NM
                                                            FROM    TB_MS_PRODUCT tmp
                                                            WHERE   STORE_CD = #{storeCd}
                                                            AND     tmp.PROD_CD = tmkr.PROD_CD)
                        ELSE ''
                        END AS PROD_NM,
                        DISP_TYPE,
                        ADD_TYPE,
                        USE_YN
                FROM    TB_MS_KIOSK_RECMD tmkr
                WHERE   STORE_CD = #{storeCd}
                ORDER BY RECMD_CD
            </when>
        </choose>
    </select>

    <!--  키오스크 추천메뉴 - 추천메뉴코드 자동채번  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 자동채번
    -->
    <select id="getRecmdCd" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getRecmdCd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  LPAD((NVL(MAX(RECMD_CD), 0) + 1), 4, '0')
                FROM    TB_HQ_KIOSK_RECMD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  LPAD((NVL(MAX(RECMD_CD), 0) + 1), 4, '0')
                FROM    TB_MS_KIOSK_RECMD
                WHERE   STORE_CD = #{storeCd}
            </when>
        </choose>
    </select>

    <!-- 키오스크 추천메뉴 - 추천메뉴코드 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 저장
    -->
    <insert id="saveRecmd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.saveRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_KIOSK_RECMD
                USING DUAL ON
                (
                HQ_OFFICE_CD = #{hqOfficeCd} AND RECMD_CD = #{recmdCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET RECMD_TYPE = #{recmdType},
                PROD_CD = #{recmdProdCd},
                DISP_TYPE = #{dispType},
                ADD_TYPE = #{addType},
                USE_YN = #{useYn},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                HQ_OFFICE_CD,
                RECMD_CD,
                RECMD_TYPE,
                PROD_CD,
                DISP_TYPE,
                ADD_TYPE,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{hqOfficeCd},
                #{recmdCd},
                #{recmdType},
                #{recmdProdCd},
                #{dispType},
                #{addType},
                #{useYn},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_RECMD
                USING DUAL ON
                (
                STORE_CD = #{storeCd} AND RECMD_CD = #{recmdCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET RECMD_TYPE = #{recmdType},
                PROD_CD = #{recmdProdCd},
                DISP_TYPE = #{dispType},
                ADD_TYPE = #{addType},
                USE_YN = #{useYn},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                STORE_CD,
                RECMD_CD,
                RECMD_TYPE,
                PROD_CD,
                DISP_TYPE,
                ADD_TYPE,
                USE_YN,
                REG_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{storeCd},
                #{recmdCd},
                #{recmdType},
                #{recmdProdCd},
                #{dispType},
                #{addType},
                #{useYn},
                #{regFg},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 추천메뉴 - 추천메뉴코드 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴코드 삭제
    -->
    <delete id="deleteRecmd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_RECMD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_RECMD
                WHERE   STORE_CD = #{storeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
        </choose>
    </delete>

    <!--  키오스크 추천메뉴 - 추천상품 조회  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천상품을 가져온다.
    -->
    <select id="getRecmdProd" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  thkrp.INDEX_NO,
                        thkrp.RECMD_PROD_CD,
                        thp.PROD_NM
                FROM    TB_HQ_KIOSK_RECMD_PROD thkrp,
                        TB_HQ_PRODUCT thp
                WHERE   thkrp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND     thkrp.RECMD_CD = #{recmdCd}
                AND		thp.HQ_OFFICE_CD = thkrp.HQ_OFFICE_CD
                AND		thp.PROD_CD = thkrp.RECMD_PROD_CD
                ORDER BY INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  tmkrp.INDEX_NO,
                        tmkrp.RECMD_PROD_CD,
                        tmp.PROD_NM
                FROM    TB_MS_KIOSK_RECMD_PROD tmkrp,
                        TB_MS_PRODUCT tmp
                WHERE   tmkrp.STORE_CD = #{storeCd}
                AND     tmkrp.RECMD_CD = #{recmdCd}
                AND		tmp.STORE_CD = tmkrp.STORE_CD
                AND		tmp.PROD_CD = tmkrp.RECMD_PROD_CD
                ORDER BY INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 추천메뉴 - 추천상품 조회  -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_KIOSK_RECMD_PROD
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 추천상품으로 등록할 상품을 조회한다. ( 본사/매장 )
    -->
    <select id="getRecmdProdList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getRecmdProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT thp.PROD_CD AS RECMD_PROD_CD,
                thp.PROD_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_HQ_PRODUCT thp
                INNER JOIN TB_HQ_OFFICE tho ON tho.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                LEFT OUTER JOIN (
                SELECT RECMD_PROD_CD, HQ_OFFICE_CD
                FROM TB_HQ_KIOSK_RECMD_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND RECMD_CD = #{recmdCd}
                ) thkk ON thp.HQ_OFFICE_CD = thkk.HQ_OFFICE_CD
                AND thp.PROD_CD = thkk.RECMD_PROD_CD
                WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_HQ_PRODUCT_CLASS
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM TB_HQ_PRODUCT_BARCD
                    WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND PROD_CD = thp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND thp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                AND thkk.RECMD_PROD_CD IS NULL
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT tmp.PROD_CD AS RECMD_PROD_CD,
                tmp.PROD_NM
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM TB_MS_PRODUCT tmp
                INNER JOIN TB_MS_STORE tms ON tms.STORE_CD  = tmp.STORE_CD
                LEFT OUTER JOIN (
                SELECT RECMD_PROD_CD, STORE_CD
                FROM TB_MS_KIOSK_RECMD_PROD
                WHERE STORE_CD = #{storeCd}
                AND RECMD_CD = #{recmdCd}
                ) tmkk ON tmp.STORE_CD = tmkk.STORE_CD
                AND tmp.PROD_CD = tmkk.RECMD_PROD_CD
                WHERE tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                        AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND STORE_CD = #{storeCd}
                    ) --상품분류
                </if>
                <if test="barCd != null and barCd != ''">
                    AND EXISTS (
                    SELECT 1
                    FROM TB_MS_PRODUCT_BARCD
                    WHERE STORE_CD = tmp.STORE_CD
                    AND PROD_CD = tmp.PROD_CD
                    AND BARCD_CD = #{barCd}
                    ) --바코드
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="prodTypeFg != null and prodTypeFg != ''">
                    AND tmp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
                </if>
                AND tmkk.RECMD_PROD_CD IS NULL
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!--  키오스크 추천메뉴 - 추천메뉴 순번  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD_PROD, TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 순번
    -->
    <select id="getIndex" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getIndex */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  (NVL(MAX(INDEX_NO), 0) + 1 )
                FROM    TB_HQ_KIOSK_RECMD_PROD
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  (NVL(MAX(INDEX_NO), 0) + 1 )
                FROM    TB_MS_KIOSK_RECMD_PROD
                WHERE   STORE_CD = #{storeCd}
                AND     RECMD_CD = #{recmdCd}
            </when>
        </choose>
    </select>

    <!--  키오스크 추천메뉴 - 추천메뉴 삭제  -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD_PROD, TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 삭제
    -->
    <delete id="deleteRecmdProd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_RECMD_PROD
                WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                AND     RECMD_CD        = #{recmdCd}
                AND     RECMD_PROD_CD   = #{recmdProdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_RECMD_PROD
                WHERE   STORE_CD        = #{storeCd}
                AND     RECMD_CD        = #{recmdCd}
                AND     RECMD_PROD_CD   = #{recmdProdCd}
            </when>
        </choose>
    </delete>

    <!-- 키오스크 추천메뉴 - 추천메뉴 저장 -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 추천메뉴 저장
    -->
    <insert id="addRecmdProd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.addRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_RECMD_PROD
                (
                HQ_OFFICE_CD,
                RECMD_CD,
                RECMD_PROD_CD,
                INDEX_NO,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{hqOfficeCd},
                #{recmdCd},
                #{recmdProdCd},
                #{index},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_RECMD_PROD
                (
                STORE_CD,
                RECMD_CD,
                RECMD_PROD_CD,
                INDEX_NO,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                )
                VALUES
                (
                #{storeCd},
                #{recmdCd},
                #{recmdProdCd},
                #{index},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 추천메뉴 매장적용 - 매장에서 사용중인 기존 메뉴추천정보 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 메뉴추천정보를 삭제한다.
    -->
    <delete id="deleteStoreRecmd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreRecmd */
        DELETE
          FROM TB_MS_KIOSK_RECMD
         WHERE STORE_CD = #{storeCd}
    </delete>

    <!-- 키오스크 추천메뉴 매장적용 - 매장에서 사용중인 기존 메뉴추천리스트 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 메뉴추천리스트를 삭제한다.
    -->
    <delete id="deleteStoreRecmdProd" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreRecmdProd */
        DELETE
          FROM TB_MS_KIOSK_RECMD_PROD
         WHERE STORE_CD = #{storeCd}
    </delete>

    <!-- 키오스크 추천메뉴 매장적용 - 본사에서 사용중인 메뉴추천정보 매장등록 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD, TB_HQ_KIOSK_RECMD
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사에서 사용중인 메뉴추천정보를 매장에 등록한다.
    -->
    <insert id="insertStoreHqRecmd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertStoreHqRecmd */
                INSERT INTO TB_MS_KIOSK_RECMD
                  (
                        STORE_CD,
                        RECMD_CD,
                        RECMD_TYPE,
                        PROD_CD,
                        DISP_TYPE,
                        REG_FG,
                        ADD_TYPE,
                        USE_YN,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                  )
                    SELECT #{storeCd},
                            RECMD_CD,
                            RECMD_TYPE,
                            PROD_CD,
                            DISP_TYPE,
                            'H',
                            ADD_TYPE,
                            USE_YN,
                            #{regDt},
                            #{regId},
                            #{modDt},
                            #{modId}
                     FROM TB_HQ_KIOSK_RECMD thkr
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}

    </insert>

    <!-- 키오스크 추천메뉴 매장적용 - 본사에서 사용중인 메뉴추천리스트 매장등록 -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD_PROD, TB_HQ_KIOSK_RECMD_PROD
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사에서 사용중인 메뉴추천리스트를 매장에 등록한다.
    -->
    <insert id="insertStoreHqRecmdProd" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertStoreHqRecmdProd */
                INSERT INTO TB_MS_KIOSK_RECMD_PROD
                  (
                        STORE_CD,
                        RECMD_CD,
                        RECMD_PROD_CD,
                        INDEX_NO,
                        REG_DT,
                        REG_ID,
                        MOD_DT,
                        MOD_ID
                  )
                    SELECT #{storeCd},
                            RECMD_CD,
                            RECMD_PROD_CD,
                            INDEX_NO,
                            #{regDt},
                            #{regId},
                            #{modDt},
                            #{modId}
                     FROM TB_HQ_KIOSK_RECMD_PROD thkrp
                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}

    </insert>


    <!-- 키오스크 카테고리(중분류) 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류)를 가져온다.
    -->
    <select id="getKioskCategoryM" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                HQ_OFFICE_CD,
                TU_CLS_TYPE,
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO AS MM_CLS_MEMO,
                CLS_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                FROM TB_HQ_KIOSK_M_CLS tmkmc
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                ORDER BY INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                STORE_CD,
                POS_NO,
                TU_CLS_TYPE,
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO AS MM_CLS_MEMO,
                CLS_FG,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                FROM TB_MS_KIOSK_M_CLS tmkmc
                WHERE STORE_CD = #{storeCd}
                AND TMKMC.POS_NO = (SELECT MIN(POS_NO) FROM TB_MS_POS_ENVST tmpe WHERE STORE_CD = #{storeCd} AND ENVST_CD = '4019' AND ENVST_VAL = '6')
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                ORDER BY INDEX_NO
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(중분류) 저장 - 생성 시 카테고리 코드 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(중분류) 생성 시 카테고리 코드를 생성한다.
    -->
    <select id="getKioskCategoryCodeM" parameterType="kioskKeyMapVO" resultType="String">
        /* USE : KioskKeyMapMapper.getKioskCategoryCodeM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT LPAD(NVL(MAX(TU_M_CLS_CD), '0') + 1, 2, '0')
                FROM TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT LPAD(NVL(MAX(TU_M_CLS_CD), '0') + 1, 2, '0')
                FROM TB_MS_KIOSK_M_CLS
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </select>

    <!-- 키오스크 카테고리(중분류) 저장 - 생성 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 새로운 키오스크 카테고리(분류) 생성한다.
    -->
    <insert id="insertKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_M_CLS
                (
                    HQ_OFFICE_CD
                ,   TU_CLS_TYPE
                ,   TU_CLS_CD
                ,   TU_M_CLS_CD
                ,   TU_M_CLS_NM
                ,   TU_PAGE
                ,   X
                ,   Y
                ,   WIDTH
                ,   HEIGHT
                ,   INDEX_NO
                ,   CLS_FG
                ,   REG_DT
                ,   REG_ID
                ,   MOD_DT
                ,   MOD_ID
                ,   M_CLS_MEMO
                )
                VALUES
                (
                    #{hqOfficeCd}
                ,   #{tuClsType}
                ,   #{tuClsCd}
                ,   #{tuMClsCd}
                ,   #{tuMClsNm}
                ,   #{tuPage}
                ,   #{x}
                ,   #{y}
                ,   #{width}
                ,   #{height}
                ,   #{indexNo}
                ,   #{clsFg}
                ,   #{regDt}
                ,   #{regId}
                ,   #{modDt}
                ,   #{modId}
                ,   #{mmClsMemo}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_KIOSK_M_CLS A
                USING
                    (
                        SELECT 	#{storeCd}      AS STORE_CD
                        ,		POS_NO          AS POS_NO
                        ,		#{tuClsType}    AS TU_CLS_TYPE
                        ,		#{tuClsCd}      AS TU_CLS_CD
                        ,		#{tuMClsCd}     AS TU_M_CLS_CD
                        ,		#{tuMClsNm}     AS TU_M_CLS_NM
                        ,		#{tuPage}       AS TU_PAGE
                        ,		#{x}            AS X
                        ,		#{y}            AS Y
                        ,		#{width}        AS WIDTH
                        ,		#{height}       AS HEIGHT
                        ,		#{indexNo}      AS INDEX_NO
                        ,		#{clsFg}        AS CLS_FG
                        ,		#{regDt}        AS REG_DT
                        ,		#{regId}        AS REG_ID
                        ,		#{modDt}        AS MOD_DT
                        ,		#{modId}        AS MOD_ID
                        ,       #{mmClsMemo}    AS M_CLS_MEMO
                        FROM 	TB_MS_POS_ENVST
                        WHERE 	STORE_CD    = #{storeCd}
                        AND 	ENVST_CD    = '4019'
                        AND 	ENVST_VAL   = '6'
                        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                            AND POS_NO      = #{posNo}
                        </if>
                    ) B
                ON
                    (
                            B.STORE_CD 		= A.STORE_CD
                        AND B.POS_NO		= A.POS_NO
                        AND B.TU_CLS_TYPE 	= A.TU_CLS_TYPE
                        AND B.TU_M_CLS_CD 	= A.TU_M_CLS_CD
                        AND B.TU_CLS_CD      = A.TU_CLS_CD
                    )
                WHEN MATCHED THEN
                UPDATE
                SET		A.TU_M_CLS_NM   = B.TU_M_CLS_NM
                ,       A.TU_PAGE       = B.TU_PAGE
                ,       A.X             = B.X
                ,       A.Y             = B.Y
                ,       A.WIDTH         = B.WIDTH
                ,       A.HEIGHT        = B.HEIGHT
                ,       A.INDEX_NO      = B.INDEX_NO
                ,       A.CLS_FG        = B.CLS_FG
                ,       A.MOD_DT        = B.MOD_DT
                ,       A.MOD_ID        = B.MOD_ID
                ,       A.M_CLS_MEMO    = B.M_CLS_MEMO
                WHEN NOT MATCHED THEN
                INSERT
                (
                        STORE_CD
                ,       POS_NO
                ,       TU_CLS_TYPE
                ,       TU_CLS_CD
                ,       TU_M_CLS_CD
                ,       TU_M_CLS_NM
                ,       TU_PAGE
                ,       X
                ,       Y
                ,       WIDTH
                ,       HEIGHT
                ,       INDEX_NO
                ,       CLS_FG
                ,       REG_DT
                ,       REG_ID
                ,       MOD_DT
                ,       MOD_ID
                ,       M_CLS_MEMO
                )
                VALUES
                (
                        B.STORE_CD
                ,       B.POS_NO
                ,       B.TU_CLS_TYPE
                ,       B.TU_CLS_CD
                ,       B.TU_M_CLS_CD
                ,       B.TU_M_CLS_NM
                ,       B.TU_PAGE
                ,       B.X
                ,       B.Y
                ,       B.WIDTH
                ,       B.HEIGHT
                ,       B.INDEX_NO
                ,       B.CLS_FG
                ,       B.REG_DT
                ,       B.REG_ID
                ,       B.MOD_DT
                ,       B.MOD_ID
                ,       B.M_CLS_MEMO
                )
            </when>
        </choose>
    </insert>

    <!-- 키오스크 카테고리(중분류) 저장 - 수정 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류) 수정한다.
    -->
    <update id="updateKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.updateKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_KIOSK_M_CLS
                SET TU_M_CLS_NM = #{tuMClsNm},
                TU_PAGE = #{tuPage},
                X = #{x},
                Y = #{y},
                WIDTH = #{width},
                HEIGHT = #{height},
                INDEX_NO = #{indexNo},
                CLS_FG = #{clsFg},
                MOD_DT = #{modDt},
                MOD_ID = #{modId},
                M_CLS_MEMO = #{mmClsMemo}
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_KIOSK_M_CLS
                SET TU_M_CLS_NM = #{tuMClsNm},
                TU_PAGE = #{tuPage},
                X = #{x},
                Y = #{y},
                WIDTH = #{width},
                HEIGHT = #{height},
                INDEX_NO = #{indexNo},
                CLS_FG = #{clsFg},
                MOD_DT = #{modDt},
                MOD_ID = #{modId},
                M_CLS_MEMO = #{mmClsMemo}
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
        </choose>
    </update>

    <!-- 키오스크 카테고리(중분류) 저장 - 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류) 삭제한다.
    -->
    <delete id="deleteKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                AND TU_CLS_CD = #{tuClsCd}
                AND TU_M_CLS_CD = #{tuMClsCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE  TB_MS_KIOSK_M_CLS
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
                AND     TU_CLS_CD   = #{tuClsCd}
                AND     TU_M_CLS_CD = #{tuMClsCd}
            </when>
        </choose>
    </delete>

    <!-- 키맵그룹에 KIOSK중분류사용 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getKioskKeyMapGroupTuMClsFg" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskKeyMapGroupTuMClsFg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL(TU_M_CLS_FG, 0) AS TU_M_CLS_FG
                FROM TB_HQ_KIOSK_CLS tmkc
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{tuClsType}
                GROUP BY TU_M_CLS_FG
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG
                FROM dual
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 키맵그룹에 KIOSK중분류사용 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getCopyKioskKeyMapGroupTuMClsFg" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getCopyKioskKeyMapGroupTuMClsFg */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT TU_M_CLS_FG
                FROM TB_HQ_KIOSK_CLS tmkc
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
                GROUP BY TU_M_CLS_FG
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = #{storeCd} AND POS_NO = #{posNo} AND ENVST_CD = '4101') AS TU_M_CLS_FG
                FROM dual
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 중분류 키맵그룹 rowCount 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getKioskMClsCount" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskMClsCount */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
                FROM TB_HQ_KIOSK_M_CLS
                WHERE 1=1
                AND HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
                FROM TB_MS_KIOSK_M_CLS
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 중분류 키맵그룹 rowCount 조회 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <select id="getKioskMClsCount2" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getKioskMClsCount2 */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
                FROM TB_HQ_KIOSK_M_CLS
                WHERE 1=1
                AND HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
                AND TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                FROM 	TB_HQ_NMCODE thn
                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                AND     NMCODE_GRP_CD = '229'
                AND 	NMCODE_ITEM_2 = 'Y')
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
                FROM TB_MS_KIOSK_M_CLS
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{orgTuClsType}
                AND TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                FROM 	TB_HQ_NMCODE thn
                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                AND     NMCODE_GRP_CD = '229'
                AND 	NMCODE_ITEM_2 = 'Y')
            </when>
        </choose>
    </select>

    <!-- 키오스크 키맵 그룹복제 - 기존 카테고리(중분류) 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 기존 카테고리(중분류)를 복사한다. ( 본사/매장 )
    -->
    <insert id="copyKioskCategoryM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyKioskCategoryM */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_KIOSK_M_CLS
                (
                    HQ_OFFICE_CD,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_M_CLS_CD,
                    TU_M_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    M_CLS_MEMO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                SELECT
                HQ_OFFICE_CD,
                #{tuClsType},
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO,
                CLS_FG,
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                FROM TB_HQ_KIOSK_M_CLS
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_KIOSK_M_CLS
                (
                    STORE_CD,
                    POS_NO,
                    TU_CLS_TYPE,
                    TU_CLS_CD,
                    TU_M_CLS_CD,
                    TU_M_CLS_NM,
                    TU_PAGE,
                    X,
                    Y,
                    WIDTH,
                    HEIGHT,
                    INDEX_NO,
                    M_CLS_MEMO,
                    CLS_FG,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                )
                SELECT
                STORE_CD,
                POS_NO,
                #{tuClsType},
                TU_CLS_CD,
                TU_M_CLS_CD,
                TU_M_CLS_NM,
                TU_PAGE,
                X,
                Y,
                WIDTH,
                HEIGHT,
                INDEX_NO,
                M_CLS_MEMO,
                CLS_FG,
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                FROM TB_MS_KIOSK_M_CLS
                WHERE STORE_CD = #{storeCd}
                AND POS_NO = #{posNo}
                AND TU_CLS_TYPE = #{orgTuClsType}
            </when>
        </choose>
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreRegM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreRegM */
        INSERT INTO TB_MS_KIOSK_M_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_M_CLS_CD,
            TU_M_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            M_CLS_MEMO
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_M_CLS_CD,
        TU_M_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        M_CLS_MEMO
        FROM TB_HQ_KIOSK_M_CLS tmkc
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreRegM2" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreRegM2 */
        INSERT INTO TB_MS_KIOSK_M_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_M_CLS_CD,
            TU_M_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            M_CLS_MEMO
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_M_CLS_CD,
        TU_M_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        M_CLS_MEMO
        FROM TB_HQ_KIOSK_M_CLS tmkc
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND TU_CLS_TYPE = #{tuClsType}
        AND TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                FROM 	TB_HQ_NMCODE thn
                                                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                AND     NMCODE_GRP_CD = '229'
                                                AND 	NMCODE_ITEM_2 = 'Y')
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장한다.
    -->
    <insert id="insertKioskCategoryStoreRegMStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.insertKioskCategoryStoreRegMStore */
        INSERT INTO TB_MS_KIOSK_M_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_M_CLS_CD,
            TU_M_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            M_CLS_MEMO
        )
        SELECT
        #{storeCd},
        #{posNo},
        TU_CLS_TYPE,
        TU_CLS_CD,
        TU_M_CLS_CD,
        TU_M_CLS_NM,
        TU_PAGE,
        X,
        Y,
        WIDTH,
        HEIGHT,
        INDEX_NO,
        CLS_FG,
        #{regDt},
        #{regId},
        #{modDt},
        #{modId},
        M_CLS_MEMO
        FROM TB_MS_KIOSK_M_CLS tmkc
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{orgPosNo}
        AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제(중분류) -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsTypeM" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsTypeM */
        DELETE TB_MS_KIOSK_M_CLS
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
    </delete>

    <!-- 키오스크 키맵매장적용 - 매장에서 사용중인 기존 키맵그룹 삭제(중분류) -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장별 키맵그룹을 삭제한다.
    -->
    <delete id="deleteStoreTuClsTypeM2" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteStoreTuClsTypeM2 */
        DELETE TB_MS_KIOSK_M_CLS
        WHERE STORE_CD = #{storeCd}
        <if test="posNo != null and posNo != ''">
            AND POS_NO = #{posNo}
        </if>
        AND TU_CLS_TYPE = #{tuClsType}
        AND TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                FROM 	TB_HQ_NMCODE thn
                                                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                AND     NMCODE_GRP_CD = '229'
                                                AND 	NMCODE_ITEM_2 = 'Y')
    </delete>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS, TB_HQ_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(분류) 저장한다.
    -->
    <insert id="mergeKioskCategoryStoreReg" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskCategoryStoreReg */
        MERGE INTO TB_MS_KIOSK_CLS A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       B.POS_NO        AS POS_NO
                    ,       tmkc.TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       tmkc.TU_CLS_CD       AS TU_CLS_CD
                    ,       tmkc.TU_CLS_NM       AS TU_CLS_NM
                    ,       tmkc.TU_PAGE         AS TU_PAGE
                    ,       X               AS X
                    ,       Y               AS Y
                    ,       tmkc.WIDTH           AS WIDTH
                    ,       tmkc.HEIGHT          AS HEIGHT
                    ,       tmkc.INDEX_NO        AS INDEX_NO
                    ,       tmkc.CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    ,       #{tuMClsFg}     AS TU_M_CLS_FG -- 매장 적용시에만 UPDATE / 매장 해당컬럼 사용안함 / 수정 기록 확인용 / 매장은 [4101 KIOSK중분류사용] 사용
                    ,       tmkc.TU_CLS_EN_NM    AS TU_CLS_EN_NM
                    ,       tmkc.TU_CLS_CN_NM    AS TU_CLS_CN_NM
                    ,       tmkc.TU_CLS_JP_NM    AS TU_CLS_JP_NM
                    FROM    TB_HQ_KIOSK_CLS tmkc
                    ,		TB_MS_POS_ENVST B
                    ,		TB_MS_STORE C
                    WHERE   tmkc.HQ_OFFICE_CD   = #{hqOfficeCd}
                    AND     tmkc.TU_CLS_TYPE    = #{tuClsType}
                    AND 	B.STORE_CD 		    = #{storeCd}
                    AND 	B.ENVST_CD          = '4019'
                    AND 	B.ENVST_VAL         = '6'
                    AND 	C.HQ_OFFICE_CD      = tmkc.HQ_OFFICE_CD
                    AND 	C.STORE_CD 	        = B.STORE_CD
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND B.POS_NO            = #{posNo}
                    </if>
                ) B
        ON      (
                        B.STORE_CD     = A.STORE_CD
                    AND B.POS_NO       = A.POS_NO
                    AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                    AND B.TU_CLS_CD    = A.TU_CLS_CD
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_CLS_NM     = B.TU_CLS_NM
        ,       A.TU_PAGE       = B.TU_PAGE
        ,       A.X             = B.X
        ,       A.Y             = B.Y
        ,       A.WIDTH         = B.WIDTH
        ,       A.HEIGHT        = B.HEIGHT
        ,       A.INDEX_NO      = B.INDEX_NO
        ,       A.CLS_FG        = B.CLS_FG
        ,       A.MOD_DT        = B.MOD_DT
        ,       A.MOD_ID        = B.MOD_ID
        ,       A.TU_M_CLS_FG   = B.TU_M_CLS_FG
        ,       A.TU_CLS_EN_NM  = B.TU_CLS_EN_NM
        ,       A.TU_CLS_CN_NM  = B.TU_CLS_CN_NM
        ,       A.TU_CLS_JP_NM  = B.TU_CLS_JP_NM
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,       A.POS_NO
        ,       A.TU_CLS_TYPE
        ,       A.TU_CLS_CD
        ,       A.TU_CLS_NM
        ,       A.TU_PAGE
        ,       A.X
        ,       A.Y
        ,       A.WIDTH
        ,       A.HEIGHT
        ,       A.INDEX_NO
        ,       A.CLS_FG
        ,       A.REG_DT
        ,       A.REG_ID
        ,       A.MOD_DT
        ,       A.MOD_ID
        ,       A.TU_M_CLS_FG
        ,       A.TU_CLS_EN_NM
        ,       A.TU_CLS_CN_NM
        ,       A.TU_CLS_JP_NM
        )
        VALUES
        (
                B.STORE_CD
        ,       B.POS_NO
        ,       B.TU_CLS_TYPE
        ,       B.TU_CLS_CD
        ,       B.TU_CLS_NM
        ,       B.TU_PAGE
        ,       B.X
        ,       B.Y
        ,       B.WIDTH
        ,       B.HEIGHT
        ,       B.INDEX_NO
        ,       B.CLS_FG
        ,       B.REG_DT
        ,       B.REG_ID
        ,       B.MOD_DT
        ,       B.MOD_ID
        ,       B.TU_M_CLS_FG
        ,       B.TU_CLS_EN_NM
        ,       B.TU_CLS_CN_NM
        ,       B.TU_CLS_JP_NM
        )
    </insert>

    <!-- 키오스크키맵복사 - 매장 키오스크키맵 복사 시 매장 카테고리(분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장 키오스크키맵 복사 시 매장 카테고리(분류)를 저장한다.
    -->
    <insert id="mergeKioskCategoryStoreRegStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskCategoryStoreRegStore */
        MERGE INTO TB_MS_KIOSK_CLS A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       #{posNo}        AS POS_NO
                    ,       TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       TU_CLS_CD       AS TU_CLS_CD
                    ,       TU_CLS_NM       AS TU_CLS_NM
                    ,       TU_PAGE         AS TU_PAGE
                    ,       X               AS X
                    ,       Y               AS Y
                    ,       WIDTH           AS WIDTH
                    ,       HEIGHT          AS HEIGHT
                    ,       INDEX_NO        AS INDEX_NO
                    ,       CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    ,       #{tuMClsFg}     AS TU_M_CLS_FG -- 매장 적용시에만 UPDATE / 매장 해당컬럼 사용안함 / 수정 기록 확인용 / 매장은 [4101 KIOSK중분류사용] 사용
                    ,       TU_CLS_EN_NM    AS TU_CLS_EN_NM
                    ,       TU_CLS_CN_NM    AS TU_CLS_CN_NM
                    ,       TU_CLS_JP_NM    AS TU_CLS_JP_NM
                    FROM    TB_MS_KIOSK_CLS tmkc
                    WHERE   STORE_CD = #{originalStoreCd}
                    AND     POS_NO = #{orgPosNo}
                    AND     TU_CLS_TYPE = #{tuClsType}
                ) B
        ON      (
                        B.STORE_CD     = A.STORE_CD
                    AND B.POS_NO       = A.POS_NO
                    AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                    AND B.TU_CLS_CD    = A.TU_CLS_CD
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_CLS_NM     = B.TU_CLS_NM
        ,       A.TU_PAGE       = B.TU_PAGE
        ,       A.X             = B.X
        ,       A.Y             = B.Y
        ,       A.WIDTH         = B.WIDTH
        ,       A.HEIGHT        = B.HEIGHT
        ,       A.INDEX_NO      = B.INDEX_NO
        ,       A.CLS_FG        = B.CLS_FG
        ,       A.MOD_DT        = B.MOD_DT
        ,       A.MOD_ID        = B.MOD_ID
        ,       A.TU_M_CLS_FG   = B.TU_M_CLS_FG
        ,       A.TU_CLS_EN_NM  = B.TU_CLS_EN_NM
        ,       A.TU_CLS_CN_NM  = B.TU_CLS_CN_NM
        ,       A.TU_CLS_JP_NM  = B.TU_CLS_JP_NM
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,       A.POS_NO
        ,       A.TU_CLS_TYPE
        ,       A.TU_CLS_CD
        ,       A.TU_CLS_NM
        ,       A.TU_PAGE
        ,       A.X
        ,       A.Y
        ,       A.WIDTH
        ,       A.HEIGHT
        ,       A.INDEX_NO
        ,       A.CLS_FG
        ,       A.REG_DT
        ,       A.REG_ID
        ,       A.MOD_DT
        ,       A.MOD_ID
        ,       A.TU_M_CLS_FG
        ,       A.TU_CLS_EN_NM
        ,       A.TU_CLS_CN_NM
        ,       A.TU_CLS_JP_NM
        )
        VALUES
        (
                B.STORE_CD
        ,       B.POS_NO
        ,       B.TU_CLS_TYPE
        ,       B.TU_CLS_CD
        ,       B.TU_CLS_NM
        ,       B.TU_PAGE
        ,       B.X
        ,       B.Y
        ,       B.WIDTH
        ,       B.HEIGHT
        ,       B.INDEX_NO
        ,       B.CLS_FG
        ,       B.REG_DT
        ,       B.REG_ID
        ,       B.MOD_DT
        ,       B.MOD_ID
        ,       B.TU_M_CLS_FG
        ,       B.TU_CLS_EN_NM
        ,       B.TU_CLS_CN_NM
        ,       B.TU_CLS_JP_NM
        )
    </insert>

    <!-- 키오스크 키맵명매장적용 - 본사 키맵그룹 매장적용 시 매장 키맵그룹 저장 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 키맵그룹을 저장한다.
    -->
    <insert id="mergeKioskStoreTuClsTypeNm" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskStoreTuClsTypeNm */
        MERGE INTO TB_MS_KIOSK_GROUP A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       B.POS_NO        AS POS_NO
                    ,       A.TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       A.TU_CLS_TYPE_NM  AS TU_CLS_TYPE_NM
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    FROM    TB_HQ_KIOSK_GROUP A
                    ,		TB_MS_POS_ENVST B
                    ,		TB_MS_STORE C
                    WHERE   A.HQ_OFFICE_CD  = #{hqOfficeCd}
                    AND     A.TU_CLS_TYPE   = #{tuClsType}
                    AND 	B.STORE_CD 		= #{storeCd}
                    AND 	B.ENVST_CD      = '4019'
                    AND 	B.ENVST_VAL     = '6'
                    AND 	C.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                    AND 	C.STORE_CD 	    = B.STORE_CD
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND B.POS_NO        = #{posNo}
                    </if>
                ) B
        ON      (
                        B.STORE_CD     = A.STORE_CD
                    AND B.POS_NO       = A.POS_NO
                    AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_CLS_TYPE_NM = B.TU_CLS_TYPE_NM
        ,       A.MOD_DT         = B.MOD_DT
        ,       A.MOD_ID         = B.MOD_ID
        WHEN NOT MATCHED THEN
        INSERT
        (
            A.STORE_CD
        ,   A.POS_NO
        ,   A.TU_CLS_TYPE
        ,   A.TU_CLS_TYPE_NM
        ,   A.REG_DT
        ,   A.REG_ID
        ,   A.MOD_DT
        ,   A.MOD_ID
        )
        VALUES
        (
            B.STORE_CD
        ,   B.POS_NO
        ,   B.TU_CLS_TYPE
        ,   B.TU_CLS_TYPE_NM
        ,   B.REG_DT
        ,   B.REG_ID
        ,   B.MOD_DT
        ,   B.MOD_ID
        )
    </insert>

    <!-- 키오스크키맵복사 - 매장 키오스크키맵 복사 시 매장 키맵그룹 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장 키오스크키맵 복사 시 매장 키맵그룹을 저장한다.
    -->
    <insert id="mergeKioskStoreTuClsTypeNmStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskStoreTuClsTypeNmStore */
        MERGE INTO TB_MS_KIOSK_GROUP A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       #{posNo}        AS POS_NO
                    ,       TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       TU_CLS_TYPE_NM  AS TU_CLS_TYPE_NM
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    FROM    TB_MS_KIOSK_GROUP
                    WHERE   STORE_CD = #{originalStoreCd}
                    AND     POS_NO = #{orgPosNo}
                    AND     TU_CLS_TYPE = #{tuClsType}
                ) B
        ON      (
                        B.STORE_CD     = A.STORE_CD
                    AND B.POS_NO       = A.POS_NO
                    AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_CLS_TYPE_NM = B.TU_CLS_TYPE_NM
        ,       A.MOD_DT         = B.MOD_DT
        ,       A.MOD_ID         = B.MOD_ID
        WHEN NOT MATCHED THEN
        INSERT
        (
            A.STORE_CD
        ,   A.POS_NO
        ,   A.TU_CLS_TYPE
        ,   A.TU_CLS_TYPE_NM
        ,   A.REG_DT
        ,   A.REG_ID
        ,   A.MOD_DT
        ,   A.MOD_ID
        )
        VALUES
        (
            B.STORE_CD
        ,   B.POS_NO
        ,   B.TU_CLS_TYPE
        ,   B.TU_CLS_TYPE_NM
        ,   B.REG_DT
        ,   B.REG_ID
        ,   B.MOD_DT
        ,   B.MOD_ID
        )
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="mergeKioskKeyMapStoreReg" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskKeyMapStoreReg */
        MERGE INTO TB_MS_KIOSK_KEY A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       B.POS_NO        AS POS_NO
                    ,       A.TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       A.TU_CLS_CD       AS TU_CLS_CD
                    ,       A.TU_KEY_CD       AS TU_KEY_CD
                    ,       A.PROD_CD         AS PROD_CD
                    ,       A.TU_PAGE         AS TU_PAGE
                    ,       A.X               AS X
                    ,       A.Y               AS Y
                    ,       A.WIDTH           AS WIDTH
                    ,       A.HEIGHT          AS HEIGHT
                    ,       A.INDEX_NO        AS INDEX_NO
                    ,       A.CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    FROM    TB_HQ_KIOSK_KEY A
                    ,		TB_MS_POS_ENVST B
                    ,		TB_MS_STORE C
                    WHERE   A.HQ_OFFICE_CD  = #{hqOfficeCd}
                    AND     A.TU_CLS_TYPE   = #{tuClsType}
                    AND 	B.STORE_CD 		= #{storeCd}
                    AND 	B.ENVST_CD      = '4019'
                    AND 	B.ENVST_VAL     = '6'
                    AND 	C.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                    AND 	C.STORE_CD 	    = B.STORE_CD
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND B.POS_NO        = #{posNo}
                    </if>
                ) B
        ON      (
                        B.STORE_CD     = A.STORE_CD
                    AND B.POS_NO       = A.POS_NO
                    AND B.TU_CLS_CD    = A.TU_CLS_CD
                    AND B.TU_KEY_CD    = A.TU_KEY_CD
                    AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.PROD_CD      = B.PROD_CD
        ,       A.TU_PAGE      = B.TU_PAGE
        ,       A.X            = B.X
        ,       A.Y            = B.Y
        ,       A.WIDTH        = B.WIDTH
        ,       A.HEIGHT       = B.HEIGHT
        ,       A.INDEX_NO     = B.INDEX_NO
        ,       A.CLS_FG       = B.CLS_FG
        ,       A.MOD_DT       = B.MOD_DT
        ,       A.MOD_ID       = B.MOD_ID
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,       A.POS_NO
        ,       A.TU_CLS_TYPE
        ,       A.TU_CLS_CD
        ,       A.TU_KEY_CD
        ,       A.PROD_CD
        ,       A.TU_PAGE
        ,       A.X
        ,       A.Y
        ,       A.WIDTH
        ,       A.HEIGHT
        ,       A.INDEX_NO
        ,       A.CLS_FG
        ,       A.REG_DT
        ,       A.REG_ID
        ,       A.MOD_DT
        ,       A.MOD_ID
        )
        VALUES
        (
                B.STORE_CD
        ,       B.POS_NO
        ,       B.TU_CLS_TYPE
        ,       B.TU_CLS_CD
        ,       B.TU_KEY_CD
        ,       B.PROD_CD
        ,       B.TU_PAGE
        ,       B.X
        ,       B.Y
        ,       B.WIDTH
        ,       B.HEIGHT
        ,       B.INDEX_NO
        ,       B.CLS_FG
        ,       B.REG_DT
        ,       B.REG_ID
        ,       B.MOD_DT
        ,       B.MOD_ID
        )
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품 매장에도 복사 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 본사 키맵그룹에 엮여있는 상품을 매장 키맵에도 복사한다.
    -->
    <insert id="mergeKioskKeyMapStoreReg2" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskKeyMapStoreReg2 */
        MERGE INTO TB_MS_KIOSK_KEY A
        USING   (
                    SELECT  #{storeCd}          AS STORE_CD
                    ,       B.POS_NO            AS POS_NO
                    ,       A.TU_CLS_TYPE       AS TU_CLS_TYPE
                    ,       A.TU_CLS_CD         AS TU_CLS_CD
                    ,       A.TU_KEY_CD         AS TU_KEY_CD
                    ,       A.PROD_CD           AS PROD_CD
                    ,       A.TU_PAGE           AS TU_PAGE
                    ,       A.X                 AS X
                    ,       A.Y                 AS Y
                    ,       A.WIDTH             AS WIDTH
                    ,       A.HEIGHT            AS HEIGHT
                    ,       A.INDEX_NO          AS INDEX_NO
                    ,       A.CLS_FG            AS CLS_FG
                    ,       #{regDt}            AS REG_DT
                    ,       #{regId}            AS REG_ID
                    ,       #{modDt}            AS MOD_DT
                    ,       #{modId}            AS MOD_ID
                    FROM    TB_HQ_KIOSK_KEY A
                    ,		TB_MS_POS_ENVST B
                    ,		TB_MS_STORE C
                    WHERE   A.HQ_OFFICE_CD  = #{hqOfficeCd}
                    AND     A.TU_CLS_TYPE   = #{tuClsType}
                    AND 	B.STORE_CD 		= #{storeCd}
                    AND 	B.ENVST_CD      = '4019'
                    AND 	B.ENVST_VAL     = '6'
                    AND 	C.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                    AND 	C.STORE_CD 	    = B.STORE_CD
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND B.POS_NO        = #{posNo}
                    </if>
                    <if test='tuMClsFg != null and tuMClsFg != "" and tuMClsFg == "0"'>
                        AND     A.TU_CLS_TYPE || A.TU_CLS_CD NOT IN (
                                                                        SELECT NMCODE_NM || NMCODE_ITEM_1
                                                                        FROM TB_HQ_NMCODE thn
                                                                        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                                        AND NMCODE_GRP_CD = '229'
                                                                        AND NMCODE_ITEM_2 = 'Y'
                                                                    )
                    </if>
                    <if test='tuMClsFg != null and tuMClsFg != "" and tuMClsFg == "2"'>
                        AND     A.TU_CLS_TYPE || A.TU_CLS_CD NOT IN (
                                                                       SELECT   C.TU_CLS_TYPE || C.TU_M_CLS_CD
                                                                       FROM     TB_HQ_KIOSK_M_CLS C
                                                                       WHERE    C.HQ_OFFICE_CD = #{hqOfficeCd}
                                                                       AND      C.TU_CLS_TYPE = #{tuClsType}
                                                                       AND      C.TU_CLS_TYPE || C.TU_CLS_CD IN (
                                                                                                                    SELECT  NMCODE_NM || NMCODE_ITEM_1
                                                                                                                    FROM    TB_HQ_NMCODE thn
                                                                                                                    WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                                                                                                    AND     NMCODE_GRP_CD = '229'
                                                                                                                    AND 	NMCODE_ITEM_2 = 'Y'
                                                                                                                )
                                                                    )
                    </if>
                ) B
        ON      (
                        B.STORE_CD     = A.STORE_CD
                    AND B.POS_NO       = A.POS_NO
                    AND B.TU_CLS_CD    = A.TU_CLS_CD
                    AND B.TU_KEY_CD    = A.TU_KEY_CD
                    AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.PROD_CD      = B.PROD_CD
        ,       A.TU_PAGE      = B.TU_PAGE
        ,       A.X            = B.X
        ,       A.Y            = B.Y
        ,       A.WIDTH        = B.WIDTH
        ,       A.HEIGHT       = B.HEIGHT
        ,       A.INDEX_NO     = B.INDEX_NO
        ,       A.CLS_FG       = B.CLS_FG
        ,       A.MOD_DT       = B.MOD_DT
        ,       A.MOD_ID       = B.MOD_ID
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,       A.POS_NO
        ,       A.TU_CLS_TYPE
        ,       A.TU_CLS_CD
        ,       A.TU_KEY_CD
        ,       A.PROD_CD
        ,       A.TU_PAGE
        ,       A.X
        ,       A.Y
        ,       A.WIDTH
        ,       A.HEIGHT
        ,       A.INDEX_NO
        ,       A.CLS_FG
        ,       A.REG_DT
        ,       A.REG_ID
        ,       A.MOD_DT
        ,       A.MOD_ID
        )
        VALUES
        (
                B.STORE_CD
        ,       B.POS_NO
        ,       B.TU_CLS_TYPE
        ,       B.TU_CLS_CD
        ,       B.TU_KEY_CD
        ,       B.PROD_CD
        ,       B.TU_PAGE
        ,       B.X
        ,       B.Y
        ,       B.WIDTH
        ,       B.HEIGHT
        ,       B.INDEX_NO
        ,       B.CLS_FG
        ,       B.REG_DT
        ,       B.REG_ID
        ,       B.MOD_DT
        ,       B.MOD_ID
        )
    </insert>

    <!-- 키오스크키맵복사 - 매장 키오스크키맵 복사 시 키맵그룹에 엮여있는 상품 매장에도 저장  -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장 키오스크키맵 복사 시 키맵그룹에 엮여있는 상품 매장에도 저장한다.
    -->
    <insert id="mergeKioskKeyMapStoreRegStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskKeyMapStoreRegStore */
        MERGE INTO TB_MS_KIOSK_KEY A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       #{posNo}        AS POS_NO
                    ,       TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       TU_CLS_CD       AS TU_CLS_CD
                    ,       TU_KEY_CD       AS TU_KEY_CD
                    ,       PROD_CD         AS PROD_CD
                    ,       TU_PAGE         AS TU_PAGE
                    ,       X               AS X
                    ,       Y               AS Y
                    ,       WIDTH           AS WIDTH
                    ,       HEIGHT          AS HEIGHT
                    ,       INDEX_NO        AS INDEX_NO
                    ,       CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    FROM    TB_MS_KIOSK_KEY
                    WHERE   STORE_CD = #{originalStoreCd}
                    AND     POS_NO = #{orgPosNo}
                    AND     TU_CLS_TYPE = #{tuClsType}
                ) B
        ON      (
                    B.STORE_CD     = A.STORE_CD
                AND B.POS_NO       = A.POS_NO
                AND B.TU_CLS_CD    = A.TU_CLS_CD
                AND B.TU_KEY_CD    = A.TU_KEY_CD
                AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.PROD_CD      = B.PROD_CD
        ,       A.TU_PAGE      = B.TU_PAGE
        ,       A.X            = B.X
        ,       A.Y            = B.Y
        ,       A.WIDTH        = B.WIDTH
        ,       A.HEIGHT       = B.HEIGHT
        ,       A.INDEX_NO     = B.INDEX_NO
        ,       A.CLS_FG       = B.CLS_FG
        ,       A.MOD_DT       = B.MOD_DT
        ,       A.MOD_ID       = B.MOD_ID
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,       A.POS_NO
        ,       A.TU_CLS_TYPE
        ,       A.TU_CLS_CD
        ,       A.TU_KEY_CD
        ,       A.PROD_CD
        ,       A.TU_PAGE
        ,       A.X
        ,       A.Y
        ,       A.WIDTH
        ,       A.HEIGHT
        ,       A.INDEX_NO
        ,       A.CLS_FG
        ,       A.REG_DT
        ,       A.REG_ID
        ,       A.MOD_DT
        ,       A.MOD_ID
        )
        VALUES
        (
                B.STORE_CD
        ,       B.POS_NO
        ,       B.TU_CLS_TYPE
        ,       B.TU_CLS_CD
        ,       B.TU_KEY_CD
        ,       B.PROD_CD
        ,       B.TU_PAGE
        ,       B.X
        ,       B.Y
        ,       B.WIDTH
        ,       B.HEIGHT
        ,       B.INDEX_NO
        ,       B.CLS_FG
        ,       B.REG_DT
        ,       B.REG_ID
        ,       B.MOD_DT
        ,       B.MOD_ID
        )
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS, TB_HQ_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장한다.
    -->
    <insert id="mergeKioskCategoryStoreRegM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskCategoryStoreRegM */
        MERGE INTO TB_MS_KIOSK_M_CLS A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       B.POS_NO       AS POS_NO
                    ,       A.TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       A.TU_CLS_CD       AS TU_CLS_CD
                    ,       A.TU_M_CLS_CD     AS TU_M_CLS_CD
                    ,       A.TU_M_CLS_NM     AS TU_M_CLS_NM
                    ,       A.TU_PAGE         AS TU_PAGE
                    ,       A.X               AS X
                    ,       A.Y               AS Y
                    ,       A.WIDTH           AS WIDTH
                    ,       A.HEIGHT          AS HEIGHT
                    ,       A.INDEX_NO        AS INDEX_NO
                    ,       A.CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    ,       A.M_CLS_MEMO      AS M_CLS_MEMO
                    FROM    TB_HQ_KIOSK_M_CLS A
                    ,		TB_MS_POS_ENVST B
                    ,		TB_MS_STORE C
                    WHERE   A.HQ_OFFICE_CD  = #{hqOfficeCd}
                    AND     A.TU_CLS_TYPE   = #{tuClsType}
                    AND 	B.STORE_CD 		= #{storeCd}
                    AND 	B.ENVST_CD      = '4019'
                    AND 	B.ENVST_VAL     = '6'
                    AND 	C.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                    AND 	C.STORE_CD 	    = B.STORE_CD
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND B.POS_NO        = #{posNo}
                    </if>
                ) B
        ON      (
                    B.STORE_CD     = A.STORE_CD
                AND B.POS_NO       = A.POS_NO
                AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                AND B.TU_M_CLS_CD  = A.TU_M_CLS_CD
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_M_CLS_NM  = B.TU_M_CLS_NM
        ,		A.TU_PAGE      = B.TU_PAGE
        ,		A.X            = B.X
        ,		A.Y            = B.Y
        ,		A.WIDTH        = B.WIDTH
        ,		A.HEIGHT       = B.HEIGHT
        ,		A.INDEX_NO     = B.INDEX_NO
        ,		A.CLS_FG       = B.CLS_FG
        ,       A.MOD_DT       = B.MOD_DT
        ,       A.MOD_ID       = B.MOD_ID
        ,		A.M_CLS_MEMO   = B.M_CLS_MEMO
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,		A.POS_NO
        ,		A.TU_CLS_TYPE
        ,		A.TU_CLS_CD
        ,		A.TU_M_CLS_CD
        ,		A.TU_M_CLS_NM
        ,		A.TU_PAGE
        ,		A.X
        ,		A.Y
        ,		A.WIDTH
        ,		A.HEIGHT
        ,		A.INDEX_NO
        ,		A.CLS_FG
        ,		A.REG_DT
        ,		A.REG_ID
        ,		A.MOD_DT
        ,		A.MOD_ID
        ,		A.M_CLS_MEMO
        )
        VALUES
        (
                B.STORE_CD
        ,		B.POS_NO
        ,		B.TU_CLS_TYPE
        ,		B.TU_CLS_CD
        ,		B.TU_M_CLS_CD
        ,		B.TU_M_CLS_NM
        ,		B.TU_PAGE
        ,		B.X
        ,		B.Y
        ,		B.WIDTH
        ,		B.HEIGHT
        ,		B.INDEX_NO
        ,		B.CLS_FG
        ,		B.REG_DT
        ,		B.REG_ID
        ,		B.MOD_DT
        ,		B.MOD_ID
        ,		B.M_CLS_MEMO
        )
    </insert>

    <!-- 키오스크 키맵매장적용 - 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS, TB_HQ_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류) 저장한다.
    -->
    <insert id="mergeKioskCategoryStoreRegM2" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskCategoryStoreRegM2 */
        MERGE INTO TB_MS_KIOSK_M_CLS A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       B.POS_NO        AS POS_NO
                    ,       A.TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       A.TU_CLS_CD       AS TU_CLS_CD
                    ,       A.TU_M_CLS_CD     AS TU_M_CLS_CD
                    ,       A.TU_M_CLS_NM     AS TU_M_CLS_NM
                    ,       A.TU_PAGE         AS TU_PAGE
                    ,       A.X               AS X
                    ,       A.Y               AS Y
                    ,       A.WIDTH           AS WIDTH
                    ,       A.HEIGHT          AS HEIGHT
                    ,       A.INDEX_NO        AS INDEX_NO
                    ,       A.CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    ,       A.M_CLS_MEMO      AS M_CLS_MEMO
                    FROM    TB_HQ_KIOSK_M_CLS A
                    ,		TB_MS_POS_ENVST B
                    ,		TB_MS_STORE C
                    WHERE   A.HQ_OFFICE_CD  = #{hqOfficeCd}
                    AND     A.TU_CLS_TYPE   = #{tuClsType}
                    AND 	B.STORE_CD 		= #{storeCd}
                    AND 	B.ENVST_CD      = '4019'
                    AND 	B.ENVST_VAL     = '6'
                    AND 	C.HQ_OFFICE_CD  = A.HQ_OFFICE_CD
                    AND 	C.STORE_CD 	    = B.STORE_CD
                    <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                        AND B.POS_NO        = #{posNo}
                    </if>
                    AND     A.TU_CLS_TYPE || A.TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                                    FROM 	TB_HQ_NMCODE thn
                                                                    WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                                    AND     NMCODE_GRP_CD = '229'
                                                                    AND 	NMCODE_ITEM_2 = 'Y')
                ) B
        ON      (
                    B.STORE_CD     = A.STORE_CD
                AND B.POS_NO       = A.POS_NO
                AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                AND B.TU_M_CLS_CD  = A.TU_M_CLS_CD
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_M_CLS_NM  = B.TU_M_CLS_NM
        ,		A.TU_PAGE      = B.TU_PAGE
        ,		A.X            = B.X
        ,		A.Y            = B.Y
        ,		A.WIDTH        = B.WIDTH
        ,		A.HEIGHT       = B.HEIGHT
        ,		A.INDEX_NO     = B.INDEX_NO
        ,		A.CLS_FG       = B.CLS_FG
        ,       A.MOD_DT       = B.MOD_DT
        ,       A.MOD_ID       = B.MOD_ID
        ,		A.M_CLS_MEMO   = B.M_CLS_MEMO
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,		A.POS_NO
        ,		A.TU_CLS_TYPE
        ,		A.TU_CLS_CD
        ,		A.TU_M_CLS_CD
        ,		A.TU_M_CLS_NM
        ,		A.TU_PAGE
        ,		A.X
        ,		A.Y
        ,		A.WIDTH
        ,		A.HEIGHT
        ,		A.INDEX_NO
        ,		A.CLS_FG
        ,		A.REG_DT
        ,		A.REG_ID
        ,		A.MOD_DT
        ,		A.MOD_ID
        ,		A.M_CLS_MEMO
        )
        VALUES
        (
                B.STORE_CD
        ,		B.POS_NO
        ,		B.TU_CLS_TYPE
        ,		B.TU_CLS_CD
        ,		B.TU_M_CLS_CD
        ,		B.TU_M_CLS_NM
        ,		B.TU_PAGE
        ,		B.X
        ,		B.Y
        ,		B.WIDTH
        ,		B.HEIGHT
        ,		B.INDEX_NO
        ,		B.CLS_FG
        ,		B.REG_DT
        ,		B.REG_ID
        ,		B.MOD_DT
        ,		B.MOD_ID
        ,		B.M_CLS_MEMO
        )
    </insert>

    <!-- 키오스크키맵복사 - 매장 키오스크키맵 복사 시 매장 카테고리(중분류) 저장 -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 본사 키맵그룹 매장적용 시 매장 카테고리(중분류)를 저장한다.
    -->
    <insert id="mergeKioskCategoryStoreRegMStore" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.mergeKioskCategoryStoreRegMStore */
        MERGE INTO TB_MS_KIOSK_M_CLS A
        USING   (
                    SELECT  #{storeCd}      AS STORE_CD
                    ,       #{posNo}        AS POS_NO
                    ,       TU_CLS_TYPE     AS TU_CLS_TYPE
                    ,       TU_CLS_CD       AS TU_CLS_CD
                    ,       TU_M_CLS_CD     AS TU_M_CLS_CD
                    ,       TU_M_CLS_NM     AS TU_M_CLS_NM
                    ,       TU_PAGE         AS TU_PAGE
                    ,       X               AS X
                    ,       Y               AS Y
                    ,       WIDTH           AS WIDTH
                    ,       HEIGHT          AS HEIGHT
                    ,       INDEX_NO        AS INDEX_NO
                    ,       CLS_FG          AS CLS_FG
                    ,       #{regDt}        AS REG_DT
                    ,       #{regId}        AS REG_ID
                    ,       #{modDt}        AS MOD_DT
                    ,       #{modId}        AS MOD_ID
                    ,       M_CLS_MEMO      AS M_CLS_MEMO
                    FROM    TB_MS_KIOSK_M_CLS
                    WHERE   STORE_CD = #{originalStoreCd}
                    AND     POS_NO = #{orgPosNo}
                    AND     TU_CLS_TYPE = #{tuClsType}
                ) B
        ON      (
                    B.STORE_CD     = A.STORE_CD
                AND B.POS_NO       = A.POS_NO
                AND B.TU_CLS_TYPE  = A.TU_CLS_TYPE
                AND B.TU_M_CLS_CD  = A.TU_M_CLS_CD
                )
        WHEN MATCHED THEN
        UPDATE
        SET     A.TU_M_CLS_NM  = B.TU_M_CLS_NM
        ,		A.TU_PAGE      = B.TU_PAGE
        ,		A.X            = B.X
        ,		A.Y            = B.Y
        ,		A.WIDTH        = B.WIDTH
        ,		A.HEIGHT       = B.HEIGHT
        ,		A.INDEX_NO     = B.INDEX_NO
        ,		A.CLS_FG       = B.CLS_FG
        ,       A.MOD_DT       = B.MOD_DT
        ,       A.MOD_ID       = B.MOD_ID
        ,		A.M_CLS_MEMO   = B.M_CLS_MEMO
        WHEN NOT MATCHED THEN
        INSERT
        (
                A.STORE_CD
        ,		A.POS_NO
        ,		A.TU_CLS_TYPE
        ,		A.TU_CLS_CD
        ,		A.TU_M_CLS_CD
        ,		A.TU_M_CLS_NM
        ,		A.TU_PAGE
        ,		A.X
        ,		A.Y
        ,		A.WIDTH
        ,		A.HEIGHT
        ,		A.INDEX_NO
        ,		A.CLS_FG
        ,		A.REG_DT
        ,		A.REG_ID
        ,		A.MOD_DT
        ,		A.MOD_ID
        ,		A.M_CLS_MEMO
        )
        VALUES
        (
                B.STORE_CD
        ,		B.POS_NO
        ,		B.TU_CLS_TYPE
        ,		B.TU_CLS_CD
        ,		B.TU_M_CLS_CD
        ,		B.TU_M_CLS_NM
        ,		B.TU_PAGE
        ,		B.X
        ,		B.Y
        ,		B.WIDTH
        ,		B.HEIGHT
        ,		B.INDEX_NO
        ,		B.CLS_FG
        ,		B.REG_DT
        ,		B.REG_ID
        ,		B.MOD_DT
        ,		B.MOD_ID
        ,		B.M_CLS_MEMO
        )
    </insert>

    <!-- 키오스크 키맵매장적용 - 기존 데이터 중, 불필요한 매장 카테고리(분류) 정보 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS, TB_HQ_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 데이터 중, 불필요한 매장 카테고리(분류) 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskCategoryToStore" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskCategoryToStore */
        DELETE
        FROM   TB_MS_KIOSK_CLS
        WHERE  STORE_CD    = #{storeCd}
        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
            AND    POS_NO      = #{posNo}
        </if>
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD IN
        (
            SELECT TU_CLS_CD
            FROM   TB_MS_KIOSK_CLS
            WHERE  STORE_CD    = #{storeCd}
            <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                AND    POS_NO      = #{posNo}
            </if>
            AND    TU_CLS_TYPE = #{tuClsType}
            MINUS
            SELECT TU_CLS_CD
            FROM   TB_HQ_KIOSK_CLS
            WHERE  HQ_OFFICE_CD = #{hqOfficeCd}
            AND    TU_CLS_TYPE = #{tuClsType}
        )
    </delete>

    <!-- 키오스크키맵복사 - 기존 데이터 중, 불필요한 매장 카테고리(분류) 정보 삭제 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 기존 데이터 중, 불필요한 매장 카테고리(분류) 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskCategoryToStoreStore" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskCategoryToStoreStore */
        DELETE
        FROM   TB_MS_KIOSK_CLS
        WHERE  STORE_CD    = #{storeCd}
        AND    POS_NO      = #{posNo}
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD IN
        (
            SELECT TU_CLS_CD
            FROM   TB_MS_KIOSK_CLS
            WHERE  STORE_CD    = #{storeCd}
            AND    POS_NO      = #{posNo}
            AND    TU_CLS_TYPE = #{tuClsType}
            MINUS
            SELECT TU_CLS_CD
            FROM   TB_MS_KIOSK_CLS
            WHERE  STORE_CD    = #{originalStoreCd}
            AND    POS_NO      = #{orgPosNo}
            AND    TU_CLS_TYPE = #{tuClsType}
        )
    </delete>

    <!-- 키오스크 키맵매장적용 - 기존 데이터 중, 불필요한 매장 맵핑상품 정보 삭제  -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY, TB_HQ_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS :  기존 데이터 중, 불필요한 매장 맵핑상품 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskKeyMapToStore" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskKeyMapToStore */
        DELETE
        FROM   TB_MS_KIOSK_KEY
        WHERE  STORE_CD    = #{storeCd}
        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
            AND    POS_NO      = #{posNo}
        </if>
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD || TU_KEY_CD IN
        (
            SELECT TU_CLS_CD || TU_KEY_CD
            FROM   TB_MS_KIOSK_KEY
            WHERE  STORE_CD    = #{storeCd}
            <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                AND    POS_NO      = #{posNo}
            </if>
            AND    TU_CLS_TYPE = #{tuClsType}
            MINUS
            SELECT TU_CLS_CD || TU_KEY_CD
            FROM   TB_HQ_KIOSK_KEY
            WHERE  HQ_OFFICE_CD = #{hqOfficeCd}
            AND    TU_CLS_TYPE = #{tuClsType}
        )
    </delete>

    <!-- 키오스크 키맵매장적용 - 기존 데이터 중, 불필요한 매장 맵핑상품 정보 삭제  -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS :  기존 데이터 중, 불필요한 매장 맵핑상품 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskKeyMapToStore2" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskKeyMapToStore2 */
        DELETE
        FROM   TB_MS_KIOSK_KEY
        WHERE  STORE_CD    = #{storeCd}
        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
            AND    POS_NO      = #{posNo}
        </if>
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD || TU_KEY_CD IN
        (
            SELECT TU_CLS_CD || TU_KEY_CD
            FROM   TB_MS_KIOSK_KEY
            WHERE  STORE_CD    = #{storeCd}
            <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                AND    POS_NO      = #{posNo}
            </if>
            AND    TU_CLS_TYPE = #{tuClsType}
            <if test='tuMClsFg != null and tuMClsFg != "" and tuMClsFg == "0"'>
                AND TU_CLS_TYPE || TU_CLS_CD NOT IN (
                                                            SELECT NMCODE_NM || NMCODE_ITEM_1
                                                            FROM TB_HQ_NMCODE thn
                                                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                            AND NMCODE_GRP_CD = '229'
                                                            AND NMCODE_ITEM_2 = 'Y'
                                                    )
            </if>
            <if test='tuMClsFg != null and tuMClsFg != "" and tuMClsFg == "2"'>
                AND    TU_CLS_TYPE || TU_CLS_CD NOT IN (
                                                           SELECT   C.TU_CLS_TYPE || C.TU_M_CLS_CD
                                                           FROM     TB_MS_KIOSK_M_CLS C
                                                           WHERE    C.STORE_CD = #{storeCd}
                                                            <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                                                                AND    C.POS_NO      = #{posNo}
                                                            </if>
                                                           AND      C.TU_CLS_TYPE = #{tuClsType}
                                                           AND      C.TU_CLS_TYPE || C.TU_CLS_CD IN (
                                                                                                        SELECT  NMCODE_NM || NMCODE_ITEM_1
                                                                                                        FROM    TB_HQ_NMCODE thn
                                                                                                        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                                                                                        AND     NMCODE_GRP_CD = '229'
                                                                                                        AND 	NMCODE_ITEM_2 = 'Y'
                                                                                                    )
                                                       )
            </if>
            MINUS
            SELECT TU_CLS_CD || TU_KEY_CD
            FROM   TB_HQ_KIOSK_KEY
            WHERE  HQ_OFFICE_CD = #{hqOfficeCd}
            AND    TU_CLS_TYPE = #{tuClsType}
            <if test='tuMClsFg != null and tuMClsFg != "" and tuMClsFg == "0"'>
                AND    TU_CLS_TYPE || TU_CLS_CD NOT IN (
                                                           SELECT  NMCODE_NM || NMCODE_ITEM_1
                                                           FROM    TB_HQ_NMCODE thn
                                                           WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                                           AND     NMCODE_GRP_CD = '229'
                                                           AND 	   NMCODE_ITEM_2 = 'Y'
                                                       )
            </if>
            <if test='tuMClsFg != null and tuMClsFg != "" and tuMClsFg == "2"'>
                AND    TU_CLS_TYPE || TU_CLS_CD NOT IN (
                                                           SELECT   C.TU_CLS_TYPE || C.TU_M_CLS_CD
                                                           FROM     TB_HQ_KIOSK_M_CLS C
                                                           WHERE    C.HQ_OFFICE_CD = #{hqOfficeCd}
                                                           AND      C.TU_CLS_TYPE = #{tuClsType}
                                                           AND      C.TU_CLS_TYPE || C.TU_CLS_CD IN (
                                                                                                        SELECT  NMCODE_NM || NMCODE_ITEM_1
                                                                                                        FROM    TB_HQ_NMCODE thn
                                                                                                        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                                                                                        AND     NMCODE_GRP_CD = '229'
                                                                                                        AND 	NMCODE_ITEM_2 = 'Y'
                                                                                                    )
                                                       )
            </if>
        )
    </delete>

    <!-- 키오스크키맵복사 - 기존 데이터 중, 불필요한 매장 맵핑상품 정보 삭제  -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS :  기존 데이터 중, 불필요한 매장 맵핑상품 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskKeyMapToStoreStore" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskKeyMapToStoreStore */
        DELETE
        FROM   TB_MS_KIOSK_KEY
        WHERE  STORE_CD    = #{storeCd}
        AND    POS_NO      = #{posNo}
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD || TU_KEY_CD IN
        (
            SELECT TU_CLS_CD || TU_KEY_CD
            FROM   TB_MS_KIOSK_KEY
            WHERE  STORE_CD    = #{storeCd}
            AND    POS_NO      = #{posNo}
            AND    TU_CLS_TYPE = #{tuClsType}
            MINUS
            SELECT TU_CLS_CD || TU_KEY_CD
            FROM   TB_MS_KIOSK_KEY
            WHERE  STORE_CD    = #{originalStoreCd}
            AND    POS_NO      = #{orgPosNo}
            AND    TU_CLS_TYPE = #{tuClsType}
        )
    </delete>

    <!-- 키오스크 키맵매장적용 - 기존 데이터 중, 불필요한 매장 카테고리(중분류) 정보 삭제  -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS, TB_HQ_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS :  기존 데이터 중, 불필요한 매장 카테고리(중분류) 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskCategoryToStoreM" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskCategoryToStoreM */
        DELETE
        FROM   TB_MS_KIOSK_M_CLS
        WHERE  STORE_CD    = #{storeCd}
        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
            AND    POS_NO      = #{posNo}
        </if>
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD || TU_M_CLS_CD IN
        (
            SELECT TU_CLS_CD || TU_M_CLS_CD
            FROM   TB_MS_KIOSK_M_CLS
            WHERE  STORE_CD    = #{storeCd}
            <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                AND    POS_NO      = #{posNo}
            </if>
            AND    TU_CLS_TYPE = #{tuClsType}
            MINUS
            SELECT TU_CLS_CD || TU_M_CLS_CD
            FROM   TB_HQ_KIOSK_M_CLS
            WHERE  HQ_OFFICE_CD = #{hqOfficeCd}
            AND    TU_CLS_TYPE = #{tuClsType}
        )
    </delete>

    <!-- 키오스크 키맵매장적용 - 기존 데이터 중, 불필요한 매장 카테고리(중분류) 정보 삭제  -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS, TB_HQ_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS :  기존 데이터 중, 불필요한 매장 카테고리(중분류) 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskCategoryToStoreM2" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskCategoryToStoreM2 */
        DELETE
        FROM   TB_MS_KIOSK_M_CLS
        WHERE  STORE_CD    = #{storeCd}
        <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
            AND    POS_NO      = #{posNo}
        </if>
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD || TU_M_CLS_CD IN
        (
            SELECT TU_CLS_CD || TU_M_CLS_CD
            FROM   TB_MS_KIOSK_M_CLS
            WHERE  STORE_CD    = #{storeCd}
            <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                AND    POS_NO      = #{posNo}
            </if>
            AND    TU_CLS_TYPE = #{tuClsType}
            AND    TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                       FROM 	TB_HQ_NMCODE thn
                                                       WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                       AND      NMCODE_GRP_CD = '229'
                                                       AND 	    NMCODE_ITEM_2 = 'Y')
            MINUS
            SELECT TU_CLS_CD || TU_M_CLS_CD
            FROM   TB_HQ_KIOSK_M_CLS
            WHERE  HQ_OFFICE_CD = #{hqOfficeCd}
            AND    TU_CLS_TYPE = #{tuClsType}
            AND    TU_CLS_TYPE || TU_CLS_CD NOT IN (   SELECT 	NMCODE_NM || NMCODE_ITEM_1
                                                       FROM 	TB_HQ_NMCODE thn
                                                       WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                                                       AND      NMCODE_GRP_CD = '229'
                                                       AND 	    NMCODE_ITEM_2 = 'Y')
        )
    </delete>

    <!-- 키오스크키맵복사 - 기존 데이터 중, 불필요한 매장 카테고리(중분류) 정보 삭제  -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS :  기존 데이터 중, 불필요한 매장 카테고리(중분류) 정보를 삭제한다.
    -->
    <delete id="deleteNotUseKioskCategoryToStoreMStore" parameterType="kioskKeyMapVO" >
        /* USE : KioskKeyMapMapper.deleteNotUseKioskCategoryToStoreMStore */
        DELETE
        FROM   TB_MS_KIOSK_M_CLS
        WHERE  STORE_CD    = #{storeCd}
        AND    POS_NO      = #{posNo}
        AND    TU_CLS_TYPE = #{tuClsType}
        AND    TU_CLS_CD || TU_M_CLS_CD IN
        (
            SELECT TU_CLS_CD || TU_M_CLS_CD
            FROM   TB_MS_KIOSK_M_CLS
            WHERE  STORE_CD    = #{storeCd}
            AND    POS_NO      = #{posNo}
            AND    TU_CLS_TYPE = #{tuClsType}
            MINUS
            SELECT TU_CLS_CD || TU_M_CLS_CD
            FROM   TB_MS_KIOSK_M_CLS
            WHERE  STORE_CD    = #{originalStoreCd}
            AND    POS_NO      = #{orgPosNo}
            AND    TU_CLS_TYPE = #{tuClsType}
        )
    </delete>

    <!-- 키오스크키맵 매장복사 - 매장 키오스크 포스 리스트 조회 -->
    <!--
          TABLE    : TB_MS_STORE
          PARAM    : kioskKeyMapVO
          COMMENTS : 키오스크키맵 매장복사 시 매장 키오스크 포스 리스트를 조회한다.
    -->
    <select id="getStoreCopyKioskPosList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getStoreCopyKioskPosList */
        SELECT *
        FROM
        (
            SELECT
            (SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = tms.HQ_OFFICE_CD AND thb.HQ_BRAND_CD = tms.HQ_BRAND_CD) AS BRAND,
            tms.STORE_NM,
            tms.STORE_CD,
            tmp.POS_NO,
            tms.SYS_STAT_FG,
            (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4068') AS ENV_4068,
            (SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4069') AS ENV_4069,
            NVL((SELECT ENVST_VAL FROM TB_MS_POS_ENVST WHERE STORE_CD = tms.STORE_CD AND POS_NO = tmp.POS_NO AND ENVST_CD = '4101'), 0) AS TU_M_CLS_FG
            FROM TB_MS_STORE tms,
                 TB_MS_STORE_INFO tmsi,
            (
                SELECT tmp.STORE_CD,
                tmp.POS_NO
                FROM TB_MS_POS_ENVST tmpe,
                TB_MS_POS tmp
                WHERE tmpe.STORE_CD = tmp.STORE_CD
                AND tmpe.POS_NO = tmp.POS_NO
                AND tmpe.ENVST_CD = '4019'
                AND tmpe.ENVST_VAL = '6'
            ) tmp
            WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tmp.STORE_CD = tms.STORE_CD
            AND tms.STORE_CD = tmsi.STORE_CD(+)
            <if test="storeCd != null and storeCd != ''">
                AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
            </if>
            <if test="storeNm != null and storeNm != ''">
                AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
            </if>
            <if test="sysStatFg != null and sysStatFg != ''">
                AND tms.SYS_STAT_FG = #{sysStatFg} --매장상태구분
            </if>
            <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
                AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
            </if>
            <if test='momsTeam != null and momsTeam != ""'>
                AND tmsi.MOMS_TEAM = #{momsTeam}
            </if>
            <if test='momsAcShop != null and momsAcShop != ""'>
                AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
            </if>
            <if test='momsAreaFg != null and momsAreaFg != ""'>
                AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
            </if>
            <if test='momsCommercial != null and momsCommercial != ""'>
                AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
            </if>
            <if test='momsShopType != null and momsShopType != ""'>
                AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
            </if>
            <if test='momsStoreManageType != null and momsStoreManageType != ""'>
                AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
            </if>
            <if test='branchCd != null and branchCd != ""'>
                AND tms.BRANCH_CD = #{branchCd}
            </if>
            <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
                AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
            </if>
            <if test='momsStoreFg02 != null and momsStoreFg02 != ""'>
                AND tmsi.MOMS_STORE_FG_02 = #{momsStoreFg02}
            </if>
            <if test='momsStoreFg03 != null and momsStoreFg03 != ""'>
                AND tmsi.MOMS_STORE_FG_03 = #{momsStoreFg03}
            </if>
            <if test='momsStoreFg04 != null and momsStoreFg04 != ""'>
                AND tmsi.MOMS_STORE_FG_04 = #{momsStoreFg04}
            </if>
            <if test='momsStoreFg05 != null and momsStoreFg05 != ""'>
                AND tmsi.MOMS_STORE_FG_05 = #{momsStoreFg05}
            </if>
            <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
                <if test='userBrands != null and userBrands != ""'>
                    -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                    AND tms.HQ_BRAND_CD IN
                    <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test='originalStoreCd != null and originalStoreCd != ""'>
                AND tms.STORE_CD || tmp.POS_NO != #{originalStoreCd} || #{orgPosNo}
            </if>
            ORDER BY tms.STORE_CD, tmp.POS_NO ASC
        )
        WHERE 1=1
        <if test="tuMClsFg != null and tuMClsFg != ''">
            AND TU_M_CLS_FG = #{tuMClsFg}
        </if>
    </select>

    <!-- 키오스크키맵 매장복사 - 매장 키맵그룹 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_GROUP
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크키맵 매장복사 - 매장 키맵그룹을 복사한다.
    -->
    <insert id="copyStoreTuClsType" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyStoreTuClsType */
        INSERT INTO TB_MS_KIOSK_GROUP
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_TYPE_NM,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT #{storeCd},
               #{posNo},
               TU_CLS_TYPE,
               TU_CLS_TYPE_NM,
               #{regDt},
               #{regId},
               #{modDt},
               #{modId}
          FROM TB_MS_KIOSK_GROUP
         WHERE STORE_CD = #{originalStoreCd}
           AND POS_NO = #{orgPosNo}
           AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크키맵 매장복사 - 매장 카테고리(분류) 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크키맵 매장복사 - 매장 카테고리(분류)를 복사한다.
    -->
    <insert id="copyStoreTuCls" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyStoreTuCls */
        INSERT INTO TB_MS_KIOSK_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            CLS_MEMO,
            TU_M_CLS_FG,
            TU_CLS_EN_NM,
            TU_CLS_CN_NM,
            TU_CLS_JP_NM
        )
        SELECT #{storeCd},
               #{posNo},
               TU_CLS_TYPE,
               TU_CLS_CD,
               TU_CLS_NM,
               TU_PAGE,
               X,
               Y,
               WIDTH,
               HEIGHT,
               INDEX_NO,
               CLS_FG,
               #{regDt},
               #{regId},
               #{modDt},
               #{modId},
               CLS_MEMO,
               TU_M_CLS_FG,
               TU_CLS_EN_NM,
               TU_CLS_CN_NM,
               TU_CLS_JP_NM
          FROM TB_MS_KIOSK_CLS
         WHERE STORE_CD = #{originalStoreCd}
           AND POS_NO = #{orgPosNo}
           AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크키맵 매장복사 - 매장 키맵상품 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크키맵 매장복사 - 매장 키맵상품을 복사한다.
    -->
    <insert id="copyStoreTuKey" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyStoreTuKey */
        INSERT INTO TB_MS_KIOSK_KEY
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_KEY_CD,
            PROD_CD,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        SELECT #{storeCd},
               #{posNo},
               TU_CLS_TYPE,
               TU_CLS_CD,
               TU_KEY_CD,
               PROD_CD,
               TU_PAGE,
               X,
               Y,
               WIDTH,
               HEIGHT,
               INDEX_NO,
               CLS_FG,
               #{regDt},
               #{regId},
               #{modDt},
               #{modId}
          FROM TB_MS_KIOSK_KEY
         WHERE STORE_CD = #{originalStoreCd}
           AND POS_NO = #{orgPosNo}
           AND TU_CLS_TYPE = #{tuClsType}
    </insert>

    <!-- 키오스크키맵 매장복사 - 매장 카테고리 하위 중분류 갯수 파악 -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크키맵 매장복사 - 매장 카테고리 하위 중분류 갯수를 파악한다.
    -->
    <select id="getStoreTuClsCount" parameterType="kioskKeyMapVO" resultType="Integer">
        /* USE : KioskKeyMapMapper.getStoreTuClsCount */
        SELECT COUNT(TU_M_CLS_CD) AS ROW_COUNT
          FROM TB_MS_KIOSK_M_CLS
         WHERE 1=1
           AND STORE_CD = #{originalStoreCd}
           AND POS_NO = #{orgPosNo}
           AND TU_CLS_TYPE = #{tuClsType}
    </select>

    <!-- 키오스크키맵 매장복사 - 매장 카테고리 하위 중분류 복사 -->
    <!--
        TABLE    : TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크키맵 매장복사 - 매장 카테고리 하위 중분류를 복사한다.
    -->
    <insert id="copyStoreTuClsM" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.copyStoreTuClsM */
        INSERT INTO TB_MS_KIOSK_M_CLS
        (
            STORE_CD,
            POS_NO,
            TU_CLS_TYPE,
            TU_CLS_CD,
            TU_M_CLS_CD,
            TU_M_CLS_NM,
            TU_PAGE,
            X,
            Y,
            WIDTH,
            HEIGHT,
            INDEX_NO,
            CLS_FG,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            M_CLS_MEMO
        )
        SELECT #{storeCd},
               #{posNo},
               TU_CLS_TYPE,
               TU_CLS_CD,
               TU_M_CLS_CD,
               TU_M_CLS_NM,
               TU_PAGE,
               X,
               Y,
               WIDTH,
               HEIGHT,
               INDEX_NO,
               CLS_FG,
               #{regDt},
               #{regId},
               #{modDt},
               #{modId},
               M_CLS_MEMO
          FROM TB_MS_KIOSK_M_CLS
         WHERE STORE_CD = #{originalStoreCd}
           AND POS_NO = #{orgPosNo}
           AND TU_CLS_TYPE = #{tuClsType}
    </insert>


    <!-- 키오스크 키맵 조회 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 키맵을 가져온다.
    -->
    <select id="getTuKeyList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* USE : KioskKeyMapMapper.getTuKeyList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	thkk.PROD_CD
                ,		thp.PROD_NM
                ,		thpi.IMG_URL
                ,		thpi.IMG_FILE_NM
                ,		DECODE(thp.SIDE_PROD_YN,'N','[단품]','Y',DECODE((
                                                                            SELECT  thpsg2.SDSEL_TYPE_FG
                                                                            FROM    TB_HQ_PRODUCT_SDSEL_GROUP thpsg2
                                                                            WHERE   thpsg2.HQ_OFFICE_CD = #{hqOfficeCd}
                                                                            AND     thpsg2.SDSEL_GRP_CD = thp.SDSEL_GRP_CD),'S','[단품]','C','[세트]',NULL,'[단품]')) AS SIDE_PROD_YN
                ,       DECODE(thp.GROUP_PROD_CD, NULL,'','[키오스크-단품/세트선택팝업]') AS GROUP_PROD_CD_FG
                ,		TO_CHAR(decode(thpsp.SALE_UPRC, 0, (SELECT	NVL(MAX(thpsp.ADD_PROD_UPRC), 0)
                                                            FROM 	TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                                                            ,		TB_HQ_PRODUCT_SDSEL_CLASS thpsc
                                                            ,		TB_HQ_PRODUCT_SDSEL_PROD thpsp
                                                            WHERE  	thpsg.HQ_OFFICE_CD      = thp.HQ_OFFICE_CD
                                                            AND 	thpsg.SDSEL_GRP_CD      = thp.SDSEL_GRP_CD
                                                            AND 	thpsg.HQ_OFFICE_CD      = thpsc.HQ_OFFICE_CD
                                                            AND 	thpsg.SDSEL_GRP_CD      = thpsc.SDSEL_GRP_CD
                                                            AND 	thpsg.HQ_OFFICE_CD      = thpsp.HQ_OFFICE_CD
                                                            AND 	thpsc.SDSEL_CLASS_CD    = thpsp.SDSEL_CLASS_CD
                                                            AND     thpsg.USE_YN            = 'Y'
                                                            AND 	thpsc.DISP_SEQ          = '1'
                                                            AND 	thpsc.USE_YN            = 'Y'
                                                            AND 	thpsp.DISP_SEQ          = '1'
                                                            AND 	thpsp.USE_YN            = 'Y'
                                                            AND 	thp.SIDE_PROD_YN        = 'Y'), thpsp.SALE_UPRC),'999,999,999,999') AS SALE_UPRC
                ,		thp.GROUP_PROD_CD
                ,		thp2.PROD_NM        AS GROUP_PROD_NM
                ,		DECODE(thpi2.MOMS_KIOSK_EDGE,'1','NEW','2','BEST','3','EVENT','0') AS MOMS_KIOSK_EDGE
                ,		thkk.TU_CLS_CD
                FROM 	TB_HQ_KIOSK_KEY thkk
                ,		TB_HQ_PRODUCT thp
                ,		TB_HQ_PRODUCT_IMAGE thpi
                ,		TB_HQ_PRODUCT thp2
                ,		TB_HQ_PRODUCT_INFO thpi2
                ,		(
                            SELECT	PROD_CD
                            ,		MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                            FROM 	TB_HQ_PRODUCT_SALE_PRICE
                            WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                            <![CDATA[
                                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                            ]]>
                            AND 	SALE_PRC_FG = '1'
                            GROUP
                            BY 		PROD_CD
                        ) thpsp
                WHERE 	thkk.HQ_OFFICE_CD   = #{hqOfficeCd}
                AND 	thkk.TU_CLS_TYPE    = #{tuClsType}
                AND 	thkk.TU_CLS_CD      = #{tuClsCd}
                AND 	thkk.HQ_OFFICE_CD   = thp.HQ_OFFICE_CD
                AND 	thkk.PROD_CD        = thp.PROD_CD
                AND 	thkk.HQ_OFFICE_CD   = thpi.HQ_OFFICE_CD(+)
                AND 	thkk.PROD_CD        = thpi.PROD_CD(+)
                AND 	thp.HQ_OFFICE_CD    = thp2.HQ_OFFICE_CD (+)
                AND 	thp.GROUP_PROD_CD   = thp2.PROD_CD (+)
                AND 	thkk.HQ_OFFICE_CD   = thpi2.HQ_OFFICE_CD(+)
                AND 	thkk.PROD_CD        = thpi2.PROD_CD(+)
                AND 	'002'               = thpi.IMG_FG(+)
                AND 	thkk.PROD_CD        = thpsp.PROD_CD
                ORDER
                BY 		thkk.INDEX_NO
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	thkk.PROD_CD
                ,		thp.PROD_NM
                ,		thpi.IMG_URL
                ,		thpi.IMG_FILE_NM
                ,		DECODE(thp.SIDE_PROD_YN,'N','[단품]','Y',DECODE((
                                                                            SELECT  tmpsg.SDSEL_TYPE_FG
                                                                            FROM    TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                                                                            WHERE   tmpsg.STORE_CD = #{storeCd}
                                                                            AND     tmpsg.SDSEL_GRP_CD = thp.SDSEL_GRP_CD),'S','[단품]','C','[세트]',NULL,'[단품]')) AS SIDE_PROD_YN
                ,       DECODE(thp.GROUP_PROD_CD, NULL,'','[키오스크-단품/세트선택팝업]') AS GROUP_PROD_CD_FG
                ,		TO_CHAR(decode(thpsp.SALE_UPRC, 0, (SELECT	NVL(MAX(thpsp.ADD_PROD_UPRC), 0)
                                                            FROM 	TB_MS_PRODUCT_SDSEL_GROUP thpsg
                                                            ,		TB_MS_PRODUCT_SDSEL_CLASS thpsc
                                                            ,		TB_MS_PRODUCT_SDSEL_PROD thpsp
                                                            WHERE  	thpsg.STORE_CD          = thp.STORE_CD
                                                            AND 	thpsg.SDSEL_GRP_CD      = thp.SDSEL_GRP_CD
                                                            AND 	thpsg.STORE_CD          = thpsc.STORE_CD
                                                            AND 	thpsg.SDSEL_GRP_CD      = thpsc.SDSEL_GRP_CD
                                                            AND 	thpsg.STORE_CD          = thpsp.STORE_CD
                                                            AND 	thpsc.SDSEL_CLASS_CD    = thpsp.SDSEL_CLASS_CD
                                                            AND     thpsg.USE_YN            = 'Y'
                                                            AND 	thpsc.DISP_SEQ          = '1'
                                                            AND 	thpsc.USE_YN            = 'Y'
                                                            AND 	thpsp.DISP_SEQ          = '1'
                                                            AND 	thpsp.USE_YN            = 'Y'
                                                            AND 	thp.SIDE_PROD_YN        = 'Y'), thpsp.SALE_UPRC),'999,999,999,999') AS SALE_UPRC
                ,       thp.SOLD_OUT_YN
                ,		thp.GROUP_PROD_CD
                ,		thp2.PROD_NM        AS GROUP_PROD_NM
                ,		DECODE(thpi2.MOMS_KIOSK_EDGE,'1','NEW','2','BEST','3','EVENT','0') AS MOMS_KIOSK_EDGE
                ,		thkk.TU_CLS_CD
                FROM 	TB_MS_KIOSK_KEY thkk
                ,		TB_MS_PRODUCT thp
                ,		TB_MS_PRODUCT_IMAGE thpi
                ,		TB_MS_PRODUCT thp2
                ,		TB_MS_PRODUCT_INFO thpi2
                ,		(
                SELECT	PROD_CD
                ,		MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM 	TB_MS_PRODUCT_SALE_PRICE
                WHERE 	STORE_CD = #{storeCd}
                <![CDATA[
                                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                            ]]>
                AND 	SALE_PRC_FG = '1'
                GROUP
                BY 		PROD_CD
                ) thpsp
                WHERE 	thkk.STORE_CD       = #{storeCd}
                AND 	thkk.POS_NO         = #{posNo}
                AND 	thkk.TU_CLS_TYPE    = #{tuClsType}
                AND 	thkk.TU_CLS_CD      = #{tuClsCd}
                AND 	thkk.STORE_CD       = thp.STORE_CD
                AND 	thkk.PROD_CD        = thp.PROD_CD
                AND 	thkk.STORE_CD       = thpi.STORE_CD(+)
                AND 	thkk.PROD_CD        = thpi.PROD_CD(+)
                AND 	thp.STORE_CD        = thp2.STORE_CD (+)
                AND 	thp.GROUP_PROD_CD   = thp2.PROD_CD (+)
                AND 	thkk.STORE_CD       = thpi2.STORE_CD(+)
                AND 	thkk.PROD_CD        = thpi2.PROD_CD(+)
                AND 	'002'               = thpi.IMG_FG(+)
                AND 	thkk.PROD_CD        = thpsp.PROD_CD
                AND     (thp.KIOSK_DISPLAY_YN = 'Y' OR thp.KIOSK_DISPLAY_YN IS NULL)
                ORDER
                BY 		thkk.INDEX_NO
            </when>
        </choose>
    </select>


    <!-- 본사 판매가관리 -->
    <!--
        TABLE    : 본사판매가 관리 조회
        COMMENTS : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_PRODUCT_CLASS
    -->
    <select id="getHqSalePrice" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getHqSalePrice */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        thtk.TU_CLS_TYPE,
        thtk.TU_CLS_TYPE_NM,
        thp.PROD_CD,
        thp.PROD_NM,
        thp.PROD_CLASS_CD,  -- 상품분류코드
        thp.PO_UNIT_QTY, -- 입수
        thp.COST_UPRC AS HQ_COST_UPRC,   -- 본사원가
        thp.SPLY_UPRC AS HQ_SPLY_UPRC,   -- 대표공급가
        thpsp.SALE_UPRC AS HQ_SALE_UPRC, -- 본사판매가
        thpsp.SALE_UPRC AS SALE_UPRC, -- 변경판매가
        thpsp.STIN_SALE_UPRC AS HQ_STIN_SALE_UPRC,    -- 본사내점-판매가
        thpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,       -- 변경내점-판매가
        thpsp.DLVR_SALE_UPRC AS HQ_DLVR_SALE_UPRC,    -- 본사배달-판매가
        thpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,       -- 변경배달-판매가
        thpsp.PACK_SALE_UPRC AS HQ_PACK_SALE_UPRC,    -- 본사포장-판매가
        thpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,       -- 변경포장-판매가
        thp.PRC_CTRL_FG
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM (
        SELECT  thkk.HQ_OFFICE_CD
        ,       thkk.TU_CLS_TYPE
        ,       thkg.TU_CLS_TYPE_NM
        ,       thkk.PROD_CD
        ,       MIN(thkc.INDEX_NO) AS CLASS_INDEX_NO
        ,       MIN(thkk.INDEX_NO) AS INDEX_NO
        FROM    TB_HQ_KIOSK_KEY thkk
        ,		TB_HQ_KIOSK_CLS thkc
        ,		TB_HQ_KIOSK_GROUP thkg
        WHERE   thkk.HQ_OFFICE_CD = #{hqOfficeCd}
        AND 	thkk.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
        AND 	thkk.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
        AND 	thkk.HQ_OFFICE_CD = thkc.HQ_OFFICE_CD
        AND 	thkk.TU_CLS_CD = thkc.TU_CLS_CD
        <if test='tuClsType != null and tuClsType != ""'>
            AND thkk.TU_CLS_TYPE = #{tuClsType}
        </if>
        GROUP
        BY      thkk.HQ_OFFICE_CD
        ,       thkk.TU_CLS_TYPE
        ,       thkg.TU_CLS_TYPE_NM
        ,       thkk.PROD_CD
        ) thtk,
        TB_HQ_PRODUCT thp,
        (
        SELECT HQ_OFFICE_CD, PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT_SALE_PRICE
        WHERE 1 = 1
        <![CDATA[
                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
            ]]>
        AND SALE_PRC_FG = '1'
        GROUP BY HQ_OFFICE_CD, PROD_CD
        ) thpsp
        WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='prodClassCd != null and prodClassCd != ""'>
            AND thp.PROD_CLASS_CD IN (
            SELECT PROD_CLASS_CD
            FROM TB_HQ_PRODUCT_CLASS
            WHERE 1=1
            AND HQ_OFFICE_CD = #{hqOfficeCd}
            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
            CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
            )
        </if>
        <if test='prodCd != null and prodCd != ""'>
            AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
        </if>
        <if test='prodNm != null and prodNm != ""'>
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        AND (
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
        OR
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
        )
        AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND thpsp.PROD_CD = thp.PROD_CD
        AND thtk.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND thtk.PROD_CD = thp.PROD_CD
        ORDER BY thtk.TU_CLS_TYPE, thtk.CLASS_INDEX_NO, thtk.INDEX_NO
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>


    <!-- 매장판매가관리 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_STORE, TB_MS_PRODUCT_SALE_PRICE
        COMMENTS :
    -->
    <select id="getStoreSalePrice" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getStoreSalePrice */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT
        thtk.TU_CLS_TYPE,
        thtk.TU_CLS_TYPE_NM,
        tms.STORE_CD,
        tms.STORE_NM,
        tmp.PROD_CD,
        tmp.PROD_NM,
        thp.PROD_CLASS_CD,  -- 상품분류코드
        tmp.PO_UNIT_QTY, -- 입수
        thp.COST_UPRC AS HQ_COST_UPRC,   -- 본사원가
        thp.SPLY_UPRC AS HQ_SPLY_UPRC,   -- 대표공급가
        tmp.SPLY_UPRC AS STORE_SPLY_UPRC,   -- 매장공급가
        thpsp.SALE_UPRC AS HQ_SALE_UPRC, -- 본사판매가
        tmpsp.SALE_UPRC AS STORE_SALE_UPRC, -- 매장판매가
        tmpsp.SALE_UPRC AS SALE_UPRC, -- 매장변경판매가
        thpsp.STIN_SALE_UPRC AS HQ_STIN_SALE_UPRC,    -- 본사내점-판매가
        tmpsp.STIN_SALE_UPRC AS STORE_STIN_SALE_UPRC, -- 매장내점-판매가
        tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,       -- 변경내점-판매가
        thpsp.DLVR_SALE_UPRC AS HQ_DLVR_SALE_UPRC,    -- 본사배달-판매가
        tmpsp.DLVR_SALE_UPRC AS STORE_DLVR_SALE_UPRC, -- 매장배달-판매가
        tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,       -- 변경배달-판매가
        thpsp.PACK_SALE_UPRC AS HQ_PACK_SALE_UPRC,    -- 본사포장-판매가
        tmpsp.PACK_SALE_UPRC AS STORE_PACK_SALE_UPRC, -- 매장포장-판매가
        tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,       -- 변경포장-판매가
        tmp.PRC_CTRL_FG
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM (
        SELECT  thkk.HQ_OFFICE_CD
        ,       thkk.TU_CLS_TYPE
        ,       thkg.TU_CLS_TYPE_NM
        ,       thkk.PROD_CD
        ,       MIN(thkc.INDEX_NO) AS CLASS_INDEX_NO
        ,       MIN(thkk.INDEX_NO) AS INDEX_NO
        FROM    TB_HQ_KIOSK_KEY thkk
        ,		TB_HQ_KIOSK_CLS thkc
        ,		TB_HQ_KIOSK_GROUP thkg
        WHERE   thkk.HQ_OFFICE_CD = #{hqOfficeCd}
        AND 	thkk.HQ_OFFICE_CD = thkg.HQ_OFFICE_CD(+)
        AND 	thkk.TU_CLS_TYPE = thkg.TU_CLS_TYPE(+)
        AND 	thkk.HQ_OFFICE_CD = thkc.HQ_OFFICE_CD
        AND 	thkk.TU_CLS_CD = thkc.TU_CLS_CD
        <if test='tuClsType != null and tuClsType != ""'>
            AND thkk.TU_CLS_TYPE = #{tuClsType}
        </if>
        GROUP
        BY      thkk.HQ_OFFICE_CD
        ,       thkk.TU_CLS_TYPE
        ,       thkg.TU_CLS_TYPE_NM
        ,       thkk.PROD_CD
        ) thtk,
        TB_MS_PRODUCT tmp,
        TB_HQ_PRODUCT thp,
        TB_MS_STORE tms,
        (
        SELECT HQ_OFFICE_CD, PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT_SALE_PRICE
        WHERE 1 = 1
        <![CDATA[
                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
            ]]>
        AND SALE_PRC_FG = '1'
        GROUP BY HQ_OFFICE_CD, PROD_CD
        ) thpsp,
        (
        SELECT STORE_CD, PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_MS_PRODUCT_SALE_PRICE
        WHERE 1 = 1
        <![CDATA[
                AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
            ]]>
        AND SALE_PRC_FG = '1'
        GROUP BY STORE_CD, PROD_CD
        ) tmpsp
        WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='prodClassCd != null and prodClassCd != ""'>
            AND thp.PROD_CLASS_CD IN (
            SELECT PROD_CLASS_CD
            FROM TB_HQ_PRODUCT_CLASS
            WHERE 1=1
            AND HQ_OFFICE_CD = #{hqOfficeCd}
            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
            CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
            )
        </if>
        AND (
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
        OR
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
        )
        AND (
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
        OR
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
        )
        AND thp.PROD_CD = tmp.PROD_CD
        AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND thpsp.PROD_CD = thp.PROD_CD
        AND tmpsp.STORE_CD = tmp.STORE_CD
        AND tmpsp.PROD_CD = tmp.PROD_CD
        AND thtk.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND thtk.PROD_CD = thp.PROD_CD
        AND tms.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND tms.STORE_CD = tmp.STORE_CD
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
            AND tmp.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 상품브랜드가 있을 때
        </if>
        <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                AND tmp.HQ_BRAND_CD IN

                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        <if test='prodCd != null and prodCd != ""'>
            AND tmp.PROD_CD = #{prodCd}
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND tmp.STORE_CD = #{storeCd}
        </if>
        ORDER BY thtk.TU_CLS_TYPE, thtk.CLASS_INDEX_NO, thtk.INDEX_NO, tmp.STORE_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 판매가관리 조회 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE
        COMMENTS : [매장]상품, [매장]상품_판매금, [본사]상품, [본사]상품_판매금
    -->
    <select id="getSalePrice" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getSalePrice */
        <choose>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd != "00000"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                tmt.TU_CLS_TYPE,
                tmt.TU_CLS_TYPE_NM,
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.PROD_CLASS_CD,  -- 상품분류코드
                tmp.PO_UNIT_QTY, -- 입수
                thp.COST_UPRC AS HQ_COST_UPRC,   -- 본사원가
                thp.SPLY_UPRC AS HQ_SPLY_UPRC,   -- 대표공급가
                tmp.SPLY_UPRC AS STORE_SPLY_UPRC,   -- 매장공급가
                thp.SALE_UPRC AS HQ_SALE_UPRC,      -- 본사판매가
                tmpsp.SALE_UPRC AS STORE_SALE_UPRC, -- 매장판매가
                tmpsp.SALE_UPRC AS SALE_UPRC,       -- 매장변경판매가
                thp.STIN_SALE_UPRC AS HQ_STIN_SALE_UPRC,      -- 본사내점-판매가
                tmpsp.STIN_SALE_UPRC AS STORE_STIN_SALE_UPRC, -- 매장내점-판매가
                tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,       -- 변경내점-판매가
                thp.DLVR_SALE_UPRC AS HQ_DLVR_SALE_UPRC,      -- 본사배달-판매가
                tmpsp.DLVR_SALE_UPRC AS STORE_DLVR_SALE_UPRC, -- 매장배달-판매가
                tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,       -- 변경배달-판매가
                thp.PACK_SALE_UPRC AS HQ_PACK_SALE_UPRC,      -- 본사포장-판매가
                tmpsp.PACK_SALE_UPRC AS STORE_PACK_SALE_UPRC, -- 매장포장-판매가
                tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,       -- 변경포장-판매가
                tmp.PRC_CTRL_FG
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM    (
                SELECT  tmkk.STORE_CD
                ,       tmkk.TU_CLS_TYPE
                ,       tmkg.TU_CLS_TYPE_NM
                ,       tmkk.PROD_CD
                ,       MIN(tmkc.INDEX_NO) AS CLASS_INDEX_NO
                ,       MIN(tmkk.INDEX_NO) AS INDEX_NO
                FROM    TB_MS_KIOSK_KEY tmkk
                ,		TB_MS_KIOSK_CLS tmkc
                ,		TB_MS_KIOSK_GROUP tmkg
                WHERE   tmkk.STORE_CD = #{storeCd}
                AND 	tmkk.STORE_CD = tmkg.STORE_CD(+)
                AND 	tmkk.POS_NO = tmkg.POS_NO(+)
                AND 	tmkk.TU_CLS_TYPE = tmkg.TU_CLS_TYPE(+)
                AND 	tmkk.STORE_CD = tmkc.STORE_CD
                AND 	tmkk.POS_NO = tmkc.POS_NO
                AND 	tmkk.TU_CLS_CD = tmkc.TU_CLS_CD
                AND     tmkk.POS_NO = #{posNo}
                <if test='tuClsType != null and tuClsType != ""'>
                    AND tmkk.TU_CLS_TYPE = #{tuClsType}
                </if>
                GROUP
                BY      tmkk.STORE_CD
                ,       tmkk.TU_CLS_TYPE
                ,       tmkg.TU_CLS_TYPE_NM
                ,       tmkk.PROD_CD
                ) tmt
                ,       TB_MS_PRODUCT tmp,
                (
                SELECT STORE_CD, PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE 1 = 1
                <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY STORE_CD, PROD_CD
                ) tmpsp,
                (
                SELECT
                thp.PROD_CD,
                thp.COST_UPRC,
                thp.SPLY_UPRC,
                thpsp.SALE_UPRC,
                thpsp.STIN_SALE_UPRC,
                thpsp.DLVR_SALE_UPRC,
                thpsp.PACK_SALE_UPRC
                FROM TB_HQ_PRODUCT thp,
                (
                SELECT HQ_OFFICE_CD, PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_HQ_PRODUCT_SALE_PRICE
                WHERE 1 = 1
                <![CDATA[
                           AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                           AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY HQ_OFFICE_CD, PROD_CD
                ) thpsp
                WHERE 1=1
                AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thpsp.PROD_CD = thp.PROD_CD
                ) thp
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test='prodClassCd != null and prodClassCd != ""'>
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE 1=1
                    AND STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                AND tmpsp.STORE_CD = tmp.STORE_CD
                AND tmpsp.PROD_CD = tmp.PROD_CD
                AND thp.PROD_CD (+)= tmp.PROD_CD
                AND tmt.STORE_CD = tmp.STORE_CD
                AND tmt.PROD_CD = tmp.PROD_CD
                ORDER BY tmt.TU_CLS_TYPE, tmt.CLASS_INDEX_NO, tmt.INDEX_NO
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!--  단독매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd == "00000"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                tmt.TU_CLS_TYPE,
                tmt.TU_CLS_TYPE_NM,
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.PROD_CLASS_CD,  -- 상품분류코드
                tmp.PO_UNIT_QTY, -- 입수
                tmp.SPLY_UPRC AS STORE_SPLY_UPRC,   -- 매장공급가
                tmpsp.SALE_UPRC AS STORE_SALE_UPRC, -- 매장판매가
                tmpsp.SALE_UPRC AS SALE_UPRC,       -- 매장변경판매가
                tmpsp.STIN_SALE_UPRC AS STORE_STIN_SALE_UPRC, -- 매장내점-판매가
                tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,       -- 변경내점-판매가
                tmpsp.DLVR_SALE_UPRC AS STORE_DLVR_SALE_UPRC, -- 매장배달-판매가
                tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,       -- 변경배달-판매가
                tmpsp.PACK_SALE_UPRC AS STORE_PACK_SALE_UPRC, -- 매장포장-판매가
                tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,       -- 변경포장-판매가
                tmp.PRC_CTRL_FG
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM    (
                SELECT  tmkk.STORE_CD
                ,       tmkk.TU_CLS_TYPE
                ,       tmkg.TU_CLS_TYPE_NM
                ,       tmkk.PROD_CD
                ,       MIN(tmkc.INDEX_NO) AS CLASS_INDEX_NO
                ,       MIN(tmkk.INDEX_NO) AS INDEX_NO
                FROM    TB_MS_KIOSK_KEY tmkk
                ,		TB_MS_KIOSK_CLS tmkc
                ,		TB_MS_KIOSK_GROUP tmkg
                WHERE   tmkk.STORE_CD = #{storeCd}
                AND 	tmkk.STORE_CD = tmkg.STORE_CD(+)
                AND 	tmkk.POS_NO = tmkg.POS_NO(+)
                AND 	tmkk.TU_CLS_TYPE = tmkg.TU_CLS_TYPE(+)
                AND 	tmkk.STORE_CD = tmkc.STORE_CD
                AND 	tmkk.POS_NO = tmkc.POS_NO
                AND 	tmkk.TU_CLS_CD = tmkc.TU_CLS_CD
                AND     tmkk.POS_NO = #{posNo}
                <if test='tuClsType != null and tuClsType != ""'>
                    AND tmkk.TU_CLS_TYPE = #{tuClsType}
                </if>
                GROUP
                BY      tmkk.STORE_CD
                ,       tmkk.TU_CLS_TYPE
                ,       tmkg.TU_CLS_TYPE_NM
                ,       tmkk.PROD_CD
                ) tmt
                ,       TB_MS_PRODUCT tmp,
                (
                SELECT STORE_CD, PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE 1 = 1
                <![CDATA[
                        AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                        AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY STORE_CD, PROD_CD
                ) tmpsp
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test='prodClassCd != null and prodClassCd != ""'>
                    AND tmp.PROD_CLASS_CD IN (
                    SELECT PROD_CLASS_CD
                    FROM TB_MS_PRODUCT_CLASS
                    WHERE 1=1
                    AND STORE_CD = #{storeCd}
                    START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                    CONNECT BY P_PROD_CLASS_CD = PRIOR PROD_CLASS_CD AND STORE_CD = #{storeCd}
                    )
                </if>
                <if test='prodCd != null and prodCd != ""'>
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
                </if>
                <if test='prodNm != null and prodNm != ""'>
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
                </if>
                AND tmpsp.STORE_CD = tmp.STORE_CD
                AND tmpsp.PROD_CD = tmp.PROD_CD
                AND tmt.STORE_CD = tmp.STORE_CD
                AND tmt.PROD_CD = tmp.PROD_CD
                ORDER BY tmt.TU_CLS_TYPE, tmt.CLASS_INDEX_NO, tmt.INDEX_NO
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!--  매장 키오스크포스에서 사용중인 [매장/포장]키맵그룹 코드 조회 -->
    <!--
       TABLE    : TB_MS_STORE, TB_MS_POS_ENVST, TB_MS_POS
       PARAM    : kioskKeyMapVO
       COMMENTS : 매장 키오스크포스에서 사용중인 [매장/포장]키맵그룹 코드를 조회한다.
    -->
    <select id="getTuClsTypeEnvList" parameterType="kioskKeyMapVO" resultType="DefaultMap">
        /* KioskKeyMapMapper.getTuClsTypeEnvList */
        SELECT  tmpe.ENVST_VAL AS ENV_4068_4069
        FROM    TB_MS_STORE tms
        ,       (
                    SELECT  tmp.STORE_CD
                    ,       tmp.POS_NO
                    FROM    TB_MS_POS_ENVST tmpe
                    ,       TB_MS_POS tmp
                    WHERE   tmpe.STORE_CD = tmp.STORE_CD
                    AND     tmpe.POS_NO = tmp.POS_NO
                    AND     tmpe.ENVST_CD = '4019'
                    AND     tmpe.ENVST_VAL = '6'
                ) tmp
        ,		(
                    SELECT  STORE_CD
                    ,       POS_NO
                    ,       ENVST_VAL
                    FROM    TB_MS_POS_ENVST
                    WHERE   STORE_CD = #{storeCd}
                    AND     POS_NO = #{posNo}
                    AND     ENVST_CD IN ('4068', '4069')
                    AND     ENVST_VAL NOT IN ('*')
                    AND     ENVST_VAL IS NOT NULL
                ) tmpe
        WHERE   tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     tms.STORE_CD = #{storeCd}
        AND     tms.STORE_CD = tmp.STORE_CD
        AND 	tms.STORE_CD = tmpe.STORE_CD
        AND 	tmp.POS_NO = tmpe.POS_NO
        GROUP
        BY       tmpe.ENVST_VAL
    </select>

    <!-- 키오스크 카테고리 TX 데이터 변경처리 PKG 호출(맘스터치) -->
    <!--
        TABLE    : TB_TX_KIOSK_CLS, TB_MS_KIOSK_CLS, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리에 맵핑된 상품이 없는경우(맘스 LSM 카테고리), 키오스크에 분류가 보이지 않도록 하기위해 TX 데이터를 변경처리한다.
    -->
    <select id="updateKioskClsMomsLsm" statementType="CALLABLE" parameterType="kioskKeyMapVO" resultType="String">
        /* KioskKeyMapMapper.updateKioskClsMomsLsm */
        {
            CALL PKG_TB_MS_KIOSK_CLS_MOMS_LSM.SP_TB_TX_KIOSK_CLS_IU
            (
                #{hqOfficeCd},
                #{storeCd},
                #{tuClsType},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 본사 그룹명 변경 시 매장 그룹명 추가 및 수정 -->
    <!--
       TABLE    : TB_MS_TOUCH_KEY_GROUP
       PARAM    : touchKeyVO
       COMMENTS : 본사 그룹명 변경 시 적용매장도 추가 및 수정한다.
    -->
    <update id="updateStoreGrpNm" parameterType="kioskKeyMapVO">
        /* KioskKeyMapMapper.updateStoreGrpNm */
        MERGE INTO TB_MS_KIOSK_GROUP A
            USING 	(
                        SELECT  A.STORE_CD			AS STORE_CD
                        , 		A.POS_NO			AS POS_NO
                        ,		A.TU_CLS_TYPE		AS TU_CLS_TYPE
                        ,		#{tuClsTypeNm}		AS TU_CLS_TYPE_NM
                        ,		#{regDt}	        AS REG_DT
                        ,		#{regId}	        AS REG_ID
                        ,		#{modDt}	        AS MOD_DT
                        ,		#{modId}	        AS MOD_ID
                        FROM 	(
                                    SELECT 	DISTINCT STORE_CD
                                    ,       POS_NO
                                    ,       TU_CLS_TYPE
                                    FROM    TB_MS_KIOSK_CLS
                                    WHERE 	STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd})
                                ) A
                        , 	    TB_HQ_KIOSK_GROUP B
                        WHERE 	STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd})
                        AND 	A.TU_CLS_TYPE 	= B.TU_CLS_TYPE
                        AND 	B.HQ_OFFICE_CD 	= #{hqOfficeCd}
                        AND 	A.TU_CLS_TYPE   = #{tuClsType}
                    ) B
            ON	(
                        A.STORE_CD 		= B.STORE_CD
                    AND A.TU_CLS_TYPE   = #{tuClsType}
                    AND A.POS_NO 	    = B.POS_NO
                )
            WHEN MATCHED THEN
                UPDATE
                SET 	A.TU_CLS_TYPE_NM  = #{tuClsTypeNm}
                ,   	A.MOD_DT          = #{modDt}
                ,   	A.MOD_ID          = #{modId}
            WHEN NOT MATCHED THEN
                INSERT
                    (
                         A.STORE_CD
                    ,	 A.POS_NO
                    ,    A.TU_CLS_TYPE
                    ,    A.TU_CLS_TYPE_NM
                    ,    A.REG_DT
                    ,    A.REG_ID
                    ,    A.MOD_DT
                    ,    A.MOD_ID
                        )
                    VALUES
                    (
                         B.STORE_CD
                    ,	 B.POS_NO
                    ,    B.TU_CLS_TYPE
                    ,    B.TU_CLS_TYPE_NM
                    ,    B.REG_DT
                    ,    B.REG_ID
                    ,    B.MOD_DT
                    ,    B.MOD_ID
                    )
    </update>

    <!-- 키오스크 매장적용(매장/포장) - 매장 그룹명 수정 -->
    <!--
       TABLE    : TB_MS_KIOSK_GROUP
       PARAM    : kioskKeyMapVO
    -->
    <update id="insertStoreGrpNmReg" parameterType="kioskKeyMapVO">
        /* KioskKeyMapper.insertStoreGrpNmReg */
        MERGE INTO TB_MS_KIOSK_GROUP A
        USING
            (
                SELECT 	A.STORE_CD
                ,		A.POS_NO
                ,		#{tuClsType} AS TU_CLS_TYPE
                FROM 	TB_MS_POS_ENVST A
                WHERE 	A.STORE_CD      = #{storeCd}
                AND 	A.ENVST_CD      = '4019'
                AND 	A.ENVST_VAL     = '6'
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND 	A.POS_NO    = #{posNo}
                </if>
            ) B
        ON	(
                    B.STORE_CD      = A.STORE_CD
                AND B.POS_NO 	    = A.POS_NO
                AND B.TU_CLS_TYPE   = A.TU_CLS_TYPE
            )
        WHEN MATCHED THEN
        UPDATE
        SET
                A.TU_CLS_TYPE_NM  = (
                                        SELECT  TU_CLS_TYPE_NM
                                        FROM    TB_HQ_KIOSK_GROUP
                                        WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                                        AND     TU_CLS_TYPE     = #{tuClsType}
                                    )
        ,       A.MOD_DT          = #{modDt}
        ,       A.MOD_ID          = #{modId}
        WHEN NOT MATCHED  THEN
        INSERT
            (
                STORE_CD
            ,   POS_NO
            ,   TU_CLS_TYPE
            ,   TU_CLS_TYPE_NM
            ,   REG_DT
            ,   REG_ID
            ,   MOD_DT
            ,   MOD_ID
            )
        VALUES
            (
                B.STORE_CD
            ,   B.POS_NO
            ,   B.TU_CLS_TYPE
            ,   (
                    SELECT  TU_CLS_TYPE_NM
                    FROM    TB_HQ_KIOSK_GROUP
                    WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                    AND     TU_CLS_TYPE     = #{tuClsType}
                )
            ,   #{regDt}
            ,   #{regId}
            ,   #{modDt}
            ,   #{modId}
            )
    </update>

    <!-- 키오스크키맵 삭제 팝업 - 키오스크키맵그룹 삭제 -->
    <!--
        TABLE    :
        PARAM    : kioskKeyMapVO
        COMMENTS :
    -->
    <delete id="deleteKioskkeyGrp" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskkeyGrp */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_GROUP
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_GROUP
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </delete>

    <!-- 키오스크키맵 삭제 팝업 - 키오스크키맵 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제 시, 카테고리에 속한 키맵도 삭제한다.
    -->
    <delete id="deleteAllKioskKey" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKey */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_KEY
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_KEY
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </delete>

    <!-- 키오스크키맵 삭제 팝업 - 키오스크 카테고리(분류) 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_CLS, TB_MS_KIOSK_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(분류) 삭제한다.
    -->
    <delete id="deleteAllKioskKeyClass" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKeyClass */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_CLS
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_CLS
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </delete>

    <!-- 키오스크키맵 삭제 팝업 - 키오스크 카테고리(중분류) 삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_M_CLS, TB_MS_KIOSK_M_CLS
        PARAM    : kioskKeyMapVO
        COMMENTS : 키오스크 카테고리(중분류) 삭제한다.
    -->
    <delete id="deleteAllKioskKeyMClass" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteAllKioskKeyMClass */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM    TB_HQ_KIOSK_M_CLS
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM    TB_MS_KIOSK_M_CLS
                WHERE   STORE_CD    = #{storeCd}
                <if test='hqOfficeCd != null and (hqOfficeCd != "A0001" and hqOfficeCd != "DS021" and hqOfficeCd != "DS034" and hqOfficeCd != "DS062")'>
                    AND POS_NO      = #{posNo}
                </if>
                AND     TU_CLS_TYPE = #{tuClsType}
            </when>
        </choose>
    </delete>

    <!-- 키오스크키맵 삭제 팝업 - 매장수정허용분류 삭제 -->
    <!--
        TABLE    : TB_HQ_NMCODE
        PARAM    : kioskKeyMapVO
        COMMENTS : 매장수정허용분류를 삭제한다.
    -->
    <delete id="deleteKioskKeyLsm" parameterType="kioskKeyMapVO">
        /* USE : KioskKeyMapMapper.deleteKioskKeyLsm */
                DELETE
                FROM    TB_HQ_NMCODE
                WHERE   HQ_OFFICE_CD    = #{hqOfficeCd}
                AND     NMCODE_NM       = #{tuClsType}
                AND     NMCODE_GRP_CD   = '229'
    </delete>

</mapper>