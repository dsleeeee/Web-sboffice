<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    WeightMapper.xml
    중량별 매출조회 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       권지현     2021.11.08     신규생성
-->
<mapper namespace="kr.co.solbipos.sale.status.weight.weight.service.impl.WeightMapper">

	<!-- 중량별 -->
	<!--
        TABLE    : TB_MS_PRODUCT, TB_SL_SALE_DTL, TB_MS_PRODUCT_BARCD
        PARAM    : weightVO
        COMMENTS : 중량별 매출을 조회한다.
    -->
	<select id="getWeightList" parameterType="weightVO" resultType="DefaultMap">
		/* USE : WeightMapper.getWeightList */
		SELECT 	A.STORE_CD,
		D.STORE_NM,
		TO_CHAR(TO_DATE(B.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE,
		B.POS_NO,
		B.BILL_NO,
		A.PROD_CD,
		A.PROD_NM,
		C.BARCD_CD,
		B.SALE_UPRC,
		B.SALE_SCALE_WT,
	   <![CDATA[
		CASE WHEN B.SALE_SCALE_WT >= 1000 THEN B.SALE_SCALE_WT * 0.001 || 'Kg'
		    ELSE B.SALE_SCALE_WT || 'g'
		END AS SALE_SCALE_WT_KG,
		]]>
		B.SALE_QTY,
		CASE B.SALE_YN
		    WHEN 'Y' THEN (B.SALE_SCALE_WT * B.SALE_QTY)
		    WHEN 'N' THEN -1 * (B.SALE_SCALE_WT * B.SALE_QTY)
		END AS TOT_SALE_SCALE_WT,
		B.SALE_AMT,
		B.DC_AMT,
		B.REAL_SALE_AMT
		FROM	TB_MS_PRODUCT A,
		TB_SL_SALE_DTL B,
		TB_MS_PRODUCT_BARCD C,
		TB_MS_STORE D
		WHERE 	1=1
		AND 	D.HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND A.STORE_CD IN (${storeCdQuery})
        </if>
        <if test='orgnFg != null and orgnFg == "H"'>
            AND (
                    'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                OR	A.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                )
        </if>
		AND 	A.PROD_TYPE_FG = '3'
		AND		B.STORE_CD = A.STORE_CD
		AND		B.PROD_CD = A.PROD_CD
		AND		B.SALE_DATE BETWEEN #{startDate} AND #{endDate}
		AND		C.STORE_CD (+) = A.STORE_CD
		AND		C.PROD_CD (+) = A.PROD_CD
		AND 	D.STORE_CD = A.STORE_CD
		<if test='prodCd != null and prodCd !=""'>
			AND A.PROD_CD = #{prodCd}
		</if>
		<if test='prodNm != null and prodNm !=""'>
			AND A.PROD_NM = #{prodNm}
		</if>
		ORDER BY A.STORE_CD, B.SALE_DATE, B.POS_NO, B.BILL_NO
	</select>

	<!-- 일자별 -->
	<!--
        TABLE    : TB_MS_PRODUCT, TB_SL_SALE_DTL, TB_MS_PRODUCT_BARCD
        PARAM    : weightVO
        COMMENTS : 중량 일자별 매출을 조회한다.
    -->
	<select id="getWeightDayList" parameterType="weightVO" resultType="DefaultMap">
		/* USE : WeightMapper.getWeightDayList */
		SELECT 	A.STORE_CD,
				D.STORE_NM,
				TO_CHAR(TO_DATE(B.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE,
				A.PROD_CD,
				A.PROD_NM,
				C.BARCD_CD,
				B.SALE_UPRC,
				B.SALE_SCALE_WT,
				<![CDATA[
				CASE WHEN B.SALE_SCALE_WT >= 1000 THEN B.SALE_SCALE_WT * 0.001 || 'Kg'
					ELSE B.SALE_SCALE_WT || 'g'
				END AS SALE_SCALE_WT_KG,
				]]>
				SUM(B.SALE_QTY) AS SALE_QTY,
				CASE B.SALE_YN
					WHEN 'Y' THEN SUM(SALE_SCALE_WT * B.SALE_QTY)
					WHEN 'N' THEN -1 * SUM(SALE_SCALE_WT * B.SALE_QTY)
				END AS TOT_SALE_SCALE_WT,
				SUM(B.SALE_AMT) AS SALE_AMT,
				SUM(B.DC_AMT) AS DC_AMT,
				SUM(B.REAL_SALE_AMT) AS REAL_SALE_AMT
		FROM	TB_MS_PRODUCT A,
				TB_SL_SALE_DTL B,
				TB_MS_PRODUCT_BARCD C,
				TB_MS_STORE D
		WHERE 	1=1
		AND 	D.HQ_OFFICE_CD = #{hqOfficeCd}
		<choose>
			<when test='orgnFg != null and orgnFg == "S"'>
				AND A.STORE_CD = #{storeCd}
			</when>
			<when test='orgnFg != null and orgnFg == "H"'>
				<if test='storeCd != null and storeCd != ""'>
					AND
					<foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")" >
						A.STORE_CD = #{item}
					</foreach>
					AND (
							'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
						OR	A.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
						)
				</if>
			</when>
		</choose>
		AND 	A.PROD_TYPE_FG = '3'
		AND		B.STORE_CD = A.STORE_CD
		AND		B.PROD_CD = A.PROD_CD
		AND		B.SALE_DATE BETWEEN #{startDate} AND #{endDate}
		AND		C.STORE_CD (+) = A.STORE_CD
		AND		C.PROD_CD (+) = A.PROD_CD
		AND 	D.STORE_CD = A.STORE_CD
		<if test='prodCd != null and prodCd !=""'>
			AND A.PROD_CD = #{prodCd}
		</if>
		<if test='prodNm != null and prodNm !=""'>
			AND A.PROD_NM = #{prodNm}
		</if>
		GROUP BY A.STORE_CD, D.STORE_NM, B.SALE_DATE, A.PROD_CD, A.PROD_NM, C.BARCD_CD, B.SALE_UPRC, B.SALE_YN, B.SALE_SCALE_WT
		ORDER BY A.STORE_CD, B.SALE_DATE, A.PROD_CD
	</select>

	<!-- 상품별 -->
	<!--
        TABLE    : TB_MS_PRODUCT, TB_SL_DAILY_PROD_SDSEL, TB_MS_PRODUCT_BARCD
        PARAM    : sideVO
        COMMENTS : 상품별 매출을 조회한다.
    -->
	<select id="getWeightProdList" parameterType="weightVO" resultType="DefaultMap">
		/* USE : WeightMapper.getWeightProdList */
<!--		<include refid="CmmSQL.PagingTemplateHeader"/>-->
		SELECT	PATH,
				PATH_NM,
				PROD_CD,
				PROD_NM,
				SIDE_PROD_CD,
				SIDE_PROD_NM,
				SEL_TYPE_FG,
				SALE_SCALE_WT,
				SALE_SCALE_WT_KG,
				BARCD_CD,
				SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
				CASE SALE_YN
					WHEN 'Y' THEN SUM(SALE_SCALE_WT * TOT_SALE_QTY)
					WHEN 'N' THEN -1 * SUM(SALE_SCALE_WT * TOT_SALE_QTY)
				END AS TOT_SALE_SCALE_WT,
				SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
				SUM(TOT_DC_AMT) AS TOT_DC_AMT,
				SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
<!--		<include refid="CmmSQL.PagingTemplateCount"/>-->
		FROM	(
				SELECT	FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'CD_STR') AS PATH, --CD_STR
						FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM, --NM_STR
						tsdp.PROD_CD,
						SALE_YN,
						SALE_SCALE_WT,
						SALE_SCALE_WT_KG,
						CASE tsdp.SEL_TYPE_FG
						WHEN 'S' THEN tsdp.SIDE_PROD_CD
						END AS SIDE_PROD_CD,
						CASE tsdp.SEL_TYPE_FG
						WHEN 'P' THEN '사이드모상품'
						WHEN 'S' THEN '사이드상품'
						WHEN 'N' THEN '일반판매상품'
						END AS SEL_TYPE_FG,
						tmp.PROD_NM,
						CASE tsdp.SEL_TYPE_FG
						WHEN 'S' THEN 'ㅤ- ▶ ' || tmps.PROD_NM
						ELSE tmps.PROD_NM
						END AS SIDE_PROD_NM,
						tmpb.BARCD_CD,
						SUM(tsdp.TOT_SALE_QTY) AS TOT_SALE_QTY,
						SUM(tsdp.TOT_SALE_AMT) AS TOT_SALE_AMT,
						SUM(tsdp.TOT_DC_AMT) AS TOT_DC_AMT,
						SUM(tsdp.REAL_SALE_AMT) AS REAL_SALE_AMT
				FROM 	(
						SELECT 	HQ_OFFICE_CD,
						       	STORE_CD,
						       	PROD_CD,
						       	SEL_TYPE_FG,
						       	SIDE_PROD_CD,
								SALE_YN,
								SALE_SCALE_WT,
								<![CDATA[
								CASE WHEN SALE_SCALE_WT >= 1000 THEN SALE_SCALE_WT * 0.001 || 'Kg'
									ELSE SALE_SCALE_WT || 'g'
								END AS SALE_SCALE_WT_KG,
								]]>
								SUM(SALE_QTY) AS TOT_SALE_QTY,
								SUM(SALE_AMT) AS TOT_SALE_AMT,
								SUM(DC_AMT) AS TOT_DC_AMT,
								SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
						FROM	(
						SELECT	HQ_OFFICE_CD,
								STORE_CD,
								CASE
								    WHEN 	SIDE_P_DTL_NO = BILL_DTL_NO
									OR 		SIDE_P_PROD_CD = PROD_CD
									OR 		(SIDE_P_DTL_NO IS NOT NULL AND TRIM(SIDE_P_PROD_CD) IS NULL)
									THEN 	'P'
									WHEN 	SIDE_P_DTL_NO != BILL_DTL_NO
									AND 	TRIM(SIDE_P_PROD_CD) IS NOT NULL
									THEN 	'S'
									ELSE 	'N'
								END AS SEL_TYPE_FG,
								CASE
									WHEN 	SIDE_P_DTL_NO != BILL_DTL_NO
									AND 	TRIM(SIDE_P_PROD_CD) IS NOT NULL
									THEN 	SIDE_P_PROD_CD
									ELSE	PROD_CD
								END AS PROD_CD,
								CASE
									WHEN 	SIDE_P_DTL_NO != BILL_DTL_NO
									AND 	TRIM(SIDE_P_PROD_CD) IS NOT NULL
									THEN 	PROD_CD
									ELSE 	PROD_CD
								END AS SIDE_PROD_CD,
								SALE_YN,
								SALE_SCALE_WT,
								<![CDATA[
								CASE WHEN SALE_SCALE_WT >= 1000 THEN SALE_SCALE_WT * 0.001 || 'Kg'
									ELSE SALE_SCALE_WT || 'g'
								END AS SALE_SCALE_WT_KG,
								]]>
								SALE_QTY,
								SALE_AMT,
								DC_AMT,
								REAL_SALE_AMT
						FROM 	TB_SL_SALE_DTL tssd
						WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
						<choose>
							<when test='orgnFg != null and orgnFg == "S"'>
								AND STORE_CD = #{storeCd}
							</when>
							<when test='orgnFg != null and orgnFg == "H"'>
								<if test='storeCd != null and storeCd != ""'>
									AND
									<foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")" >
										STORE_CD = #{item}
									</foreach>
									AND (
									'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
									OR	STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
									)
								</if>
							</when>
						</choose>
						AND SALE_DATE BETWEEN #{startDate} AND #{endDate}
						)
						GROUP BY HQ_OFFICE_CD, STORE_CD, PROD_CD, SEL_TYPE_FG, SIDE_PROD_CD, SALE_YN, SALE_SCALE_WT
						) tsdp,
						TB_MS_PRODUCT tmp,
						TB_MS_PRODUCT tmps,
						TB_MS_PRODUCT_BARCD tmpb
				WHERE 	1=1
				AND 	tmp.STORE_CD = tsdp.STORE_CD
				AND 	tmp.PROD_CD = tsdp.PROD_CD
				AND 	tmps.STORE_CD = tsdp.STORE_CD
				AND 	tmps.PROD_CD = tsdp.SIDE_PROD_CD
				AND 	tmpb.STORE_CD (+)= tmps.STORE_CD
				AND 	tmpb.PROD_CD (+)= tmps.PROD_CD
				AND 	tmp.PROD_TYPE_FG = '3'
				<if test="prodCd != null and prodCd != ''">
					AND tsdp.SIDE_PROD_CD LIKE '%'|| #{prodCd} ||'%'
				</if>
				<if test="prodNm != null and prodNm != ''">
					AND tmps.PROD_NM LIKE '%'|| #{prodNm} ||'%'
				</if>
				GROUP BY tsdp.PROD_CD, tmp.PROD_NM, tmpb.BARCD_CD, tmp.STORE_CD, tmp.PROD_CLASS_CD, tsdp.SIDE_PROD_CD, tmps.PROD_NM, tsdp.SEL_TYPE_FG, SALE_YN, SALE_SCALE_WT, SALE_SCALE_WT_KG
		)
		WHERE	1=1
		<if test="prodClassCd != null and prodClassCd != ''">
			AND PATH LIKE '%'|| #{prodClassCd} ||'%'
		</if>
		GROUP BY PROD_CD, PROD_NM, BARCD_CD, PATH, PATH_NM, SIDE_PROD_CD, SIDE_PROD_NM, SEL_TYPE_FG, SALE_YN, SALE_SCALE_WT, SALE_SCALE_WT_KG
		ORDER BY PROD_CD, SEL_TYPE_FG
<!--		<include refid="CmmSQL.PagingTemplateBottom"/>-->
	</select>

	<!-- 상품별 엑셀 -->
	<!--
        TABLE    : TB_MS_PRODUCT, TB_SL_DAILY_PROD_SDSEL, TB_MS_PRODUCT_BARCD
        PARAM    : sideVO
        COMMENTS : 상품별 엑셀 매출을 조회한다.
    -->
	<select id="getWeightProdExcelList" parameterType="weightVO" resultType="DefaultMap">
		/* USE : WeightMapper.getWeightProdExcelList */
		SELECT	PATH,
		PATH_NM,
		PROD_CD,
		PROD_NM,
		SIDE_PROD_CD,
		SIDE_PROD_NM,
		SEL_TYPE_FG,
		SALE_SCALE_WT,
		SALE_SCALE_WT_KG,
		BARCD_CD,
		SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
		CASE SALE_YN
		WHEN 'Y' THEN SUM(SALE_SCALE_WT * TOT_SALE_QTY)
		WHEN 'N' THEN -1 * SUM(SALE_SCALE_WT * TOT_SALE_QTY)
		END AS TOT_SALE_SCALE_WT,
		SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
		SUM(TOT_DC_AMT) AS TOT_DC_AMT,
		SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
		FROM	(
		SELECT	FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'CD_STR') AS PATH, --CD_STR
		FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM, --NM_STR
		tsdp.PROD_CD,
		SALE_YN,
		SALE_SCALE_WT,
		SALE_SCALE_WT_KG,
		CASE tsdp.SEL_TYPE_FG
		WHEN 'S' THEN tsdp.SIDE_PROD_CD
		END AS SIDE_PROD_CD,
		CASE tsdp.SEL_TYPE_FG
		WHEN 'P' THEN '사이드모상품'
		WHEN 'S' THEN '사이드상품'
		WHEN 'N' THEN '일반판매상품'
		END AS SEL_TYPE_FG,
		tmp.PROD_NM,
		CASE tsdp.SEL_TYPE_FG
		WHEN 'S' THEN 'ㅤ- ▶ ' || tmps.PRO`D_NM
		ELSE tmps.PROD_NM
		END AS SIDE_PROD_NM,`
		tmpb.BARCD_CD,
		SUM(tsdp.TOT_SALE_QTY) AS TOT_SALE_QTY,
		SUM(tsdp.TOT_SALE_AMT) AS TOT_SALE_AMT,
		SUM(tsdp.TOT_DC_AMT) AS TOT_DC_AMT,
		SUM(tsdp.REAL_SALE_AMT) AS REAL_SALE_AMT
		FROM 	(
		SELECT 	HQ_OFFICE_CD,
		STORE_CD,
		PROD_CD,
		SEL_TYPE_FG,
		SIDE_PROD_CD,
		SALE_YN,
		SALE_SCALE_WT,
		<![CDATA[
								CASE WHEN SALE_SCALE_WT >= 1000 THEN SALE_SCALE_WT * 0.001 || 'Kg'
									ELSE SALE_SCALE_WT || 'g'
								END AS SALE_SCALE_WT_KG,
								]]>
		SUM(SALE_QTY) AS TOT_SALE_QTY,
		SUM(SALE_AMT) AS TOT_SALE_AMT,
		SUM(DC_AMT) AS TOT_DC_AMT,
		SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
		FROM	(
		SELECT	HQ_OFFICE_CD,
		STORE_CD,
		CASE
		WHEN 	SIDE_P_DTL_NO = BILL_DTL_NO
		OR 		SIDE_P_PROD_CD = PROD_CD
		OR 		(SIDE_P_DTL_NO IS NOT NULL AND TRIM(SIDE_P_PROD_CD) IS NULL)
		THEN 	'P'
		WHEN 	SIDE_P_DTL_NO != BILL_DTL_NO
		AND 	TRIM(SIDE_P_PROD_CD) IS NOT NULL
		THEN 	'S'
		ELSE 	'N'
		END AS SEL_TYPE_FG,
		CASE
		WHEN 	SIDE_P_DTL_NO != BILL_DTL_NO
		AND 	TRIM(SIDE_P_PROD_CD) IS NOT NULL
		THEN 	SIDE_P_PROD_CD
		ELSE	PROD_CD
		END AS PROD_CD,
		CASE
		WHEN 	SIDE_P_DTL_NO != BILL_DTL_NO
		AND 	TRIM(SIDE_P_PROD_CD) IS NOT NULL
		THEN 	PROD_CD
		ELSE 	PROD_CD
		END AS SIDE_PROD_CD,
		SALE_YN,
		SALE_SCALE_WT,
		<![CDATA[
								CASE WHEN SALE_SCALE_WT >= 1000 THEN SALE_SCALE_WT * 0.001 || 'Kg'
									ELSE SALE_SCALE_WT || 'g'
								END AS SALE_SCALE_WT_KG,
								]]>
		SALE_QTY,
		SALE_AMT,
		DC_AMT,
		REAL_SALE_AMT
		FROM 	TB_SL_SALE_DTL tssd
		WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
		<choose>
			<when test='orgnFg != null and orgnFg == "S"'>
				AND STORE_CD = #{storeCd}
			</when>
			<when test='orgnFg != null and orgnFg == "H"'>
				<if test='storeCd != null and storeCd != ""'>
					AND
					<foreach collection="arrStoreCd" item="item" open="("  separator="OR" close=")" >
						STORE_CD = #{item}
					</foreach>
					AND (
					'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
					OR	STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
					)
				</if>
			</when>
		</choose>
		AND SALE_DATE BETWEEN #{startDate} AND #{endDate}
		)
		GROUP BY HQ_OFFICE_CD, STORE_CD, PROD_CD, SEL_TYPE_FG, SIDE_PROD_CD, SALE_YN, SALE_SCALE_WT
		) tsdp,
		TB_MS_PRODUCT tmp,
		TB_MS_PRODUCT tmps,
		TB_MS_PRODUCT_BARCD tmpb
		WHERE 	1=1
		AND 	tmp.STORE_CD = tsdp.STORE_CD
		AND 	tmp.PROD_CD = tsdp.PROD_CD
		AND 	tmps.STORE_CD = tsdp.STORE_CD
		AND 	tmps.PROD_CD = tsdp.SIDE_PROD_CD
		AND 	tmpb.STORE_CD (+)= tmps.STORE_CD
		AND 	tmpb.PROD_CD (+)= tmps.PROD_CD
		AND 	tmp.PROD_TYPE_FG = '3'
		<if test="prodCd != null and prodCd != ''">
			AND tsdp.SIDE_PROD_CD LIKE '%'|| #{prodCd} ||'%'
		</if>
		<if test="prodNm != null and prodNm != ''">
			AND tmps.PROD_NM LIKE '%'|| #{prodNm} ||'%'
		</if>
		GROUP BY tsdp.PROD_CD, tmp.PROD_NM, tmpb.BARCD_CD, tmp.STORE_CD, tmp.PROD_CLASS_CD, tsdp.SIDE_PROD_CD, tmps.PROD_NM, tsdp.SEL_TYPE_FG, SALE_YN, SALE_SCALE_WT, SALE_SCALE_WT_KG
		)
		WHERE	1=1
		<if test="prodClassCd != null and prodClassCd != ''">
			AND PATH LIKE '%'|| #{prodClassCd} ||'%'
		</if>
		GROUP BY PROD_CD, PROD_NM, BARCD_CD, PATH, PATH_NM, SIDE_PROD_CD, SIDE_PROD_NM, SEL_TYPE_FG, SALE_YN, SALE_SCALE_WT, SALE_SCALE_WT_KG
		ORDER BY PROD_CD, SEL_TYPE_FG
	</select>
</mapper>
