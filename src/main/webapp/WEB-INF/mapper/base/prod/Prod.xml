<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    Prod.xml
    상품관리 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       노현수     2018.10.19     쿼리수정
-->
<mapper namespace="kr.co.solbipos.base.prod.prod.service.impl.ProdMapper">

    <!-- 상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE,
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE
        PARAM    : prodVO
        COMMENTS : 상품의 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getProdList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                thp.HQ_OFFICE_CD,
                thp.PROD_CD,
                thp.PROD_NM,
                thp.HQ_BRAND_CD,
                thb.HQ_BRAND_NM AS HQ_BRAND_NM,
                thp.PROD_CLASS_CD,
                ( SELECT SF_GET_PROD_CLASSES('H', thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                NVL(thp.COST_UPRC, 0) COST_UPRC,
                NVL(thp.SPLY_UPRC, 0) SPLY_UPRC,
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                thp.ORGPLCE_CD, -- TODO 원산지명 조회 필요
                thp.SIDE_PROD_YN,
                thp.SDATTR_CLASS_CD,
                thp.SDSEL_GRP_CD,
                thp.PO_UNIT_FG,
                thp.REG_DT,
                thp.USE_YN,
                (SELECT COUNT(thps.STORE_CD) FROM TB_HQ_PRODUCT_STORE thps WHERE thps.HQ_OFFICE_CD = thp.HQ_OFFICE_CD AND thps.PROD_CD = thp.PROD_CD ) AS STORE_CNT,
                thpb.BARCD_CD AS BAR_CD
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM
                TB_HQ_PRODUCT thp
                LEFT OUTER JOIN (
                SELECT
                HQ_OFFICE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_HQ_PRODUCT_SALE_PRICE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                HQ_OFFICE_CD, PROD_CD
                ) thpsp ON
                thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                AND thp.PROD_CD = thpsp.PROD_CD
                LEFT OUTER JOIN TB_HQ_BRAND thb ON
                thb.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD
                LEFT OUTER JOIN TB_HQ_PRODUCT_BARCD thpb ON
                thpb.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thpb.PROD_CD = thp.PROD_CD
                WHERE 1=1
                AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                            AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND thpb.BARCD_CD LIKE '%'||#{barCd}||'%' --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_HQ_PRODUCT_CLASS
                                                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY thp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <include refid="CmmSQL.PagingTemplateHeader"/>
                SELECT
                tmp.STORE_CD,
                tmp.PROD_CD,
                tmp.PROD_NM,
                tms.HQ_OFFICE_CD,
                tmp.HQ_BRAND_CD,
                tmb.MS_BRAND_NM AS HQ_BRAND_NM,
                tmp.PROD_CLASS_CD,
                ( SELECT SF_GET_PROD_CLASSES('S', tmp.STORE_CD, tmp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                NVL(tmp.COST_UPRC, 0) COST_UPRC,
                NVL(tmp.SPLY_UPRC, 0) SPLY_UPRC,
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                tmp.ORGPLCE_CD, -- TODO 원산지명 조회 필요
                tmp.SIDE_PROD_YN,
                tmp.SDATTR_CLASS_CD,
                tmp.SDSEL_GRP_CD,
                tmp.PO_UNIT_FG,
                tmp.REG_DT,
                tmp.USE_YN,
                tmp.REG_FG,
                tmpb.BARCD_CD AS BAR_CD
                <include refid="CmmSQL.PagingTemplateCount"/>
                FROM
                TB_MS_PRODUCT tmp
                LEFT OUTER JOIN (
                SELECT
                STORE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE STORE_CD = #{storeCd}
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                STORE_CD, PROD_CD
                ) thpsp ON
                tmp.STORE_CD = thpsp.STORE_CD
                AND tmp.PROD_CD = thpsp.PROD_CD
                INNER JOIN TB_MS_STORE tms ON
                tms.STORE_CD  = tmp.STORE_CD
                LEFT OUTER JOIN TB_MS_BRAND tmb ON
                tmb.STORE_CD = tmp.STORE_CD
                AND tmb.MS_BRAND_CD = tmp.HQ_BRAND_CD
                LEFT OUTER JOIN TB_MS_PRODUCT_BARCD tmpb ON
                tmpb.STORE_CD = tmp.STORE_CD
                AND tmpb.PROD_CD = tmp.PROD_CD
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                            AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND tmpb.BARCD_CD LIKE '%'||#{barCd}||'%' --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_MS_PRODUCT_CLASS
                                                WHERE STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                <if test="hqBrandNm != null and hqBrandNm != ''">
                    AND tmb.MS_BRAND_NM LIKE '%'||#{hqBrandNm}||'%' -- 브랜드명
                </if>
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY tmp.PROD_CD ASC
                <include refid="CmmSQL.PagingTemplateBottom"/>
            </when>
        </choose>
    </select>

    <!-- 상품명 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE,
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE
        PARAM    : prodVO
        COMMENTS : 상품명을 조회한다. ( 본사/매장 )
    -->
    <select id="getProdNmList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getProdNmList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  thp.PROD_NM
                FROM    TB_HQ_PRODUCT thp
                WHERE   thp.HQ_OFFICE_CD = #{hqOfficeCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT  tmp.PROD_NM
                FROM    TB_MS_PRODUCT tmp
                WHERE   tmp.STORE_CD = #{storeCd}
            </when>
        </choose>
    </select>

    <!-- 상품 조회(엑셀다운로드용) -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE,
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE
        PARAM    : prodVO
        COMMENTS : 상품의 목록을 조회한다. ( 본사/매장 )
    -->
    <select id="getProdExcelList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getProdExcelList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thp.PROD_CD,
                thp.PROD_NM,
                thp.HQ_BRAND_CD,
                thb.HQ_BRAND_NM AS HQ_BRAND_NM,
                thp.PROD_CLASS_CD,
                ( SELECT SF_GET_PROD_CLASSES('H', thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                NVL(thp.COST_UPRC, 0) COST_UPRC,
                NVL(thp.SPLY_UPRC, 0) SPLY_UPRC,
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                thp.ORGPLCE_CD, -- TODO 원산지명 조회 필요
                thp.PO_UNIT_FG,
                thp.USE_YN,
                (SELECT COUNT(thps.STORE_CD) FROM TB_HQ_PRODUCT_STORE thps WHERE thps.HQ_OFFICE_CD = thp.HQ_OFFICE_CD AND thps.PROD_CD = thp.PROD_CD) AS STORE_CNT,
                thpb.BARCD_CD AS BAR_CD
                FROM
                TB_HQ_PRODUCT thp
                LEFT OUTER JOIN (
                SELECT
                HQ_OFFICE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_HQ_PRODUCT_SALE_PRICE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                HQ_OFFICE_CD, PROD_CD
                ) thpsp ON
                thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                AND thp.PROD_CD = thpsp.PROD_CD
                LEFT OUTER JOIN TB_HQ_BRAND thb ON
                thb.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD
                LEFT OUTER JOIN TB_HQ_PRODUCT_BARCD thpb ON
                thpb.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thpb.PROD_CD = thp.PROD_CD
                WHERE 1=1
                AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                            AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND thpb.BARCD_CD LIKE '%'||#{barCd}||'%' --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND thp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_HQ_PRODUCT_CLASS
                                                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                            )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND thp.USE_YN = #{useYn} --사용여부
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY thp.PROD_CD ASC
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.HQ_BRAND_CD,
                tmb.MS_BRAND_NM AS HQ_BRAND_NM,
                tmp.PROD_CLASS_CD,
                ( SELECT SF_GET_PROD_CLASSES('S', tmp.STORE_CD, tmp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM,
                NVL(tmp.COST_UPRC, 0) COST_UPRC,
                NVL(tmp.SPLY_UPRC, 0) SPLY_UPRC,
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC, -- 판매단가
                tmp.ORGPLCE_CD, -- TODO 원산지명 조회 필요
                tmp.PO_UNIT_FG,
                tmp.USE_YN,
                tmpb.BARCD_CD AS BAR_CD
                FROM
                TB_MS_PRODUCT tmp
                LEFT OUTER JOIN (
                SELECT
                STORE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE STORE_CD = #{storeCd}
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY
                STORE_CD, PROD_CD
                ) thpsp ON
                tmp.STORE_CD = thpsp.STORE_CD
                AND tmp.PROD_CD = thpsp.PROD_CD
                INNER JOIN TB_MS_STORE tms ON
                tms.STORE_CD  = tmp.STORE_CD
                LEFT OUTER JOIN TB_MS_BRAND tmb ON
                tmb.STORE_CD = tmp.STORE_CD
                AND tmb.MS_BRAND_CD = tmp.HQ_BRAND_CD
                LEFT OUTER JOIN TB_MS_PRODUCT_BARCD tmpb ON
                tmpb.STORE_CD = tmp.STORE_CD
                AND tmpb.PROD_CD = tmp.PROD_CD
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                <if test="chkDt == false">
                    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                        <![CDATA[
                            AND tmp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
                    </if>
                </if>
                <if test="prodCd != null and prodCd != ''">
                    AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
                </if>
                <if test="prodNm != null and prodNm != ''">
                    AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
                </if>
                <if test="barCd != null and barCd != ''">
                    AND tmpb.BARCD_CD LIKE '%'||#{barCd}||'%' --바코드
                </if>
                <if test="prodClassCd != null and prodClassCd != ''">
                    AND tmp.PROD_CLASS_CD IN (
                                                SELECT
                                                PROD_CLASS_CD
                                                FROM TB_MS_PRODUCT_CLASS
                                                WHERE STORE_CD = #{storeCd}
                                                START WITH PROD_CLASS_CD = #{prodClassCd} AND STORE_CD = #{storeCd}
                                                CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND STORE_CD = #{storeCd}
                                            )
                </if>
                <if test="useYn != null and useYn != ''">
                    AND tmp.USE_YN = #{useYn} --사용여부
                </if>
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY tmp.PROD_CD ASC
            </when>
        </choose>
    </select>

    <!-- 상품 상세 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_HQ_PRODUCT_SALE_PRICE, TB_HQ_PRODUCT_IMAGE, TB_HQ_VENDOR_PROD, TB_HQ_VENDOR
                   TB_MS_PRODUCT, TB_MS_PRODUCT_SALE_PRICE, TB_MS_PRODUCT_IMAGE, TB_MS_VENDOR_PROD, TB_MS_VENDOR
        PARAM    : prodVO
        COMMENTS : 상품의 상세정보를 조회한다. ( 본사/매장 )
    -->
    <select id="getProdDetail" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getProdDetail */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thp.HQ_OFFICE_CD,       -- 본사코드
                thp.PROD_CD,            -- 상품코드
                thp.PROD_NM,            -- 상품명
                thp.HQ_BRAND_CD,        -- 브랜드명
                thb.HQ_BRAND_NM AS HQ_BRAND_NM,
                thp.PROD_CLASS_CD,      -- 상품분류코드
                ( SELECT SF_GET_PROD_CLASSES('H', thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_CD_NM,
                ( SELECT BARCD_CD FROM TB_HQ_PRODUCT_BARCD WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = #{prodCd}) AS BAR_CD,
                thp.CORNR_CD,           -- 코너코드
                thp.ORGPLCE_CD,         -- 원산지 구분 -- TODO 원산지명 조회 필요
                thp.SDATTR_CLASS_CD,    -- 사이드속성분류코드
                thp.SDSEL_GRP_CD,       -- 사이드선택그룹코드
                thpsg.SDSEL_GRP_NM,
                thp.POINT_SAVE_YN,
                thp.PROD_DC_FG,
                thp.VAT_FG,                                     -- 과세여부
                thp.PROD_TIP_YN,
                thp.PROD_PACK_AMT,
                thp.PROD_DLVR_AMT,
                thp.PROD_TYPE_FG,                               -- 상품유형구분
                thp.SALE_PROD_YN,                               -- 판매상품여부
                thp.STOCK_PROD_YN,                              -- 재고관리여부
                thp.SIDE_PROD_YN,
                thp.SET_PROD_FG,                                -- 세트상품구분
                NVL(thpsp.SALE_UPRC, 0) AS SALE_UPRC,           -- 최초판매단가
                thpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,         -- 내점가(NULL 허용가능)
                thpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,         -- 배달가(NULL 허용가능)
                thpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,         -- 포장가(NULL 허용가능)
                NVL(thp.COST_UPRC, 0) AS COST_UPRC,             -- 원가단가
                NVL(thp.LAST_COST_UPRC, 0) AS LAST_COST_UPRC,   -- 최종원가단가
                NVL(thp.SPLY_UPRC, 0) AS SPLY_UPRC,             -- 판매단가
                thp.SPLY_UPRC_USE_YN,
                thp.PO_PROD_FG,                                 -- 주문상품구분
                thp.PO_UNIT_FG,                                 -- 주문단위
                thp.PO_UNIT_QTY,
                thp.PO_UNIT_ALLOW_FG,
                thp.PO_MIN_QTY,                 -- 최소주문
                thp.SAFE_STOCK_QTY,             -- 안전재고
                0 AS DEFAULT_STOCK,             -- todo 초기재고
                thp.STOCK_UNIT_FG,
                thp.USE_YN,                     -- 사용여부
                NVL(thp.REMARK, '') AS REMARK,  -- 비고
                thp.REG_DT,
                thpi.IMG_URL,
                thvp.VENDR_CD,
                thvp.VENDR_NM,
                thp.PRC_CTRL_FG,
                thp.MAP_PROD_CD,
                NVL(thp.DEPOSIT_CUP_FG, '') AS DEPOSIT_CUP_FG,
                thp.POINT_USE_YN,
                thp.DC_YN,
                thpi.PROD_INFO,
                NVL(thp.SALE_TIME_FG, 'N') AS SALE_TIME_FG,
                thpi.NU_TOT_WT,
                thpi.NU_KCAL,
                thpi.NU_PROTEIN,
                thpi.NU_SODIUM,
                thpi.NU_SUGARS,
                thpi.NU_SAT_FAT,
                thpi.NU_CAFFEINE,
                thpi.MOMS_KIOSK_EDGE,
                (SELECT OPTION_GRP_NM FROM TB_HQ_PRODUCT_OPTION_GROUP WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND OPTION_GRP_CD = thp.OPTION_GRP_CD) AS OPTION_GRP_NM,
                thp.OPTION_GRP_CD,
                thp.RELEASE_DATE,
                thp.DISCON_DATE,
                thp.DISCON_YN,
                (SELECT PROD_NM FROM TB_HQ_PRODUCT thp2 WHERE thp2.HQ_OFFICE_CD = #{hqOfficeCd} AND thp2.PROD_CD = thp.GROUP_PROD_CD) AS GROUP_PROD_NM,
                thp.GROUP_PROD_CD,
                (SELECT PROD_NM FROM TB_HQ_PRODUCT thp2 WHERE thp2.HQ_OFFICE_CD = #{hqOfficeCd} AND thp2.PROD_CD = thp.DEPOSIT_PROD_CD) AS DEPOSIT_PROD_NM,
                thp.DEPOSIT_PROD_CD,
                thpi.SALE_TYPE_YN_SIN,
                thpi.SALE_TYPE_YN_DLV,
                thpi.SALE_TYPE_YN_PKG,
                thpi.SALE_CHN_YN_POS,
                thpi.SALE_CHN_YN_KSK,
                thpi.SALE_CHN_YN_CMP,
                thpi.SALE_CHN_YN_BAE,
                thpi.SALE_CHN_YN_BAO,
                thpi.SALE_CHN_YN_YGY,
                thpi.SALE_CHN_YN_YGE,
                thpi.SALE_CHN_YN_CPN,
                thpi.SALE_CHN_YN_TNG,
                thpi.SALE_CHN_YN_DDN
                FROM
                TB_HQ_PRODUCT thp
                LEFT OUTER JOIN TB_HQ_BRAND thb ON
                thb.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD
                LEFT OUTER JOIN (
                SELECT
                HQ_OFFICE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_HQ_PRODUCT_SALE_PRICE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY HQ_OFFICE_CD, PROD_CD
                ) thpsp ON
                thp.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
                AND thp.PROD_CD = thpsp.PROD_CD
                LEFT OUTER JOIN (
                SELECT
                HQ_OFFICE_CD,
                PROD_CD,
                IMG_URL || '/' || IMG_FILE_NM AS IMG_URL
                FROM TB_HQ_PRODUCT_IMAGE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND IMG_FG = '001'
                ) thpi ON
                thp.HQ_OFFICE_CD = thpi.HQ_OFFICE_CD
                AND thp.PROD_CD = thpi.PROD_CD
                LEFT OUTER JOIN (
                SELECT
                thvp.HQ_OFFICE_CD,
                thvp.PROD_CD,
                LISTAGG(thvp.VENDR_CD, ',') WITHIN GROUP (ORDER BY thvp.VENDR_CD) AS VENDR_CD,
                LISTAGG(thv.VENDR_NM, ',') WITHIN GROUP (ORDER BY thvp.VENDR_CD) AS VENDR_NM
                FROM TB_HQ_VENDOR_PROD thvp,
                TB_HQ_VENDOR thv
                WHERE 1=1
                AND thvp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thvp.PROD_CD = #{prodCd}
                AND thvp.USE_YN = 'Y'
                AND thv.HQ_OFFICE_CD = thvp.HQ_OFFICE_CD
                AND thv.VENDR_CD = thvp.VENDR_CD
                GROUP BY thvp.HQ_OFFICE_CD, thvp.PROD_CD
                ) thvp ON
                thp.HQ_OFFICE_CD = thvp.HQ_OFFICE_CD
                AND thp.PROD_CD = thvp.PROD_CD
                LEFT OUTER JOIN TB_HQ_PRODUCT_SDSEL_GROUP thpsg ON
                thp.HQ_OFFICE_CD = thpsg.HQ_OFFICE_CD
                AND thp.SDSEL_GRP_CD = thpsg.SDSEL_GRP_CD
                AND thpsg.USE_YN = 'Y'
                LEFT OUTER JOIN TB_HQ_PRODUCT_INFO thpi ON
                thp.HQ_OFFICE_CD = thpi.HQ_OFFICE_CD
                AND thp.PROD_CD = thpi.PROD_CD
                WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thp.PROD_CD = #{prodCd}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmp.STORE_CD,           -- 매장코드
                tmp.PROD_CD,            -- 상품코드
                tmp.PROD_NM,            -- 상품명
                tmp.HQ_BRAND_CD,        -- 브랜드명
                tmb.MS_BRAND_NM AS HQ_BRAND_NM,
                tmp.PROD_CLASS_CD,      -- 상품분류코드
                ( SELECT SF_GET_PROD_CLASSES('S', tmp.STORE_CD, tmp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_CD_NM,
                ( SELECT BARCD_CD FROM TB_MS_PRODUCT_BARCD WHERE STORE_CD = #{storeCd} AND PROD_CD = #{prodCd}) AS BAR_CD,
                tmp.CORNR_CD,           -- 코너코드
                tmp.ORGPLCE_CD,         -- 원산지 구분 -- TODO 원산지명 조회 필요
                tmp.SDATTR_CLASS_CD,
                tmp.SDSEL_GRP_CD,
                tmpsg.SDSEL_GRP_NM,
                tmp.POINT_SAVE_YN,
                tmp.PROD_DC_FG,
                tmp.VAT_FG,                                     -- 과세여부
                tmp.PROD_TIP_YN,
                tmp.PROD_PACK_AMT,
                tmp.PROD_DLVR_AMT,
                tmp.PROD_TYPE_FG,                               -- 상품유형
                tmp.SALE_PROD_YN,                               -- 판매상품여부
                tmp.STOCK_PROD_YN,                              -- 재고관리여부
                tmp.SIDE_PROD_YN,
                tmp.SET_PROD_FG,                                -- 세트상품구분
                NVL(tmpsp.SALE_UPRC, 0) AS SALE_UPRC,           -- 최초판매단가
                tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,         -- 내점가(NULL 허용가능)
                tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,         -- 배달가(NULL 허용가능)
                tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,         -- 포장가(NULL 허용가능)
                NVL(tmp.COST_UPRC, 0) AS COST_UPRC,             -- 원가단가
                NVL(tmp.LAST_COST_UPRC, 0) AS LAST_COST_UPRC,   -- 최종원가단가
                NVL(tmp.SPLY_UPRC, 0) AS SPLY_UPRC,             -- 판매단가
                tmp.SPLY_UPRC_USE_YN,
                tmp.PO_PROD_FG,                                 -- 주문상품구분
                tmp.PO_UNIT_FG,                                 -- 주문단위
                tmp.PO_UNIT_QTY,
                tmp.PO_UNIT_ALLOW_FG,
                tmp.PO_MIN_QTY,                 -- 최소주문
                tmp.SAFE_STOCK_QTY,             -- 안전재고
                0 AS DEFAULT_STOCK,             -- todo 초기재고
                tmp.STOCK_UNIT_FG,
                tmp.USE_YN,                     -- 사용여부
                NVL(tmp.REMARK, '') AS REMARK,  -- 비고
                tmp.REG_DT,
                tmpi.IMG_URL,
                tmvp.VENDR_CD,
                tmvp.VENDR_NM,
                tmp.PRC_CTRL_FG,
                tmp.MAP_PROD_CD,
                NVL(tmp.DEPOSIT_CUP_FG, '') AS DEPOSIT_CUP_FG,
                tmp.POINT_USE_YN,
                tmp.DC_YN,
                tmpi.PROD_INFO,
                NVL(tmp.SALE_TIME_FG, 'N') AS SALE_TIME_FG,
                tmpi.NU_TOT_WT,
                tmpi.NU_KCAL,
                tmpi.NU_PROTEIN,
                tmpi.NU_SODIUM,
                tmpi.NU_SUGARS,
                tmpi.NU_SAT_FAT,
                tmpi.NU_CAFFEINE,
                tmpi.MOMS_KIOSK_EDGE,
                (SELECT OPTION_GRP_NM FROM TB_MS_PRODUCT_OPTION_GROUP WHERE STORE_CD = #{storeCd} AND OPTION_GRP_CD = tmp.OPTION_GRP_CD) AS OPTION_GRP_NM,
                tmp.OPTION_GRP_CD,
                tmp.RELEASE_DATE,
                tmp.DISCON_DATE,
                tmp.DISCON_YN,
                (SELECT PROD_NM FROM TB_MS_PRODUCT tmp2 WHERE tmp2.STORE_CD = #{storeCd} AND tmp2.PROD_CD = tmp.GROUP_PROD_CD) AS GROUP_PROD_NM,
                tmp.GROUP_PROD_CD,
                (SELECT PROD_NM FROM TB_MS_PRODUCT tmp2 WHERE tmp2.STORE_CD = #{storeCd} AND tmp2.PROD_CD = tmp.DEPOSIT_PROD_CD) AS DEPOSIT_PROD_NM,
                tmp.DEPOSIT_PROD_CD,
                tmpi.SALE_TYPE_YN_SIN,
                tmpi.SALE_TYPE_YN_DLV,
                tmpi.SALE_TYPE_YN_PKG,
                tmpi.SALE_CHN_YN_POS,
                tmpi.SALE_CHN_YN_KSK,
                tmpi.SALE_CHN_YN_CMP,
                tmpi.SALE_CHN_YN_BAE,
                tmpi.SALE_CHN_YN_BAO,
                tmpi.SALE_CHN_YN_YGY,
                tmpi.SALE_CHN_YN_YGE,
                tmpi.SALE_CHN_YN_CPN,
                tmpi.SALE_CHN_YN_TNG,
                tmpi.SALE_CHN_YN_DDN
                FROM
                TB_MS_PRODUCT tmp
                LEFT OUTER JOIN TB_MS_BRAND tmb ON
                tmb.STORE_CD = tmp.STORE_CD
                AND tmb.MS_BRAND_CD = tmp.HQ_BRAND_CD
                LEFT OUTER JOIN (
                SELECT
                STORE_CD,
                PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE STORE_CD = #{storeCd}
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY STORE_CD, PROD_CD
                ) tmpsp ON
                tmp.STORE_CD = tmpsp.STORE_CD
                AND tmp.PROD_CD = tmpsp.PROD_CD
                LEFT OUTER JOIN (
                SELECT
                STORE_CD,
                PROD_CD,
                IMG_URL || '/' || IMG_FILE_NM AS IMG_URL
                FROM TB_MS_PRODUCT_IMAGE
                WHERE STORE_CD = #{storeCd}
                AND IMG_FG = '001'
                ) tmpi ON
                tmp.STORE_CD = tmpi.STORE_CD
                AND tmp.PROD_CD = tmpi.PROD_CD
                LEFT OUTER JOIN (
                SELECT
                tmvp.STORE_CD,
                tmvp.PROD_CD,
                LISTAGG(tmvp.VENDR_CD, ',') WITHIN GROUP (ORDER BY tmvp.VENDR_CD) AS VENDR_CD,
                LISTAGG(tmv.VENDR_NM, ',') WITHIN GROUP (ORDER BY tmvp.VENDR_CD) AS VENDR_NM
                FROM TB_MS_VENDOR_PROD tmvp,
                TB_MS_VENDOR tmv
                WHERE 1=1
                AND tmvp.STORE_CD = #{storeCd}
                AND tmvp.PROD_CD = #{prodCd}
                AND tmvp.USE_YN = 'Y'
                AND tmv.STORE_CD = tmvp.STORE_CD
                AND tmv.VENDR_CD = tmvp.VENDR_CD
                GROUP BY tmvp.STORE_CD, tmvp.PROD_CD
                ) tmvp ON
                tmp.STORE_CD = tmvp.STORE_CD
                AND tmp.PROD_CD = tmvp.PROD_CD
                LEFT OUTER JOIN TB_MS_PRODUCT_SDSEL_GROUP tmpsg ON
                tmp.STORE_CD = tmpsg.STORE_CD
                AND tmp.SDSEL_GRP_CD = tmpsg.SDSEL_GRP_CD
                AND tmpsg.USE_YN = 'Y'
                LEFT OUTER JOIN TB_MS_PRODUCT_INFO tmpi ON
                tmp.STORE_CD = tmpi.STORE_CD
                AND tmp.PROD_CD = tmpi.PROD_CD
                WHERE tmp.STORE_CD = #{storeCd}
                AND tmp.PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 연결 상품 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD,
        PARAM    : prodVO
        COMMENTS : 상품의 연결상품을 조회한다. ( 본사/매장 )
    -->
    <select id="getLinkedProdList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getLinkedProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thpup.HQ_OFFICE_CD,
                thpup.PROD_CD,
                thpup.UNIT_PROD_CD,
                thpup.SET_PROD_FG,
                thpup.UNIT_PROD_QTY,
                thpup.DISP_SEQ
                FROM
                TB_HQ_PRODUCT_UNITST_PROD thpup
                WHERE
                thpup.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thpup.PROD_CD = #{prodCd}
                ORDER BY
                thpup.DISP_SEQ
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmpup.STORE_CD,
                tmpup.PROD_CD,
                tmpup.UNIT_PROD_CD,
                tmpup.SET_PROD_FG,
                tmpup.UNIT_PROD_QTY,
                tmpup.DISP_SEQ
                FROM
                TB_MS_PRODUCT_UNITST_PROD tmpup
                WHERE
                tmpup.STORE_CD = #{storeCd}
                AND tmpup.PROD_CD = #{prodCd}
                ORDER BY
                tmpup.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 상품코드 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 본사/매장의 상품정보를 생성/수정 한다.
    -->
    <select id="getProdCd" parameterType="prodVO" resultType="String">
        /* ProdMapper.getProdCd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  FN_GET_PROD_CD_MAX(#{hqOfficeCd}, '')
                FROM    DUAL
            </when>
            <!-- 가맹점 (매장 등록 상품의 경우 상품코드가 '9'로 시작) -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <!-- 단독매장 -->
                <if test='hqOfficeCd != null and hqOfficeCd == "00000"'>
                    SELECT  FN_GET_PROD_CD_MAX(#{storeCd}, '')
                    FROM    DUAL
                </if>
                <!-- 단독매장이 아닐 경우 -->
                <if test='hqOfficeCd != null and hqOfficeCd != "00000"'>
                    SELECT  FN_GET_PROD_CD_MAX(#{storeCd}, '')
                    FROM    DUAL
                </if>
            </when>
        </choose>
    </select>

    <!-- prefix 상품코드 조회 -->
    <!--
        TABLE    : TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 프랜차이즈 매장의 경우, 본사 ([0002] 매장상품 prefix) 사용여부를 파악하여 상품코드를 생성한다.
    -->
    <select id="getPrefixProdCd" parameterType="prodVO" resultType="String">
        /* ProdMapper.getPrefixProdCd */
        SELECT #{prefix} || LPAD(NVL(MAX(TO_NUMBER(REGEXP_REPLACE(SUBSTR(PROD_CD, LENGTH(#{prefix}) + 1), '[^0-9]'))),0) + 1, 13 - LENGTH(#{prefix}), '0') AS PROD_CD
          FROM TB_MS_PRODUCT
         WHERE STORE_CD = #{storeCd}
           AND PROD_CD LIKE #{prefix} || '%'
    </select>

    <!-- 상품정보 저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 본사/매장의 상품정보를 생성/수정 한다.
    -->
    <update id="saveProductInfo" parameterType="prodVO">
        /* ProdMapper.saveProductInfo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO
                TB_HQ_PRODUCT thp
                USING DUAL ON
                (
                thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thp.PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                PROD_NM = TRIM(REPLACE(REPLACE(REPLACE(#{prodNm}, CHR(10), NULL), CHR(13), NULL), CHR(9), NULL)),
                HQ_BRAND_CD = NVL(#{hqBrandCd}, '0000000'),
                PROD_CLASS_CD  = #{prodClassCd},
                CORNR_CD = #{cornrCd},
                ORGPLCE_CD = #{orgplceCd},
                SDATTR_CLASS_CD = #{sdattrClassCd},
                SDSEL_GRP_CD = #{sdselGrpCd},
                POINT_SAVE_YN = #{pointSaveYn, jdbcType=VARCHAR},
                PROD_DC_FG = #{prodDcFg},
                VAT_FG = #{vatFg},
                PROD_TIP_YN = #{prodTipYn, jdbcType=VARCHAR},
                PROD_PACK_AMT = #{prodPackAmt, jdbcType=NUMERIC},
                PROD_DLVR_AMT = #{prodDlvrAmt, jdbcType=NUMERIC},
                PROD_TYPE_FG = #{prodTypeFg},
                SALE_PROD_YN = #{saleProdYn},
                STOCK_PROD_YN = #{stockProdYn},
                SIDE_PROD_YN = #{sideProdYn, jdbcType=VARCHAR},
                SET_PROD_FG = #{setProdFg},
                COST_UPRC = #{costUprc, jdbcType=NUMERIC},
                LAST_COST_UPRC = #{lastCostUprc, jdbcType=NUMERIC},
                SPLY_UPRC = #{splyUprc, jdbcType=NUMERIC},
                SPLY_UPRC_USE_YN = #{splyUprcUseYn, jdbcType=VARCHAR},
                PO_PROD_FG = #{poProdFg},
                PO_UNIT_FG = #{poUnitFg},
                PO_UNIT_QTY = #{poUnitQty, jdbcType=NUMERIC},
                PO_UNIT_ALLOW_FG = #{poUnitAllowFg},
                PO_MIN_QTY = #{poMinQty, jdbcType=NUMERIC},
                SAFE_STOCK_QTY = #{safeStockQty, jdbcType=NUMERIC},
                STOCK_UNIT_FG = #{stockUnitFg},
                USE_YN = #{useYn},
                REMARK = #{remark},
                MOD_DT = #{modDt},
                MOD_ID = #{modId},
                PRC_CTRL_FG = #{prcCtrlFg},
                MAP_PROD_CD = #{mapProdCd},
                DEPOSIT_CUP_FG = #{depositCupFg},
                POINT_USE_YN = #{pointUseYn},
                DC_YN = #{dcYn},
                SALE_TIME_FG = #{saleTimeFg},
                OPTION_GRP_CD = #{optionGrpCd},
                RELEASE_DATE = #{releaseDate},
                DISCON_DATE = #{disconDate},
                DISCON_YN =  #{disconYn},
                GROUP_PROD_CD =  #{groupProdCd},
                DEPOSIT_PROD_CD =  #{depositProdCd}
                WHEN NOT MATCHED THEN
                INSERT
                (
                HQ_OFFICE_CD,
                PROD_CD,
                PROD_NM,
                HQ_BRAND_CD,
                PROD_CLASS_CD,
                CORNR_CD,
                ORGPLCE_CD,
                SDATTR_CLASS_CD,
                SDSEL_GRP_CD,
                POINT_SAVE_YN,
                PROD_DC_FG,
                VAT_FG,
                PROD_TIP_YN,
                PROD_PACK_AMT,
                PROD_DLVR_AMT,
                PROD_TYPE_FG,
                SALE_PROD_YN,
                STOCK_PROD_YN,
                SIDE_PROD_YN,
                SET_PROD_FG,
                COST_UPRC,
                LAST_COST_UPRC,
                SPLY_UPRC,
                SPLY_UPRC_USE_YN,
                PO_PROD_FG,
                PO_UNIT_FG,
                PO_UNIT_QTY,
                PO_UNIT_ALLOW_FG,
                PO_MIN_QTY,
                SAFE_STOCK_QTY,
                STOCK_UNIT_FG,
                USE_YN,
                REMARK,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID,
                PRC_CTRL_FG,
                MAP_PROD_CD,
                DEPOSIT_CUP_FG,
                POINT_USE_YN,
                DC_YN,
                SALE_TIME_FG,
                OPTION_GRP_CD,
                RELEASE_DATE,
                DISCON_DATE,
                DISCON_YN,
                GROUP_PROD_CD,
                DEPOSIT_PROD_CD
                ) VALUES (
                #{hqOfficeCd},
                TRIM(REPLACE(REPLACE(REPLACE(#{prodCd}, CHR(10), NULL), CHR(13), NULL), CHR(9), NULL)),
                TRIM(REPLACE(REPLACE(REPLACE(#{prodNm}, CHR(10), NULL), CHR(13), NULL), CHR(9), NULL)),
                NVL(#{hqBrandCd}, '0000000'),
                #{prodClassCd},
                '00',
                #{orgplceCd},
                #{sdattrClassCd},
                #{sdselGrpCd},
                #{pointSaveYn, jdbcType=VARCHAR},
                #{prodDcFg},
                #{vatFg},
                #{prodTipYn, jdbcType=VARCHAR},
                #{prodPackAmt, jdbcType=NUMERIC},
                #{prodDlvrAmt, jdbcType=NUMERIC},
                #{prodTypeFg},
                #{saleProdYn},
                #{stockProdYn},
                #{sideProdYn, jdbcType=VARCHAR},
                #{setProdFg},
                #{costUprc, jdbcType=NUMERIC},
                #{lastCostUprc, jdbcType=NUMERIC},
                #{splyUprc, jdbcType=NUMERIC},
                #{splyUprcUseYn, jdbcType=VARCHAR},
                #{poProdFg},
                #{poUnitFg},
                #{poUnitQty, jdbcType=NUMERIC},
                #{poUnitAllowFg},
                #{poMinQty, jdbcType=NUMERIC},
                #{safeStockQty, jdbcType=NUMERIC},
                #{stockUnitFg},
                #{useYn},
                #{remark},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{prcCtrlFg},
                #{mapProdCd},
                #{depositCupFg},
                #{pointUseYn},
                #{dcYn},
                #{saleTimeFg},
                #{optionGrpCd},
                #{releaseDate},
                #{disconDate},
                #{disconYn},
                #{groupProdCd},
                #{depositProdCd}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO
                TB_MS_PRODUCT tmp
                USING DUAL ON
                (
                tmp.STORE_CD = #{storeCd}
                AND tmp.PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                PROD_NM = TRIM(REPLACE(REPLACE(REPLACE(#{prodNm}, CHR(10), NULL), CHR(13), NULL), CHR(9), NULL)),
                HQ_BRAND_CD = NVL(#{hqBrandCd}, '0000000'),
                PROD_CLASS_CD  = #{prodClassCd},
                CORNR_CD = #{cornrCd},
                ORGPLCE_CD = #{orgplceCd},
                SDATTR_CLASS_CD = #{sdattrClassCd},
                SDSEL_GRP_CD = #{sdselGrpCd},
                POINT_SAVE_YN = #{pointSaveYn},
                PROD_DC_FG = #{prodDcFg},
                VAT_FG = #{vatFg},
                PROD_TIP_YN = #{prodTipYn},
                PROD_PACK_AMT = #{prodPackAmt, jdbcType=NUMERIC},
                PROD_DLVR_AMT = #{prodDlvrAmt, jdbcType=NUMERIC},
                PROD_TYPE_FG = #{prodTypeFg},
                SALE_PROD_YN = #{saleProdYn},
                STOCK_PROD_YN = #{stockProdYn},
                SIDE_PROD_YN = #{sideProdYn},
                SET_PROD_FG = #{setProdFg},
                PRC_CTRL_FG = #{prcCtrlFg},
                COST_UPRC = #{costUprc},
                LAST_COST_UPRC = #{lastCostUprc},
                SPLY_UPRC = #{splyUprc},
                SPLY_UPRC_USE_YN = #{splyUprcUseYn},
                PO_PROD_FG = #{poProdFg},
                PO_UNIT_FG = #{poUnitFg},
                PO_UNIT_QTY = #{poUnitQty},
                PO_UNIT_ALLOW_FG = #{poUnitAllowFg},
                PO_MIN_QTY = #{poMinQty},
                SAFE_STOCK_QTY = #{safeStockQty},
                STOCK_UNIT_FG = #{stockUnitFg},
                USE_YN = #{useYn},
                REMARK = #{remark},
                MOD_DT = #{modDt},
                MOD_ID = #{modId},
                MAP_PROD_CD = #{mapProdCd},
                DEPOSIT_CUP_FG = #{depositCupFg},
                POINT_USE_YN = #{pointUseYn},
                DC_YN = #{dcYn},
                SALE_TIME_FG = #{saleTimeFg},
                OPTION_GRP_CD = #{optionGrpCd},
                RELEASE_DATE = #{releaseDate},
                DISCON_DATE = #{disconDate},
                DISCON_YN =  #{disconYn},
                GROUP_PROD_CD =  #{groupProdCd},
                DEPOSIT_PROD_CD =  #{depositProdCd}
                WHEN NOT MATCHED THEN
                INSERT
                (
                STORE_CD,
                PROD_CD,
                PROD_NM,
                HQ_BRAND_CD,
                PROD_CLASS_CD,
                CORNR_CD,
                ORGPLCE_CD,
                SDATTR_CLASS_CD,
                SDSEL_GRP_CD,
                POINT_SAVE_YN,
                PROD_DC_FG,
                VAT_FG,
                PROD_TIP_YN,
                PROD_PACK_AMT,
                PROD_DLVR_AMT,
                PROD_TYPE_FG,
                SALE_PROD_YN,
                STOCK_PROD_YN,
                SIDE_PROD_YN,
                SET_PROD_FG,
                PRC_CTRL_FG,
                COST_UPRC,
                LAST_COST_UPRC,
                SPLY_UPRC,
                SPLY_UPRC_USE_YN,
                PO_PROD_FG,
                PO_UNIT_FG,
                PO_UNIT_QTY,
                PO_UNIT_ALLOW_FG,
                PO_MIN_QTY,
                SAFE_STOCK_QTY,
                STOCK_UNIT_FG,
                USE_YN,
                REMARK,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID,
                REG_FG,
                MAP_PROD_CD,
                DEPOSIT_CUP_FG,
                POINT_USE_YN,
                DC_YN,
                SALE_TIME_FG,
                OPTION_GRP_CD,
                RELEASE_DATE,
                DISCON_DATE,
                DISCON_YN,
                GROUP_PROD_CD,
                DEPOSIT_PROD_CD
                ) VALUES (
                #{storeCd},
                TRIM(REPLACE(REPLACE(REPLACE(#{prodCd}, CHR(10), NULL), CHR(13), NULL), CHR(9), NULL)),
                TRIM(REPLACE(REPLACE(REPLACE(#{prodNm}, CHR(10), NULL), CHR(13), NULL), CHR(9), NULL)),
                NVL(#{hqBrandCd}, '0000000'),
                #{prodClassCd},
                '00',
                #{orgplceCd},
                #{sdattrClassCd},
                #{sdselGrpCd},
                #{pointSaveYn},
                #{prodDcFg},
                #{vatFg},
                #{prodTipYn},
                #{prodPackAmt, jdbcType=NUMERIC},
                #{prodDlvrAmt, jdbcType=NUMERIC},
                #{prodTypeFg},
                #{saleProdYn},
                #{stockProdYn},
                #{sideProdYn},
                #{setProdFg},
                #{prcCtrlFg},
                #{costUprc},
                #{lastCostUprc},
                #{splyUprc},
                #{splyUprcUseYn},
                #{poProdFg},
                #{poUnitFg},
                #{poUnitQty},
                #{poUnitAllowFg},
                #{poMinQty},
                #{safeStockQty},
                #{stockUnitFg},
                #{useYn},
                #{remark},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                'S',
                #{mapProdCd},
                #{depositCupFg},
                #{pointUseYn},
                #{dcYn},
                #{saleTimeFg},
                #{optionGrpCd},
                #{releaseDate},
                #{disconDate},
                #{disconYn},
                #{groupProdCd},
                #{depositProdCd}
                )
            </when>
        </choose>
    </update>


    <!-- 상품정보 추가 저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_INFO, TB_HQ_PRODUCT_INFO
        PARAM    : prodVO
        COMMENTS : 본사/매장의 상품상세설명을 생성/수정 한다.
    -->
    <update id="saveProdInfo" parameterType="prodVO">
    /* ProdMapper.saveProdInfo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_INFO thpi
                USING DUAL
                ON (
                thpi.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thpi.PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                    thpi.PROD_INFO = #{prodInfo},
                    thpi.MOD_DT = #{modDt},
                    thpi.MOD_ID = #{modId},
                    thpi.NU_TOT_WT = #{nuTotWt},
                    thpi.NU_KCAL = #{nuKcal},
                    thpi.NU_PROTEIN = #{nuProtein},
                    thpi.NU_SODIUM = #{nuSodium},
                    thpi.NU_SUGARS = #{nuSugars},
                    thpi.NU_SAT_FAT = #{nuSatFat},
                    thpi.NU_CAFFEINE = #{nuCaffeine},
                    thpi.MOMS_KIOSK_EDGE = #{momsKioskEdge},
                    thpi.SALE_TYPE_YN_SIN = #{saleTypeYnSin},
                    thpi.SALE_TYPE_YN_DLV = #{saleTypeYnDlv},
                    thpi.SALE_TYPE_YN_PKG = #{saleTypeYnPkg},
                    thpi.SALE_CHN_YN_POS = #{saleChnYnPos},
                    thpi.SALE_CHN_YN_KSK = #{saleChnYnKsk},
                    thpi.SALE_CHN_YN_CMP = #{saleChnYnCmp},
                    thpi.SALE_CHN_YN_BAE = #{saleChnYnBae},
                    thpi.SALE_CHN_YN_BAO = #{saleChnYnBao},
                    thpi.SALE_CHN_YN_YGY = #{saleChnYnYgy},
                    thpi.SALE_CHN_YN_YGE = #{saleChnYnYge},
                    thpi.SALE_CHN_YN_CPN = #{saleChnYnCpn},
                    thpi.SALE_CHN_YN_TNG = #{saleChnYnTng},
                    thpi.SALE_CHN_YN_DDN = #{saleChnYnDdn}
                WHEN NOT MATCHED THEN
                INSERT
                (
                    HQ_OFFICE_CD,
                    PROD_CD,
                    PROD_INFO,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    NU_TOT_WT,
                    NU_KCAL,
                    NU_PROTEIN,
                    NU_SODIUM,
                    NU_SUGARS,
                    NU_SAT_FAT,
                    NU_CAFFEINE,
                    MOMS_KIOSK_EDGE,
                    SALE_TYPE_YN_SIN,
                    SALE_TYPE_YN_DLV,
                    SALE_TYPE_YN_PKG,
                    SALE_CHN_YN_POS,
                    SALE_CHN_YN_KSK,
                    SALE_CHN_YN_CMP,
                    SALE_CHN_YN_BAE,
                    SALE_CHN_YN_BAO,
                    SALE_CHN_YN_YGY,
                    SALE_CHN_YN_YGE,
                    SALE_CHN_YN_CPN,
                    SALE_CHN_YN_TNG,
                    SALE_CHN_YN_DDN
                ) VALUES (
                    #{hqOfficeCd},
                    #{prodCd},
                    #{prodInfo},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{nuTotWt},
                    #{nuKcal},
                    #{nuProtein},
                    #{nuSodium},
                    #{nuSugars},
                    #{nuSatFat},
                    #{nuCaffeine},
                    #{momsKioskEdge},
                    #{saleTypeYnSin},
                    #{saleTypeYnDlv},
                    #{saleTypeYnPkg},
                    #{saleChnYnPos},
                    #{saleChnYnKsk},
                    #{saleChnYnCmp},
                    #{saleChnYnBae},
                    #{saleChnYnBao},
                    #{saleChnYnYgy},
                    #{saleChnYnYge},
                    #{saleChnYnCpn},
                    #{saleChnYnTng},
                    #{saleChnYnDdn}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_INFO tmpi
                USING DUAL
                ON (
                        tmpi.STORE_CD = #{storeCd}
                    AND tmpi.PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET
                    tmpi.PROD_INFO = #{prodInfo},
                    tmpi.MOD_DT = #{modDt},
                    tmpi.MOD_ID = #{modId},
                    tmpi.NU_TOT_WT = #{nuTotWt},
                    tmpi.NU_KCAL = #{nuKcal},
                    tmpi.NU_PROTEIN = #{nuProtein},
                    tmpi.NU_SODIUM = #{nuSodium},
                    tmpi.NU_SUGARS = #{nuSugars},
                    tmpi.NU_SAT_FAT = #{nuSatFat},
                    tmpi.NU_CAFFEINE = #{nuCaffeine},
                    tmpi.MOMS_KIOSK_EDGE = #{momsKioskEdge},
                    tmpi.SALE_TYPE_YN_SIN = #{saleTypeYnSin},
                    tmpi.SALE_TYPE_YN_DLV = #{saleTypeYnDlv},
                    tmpi.SALE_TYPE_YN_PKG = #{saleTypeYnPkg},
                    tmpi.SALE_CHN_YN_POS = #{saleChnYnPos},
                    tmpi.SALE_CHN_YN_KSK = #{saleChnYnKsk},
                    tmpi.SALE_CHN_YN_CMP = #{saleChnYnCmp},
                    tmpi.SALE_CHN_YN_BAE = #{saleChnYnBae},
                    tmpi.SALE_CHN_YN_BAO = #{saleChnYnBao},
                    tmpi.SALE_CHN_YN_YGY = #{saleChnYnYgy},
                    tmpi.SALE_CHN_YN_YGE = #{saleChnYnYge},
                    tmpi.SALE_CHN_YN_CPN = #{saleChnYnCpn},
                    tmpi.SALE_CHN_YN_TNG = #{saleChnYnTng},
                    tmpi.SALE_CHN_YN_DDN = #{saleChnYnDdn}
                WHEN NOT MATCHED THEN
                INSERT
                (
                    STORE_CD,
                    PROD_CD,
                    PROD_INFO,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    NU_TOT_WT,
                    NU_KCAL,
                    NU_PROTEIN,
                    NU_SODIUM,
                    NU_SUGARS,
                    NU_SAT_FAT,
                    NU_CAFFEINE,
                    MOMS_KIOSK_EDGE,
                    SALE_TYPE_YN_SIN,
                    SALE_TYPE_YN_DLV,
                    SALE_TYPE_YN_PKG,
                    SALE_CHN_YN_POS,
                    SALE_CHN_YN_KSK,
                    SALE_CHN_YN_CMP,
                    SALE_CHN_YN_BAE,
                    SALE_CHN_YN_BAO,
                    SALE_CHN_YN_YGY,
                    SALE_CHN_YN_YGE,
                    SALE_CHN_YN_CPN,
                    SALE_CHN_YN_TNG,
                    SALE_CHN_YN_DDN
                ) VALUES (
                    #{storeCd},
                    #{prodCd},
                    #{prodInfo},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{nuTotWt},
                    #{nuKcal},
                    #{nuProtein},
                    #{nuSodium},
                    #{nuSugars},
                    #{nuSatFat},
                    #{nuCaffeine},
                    #{momsKioskEdge},
                    #{saleTypeYnSin},
                    #{saleTypeYnDlv},
                    #{saleTypeYnPkg},
                    #{saleChnYnPos},
                    #{saleChnYnKsk},
                    #{saleChnYnCmp},
                    #{saleChnYnBae},
                    #{saleChnYnBao},
                    #{saleChnYnYgy},
                    #{saleChnYnYge},
                    #{saleChnYnCpn},
                    #{saleChnYnTng},
                    #{saleChnYnDdn}
                )
            </when>
        </choose>
    </update>


    <!-- 상품 판매가 저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_PRICE
        PARAM    : prodVO
        COMMENTS : 본사/매장의 상품 최종 판매가를 저장한다.
    -->
    <update id="saveSalePrice" parameterType="prodVO">
        /* ProdMapper.saveSalePrice */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <![CDATA[
                MERGE INTO TB_HQ_PRODUCT_SALE_PRICE thpsp
                USING DUAL ON
                (
                    thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thpsp.PROD_CD = #{prodCd}
                AND thpsp.SALE_PRC_FG = '1'
                AND thpsp.START_DATE = #{startDate}
                )
                WHEN MATCHED THEN
                UPDATE
                   SET SALE_UPRC = #{saleUprc},
                       STIN_SALE_UPRC = NVL(#{stinSaleUprc}, #{saleUprc}),
                       DLVR_SALE_UPRC = NVL(#{dlvrSaleUprc}, #{saleUprc}),
                       PACK_SALE_UPRC = NVL(#{packSaleUprc}, #{saleUprc}),
                       MOD_DT = #{modDt},
                       MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                    HQ_OFFICE_CD,
                    PROD_CD,
                    SALE_PRC_FG,
                    START_DATE,
                    END_DATE,
                    SALE_UPRC,
                    STIN_SALE_UPRC,
                    DLVR_SALE_UPRC,
                    PACK_SALE_UPRC,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{hqOfficeCd},
                    #{prodCd},
                    '1',
                    #{startDate},
                    #{endDate},
                    #{saleUprc},
                    NVL(#{stinSaleUprc}, #{saleUprc}),
                    NVL(#{dlvrSaleUprc}, #{saleUprc}),
                    NVL(#{packSaleUprc}, #{saleUprc}),
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
                ]]>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <![CDATA[
                MERGE INTO TB_MS_PRODUCT_SALE_PRICE thpsp
                USING DUAL ON
                (
                    thpsp.STORE_CD = #{storeCd}
                AND thpsp.PROD_CD = #{prodCd}
                AND thpsp.SALE_PRC_FG = '1'
                AND thpsp.START_DATE = #{startDate}
                )
                WHEN MATCHED THEN
                UPDATE
                   SET SALE_UPRC = #{saleUprc},
                        STIN_SALE_UPRC = NVL(#{stinSaleUprc}, #{saleUprc}),
                        DLVR_SALE_UPRC = NVL(#{dlvrSaleUprc}, #{saleUprc}),
                        PACK_SALE_UPRC = NVL(#{packSaleUprc}, #{saleUprc}),
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                    STORE_CD,
                    PROD_CD,
                    SALE_PRC_FG,
                    START_DATE,
                    END_DATE,
                    SALE_UPRC,
                    STIN_SALE_UPRC,
                    DLVR_SALE_UPRC,
                    PACK_SALE_UPRC,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                ) VALUES (
                    #{storeCd},
                    #{prodCd},
                    '1',
                    #{startDate},
                    #{endDate},
                    #{saleUprc},
                    NVL(#{stinSaleUprc}, #{saleUprc}),
                    NVL(#{dlvrSaleUprc}, #{saleUprc}),
                    NVL(#{packSaleUprc}, #{saleUprc}),
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                )
                ]]>
            </when>
        </choose>
    </update>


    <!-- 상품 판매가 변경 히스토리 저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_PRICE_HISTORY
        COMMENTS : 상품 판매가 변경 히스토리 저장한다.
                   (상품_판매금액_변경이력 테이블(SALE_PRICE_HISTORY) 사용안함, 20230605)
    -->
    <insert id="saveSalePriceHistory" parameterType="prodVO">
        /* ProdMapper.saveSalePriceHistory */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                <![CDATA[
                INSERT INTO TB_HQ_PRODUCT_SALE_PRICE_HISTORY
                (
                    HIS_SEQ,
                    HQ_OFFICE_CD,
                    PROD_CD,
                    SALE_PRC_FG,
                    START_DATE,
                    END_DATE,
                    SALE_UPRC,
                    STIN_SALE_UPRC,
                    DLVR_SALE_UPRC,
                    PACK_SALE_UPRC,
                    REG_DT,
                    REG_ID
                ) VALUES (
                    SQ_HQ_PRODUCT_SALE_PRICE_HISTORY.NEXTVAL,
                    #{hqOfficeCd},
                    #{prodCd},
                    '1',
                    #{startDate},
                    #{endDate},
                    #{lastCostUprc},
                    #{stinSaleUprc},
                    #{dlvrSaleUprc},
                    #{packSaleUprc},
                    #{regDt},
                    #{regId}
                )
                ]]>
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                <![CDATA[
                INSERT INTO TB_MS_PRODUCT_SALE_PRICE_HISTORY
                (
                    HIS_SEQ,
                    STORE_CD,
                    PROD_CD,
                    SALE_PRC_FG,
                    START_DATE,
                    END_DATE,
                    SALE_UPRC,
                    STIN_SALE_UPRC,
                    DLVR_SALE_UPRC,
                    PACK_SALE_UPRC,
                    REG_DT,
                    REG_ID
                ) VALUES (
                    SQ_MS_PRODUCT_SALE_PRICE_HISTORY.NEXTVAL,
                    #{storeCd},
                    #{prodCd},
                    '1',
                    #{startDate},
                    #{endDate},
                    #{lastCostUprc},
                    #{stinSaleUprc},
                    #{dlvrSaleUprc},
                    #{packSaleUprc},
                    #{regDt},
                    #{regId}
                )
                ]]>
            </when>
        </choose>
    </insert>


    <!-- 상품존재여부 확인 (본사) -->
    <!--
        TABLE    : TB_HQ_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품의 존재여부를 확인하기 위해 COUNT 를 리턴한다.
    -->
    <select id="getProdExistInfo" parameterType="prodVO" resultType="Integer" >
        /* USE : ProdMapper.getProdExistInfo */
        SELECT
            COUNT(*) AS PROD_COUNT
          FROM
            TB_HQ_PRODUCT thp
         WHERE
            thp.HQ_OFFICE_CD = #{hqOfficeCd}
            AND thp.PROD_CD = #{prodCd}
    </select>


    <!-- 본사 상품 등록시, 매장 상품 등록 프로시져 호출 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 본사 쿠폰분류를 매장 쿠폰분류에 적용시킨다.
    -->
    <select id="insertHqProdToStoreProd" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.insertHqProdToStoreProd */
        {
          CALL PKG_HQ_PRODUCT.SP_HQ_PRODUCT_I
          (
            #{hqOfficeCd},
            #{storeCd},
            #{prodCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 본사 상품 수정시, 매장 상품 수정 프로시져 호출 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 본사 쿠폰분류를 매장 쿠폰분류에 적용시킨다.
    -->
    <select id="updateHqProdToStoreProd" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.updateHqProdToStoreProd */
        {
          CALL PKG_HQ_PRODUCT.SP_HQ_PRODUCT_U
          (
            #{hqOfficeCd},
            #{prodCd},
            #{regId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>


    <!-- 상품 적용/미적용 매장 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_PRODUCT_STORE
        PARAM    : prodVO
        COMMENTS : 상품 적용 대상인 매장을 조회한다.
    -->
    <select id="getStoreList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getStoreList */
        SELECT
        tms.HQ_OFFICE_CD,
        tho.HQ_OFFICE_NM,
        tms.HQ_BRAND_CD,
        NVL(thb.HQ_BRAND_NM,'기본브랜드') as HQ_BRAND_NM,
        tms.STORE_CD,
        tms.STORE_NM,
        tms.SYS_STAT_FG,
        NVL2(thps.STORE_CD, 'Y', 'N') AS REG_YN,
        thpsp.SALE_UPRC AS HQ_SALE_UPRC,
        tmpsp.SALE_UPRC AS STORE_SALE_UPRC,
        <if test='storeRegFg != null and storeRegFg.toString() == "Y"'>
            tmpsp.SALE_UPRC AS SALE_UPRC, -- 등록매장은 매장판매가
            tmpsp.SALE_UPRC AS SALE_UPRC_B,
            tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC,
            tmpsp.STIN_SALE_UPRC AS STIN_SALE_UPRC_B,
            tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC,
            tmpsp.DLVR_SALE_UPRC AS DLVR_SALE_UPRC_B,
            tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC,
            tmpsp.PACK_SALE_UPRC AS PACK_SALE_UPRC_B,
        </if>
        <if test='storeRegFg != null and storeRegFg.toString() == "N"'>
            CASE WHEN tmpsp.SALE_UPRC IS NULL THEN thpsp.SALE_UPRC
            ELSE tmpsp.SALE_UPRC END AS SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
            CASE WHEN tmpsp.SALE_UPRC IS NULL THEN thpsp.SALE_UPRC
            ELSE tmpsp.SALE_UPRC END AS SALE_UPRC_B,
            -- 내점가
            CASE WHEN tmpsp.STIN_SALE_UPRC IS NULL THEN thpsp.STIN_SALE_UPRC
            ELSE tmpsp.STIN_SALE_UPRC END AS STIN_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
            CASE WHEN tmpsp.STIN_SALE_UPRC IS NULL THEN thpsp.STIN_SALE_UPRC
            ELSE tmpsp.STIN_SALE_UPRC END AS STIN_SALE_UPRC_B,
            -- 배달가
            CASE WHEN tmpsp.DLVR_SALE_UPRC IS NULL THEN thpsp.DLVR_SALE_UPRC
            ELSE tmpsp.DLVR_SALE_UPRC END AS DLVR_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
            CASE WHEN tmpsp.DLVR_SALE_UPRC IS NULL THEN thpsp.DLVR_SALE_UPRC
            ELSE tmpsp.DLVR_SALE_UPRC END AS DLVR_SALE_UPRC_B,
            -- 포장가
            CASE WHEN tmpsp.PACK_SALE_UPRC IS NULL THEN thpsp.PACK_SALE_UPRC
            ELSE tmpsp.PACK_SALE_UPRC END AS PACK_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
            CASE WHEN tmpsp.PACK_SALE_UPRC IS NULL THEN thpsp.PACK_SALE_UPRC
            ELSE tmpsp.PACK_SALE_UPRC END AS PACK_SALE_UPRC_B,
        </if>
        thps.STORE_CD,
        tmp.PRC_CTRL_FG
        FROM TB_MS_STORE tms,
        TB_MS_STORE_INFO tmsi,
        TB_HQ_OFFICE tho,
        TB_HQ_PRODUCT_STORE thps,
        TB_HQ_BRAND thb,
        (
            SELECT
            thp.HQ_OFFICE_CD,
            thp.PROD_CD,
            thpsp.SALE_UPRC,
            thpsp.STIN_SALE_UPRC,
            thpsp.DLVR_SALE_UPRC,
            thpsp.PACK_SALE_UPRC
            FROM TB_HQ_PRODUCT thp,
            (
                SELECT HQ_OFFICE_CD , PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_HQ_PRODUCT_SALE_PRICE
                WHERE 1 = 1
                <![CDATA[
                    AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                    AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY HQ_OFFICE_CD, PROD_CD
            ) thpsp
            WHERE 1=1
            AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
            AND thpsp.PROD_CD = thp.PROD_CD
        ) thpsp, -- 본사 판매가
        (
            SELECT
            thp.HQ_OFFICE_CD,
            tmpsp.STORE_CD,
            thp.PROD_CD,
            tmpsp.SALE_UPRC,
            tmpsp.STIN_SALE_UPRC,
            tmpsp.DLVR_SALE_UPRC,
            tmpsp.PACK_SALE_UPRC
            FROM TB_HQ_PRODUCT thp,
            (
                SELECT STORE_CD , PROD_CD,
                MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                FROM TB_MS_PRODUCT_SALE_PRICE
                WHERE 1 = 1
                <![CDATA[
                     AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                     AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                 ]]>
                AND SALE_PRC_FG = '1'
                GROUP BY STORE_CD, PROD_CD
            ) tmpsp
            WHERE 1=1
            AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tmpsp.STORE_CD IN (SELECT store_cd FROM TB_MS_STORE  WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD)
            AND tmpsp.PROD_CD = thp.PROD_CD
        ) tmpsp,
        (
            SELECT
            STORE_CD,
            PRC_CTRL_FG
            FROM TB_MS_PRODUCT
            WHERE 1=1
            AND PROD_CD = #{prodCd}
            GROUP BY STORE_CD, PRC_CTRL_FG
        ) tmp
        WHERE tho.HQ_OFFICE_CD = tms.HQ_OFFICE_CD
        AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thps.HQ_OFFICE_CD (+)= tms.HQ_OFFICE_CD
        AND thps.STORE_CD (+)= tms.STORE_CD
        AND thps.PROD_CD (+)= #{prodCd}
        AND thpsp.HQ_OFFICE_CD (+)= tho.HQ_OFFICE_CD
        AND thpsp.PROD_CD (+)= #{prodCd}
        AND tmpsp.HQ_OFFICE_CD (+)= #{hqOfficeCd}
        AND tmpsp.STORE_CD (+)= tms.STORE_CD
        AND tmpsp.PROD_CD (+)= #{prodCd}
        AND thb.HQ_OFFICE_CD (+)= tms.HQ_OFFICE_CD
        AND thb.HQ_BRAND_CD (+)= tms.HQ_BRAND_CD
        AND tmp.STORE_CD (+)= tms.STORE_CD
        AND tmsi.STORE_CD (+)= tms.STORE_CD
        <if test='sysStatFg != null and sysStatFg.toString() != ""'>
            AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        <if test='hqBrandCd != null and hqBrandCd.toString() != ""'>
            AND tms.HQ_BRAND_CD = #{hqBrandCd}
        </if>
        <if test='storeCd != null and storeCd.toString() != ""'>
            AND tms.STORE_CD = #{storeCd}
        </if>
        <if test='storeNm != null and storeNm.toString() != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        <if test='storeRegFg != null and storeRegFg.toString() == "Y"'>
            AND thps.STORE_CD IS NOT NULL
        </if>
        <if test='storeRegFg != null and storeRegFg.toString() == "N"'>
            AND thps.STORE_CD IS NULL
        </if>
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
            AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
        </if>
        ORDER BY tms.STORE_CD ASC
    </select>

    <!-- 브랜드 콤보박스 리스트 조회 -->
    <!--
        TABLE    : TB_HQ_BRAND
        PARAM    : prodVO
        COMMENTS : 콤보박스에 넣을 브랜드를 조회한다.
    -->
    <select id="getBrandComboList" parameterType="prodVO" resultType="DefaultMap">
        SELECT HQ_BRAND_CD AS NMCODE_CD,
                HQ_BRAND_NM AS NMCODE_NM
          FROM TB_HQ_BRAND
         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
           AND USE_YN = 'Y'
         ORDER
            BY HQ_BRAND_CD ASC
    </select>

    <!-- 상품 적용 매장 등록 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_STORE
        PARAM    : prodVO
        COMMENTS : 본사 상품을 적용할 매장을 등록한다.
    -->
    <insert id="insertProdStore" parameterType="prodVO">
        /* USE : ProdMapper.insertProdStore */
        INSERT INTO TB_HQ_PRODUCT_STORE
        (
          HQ_OFFICE_CD,
          PROD_CD,
          STORE_CD,
          REG_DT,
          REG_ID,
          MOD_DT,
          MOD_ID
        )
        VALUES
        (
          #{hqOfficeCd},
          #{prodCd},
          #{storeCd},
          #{regDt},
          #{regId},
          #{modDt},
          #{modId}
        )
    </insert>

    <!-- 상품 적용 매장 등록시, 본사의 상품 매장으로 등록 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 적용 매장 등록시, 본사의 상품 매장으로 등록
    -->
    <insert id="insertProdStoreDetail" parameterType="prodVO">
        /* USE : ProdMapper.insertProdStoreDetail */
        MERGE INTO TB_MS_PRODUCT tmp
        USING ( SELECT
                    #{storeCd} AS STORE_CD,
                    thp.HQ_OFFICE_CD,
                    thp.HQ_BRAND_CD,
                    thp.PROD_CD,
                    thp.PROD_NM,
                    thp.PROD_CLASS_CD,
                    thp.CORNR_CD,
                    thp.ORGPLCE_CD,
                    thp.SDATTR_CLASS_CD,
                    thp.SDSEL_GRP_CD,
                    thp.POINT_SAVE_YN,
                    thp.PROD_DC_FG,
                    thp.VAT_FG,
                    thp.PROD_TIP_YN,
                    thp.PROD_PACK_AMT,
                    thp.PROD_DLVR_AMT,
                    thp.PROD_TYPE_FG,
                    thp.SALE_PROD_YN,
                    thp.STOCK_PROD_YN,
                    thp.SIDE_PROD_YN,
                    thp.SET_PROD_FG,
                    thp.COST_UPRC,
                    thp.LAST_COST_UPRC,
                    thp.SPLY_UPRC,
                    thp.SPLY_UPRC_USE_YN,
                    thp.PO_PROD_FG,
                    thp.PO_UNIT_FG,
                    thp.PO_UNIT_QTY,
                    thp.PO_UNIT_ALLOW_FG,
                    thp.PO_MIN_QTY,
                    thp.SAFE_STOCK_QTY,
                    thp.STOCK_UNIT_FG,
                    thp.USE_YN,
                    thp.REMARK,
                    thp.REG_DT,
                    thp.REG_ID,
                    thp.MOD_DT,
                    thp.MOD_ID,
                    thp.PRC_CTRL_FG,
                    thp.MAP_PROD_CD,
                    thp.DEPOSIT_CUP_FG,
                    thp.POINT_USE_YN,
                    thp.DC_YN,
                    thp.SALE_TIME_FG,
                    thp.OPTION_GRP_CD,
                    thp.RELEASE_DATE,
                    thp.DISCON_DATE,
                    thp.DISCON_YN,
                    thp.GROUP_PROD_CD,
                    thp.DEPOSIT_PROD_CD,
                    thp.ADD_GRP_CD
                FROM
                   TB_HQ_PRODUCT thp
               WHERE
                   thp.HQ_OFFICE_CD = #{hqOfficeCd}
                   AND thp.PROD_CD = #{prodCd} ) thp
           ON ( tmp.STORE_CD = thp.STORE_CD
            AND tmp.PROD_CD  = thp.PROD_CD )
        WHEN MATCHED THEN
        UPDATE
           SET tmp.PROD_NM             = thp.PROD_NM,
               tmp.HQ_BRAND_CD         = thp.HQ_BRAND_CD,
               tmp.PROD_CLASS_CD       = thp.PROD_CLASS_CD,
               tmp.CORNR_CD            = thp.CORNR_CD,
               tmp.ORGPLCE_CD          = thp.ORGPLCE_CD,
               tmp.SDATTR_CLASS_CD     = thp.SDATTR_CLASS_CD,
               tmp.SDSEL_GRP_CD        = thp.SDSEL_GRP_CD,
               tmp.POINT_SAVE_YN       = thp.POINT_SAVE_YN,
               tmp.PROD_DC_FG          = thp.PROD_DC_FG,
               tmp.VAT_FG              = thp.VAT_FG,
               tmp.PROD_TIP_YN         = thp.PROD_TIP_YN,
               tmp.PROD_PACK_AMT       = thp.PROD_PACK_AMT,
               tmp.PROD_DLVR_AMT       = thp.PROD_DLVR_AMT,
               tmp.PROD_TYPE_FG        = thp.PROD_TYPE_FG,
               tmp.SALE_PROD_YN        = thp.SALE_PROD_YN,
               tmp.STOCK_PROD_YN       = thp.STOCK_PROD_YN,
               tmp.SIDE_PROD_YN        = thp.SIDE_PROD_YN,
               tmp.SET_PROD_FG         = thp.SET_PROD_FG,
--                tmp.PRC_CTRL_FG         = 'H',           -- 가격관리구분 (본사에서 매장으로 내려줌)
               tmp.PRC_CTRL_FG         = thp.PRC_CTRL_FG,  -- 가격관리구분 (본사에서 매장으로 내려줌)
               tmp.COST_UPRC           = thp.COST_UPRC,
               tmp.LAST_COST_UPRC      = thp.LAST_COST_UPRC,
               tmp.SPLY_UPRC           = thp.SPLY_UPRC,
               tmp.SPLY_UPRC_USE_YN    = thp.SPLY_UPRC_USE_YN,
               tmp.PO_PROD_FG          = thp.PO_PROD_FG,
               tmp.PO_UNIT_FG          = thp.PO_UNIT_FG,
               tmp.PO_UNIT_QTY         = thp.PO_UNIT_QTY,
               tmp.PO_UNIT_ALLOW_FG    = thp.PO_UNIT_ALLOW_FG,
               tmp.PO_MIN_QTY          = thp.PO_MIN_QTY,
               tmp.SAFE_STOCK_QTY      = thp.SAFE_STOCK_QTY,
               tmp.STOCK_UNIT_FG       = thp.STOCK_UNIT_FG,
               tmp.USE_YN              = thp.USE_YN,
               tmp.REMARK              = thp.REMARK,
               tmp.MOD_DT              = #{modDt},
               tmp.MOD_ID              = #{modId},
               tmp.MAP_PROD_CD         = thp.MAP_PROD_CD,
               tmp.DEPOSIT_CUP_FG      = thp.DEPOSIT_CUP_FG,
               tmp.POINT_USE_YN        = thp.POINT_USE_YN,
               tmp.DC_YN               = thp.DC_YN,
               tmp.SALE_TIME_FG        = thp.SALE_TIME_FG,
               tmp.OPTION_GRP_CD       = thp.OPTION_GRP_CD,
               tmp.RELEASE_DATE        = thp.RELEASE_DATE,
               tmp.DISCON_DATE         = thp.DISCON_DATE,
               tmp.DISCON_YN           = thp.DISCON_YN,
               tmp.GROUP_PROD_CD       = thp.GROUP_PROD_CD,
               tmp.DEPOSIT_PROD_CD     = thp.DEPOSIT_PROD_CD,
               tmp.ADD_GRP_CD          = thp.ADD_GRP_CD
        WHEN NOT MATCHED THEN
            INSERT
            (
                tmp.STORE_CD,
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.HQ_BRAND_CD,
                tmp.PROD_CLASS_CD,
                tmp.CORNR_CD,
                tmp.ORGPLCE_CD,
                tmp.SDATTR_CLASS_CD,
                tmp.SDSEL_GRP_CD,
                tmp.POINT_SAVE_YN,
                tmp.PROD_DC_FG,
                tmp.VAT_FG,
                tmp.PROD_TIP_YN,
                tmp.PROD_PACK_AMT,
                tmp.PROD_DLVR_AMT,
                tmp.PROD_TYPE_FG,
                tmp.SALE_PROD_YN,
                tmp.STOCK_PROD_YN,
                tmp.SIDE_PROD_YN,
                tmp.SET_PROD_FG,
                tmp.PRC_CTRL_FG,
                tmp.COST_UPRC,
                tmp.LAST_COST_UPRC,
                tmp.SPLY_UPRC,
                tmp.SPLY_UPRC_USE_YN,
                tmp.PO_PROD_FG,
                tmp.PO_UNIT_FG,
                tmp.PO_UNIT_QTY,
                tmp.PO_UNIT_ALLOW_FG,
                tmp.PO_MIN_QTY,
                tmp.SAFE_STOCK_QTY,
                tmp.STOCK_UNIT_FG,
                tmp.USE_YN,
                tmp.REMARK,
                tmp.REG_DT,
                tmp.REG_ID,
                tmp.MOD_DT,
                tmp.MOD_ID,
                tmp.REG_FG,
                tmp.MAP_PROD_CD,
                tmp.DEPOSIT_CUP_FG,
                tmp.POINT_USE_YN,
                tmp.DC_YN,
                tmp.SALE_TIME_FG,
                tmp.OPTION_GRP_CD,
                tmp.RELEASE_DATE,
                tmp.DISCON_DATE,
                tmp.DISCON_YN,
                tmp.GROUP_PROD_CD,
                tmp.DEPOSIT_PROD_CD,
                tmp.ADD_GRP_CD
            )
            VALUES
            (
                thp.STORE_CD,
                thp.PROD_CD,
                thp.PROD_NM,
                thp.HQ_BRAND_CD,
                thp.PROD_CLASS_CD,
                thp.CORNR_CD,
                thp.ORGPLCE_CD,
                thp.SDATTR_CLASS_CD,
                thp.SDSEL_GRP_CD,
                thp.POINT_SAVE_YN,
                thp.PROD_DC_FG,
                thp.VAT_FG,
                thp.PROD_TIP_YN,
                thp.PROD_PACK_AMT,
                thp.PROD_DLVR_AMT,
                thp.PROD_TYPE_FG,
                thp.SALE_PROD_YN,
                thp.STOCK_PROD_YN,
                thp.SIDE_PROD_YN,
                thp.SET_PROD_FG,
--                 'H',          -- 가격관리구분 (본사에서 매장으로 내려줌)
                thp.PRC_CTRL_FG, -- 가격관리구분 (본사에서 매장으로 내려줌)
                thp.COST_UPRC,
                thp.LAST_COST_UPRC,
                thp.SPLY_UPRC,
                thp.SPLY_UPRC_USE_YN,
                thp.PO_PROD_FG,
                thp.PO_UNIT_FG,
                thp.PO_UNIT_QTY,
                thp.PO_UNIT_ALLOW_FG,
                thp.PO_MIN_QTY,
                thp.SAFE_STOCK_QTY,
                thp.STOCK_UNIT_FG,
                thp.USE_YN,
                thp.REMARK,
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                'H', --상품등록구분 REG_FG(현재 등록매장수, 매장상품일괄등록 기능은 본사에만 기능있음)
                thp.MAP_PROD_CD,
                thp.DEPOSIT_CUP_FG,
                thp.POINT_USE_YN,
                thp.DC_YN,
                thp.SALE_TIME_FG,
                thp.OPTION_GRP_CD,
                thp.RELEASE_DATE,
                thp.DISCON_DATE,
                thp.DISCON_YN,
                thp.GROUP_PROD_CD,
                thp.DEPOSIT_PROD_CD,
                thp.ADD_GRP_CD
            )
    </insert>

    <!-- 상품판매가 본사통제여부가 본사인 경우, 본사 판매가 등록시 매장 판매가 등록 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_PRICE, TB_MS_PRODUCT_SALE_PRICE_HISTORY
        PARAM    : prodVO
        COMMENTS : 상품판매가 본사통제여부가 본사인 경우, 본사 판매가 등록시 매장 판매가 등록
                   20210914 SP_HQ_PRODUCT_SALE_PRICE_I -> SP_HQ_PRODUCT_SALE_PRICE_I2 변경
    -->
    <select id="saveStoreSalePrice" statementType="CALLABLE" parameterType="prodVO">
        /* USE : ProdMapper.saveStoreSalePrice */
        {
          CALL PKG_HQ_PRODUCT_SALE_PRICE.SP_HQ_PRODUCT_SALE_PRICE_I2
          (
            #{hqOfficeCd},
            #{prodCd},
            #{storeCd},
            #{workMode},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId},
            #{result, mode=OUT, jdbcType=VARCHAR}
          )
        }
    </select>

    <!-- 상품 적용 매장 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_STORE
        PARAM    : prodVO
        COMMENTS : 본사 쿠폰을 적용한 매장을 삭제한다.
    -->
    <delete id="deleteProdStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdStore */
        DELETE TB_HQ_PRODUCT_STORE
         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
           AND PROD_CD = #{prodCd}
           AND STORE_CD = #{storeCd}
    </delete>

    <!-- 상품 매장 적용 삭제시, 해당 상품의 USE_YN 값 변경 -->
    <!--
        TABLE    : TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 매장 적용 삭제시, 해당 상품의 USE_YN 값 변경
    -->
    <update id="deleteProdStoreDetail" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdStoreDetail */
        UPDATE TB_MS_PRODUCT
           SET USE_YN = 'N'
         WHERE STORE_CD = #{storeCd}
           AND PROD_CD = #{prodCd}
    </update>

    <!-- 판매가 히스토리 등록을 위한 COUNT 조회 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_PRICE
        COMMENTS : 판매가 히스토리 등록을 위한 COUNT 조회한다.
    -->
    <select id="getRegistProdCount" parameterType="salePriceVO" resultType="Integer">
        /* USE : ProdMapper.getRegistProdCount */
            SELECT COUNT(PROD_CD) AS CNT
            FROM (
            SELECT STORE_CD, PROD_CD, SALE_PRC_FG,
            MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
            MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
            MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
            MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
            FROM TB_MS_PRODUCT_SALE_PRICE
            WHERE 1 = 1
            <![CDATA[
                   AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                   AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                ]]>
            AND SALE_PRC_FG     = '1'
            GROUP BY STORE_CD, PROD_CD, SALE_PRC_FG
            )
            WHERE STORE_CD = #{storeCd}
            AND PROD_CD = #{prodCd}
            AND (SALE_UPRC      = NVL(#{saleUprc}, 0)
            OR  STIN_SALE_UPRC  = NVL(#{stinSaleUprc}, 0)
            OR  DLVR_SALE_UPRC  = NVL(#{dlvrSaleUprc}, 0)
            OR  PACK_SALE_UPRC  = NVL(#{packSaleUprc}, 0))
    </select>


    <!-- 매장 상품 판매가 변경 히스토리 등록 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_PRICE_HISTORY
        COMMENTS : 판매가 변경 히스토리를 등록한다.
    -->
    <insert id="updateStoreSaleUprcHistory" parameterType="prodVO" >
        /* USE : ProdMapper.updateStoreSaleUprcHistory */
        <![CDATA[
        INSERT INTO TB_MS_PRODUCT_SALE_PRICE_HISTORY
        SELECT SQ_MS_PRODUCT_SALE_PRICE_HISTORY.NEXTVAL,
               STORE_CD,
               PROD_CD,
               SALE_PRC_FG,
               START_DATE,
               END_DATE,
               SALE_UPRC,
               #{regDt},
               #{regId},
               STIN_SALE_UPRC,
               DLVR_SALE_UPRC,
               PACK_SALE_UPRC
          FROM TB_MS_PRODUCT_SALE_PRICE
         WHERE STORE_CD = #{storeCd}
           AND PROD_CD = #{prodCd}
           AND SALE_PRC_FG = '1'
           AND START_DATE = #{startDate}
          ]]>
    </insert>

    <!-- 매장 판매가 변경 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_PRICE
        COMMENTS : 매장 판매가/내점가/배달가/포장가를 일괄 변경한다.
    -->
    <insert id="updateStoreSaleUprc" parameterType="prodVO" >
        /* USE : ProdMapper.updateStoreSaleUprc */
        MERGE INTO TB_MS_PRODUCT_SALE_PRICE tmpsp
        USING DUAL
        ON (
            tmpsp.STORE_CD = #{storeCd}
            AND tmpsp.PROD_CD = #{prodCd}
            AND tmpsp.SALE_PRC_FG = '1'
            AND tmpsp.START_DATE = TO_CHAR(SYSDATE, 'yyyyMMdd')
        )
        WHEN MATCHED THEN
        UPDATE
        SET
            tmpsp.SALE_UPRC = #{saleUprc},
            tmpsp.STIN_SALE_UPRC = NVL(#{stinSaleUprc}, #{saleUprc}),
            tmpsp.DLVR_SALE_UPRC = NVL(#{dlvrSaleUprc}, #{saleUprc}),
            tmpsp.PACK_SALE_UPRC = NVL(#{packSaleUprc}, #{saleUprc}),
            tmpsp.MOD_DT = #{modDt},
            tmpsp.MOD_ID = #{modId},
            tmpsp.SALE_RESVE_FG = #{saleResveFg}
        WHEN NOT MATCHED THEN
        INSERT
        (
            STORE_CD,
            PROD_CD,
            SALE_PRC_FG,
            START_DATE,
            END_DATE,
            SALE_UPRC,
            STIN_SALE_UPRC,
            DLVR_SALE_UPRC,
            PACK_SALE_UPRC,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID,
            SALE_RESVE_FG
        ) VALUES (
            #{storeCd},
            #{prodCd},
            '1',
            #{startDate},
            #{endDate},
            #{saleUprc},
            NVL(#{stinSaleUprc}, #{saleUprc}),
            NVL(#{dlvrSaleUprc}, #{saleUprc}),
            NVL(#{packSaleUprc}, #{saleUprc}),
            #{regDt},
            #{regId},
            #{modDt},
            #{modId},
            #{saleResveFg}
        )
    </insert>

    <!-- 상품코드 중복체크 -->
    <!--
          TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT, TB_MS_STORE
          PARAM    : prodVO
          COMMENTS : 상품코드 수동입력 시 중복되는 상품코드가 있는지 체크 (중복체크)
    -->
    <select id="getProdCdCnt" parameterType="prodVO" resultType="Integer">
        /* USE : ProdMapper.getProdCdCnt */
        <!--<choose>
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1) AS CNT
                  FROM TB_HQ_PRODUCT
                  WHERE 1=1
                    AND PROD_CD = #{prodCd}
            </when>
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1) AS CNT
                  FROM TB_MS_PRODUCT
                 WHERE 1=1
                   AND HQ_OFFICE_CD = #{hqOfficeCd}
                   AND STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
            </when>
        </choose>-->
        <!--SELECT COUNT(1) AS CNT
        FROM (
                SELECT PROD_CD FROM TB_HQ_PRODUCT
                UNION ALL
                SELECT PROD_CD FROM TB_MS_PRODUCT
              )
        WHERE 1=1
          AND PROD_CD = #{prodCd}-->
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                COUNT(1) AS CNT
                FROM (
                SELECT PROD_CD FROM TB_HQ_PRODUCT WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = #{prodCd}
                UNION ALL
                (
                SELECT
                tmp.PROD_CD
                FROM TB_MS_PRODUCT tmp,
                TB_MS_STORE tms
                WHERE 1=1
                AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
                AND tmp.STORE_CD = tms.STORE_CD
                AND tmp.PROD_CD = #{prodCd}
                )
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd != "00000"'>
                SELECT
                COUNT(1) AS CNT
                FROM (
                SELECT PROD_CD FROM TB_HQ_PRODUCT WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = #{prodCd}
                UNION ALL
                SELECT PROD_CD FROM TB_MS_PRODUCT WHERE STORE_CD = #{storeCd} AND PROD_CD = #{prodCd}
                )
            </when>
            <!--  단독매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd == "00000"'>
                SELECT COUNT(1) AS CNT
                FROM TB_MS_PRODUCT
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>


    <!-- 바코드 중복체크 -->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD, TB_MS_STORE
          PARAM    : prodVO
          COMMENTS : 바코드 입력 시 중복되는 바코드가 있는지 체크 (중복체크)
    -->
    <select id="chkBarCd" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.chkBarCd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  '[' || CD || ']' || NM || '에 [' || PROD_CD || ']' || PROD_NM || ' 상품의 바코드와 중복되어 저장 할 수 없습니다.'
                FROM (
                    SELECT  thpb.HQ_OFFICE_CD AS CD,
                            tho.HQ_OFFICE_NM AS NM,
                            thpb.PROD_CD,
                            thp.PROD_NM
                    FROM    TB_HQ_PRODUCT_BARCD thpb,   TB_HQ_PRODUCT thp,  TB_HQ_OFFICE tho
                    WHERE   thpb.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND     tho.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
                    AND     thp.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
                    AND     thp.PROD_CD = thpb.PROD_CD
                    AND     thpb.BARCD_CD = #{barCd}
                    <if test='prodCd != null and prodCd.toString() != ""'>
                        AND thpb.PROD_CD != #{prodCd}
                    </if>
                    UNION ALL
                    SELECT  tms.STORE_CD AS CD,
                            tms.STORE_NM AS NM,
                            tmpb.PROD_CD,
                            tmp.PROD_NM
                    FROM    TB_MS_PRODUCT_BARCD tmpb,   TB_MS_PRODUCT tmp,  TB_MS_STORE tms
                    WHERE   tms.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND     tmpb.STORE_CD = tms.STORE_CD
                    AND     tmp.STORE_CD = tms.STORE_CD
                    AND     tmp.PROD_CD = tmpb.PROD_CD
                    AND     tmpb.BARCD_CD =#{barCd}
                    <if test='prodCd != null and prodCd.toString() != ""'>
                        AND tmpb.PROD_CD != #{prodCd}
                    </if>
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd != "00000"'>
                SELECT '[' || CD || ']' || NM || '에 [' || PROD_CD || ']' || PROD_NM || ' 상품의 바코드와 중복되어 저장 할 수 없습니다.'
                FROM (
                    SELECT  thpb.HQ_OFFICE_CD AS CD,
                            tho.HQ_OFFICE_NM AS NM,
                            thpb.PROD_CD,
                            thp.PROD_NM
                    FROM    TB_HQ_PRODUCT_BARCD thpb, TB_HQ_PRODUCT thp, TB_HQ_OFFICE tho
                    WHERE   thpb.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND     thp.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
                    AND     tho.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
                    AND     thp.PROD_CD = thpb.PROD_CD
                    AND     thpb.BARCD_CD = #{barCd}
                    <if test='prodCd != null and prodCd.toString() != ""'>
                        AND thpb.PROD_CD != #{prodCd}
                    </if>
                    UNION ALL
                    SELECT  tms.STORE_CD AS CD,
                            tms.STORE_NM AS NM,
                            tmpb.PROD_CD,
                            tmp.PROD_NM
                    FROM    TB_MS_PRODUCT_BARCD tmpb, TB_MS_PRODUCT tmp, TB_MS_STORE tms
                    WHERE   tmpb.STORE_CD = #{storeCd}
                    AND     tmp.STORE_CD = tmpb.STORE_CD
                    AND     tms.STORE_CD = tmpb.STORE_CD
                    AND     tmp.PROD_CD = tmpb.PROD_CD
                    AND     tmpb.BARCD_CD = #{barCd}
                    <if test='prodCd != null and prodCd.toString() != ""'>
                        AND tmpb.PROD_CD != #{prodCd}
                    </if>
                )
            </when>
            <!--  단독매장 -->
            <when test='orgnFg != null and orgnFg == "S" and hqOfficeCd == "00000"'>
                SELECT '[' || tmpb.STORE_CD || ']' || tms.STORE_NM || '에 [' || tmpb.PROD_CD || ']' || tmp.PROD_NM || ' 상품의 바코드와 중복되어 저장 할 수 없습니다.'
                FROM    TB_MS_PRODUCT_BARCD tmpb, TB_MS_PRODUCT tmp, TB_MS_STORE tms
                WHERE   tmpb.STORE_CD = #{storeCd}
                AND     tmp.STORE_CD = tmpb.STORE_CD
                AND     tms.STORE_CD = tmpb.STORE_CD
                AND     tmp.PROD_CD = tmpb.PROD_CD
                AND     tmpb.BARCD_CD = #{barCd}
                <if test='prodCd != null and prodCd.toString() != ""'>
                    AND tmpb.PROD_CD != #{prodCd}
                </if>
            </when>
        </choose>
    </select>

    <!-- 바코드 중복체크(본사) -->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD, TB_MS_STORE
          PARAM    : prodVO
          COMMENTS : 바코드 입력 시 중복되는 바코드가 있는지 체크 (중복체크)
    -->
    <select id="chkBarCdHq" parameterType="prodVO" resultType="DefaultMap">
        /* USE : prodMapper.chkBarCdHq */
        SELECT  A.CNT AS HQ_CNT,
        B.CNT AS MS_CNT
        FROM (
        SELECT  COUNT(*) AS CNT
        FROM    TB_HQ_PRODUCT_BARCD thpb,   TB_HQ_PRODUCT thp,  TB_HQ_OFFICE tho
        WHERE   thpb.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     tho.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
        AND     thp.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
        AND     thp.PROD_CD = thpb.PROD_CD
        AND     thpb.BARCD_CD = REPLACE(REPLACE(REPLACE(#{barCd}, CHR(10), NULL), CHR(13), NULL), ' ', '')
        <if test='prodCd != null and prodCd.toString() != ""'>
            AND thpb.PROD_CD != #{prodCd}
        </if>
        ) A,
        (
        SELECT  COUNT(*) AS CNT
        FROM    TB_MS_PRODUCT_BARCD tmpb,   TB_MS_PRODUCT tmp,  TB_MS_STORE tms
        WHERE   tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     tmpb.STORE_CD = tms.STORE_CD
        AND     tmp.STORE_CD = tms.STORE_CD
        AND     tmp.PROD_CD = tmpb.PROD_CD
        AND     tmpb.BARCD_CD = REPLACE(REPLACE(REPLACE(#{barCd}, CHR(10), NULL), CHR(13), NULL), ' ', '')
        <if test='prodCd != null and prodCd.toString() != ""'>
            AND tmpb.PROD_CD != #{prodCd}
        </if>
        ) B
    </select>

    <!-- 상품 바코드 존재 여부 확인 -->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 상품등록 시, 해당상품의 바코드가 있는지 확인
    -->
    <select id="getProdBarCdCnt" parameterType="prodVO" resultType="Integer">
        /* USE : ProdMapper.getProdBarCdCnt */
         SELECT COUNT(1) AS CNT
           FROM TB_HQ_PRODUCT_BARCD
          WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            AND PROD_CD = #{prodCd}
    </select>

    <!-- 상품 적용 매장 등록시, 본사의 상품의 바코드 매장으로 등록 -->
    <!--
          TABLE    : TB_MS_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 상품 적용 매장 등록시, 본사의 상품의 바코드 매장으로 등록
    -->
    <insert id="insertProdBarcdStoreDetail" parameterType="prodVO">
        /* USE : ProdMapper.insertProdBarcdStoreDetail */
         MERGE INTO TB_MS_PRODUCT_BARCD tmpb
            USING ( SELECT #{storeCd} AS STORE_CD
                             , HQ_OFFICE_CD
                             , BARCD_CD
                             , BARCD_NM
                             , PROD_CD
                             , UNIT_QTY
                             , REG_DT
                             , REG_ID
                             , MOD_DT
                             , MOD_ID
                       FROM TB_HQ_PRODUCT_BARCD thpb
                      WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                        AND PROD_CD = #{prodCd}
                   ) thpb
                ON ( tmpb.PROD_CD   = thpb.PROD_CD
                     AND tmpb.STORE_CD  = thpb.STORE_CD )
            WHEN MATCHED THEN
                UPDATE
                    SET tmpb.BARCD_CD = thpb.BARCD_CD
                       , tmpb.BARCD_NM = thpb.BARCD_NM
                       , tmpb.UNIT_QTY = thpb.UNIT_QTY
                       , tmpb.MOD_DT = #{modDt}
                       , tmpb.MOD_ID = #{modId}
        WHEN NOT MATCHED THEN
				INSERT (
				            tmpb.STORE_CD
						  , tmpb.PROD_CD
						  , tmpb.BARCD_CD
						  , tmpb.BARCD_NM
						  , tmpb.UNIT_QTY
						  , tmpb.REG_DT
						  , tmpb.REG_ID
						  , tmpb.MOD_DT
						  , tmpb.MOD_ID   )
				 VALUES (
				              thpb.STORE_CD
							, thpb.PROD_CD
							, thpb.BARCD_CD
							, thpb.BARCD_NM
							, thpb.UNIT_QTY
							, #{regDt}
                            , #{regId}
                            , #{modDt}
                            , #{modId}      )
    </insert>

    <!-- 본사/매장 상품 등록시, 본사/매장 상품의 바코드 등록-->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 본사/매장 상품 등록시, 본사/매장 상품의 바코드 등록
    -->
    <insert id="saveProdBarcd" parameterType="prodVO">
        /* USE : ProdMapper.saveProdBarcd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_BARCD
                USING DUAL ON (
                HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET BARCD_CD = #{barCd}
                , BARCD_NM = #{prodNm}
                , MOD_DT = #{modDt}
                , MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT (
                HQ_OFFICE_CD
                , PROD_CD
                , BARCD_CD
                , BARCD_NM
                , UNIT_QTY
                , REG_DT
                , REG_ID
                , MOD_DT
                , MOD_ID )
                VALUES (
                #{hqOfficeCd}
                , #{prodCd}
                , #{barCd}
                , #{prodNm}
                , '1'
                , #{regDt}
                , #{regId}
                , #{modDt}
                , #{modId} )
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_BARCD
                USING DUAL ON (
                STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET BARCD_CD = #{barCd}
                , BARCD_NM = #{prodNm}
                , MOD_DT = #{modDt}
                , MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT (
                STORE_CD
                , PROD_CD
                , BARCD_CD
                , BARCD_NM
                , UNIT_QTY
                , REG_DT
                , REG_ID
                , MOD_DT
                , MOD_ID )
                VALUES (
                #{storeCd}
                , #{prodCd}
                , #{barCd}
                , #{prodNm}
                , '1'
                , #{regDt}
                , #{regId}
                , #{modDt}
                , #{modId} )
            </when>
        </choose>

    </insert>

    <!-- 본사/매장 상품 등록시, 본사/매장 상품의 바코드 삭제-->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 본사/매장 상품 등록시, 본사/매장 상품의 바코드 삭제
    -->
    <delete id="deleteProdBarcd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdBarcd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_PRODUCT_BARCD
                USING DUAL ON (
                HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET MOD_DT = #{modDt}
                , MOD_ID = #{modId}
                DELETE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD = #{prodCd}
            </when>
            <!-- 가맹점 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_PRODUCT_BARCD
                USING DUAL ON (
                STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
                )
                WHEN MATCHED THEN
                UPDATE
                SET MOD_DT = #{modDt}
                , MOD_ID = #{modId}
                DELETE
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </delete>

    <!-- 본사/매장 상품 등록시, 본사/매장 상품의 바코드 삭제-->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 본사/매장 상품 등록시, 본사/매장 상품의 바코드 삭제(본사의 하위 매장)
    -->
    <delete id="deleteProdBarcdStoreHq" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdBarcdStoreHq */
        MERGE INTO TB_MS_PRODUCT_BARCD A
            USING   (
                SELECT  B.STORE_CD      AS  STORE_CD
                     ,  #{barCd}    AS  BARCD_CD
                FROM  TB_MS_STORE B
                WHERE   B.HQ_OFFICE_CD  =   #{hqOfficeCd}
            ) B
            ON  (
                    A.STORE_CD      =   B.STORE_CD
                    AND A.BARCD_CD   =   B.BARCD_CD
                )
            WHEN MATCHED THEN
                UPDATE
                    SET MOD_DT = #{modDt}
                    ,   MOD_ID = #{modId}
                DELETE
                WHERE   STORE_CD    = B.STORE_CD
                  AND   BARCD_CD     = B.BARCD_CD
    </delete>

    <!-- 본사/매장 상품 등록시, 본사/매장 상품의 바코드 삭제-->
    <!--
          TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 본사/매장 상품 등록시, 본사/매장 상품의 바코드 삭제(본사의 하위 매장)
    -->
    <delete id="deleteProdBarcdStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdBarcdStore */
                MERGE INTO TB_MS_PRODUCT_BARCD A
                    USING   (
                        SELECT  B.STORE_CD      AS  STORE_CD
                             ,  #{prodCd}    AS  PROD_CD
                          FROM  TB_MS_STORE B
                        WHERE   B.HQ_OFFICE_CD  =   #{hqOfficeCd}
                    ) B
                    ON  (
                            A.STORE_CD      =   B.STORE_CD
                            AND A.PROD_CD   =   B.PROD_CD
                        )
                WHEN MATCHED THEN
                UPDATE
                SET MOD_DT = #{modDt}
                ,   MOD_ID = #{modId}
                DELETE
                WHERE   STORE_CD    = B.STORE_CD
                AND     PROD_CD     = B.PROD_CD
    </delete>

    <!-- 매장 상품 등록시, 매장 상품의 바코드 등록 프로시저 호출-->
    <!--
          TABLE    : TB_MS_PRODUCT_BARCD
          PARAM    : prodVO
          COMMENTS : 매장 상품 등록시, 매장 상품의 바코드 등록한다.
    -->
    <insert id="saveProdBarcdStore" parameterType="prodVO">
        /* USE : ProdMapper.saveProdBarcdStore */
        MERGE INTO TB_MS_PRODUCT_BARCD A
            USING   (
                SELECT  B.STORE_CD  AS  STORE_CD
                     ,  #{prodCd}   AS  PROD_CD
                     ,  #{barCd}    AS  BARCD_CD
                     ,  #{prodNm}   AS  BARCD_NM
                     ,  '1'         AS  UNIT_QTY
                     ,  #{regDt}    AS  REG_DT
                     ,  #{regId}    AS  REG_ID
                     ,  #{modDt}    AS  MOD_DT
                     ,  #{modId}    AS  MOD_ID
                FROM    TB_MS_STORE B
                WHERE   B.HQ_OFFICE_CD  =   #{hqOfficeCd}
            ) B
            ON  (
                    A.STORE_CD  =   B.STORE_CD
                    AND A.PROD_CD   =   B.PROD_CD
                )
            WHEN MATCHED THEN
                UPDATE
                    SET     A.BARCD_CD      =   B.BARCD_CD
                    ,       A.BARCD_NM      =   B.BARCD_NM
                    ,       A.UNIT_QTY      =   B.UNIT_QTY
                    ,       A.MOD_DT        =   B.MOD_DT
                    ,       A.MOD_ID        =   B.MOD_ID
            WHEN NOT MATCHED THEN
                INSERT
                    (
                             A.STORE_CD
                     ,       A.PROD_CD
                     ,       A.BARCD_CD
                     ,       A.BARCD_NM
                     ,       A.UNIT_QTY
                     ,       A.REG_DT
                     ,       A.REG_ID
                     ,       A.MOD_DT
                     ,       A.MOD_ID
                     )
                    VALUES
                    (
                            B.STORE_CD
                    ,       B.PROD_CD
                    ,       B.BARCD_CD
                    ,       B.BARCD_NM
                    ,       B.UNIT_QTY
                    ,       B.REG_DT
                    ,       B.REG_ID
                    ,       B.MOD_DT
                    ,       B.MOD_ID
                    )
    </insert>


    <!-- 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도  사이드 그룹 추가 프로시저 호출-->
    <!--
          TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP
          PARAM    : prodVO
          COMMENTS : 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도  사이드 그룹 추가(본사 사이드 그룹 >> 매장 사이드 그룹)
    -->
    <select  id="insertSdselGrpToStore" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.insertSdselGrpToStore */
        {
            CALL PKG_HQ_PRODUCT_SDSEL_GROUP.SP_HQ_PRODUCT_SDSEL_GROUP_I02
            (
                #{hqOfficeCd},
                #{sdselGrpCd},
                #{prodCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도  사이드 분류 추가 프로시저 호출-->
    <!--
          TABLE    : TB_HQ_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_CLASS
          PARAM    : prodVO
          COMMENTS : 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도  사이드 분류 추가(본사 사이드 분류 >> 매장 사이드 분류)
    -->
    <select  id="insertSdselClassToStore" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.insertSdselClassToStore */
        {
            CALL PKG_HQ_PRODUCT_SDSEL_CLASS.SP_HQ_PRODUCT_SDSEL_CLASS_I02
            (
                #{hqOfficeCd},
                #{sdselGrpCd},
                #{prodCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도  사이드 선택상품 추가 프로시저 호출-->
    <!--
          TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
          PARAM    : prodVO
          COMMENTS : 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도  사이드 선택상품 추가(본사 사이드 선택상품 >> 매장 사이드 선택상품)
    -->
    <select  id="insertSdselProdToStore" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.insertSdselProdToStore */
        {
            CALL PKG_HQ_PRODUCT_SDSEL_PROD.SP_HQ_PRODUCT_SDSEL_PROD_I02
            (
                #{hqOfficeCd},
                #{sdselGrpCd},
                #{prodCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 매장 적용 상품 조회 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_HQ_PRODUCT_STORE
        PARAM    : prodVO
        COMMENTS : 매장 적용 대상인 상품을 조회한다.
    -->
    <select id="getStoreProdRegList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getStoreProdRegList */
        SELECT  tmp.STORE_CD,
        tmp.PROD_CD,
        tmp.PROD_NM,
        NVL2(thps.PROD_CD, 'Y', 'N') AS REG_YN,
        thps.PROD_CD,
        thpsp.SALE_UPRC AS HQ_SALE_UPRC,
        tmpsp.SALE_UPRC AS STORE_SALE_UPRC,
        CASE WHEN tmpsp.SALE_UPRC IS NULL THEN thpsp.SALE_UPRC
        ELSE tmpsp.SALE_UPRC END AS SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.SALE_UPRC IS NULL THEN thpsp.SALE_UPRC
        ELSE tmpsp.SALE_UPRC END AS SALE_UPRC_B,
        tmp.PRC_CTRL_FG,
        -- 내점가
        CASE WHEN tmpsp.STIN_SALE_UPRC IS NULL THEN thpsp.STIN_SALE_UPRC
        ELSE tmpsp.STIN_SALE_UPRC END AS STIN_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.STIN_SALE_UPRC IS NULL THEN thpsp.STIN_SALE_UPRC
        ELSE tmpsp.STIN_SALE_UPRC END AS STIN_SALE_UPRC_B,
        -- 배달가
        CASE WHEN tmpsp.DLVR_SALE_UPRC IS NULL THEN thpsp.DLVR_SALE_UPRC
        ELSE tmpsp.DLVR_SALE_UPRC END AS DLVR_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.DLVR_SALE_UPRC IS NULL THEN thpsp.DLVR_SALE_UPRC
        ELSE tmpsp.DLVR_SALE_UPRC END AS DLVR_SALE_UPRC_B,
        -- 포장가
        CASE WHEN tmpsp.PACK_SALE_UPRC IS NULL THEN thpsp.PACK_SALE_UPRC
        ELSE tmpsp.PACK_SALE_UPRC END AS PACK_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.PACK_SALE_UPRC IS NULL THEN thpsp.PACK_SALE_UPRC
        ELSE tmpsp.PACK_SALE_UPRC END AS PACK_SALE_UPRC_B
        FROM TB_MS_PRODUCT tmp,
        (
        SELECT STORE_CD, PROD_CD
        FROM TB_HQ_PRODUCT_STORE
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND STORE_CD = #{storeCd}
        ) thps,
        (
        SELECT thp.HQ_OFFICE_CD ,
        thp.PROD_CD,
        thpsp.SALE_UPRC,
        thpsp.STIN_SALE_UPRC,
        thpsp.DLVR_SALE_UPRC,
        thpsp.PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT thp,
        (
        SELECT HQ_OFFICE_CD,
        PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT_SALE_PRICE
        WHERE 1=1
        <![CDATA[
            AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
            AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
          ]]>
        AND SALE_PRC_FG = '1'
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        GROUP BY HQ_OFFICE_CD, PROD_CD
        ) thpsp
        WHERE 1=1
        AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND thpsp.PROD_CD = thp.PROD_CD
        ) thpsp,
        (
        SELECT thp.HQ_OFFICE_CD ,
        tmpsp.STORE_CD,
        thp.PROD_CD,
        tmpsp.SALE_UPRC,
        tmpsp.STIN_SALE_UPRC,
        tmpsp.DLVR_SALE_UPRC,
        tmpsp.PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT thp,
        (
        SELECT STORE_CD,
        PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_MS_PRODUCT_SALE_PRICE
        WHERE 1=1
        <![CDATA[
                                       AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                       AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                     ]]>
        AND SALE_PRC_FG = '1'
        AND STORE_CD = #{storeCd}
        GROUP BY STORE_CD, PROD_CD
        ) tmpsp
        WHERE 1=1
        AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tmpsp.STORE_CD = #{storeCd}
        AND tmpsp.STORE_CD IN (SELECT store_cd FROM TB_MS_STORE  WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD)
        AND tmpsp.PROD_CD = thp.PROD_CD
        ) tmpsp
        WHERE thps.STORE_CD (+)= tmp.STORE_CD
        AND thps.PROD_CD (+)= tmp.PROD_CD
        AND tmp.STORE_CD = #{storeCd}
        --AND tmp.USE_YN = 'Y'
        AND thpsp.PROD_CD (+)= tmp.PROD_CD
        AND tmpsp.STORE_CD (+)= tmp.STORE_CD
        AND tmpsp.PROD_CD (+)= tmp.PROD_CD
        <if test='prodCd != null and prodCd.toString() != ""'>
            AND tmp.PROD_CD LIKE '%'||#{prodCd}||'%'
        </if>
        <if test='prodNm != null and prodNm.toString() != ""'>
            AND tmp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        AND thps.PROD_CD IS NOT NULL
        AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
            )
        ORDER BY tmp.PROD_CD ASC
    </select>

    <!-- 매장 미적용 상품 조회 -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_HQ_PRODUCT_STORE
        PARAM    : prodVO
        COMMENTS : 매장 미적용 대상인 상품을 조회한다.
    -->
    <select id="getStoreProdNoRegList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getStoreProdNoRegList */
        SELECT
        thp.PROD_CD,
        thp.PROD_NM,
        thpsp.SALE_UPRC AS HQ_SALE_UPRC,
        tmpsp.SALE_UPRC AS STORE_SALE_UPRC,
        -- 판매단가
        CASE WHEN tmpsp.SALE_UPRC IS NULL THEN thpsp.SALE_UPRC
        ELSE tmpsp.SALE_UPRC END AS SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.SALE_UPRC IS NULL THEN thpsp.SALE_UPRC
        ELSE tmpsp.SALE_UPRC END AS SALE_UPRC_B,
        -- 내점가
        CASE WHEN tmpsp.STIN_SALE_UPRC IS NULL THEN thpsp.STIN_SALE_UPRC
        ELSE tmpsp.STIN_SALE_UPRC END AS STIN_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.STIN_SALE_UPRC IS NULL THEN thpsp.STIN_SALE_UPRC
        ELSE tmpsp.STIN_SALE_UPRC END AS STIN_SALE_UPRC_B,
        -- 배달가
        CASE WHEN tmpsp.DLVR_SALE_UPRC IS NULL THEN thpsp.DLVR_SALE_UPRC
        ELSE tmpsp.DLVR_SALE_UPRC END AS DLVR_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.DLVR_SALE_UPRC IS NULL THEN thpsp.DLVR_SALE_UPRC
        ELSE tmpsp.DLVR_SALE_UPRC END AS DLVR_SALE_UPRC_B,
        -- 포장가
        CASE WHEN tmpsp.PACK_SALE_UPRC IS NULL THEN thpsp.PACK_SALE_UPRC
        ELSE tmpsp.PACK_SALE_UPRC END AS PACK_SALE_UPRC, -- 미등록매장은 매장판매가 우선, 없으면 본사판매가
        CASE WHEN tmpsp.PACK_SALE_UPRC IS NULL THEN thpsp.PACK_SALE_UPRC
        ELSE tmpsp.PACK_SALE_UPRC END AS PACK_SALE_UPRC_B,
        thp.PRC_CTRL_FG
        FROM TB_HQ_PRODUCT thp,
        (
        SELECT thp.HQ_OFFICE_CD ,
        thp.PROD_CD,
        thpsp.SALE_UPRC,
        thpsp.STIN_SALE_UPRC,
        thpsp.DLVR_SALE_UPRC,
        thpsp.PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT thp,
        (
        SELECT HQ_OFFICE_CD,
        PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT_SALE_PRICE
        WHERE 1=1
        <![CDATA[
                                       AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                       AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                     ]]>
        AND SALE_PRC_FG = '1'
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        GROUP BY HQ_OFFICE_CD, PROD_CD
        ) thpsp
        WHERE 1=1
        AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
        AND thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        AND thpsp.PROD_CD = thp.PROD_CD
        ) thpsp,
        (
        SELECT thp.HQ_OFFICE_CD ,
        tmpsp.STORE_CD,
        thp.PROD_CD,
        tmpsp.SALE_UPRC,
        tmpsp.STIN_SALE_UPRC,
        tmpsp.DLVR_SALE_UPRC,
        tmpsp.PACK_SALE_UPRC
        FROM TB_HQ_PRODUCT thp,
        (
        SELECT STORE_CD,
        PROD_CD,
        MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
        MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
        MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
        MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
        FROM TB_MS_PRODUCT_SALE_PRICE
        WHERE 1=1
        <![CDATA[
                                   AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                   AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                                ]]>
        AND SALE_PRC_FG = '1'
        AND STORE_CD = #{storeCd}
        GROUP BY STORE_CD, PROD_CD
        ) tmpsp
        WHERE 1=1
        AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tmpsp.STORE_CD = #{storeCd}
        AND tmpsp.STORE_CD IN (SELECT store_cd FROM TB_MS_STORE  WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD)
        AND tmpsp.PROD_CD = thp.PROD_CD
        ) tmpsp
        WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
        --AND thp.USE_YN = 'Y'
        AND thpsp.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
        AND thpsp.PROD_CD (+) = thp.PROD_CD
        AND tmpsp.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
        AND tmpsp.PROD_CD (+)= thp.PROD_CD
        AND thp.PROD_CD NOT IN (
        SELECT tmp.PROD_CD
        FROM TB_MS_PRODUCT tmp,
        (  SELECT STORE_CD,
        PROD_CD
        FROM TB_HQ_PRODUCT_STORE
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND STORE_CD = #{storeCd} ) thps
        WHERE thps.STORE_CD (+)= tmp.STORE_CD
        AND thps.PROD_CD (+)= tmp.PROD_CD
        AND tmp.STORE_CD = #{storeCd}
        --AND tmp.USE_YN = 'Y'
        AND thps.PROD_CD IS NOT NULL
        )
        <if test='prodCd != null and prodCd.toString() != ""'>
            AND thp.PROD_CD LIKE '%'||#{prodCd}||'%'
        </if>
        <if test='prodNm != null and prodNm.toString() != ""'>
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%'
        </if>
        <if test='hqBrandCd != null and hqBrandCd.toString() != ""'>
            AND thp.HQ_BRAND_CD = #{hqBrandCd}
        </if>
        <if test='prodClassCd != null and prodClassCd.toString() != ""'>
            AND thp.PROD_CLASS_CD IN (
                                        SELECT  PROD_CLASS_CD
                                        FROM    TB_HQ_PRODUCT_CLASS
                                        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                                        START WITH
                                        PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
                                        CONNECT BY
                                        PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
                                    )
        </if>
        <if test='originalStore != null and originalStore.toString() != ""'>
            AND thp.PROD_CD IN (
                                SELECT  PROD_CD
                                FROM    TB_MS_PRODUCT
                                WHERE   STORE_CD = #{originalStore}
                                AND     USE_YN = 'Y'
                                )
        </if>
        AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
            )
        ORDER BY thp.PROD_CD ASC
    </select>

    <!-- 본사상품 매장 등록 시, 본사에 포함되는 모든 매장에 상품분류 추가(본사 상품분류 > 매장 상품분류)-->
    <!--
          TABLE    : TB_HQ_PRODUCT_CLASS, TB_MS_PRODUCT_CLASS
          PARAM    : prodVO
          COMMENTS : 본사상품 매장 등록 시, 본사에 포함되는 모든 매장에 상품분류 추가(본사 상품분류 > 매장 상품분류)
    -->
    <select  id="insertClsHqToStore" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.insertClsHqToStore */
        {
            CALL PKG_HQ_PRODUCT_CLASS.SP_HQ_PRODUCT_CLASS_I02
            (
                #{hqOfficeCd},
                #{prodClassCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도 상품분류 추가 or 수정(본사 상품분류 > 매장 상품분류)-->
    <!--
          TABLE    : TB_HQ_PRODUCT_CLASS, TB_MS_PRODUCT_CLASS
          PARAM    : prodVO
          COMMENTS : 본사상품 매장 등록 시, 해당 상품을 사용하는 매장에도 상품분류 추가 or 수정(본사 상품분류 > 매장 상품분류)
    -->
    <select  id="updateClsHqToStore" statementType="CALLABLE" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.updateClsHqToStore */
        {
            CALL PKG_HQ_PRODUCT_CLASS.SP_HQ_PRODUCT_CLASS_U02
            (
                #{hqOfficeCd},
                #{storeCd},
                #{prodCd},
                #{prodClassCd},
                #{workMode},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 상품 이미지 저장시 파일여부 체크 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        COMMENTS : [본사]상품 이미지, [매장]상품 이미지
    -->
    <select id="getProdImageFileSaveCheck" parameterType="prodVO" resultType="String">
        /* ProdMapper.getProdImageFileSaveCheck */
        <choose>
            <when test='orgnFg != null and orgnFg != ""'>
                <!-- 본사 -->
                <if test='orgnFg == "HQ"'>
                    SELECT COUNT(*)
                    FROM TB_HQ_PRODUCT_IMAGE thpi
                    WHERE 1=1
                    AND thpi.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpi.PROD_CD = #{prodCd}
                    AND thpi.IMG_FG = '001'
                </if>
                <!-- 매장 -->
                <if test='orgnFg == "STORE"'>
                    SELECT COUNT(*)
                    FROM TB_MS_PRODUCT_IMAGE tmpi
                    WHERE 1=1
                    AND tmpi.STORE_CD = #{storeCd}
                    AND tmpi.PROD_CD = #{prodCd}
                    AND tmpi.IMG_FG = '001'
                </if>
            </when>
        </choose>
    </select>

    <!-- 상품 신규등록,수정 팝업 - 상품 이미지 저장 insert -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        COMMENTS : [본사]상품 이미지, [매장]상품 이미지
    -->
    <insert id="getProdImageFileSaveInsert" parameterType="prodVO">
        /* ProdMapper.getProdImageFileSaveInsert */
        <choose>
            <when test='orgnFg != null and orgnFg != ""'>
                <!-- 본사 -->
                <if test='orgnFg == "HQ"'>
                    INSERT INTO TB_HQ_PRODUCT_IMAGE
                    (
                    HQ_OFFICE_CD,
                    PROD_CD,
                    IMG_FG,
                    IMG_URL,
                    IMG_FILE_NM,
                    IMG_CHG_DT,
                    REMARK,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                    ) VALUES (
                    #{hqOfficeCd},
                    #{prodCd},
                    '001', --001: 기본이미지, 002: KIOSK이미지, 003: DID이미지
                    #{filePath},
                    #{fileNm} ||'.'|| #{fileExt},
                    #{modDt},
                    '',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                    )
                </if>
                <!-- 매장 -->
                <if test='orgnFg == "STORE"'>
                    INSERT INTO TB_MS_PRODUCT_IMAGE
                    (
                    STORE_CD,
                    PROD_CD,
                    IMG_FG,
                    IMG_URL,
                    IMG_FILE_NM,
                    IMG_CHG_DT,
                    REMARK,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID
                    ) VALUES (
                    #{storeCd},
                    #{prodCd},
                    '001', --001: 기본이미지, 002: KIOSK이미지, 003: DID이미지
                    #{filePath},
                    #{fileNm} ||'.'|| #{fileExt},
                    #{modDt},
                    '',
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId}
                    )
                </if>
            </when>
        </choose>
    </insert>

    <!-- 상품 신규등록,수정 팝업 - 상품 이미지 저장 update -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        COMMENTS : [본사]상품 이미지, [매장]상품 이미지
    -->
    <update id="getProdImageFileSaveUpdate" parameterType="prodVO">
        /* ProdMapper.getProdImageFileSaveUpdate */
        <choose>
            <when test='orgnFg != null and orgnFg != ""'>
                <!-- 본사 -->
                <if test='orgnFg == "HQ"'>
                    UPDATE
                    TB_HQ_PRODUCT_IMAGE
                    SET
                    IMG_URL = #{filePath},
                    IMG_FILE_NM = #{fileNm} ||'.'|| #{fileExt},
                    IMG_CHG_DT = #{modDt},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                    WHERE 1=1
                    AND HQ_OFFICE_CD = #{hqOfficeCd}
                    AND PROD_CD = #{prodCd}
                    AND IMG_FG = '001'
                </if>
                <!-- 매장 -->
                <if test='orgnFg == "STORE"'>
                    UPDATE
                    TB_MS_PRODUCT_IMAGE
                    SET
                    IMG_URL = #{filePath},
                    IMG_FILE_NM = #{fileNm} ||'.'|| #{fileExt},
                    IMG_CHG_DT = #{modDt},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId}
                    WHERE 1=1
                    AND STORE_CD = #{storeCd}
                    AND PROD_CD = #{prodCd}
                    AND IMG_FG = '001'
                </if>
            </when>
        </choose>
    </update>

    <!-- 상품 신규등록,수정 팝업 - 상품 이미지 저장 delete -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        COMMENTS : [본사]상품 이미지, [매장]상품 이미지
    -->
    <delete id="getProdImageFileSaveDelete" parameterType="prodVO">
        /* ProdMapper.getProdImageFileSaveDelete */
        <choose>
            <when test='orgnFg != null and orgnFg != ""'>
                <!-- 본사 -->
                <if test='orgnFg == "HQ"'>
                    DELETE
                    TB_HQ_PRODUCT_IMAGE
                    WHERE 1=1
                    AND HQ_OFFICE_CD = #{hqOfficeCd}
                    AND PROD_CD = #{prodCd}
                    AND IMG_FG = '001'
                </if>
                <!-- 매장 -->
                <if test='orgnFg == "STORE"'>
                    DELETE
                    TB_MS_PRODUCT_IMAGE
                    WHERE 1=1
                    AND STORE_CD = #{storeCd}
                    AND PROD_CD = #{prodCd}
                    AND IMG_FG = '001'
                </if>
            </when>
        </choose>
    </delete>

    <!-- 상품 이미지 삭제시 파일명 가져오기 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        COMMENTS : [본사]상품 이미지, [매장]상품 이미지
    -->
    <select id="getProdImageFileSaveImgFileNm" parameterType="prodVO" resultType="String">
        /* ProdMapper.getProdImageFileSaveImgFileNm */
        <choose>
            <when test='orgnFg != null and orgnFg != ""'>
                <!-- 본사 -->
                <if test='orgnFg == "HQ"'>
                    SELECT
                    SUBSTR(thpi.IMG_URL, INSTR(thpi.IMG_URL, '\prod_img')) || thpi.IMG_FILE_NM AS PATH_FULL
                    --                     SUBSTR(thpi.IMG_URL, INSTR(thpi.IMG_URL, '\A0001')) || thpi.IMG_FILE_NM AS PATH_FULL --로컬 테스트시
                    FROM TB_HQ_PRODUCT_IMAGE thpi
                    WHERE 1=1
                    AND thpi.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpi.PROD_CD = #{prodCd}
                    AND thpi.IMG_FG = '001'
                </if>
                <!-- 매장 -->
                <if test='orgnFg == "STORE"'>
                    SELECT
                    SUBSTR(tmpi.IMG_URL, INSTR(tmpi.IMG_URL, '\prod_img')) || tmpi.IMG_FILE_NM AS PATH_FULL
                    --                     SUBSTR(tmpi.IMG_URL, INSTR(tmpi.IMG_URL, '\S000002')) || tmpi.IMG_FILE_NM AS PATH_FULL --로컬 테스트시
                    FROM TB_MS_PRODUCT_IMAGE tmpi
                    WHERE 1=1
                    AND tmpi.STORE_CD = #{storeCd}
                    AND tmpi.PROD_CD = #{prodCd}
                    AND tmpi.IMG_FG = '001'
                </if>
            </when>
        </choose>
    </select>

    <!-- 미적용 상품 거래처 조회 팝업 - 조회 -->
    <!--
        TABLE    : TB_HQ_VENDOR_PROD, TB_HQ_VENDOR, TB_MS_VENDOR_PROD, TB_MS_VENDOR
        COMMENTS : [본사]거래처별_취급상품, [본사]상품_거래처, [매장]거래처별_취급상품, [매장]상품_거래처
    -->
    <select id="getSearchNoProdVendrList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSearchNoProdVendrList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thv.VENDR_CD,
                thv.VENDR_NM
                FROM TB_HQ_VENDOR thv
                WHERE 1=1
                AND thv.HQ_OFFICE_CD = #{hqOfficeCd}
                <if test='chkVendrCd != null and chkVendrCd != ""'>
                    AND thv.VENDR_CD NOT IN
                    <foreach collection="vendrCdList" item="item" open="(" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
                ORDER BY thv.VENDR_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmv.VENDR_CD,
                tmv.VENDR_NM
                FROM TB_MS_VENDOR tmv
                WHERE 1=1
                AND tmv.STORE_CD = #{storeCd}
                <if test='chkVendrCd != null and chkVendrCd != ""'>
                    AND tmv.VENDR_CD NOT IN
                    <foreach collection="vendrCdList" item="item" open="(" separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
                ORDER BY tmv.VENDR_CD
            </when>
        </choose>
    </select>

    <!-- 거래처 삭제 -->
    <!--
        TABLE    : TB_HQ_VENDOR_PROD, TB_MS_VENDOR_PROD
        COMMENTS : [본사]상품_거래처별_취급상품, [매장]상품_거래처별_취급상품
    -->
    <delete id="getVendorProdSaveUpdate" parameterType="prodVO">
        /* ProdMapper.getVendorProdSaveUpdate */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE
                TB_HQ_VENDOR_PROD
                SET
                USE_YN = 'N',
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHERE 1=1
                AND HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE
                TB_MS_VENDOR_PROD
                SET
                USE_YN = 'N',
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </delete>

    <!-- 거래처 저장 -->
    <!--
        TABLE    : TB_HQ_VENDOR_PROD, TB_MS_VENDOR_PROD
        COMMENTS : [본사]상품_거래처별_취급상품, [매장]상품_거래처별_취급상품
    -->
    <insert id="getVendorProdSaveInsert" parameterType="prodVO">
        /* ProdMapper.getVendorProdSaveInsert */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                MERGE INTO TB_HQ_VENDOR_PROD thvp
                USING DUAL
                ON (thvp.HQ_OFFICE_CD = #{hqOfficeCd} AND thvp.VENDR_CD = #{vendrCd} AND thvp.PROD_CD = #{prodCd})
                WHEN MATCHED THEN
                UPDATE
                SET
                thvp.SPLY_UPRC = #{splyUprc},
                thvp.USE_YN = 'Y',
                thvp.MOD_DT = #{modDt},
                thvp.MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                HQ_OFFICE_CD,
                HQ_BRAND_CD,
                VENDR_CD,
                PROD_CD,
                SPLY_UPRC,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                ) VALUES (
                #{hqOfficeCd},
                '0000000', --HQ_BRAND_CD
                #{vendrCd},
                #{prodCd},
                #{splyUprc},
                'Y',
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                MERGE INTO TB_MS_VENDOR_PROD tmvp
                USING DUAL
                ON (tmvp.STORE_CD = #{storeCd} AND tmvp.VENDR_CD = #{vendrCd} AND tmvp.PROD_CD = #{prodCd})
                WHEN MATCHED THEN
                UPDATE
                SET
                tmvp.SPLY_UPRC = #{splyUprc},
                tmvp.USE_YN = 'Y',
                tmvp.MOD_DT = #{modDt},
                tmvp.MOD_ID = #{modId}
                WHEN NOT MATCHED THEN
                INSERT
                (
                STORE_CD,
                VENDR_CD,
                PROD_CD,
                SPLY_UPRC,
                USE_YN,
                REG_DT,
                REG_ID,
                MOD_DT,
                MOD_ID
                ) VALUES (
                #{storeCd},
                #{vendrCd},
                #{prodCd},
                #{splyUprc},
                'Y',
                #{regDt},
                #{regId},
                #{modDt},
                #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 사이드메뉴관리의 선택상품에 등록된 상품인지 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        COMMENTS : [본사]상품_사이드선택_상품, [매장]상품_사이드선택_상품
    -->
    <select id="getSideProdChk" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSideProdChk */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT *
                FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp
                WHERE 1=1
                AND thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thpsp.PROD_CD = #{prodCd}
                AND thpsp.USE_YN = 'Y'
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT *
                FROM TB_MS_PRODUCT_SDSEL_PROD tmpsp
                WHERE 1=1
                AND tmpsp.STORE_CD = #{storeCd}
                AND tmpsp.PROD_CD = #{prodCd}
                AND tmpsp.USE_YN = 'Y'
            </when>
        </choose>
    </select>


    <!-- 본사환경설정 [1111 사이드상품자동생성] 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getHqEnvCodeSide" parameterType="prodVO" resultType="String">
        /* ProdMapper.getHqEnvCodeSide */
        SELECT
        NVL(the.ENVST_VAL, 0) AS ENVST_VAL
        FROM TB_HQ_OFFICE tho,
        TB_HQ_ENVST the,
        TB_CM_ENVST tce
        WHERE 1=1
        AND tho.HQ_OFFICE_CD = #{hqOfficeCd}
        AND tce.ENVST_CD = '1111'
        AND the.HQ_OFFICE_CD (+)= tho.HQ_OFFICE_CD
        AND the.ENVST_CD (+)= tce.ENVST_CD
    </select>

    <!-- 사이드메뉴관리의 선택상품에 등록된 상품 리스트 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getHqSdselProd" parameterType="prodVO" resultType="String">
        /* ProdMapper.getHqSdselProd */
        SELECT
        LISTAGG(PROD_CD, ',') WITHIN GROUP (ORDER BY PROD_CD) AS PROD_CD
        FROM
        (
            SELECT
            DISTINCT thpsp.PROD_CD
            FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp,
            TB_HQ_PRODUCT_SDSEL_CLASS thpsc
            WHERE 1=1
            AND thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
            AND thpsp.USE_YN = 'Y'
            AND thpsc.SDSEL_GRP_CD = #{sdselGrpCd}
            AND thpsc.USE_YN = 'Y'
            AND thpsc.HQ_OFFICE_CD = thpsp.HQ_OFFICE_CD
            AND thpsc.SDSEL_CLASS_CD = thpsp.SDSEL_CLASS_CD
        )
        ORDER BY PROD_CD
    </select>

    <!-- 매장 상품저장시 등록매장 테이블에도 저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_STORE
        COMMENTS :
    -->
    <insert id="insertHqProdStoreTotal" parameterType="prodVO" >
        /* USE : ProdMapper.insertHqProdStoreTotal */
        MERGE INTO TB_HQ_PRODUCT_STORE A
        USING
        (
            SELECT
            thp.HQ_OFFICE_CD,
            tms.STORE_CD,
            thp.PROD_CD,
            #{regDt} AS REG_DT,
            #{regId} AS REG_ID,
            #{modDt} AS MOD_DT,
            #{modId} AS MOD_ID
            FROM
            (
                  SELECT *
                  FROM TB_HQ_PRODUCT thp
                  WHERE 1=1
                  AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                  AND thp.PROD_CD = #{prodCd}
            ) thp,
            TB_MS_STORE tms
            WHERE 1=1
            AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tms.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        ) B
        ON  (
                A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                AND A.STORE_CD = B.STORE_CD
                AND A.PROD_CD = B.PROD_CD
            )
        WHEN NOT MATCHED THEN
            INSERT (
                A.HQ_OFFICE_CD,
                A.PROD_CD,
                A.STORE_CD,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID
            ) VALUES (
                B.HQ_OFFICE_CD,
                B.PROD_CD,
                B.STORE_CD,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID
            )
    </insert>

    <!-- 매장 상품저장시 등록매장 테이블에도 저장 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_STORE
        COMMENTS :
    -->
    <insert id="insertHqProdStore" parameterType="prodVO" >
        /* USE : ProdMapper.insertHqProdStore */
        MERGE INTO TB_HQ_PRODUCT_STORE A
        USING
        (
            SELECT
            HQ_OFFICE_CD,
            #{storeCd} AS STORE_CD,
            PROD_CD,
            #{regDt} AS REG_DT,
            #{regId} AS REG_ID,
            #{modDt} AS MOD_DT,
            #{modId} AS MOD_ID
            FROM TB_HQ_PRODUCT
            WHERE 1=1
            AND HQ_OFFICE_CD = #{hqOfficeCd}
            AND PROD_CD = #{prodCd}
        ) B
        ON  (
                A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                AND A.STORE_CD = B.STORE_CD
                AND A.PROD_CD = B.PROD_CD
            )
        WHEN NOT MATCHED THEN
            INSERT (
                A.HQ_OFFICE_CD,
                A.PROD_CD,
                A.STORE_CD,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID
            ) VALUES (
                B.HQ_OFFICE_CD,
                B.PROD_CD,
                B.STORE_CD,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID
            )
    </insert>

    <!-- 본사 상품등록시 선택한 사이드메뉴에 걸린 상품 매장에 저장 -->
    <!--
        TABLE    : TB_MS_PRODUCT
        COMMENTS :
    -->
    <insert id="insertHqSdselProdStoreTotal" parameterType="prodVO" >
        /* USE : ProdMapper.insertHqSdselProdStoreTotal */
        MERGE INTO TB_MS_PRODUCT A
        USING
        (
            SELECT
            tms.STORE_CD,
            thp.PROD_CD,
            thp.PROD_NM,
            thp.HQ_BRAND_CD,
            thp.PROD_CLASS_CD,
            thp.CORNR_CD,
            thp.ORGPLCE_CD,
            thp.SDATTR_CLASS_CD,
            thp.SDSEL_GRP_CD,
            thp.POINT_SAVE_YN,
            thp.PROD_DC_FG,
            thp.VAT_FG,
            thp.PROD_TIP_YN,
            thp.PROD_PACK_AMT,
            thp.PROD_DLVR_AMT,
            thp.PROD_TYPE_FG,
            thp.SALE_PROD_YN,
            thp.STOCK_PROD_YN,
            thp.SIDE_PROD_YN,
            thp.SET_PROD_FG,
            thp.PRC_CTRL_FG,
            thp.COST_UPRC,
            thp.LAST_COST_UPRC,
            thp.SPLY_UPRC,
            thp.SPLY_UPRC_USE_YN,
            thp.PO_PROD_FG,
            thp.PO_UNIT_FG,
            thp.PO_UNIT_QTY,
            thp.PO_UNIT_ALLOW_FG,
            thp.PO_MIN_QTY,
            thp.SAFE_STOCK_QTY,
            thp.STOCK_UNIT_FG,
            thp.USE_YN,
            thp.REMARK,
            #{regDt} AS REG_DT,
            #{regId} AS REG_ID,
            #{modDt} AS MOD_DT,
            #{modId} AS MOD_ID,
            'H' AS REG_FG,
            MAP_PROD_CD,
            thp.DEPOSIT_CUP_FG,
            thp.POINT_USE_YN,
            thp.DC_YN
            FROM
            (
                  SELECT *
                  FROM TB_HQ_PRODUCT thp
                  WHERE 1=1
                  AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                  AND thp.PROD_CD = #{prodCd}
            ) thp,
            TB_MS_STORE tms
            WHERE 1=1
            AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tms.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
        ) B
        ON  (
                A.STORE_CD = B.STORE_CD
                AND A.PROD_CD = B.PROD_CD
            )
        WHEN MATCHED THEN
            UPDATE
            SET
            PROD_NM = B.PROD_NM,
            HQ_BRAND_CD = B.HQ_BRAND_CD,
            PROD_CLASS_CD = B.PROD_CLASS_CD,
            CORNR_CD = B.CORNR_CD,
            ORGPLCE_CD = B.ORGPLCE_CD,
            SDATTR_CLASS_CD = B.SDATTR_CLASS_CD,
            SDSEL_GRP_CD = B.SDSEL_GRP_CD,
            POINT_SAVE_YN = B.POINT_SAVE_YN,
            PROD_DC_FG = B.PROD_DC_FG,
            VAT_FG = B.VAT_FG,
            PROD_TIP_YN = B.PROD_TIP_YN,
            PROD_PACK_AMT = B.PROD_PACK_AMT,
            PROD_DLVR_AMT = B.PROD_DLVR_AMT,
            PROD_TYPE_FG = B.PROD_TYPE_FG,
            SALE_PROD_YN = B.SALE_PROD_YN,
            STOCK_PROD_YN = B.STOCK_PROD_YN,
            SIDE_PROD_YN = B.SIDE_PROD_YN,
            SET_PROD_FG = B.SET_PROD_FG,
            PRC_CTRL_FG = B.PRC_CTRL_FG,
            COST_UPRC = B.COST_UPRC,
            LAST_COST_UPRC = B.LAST_COST_UPRC,
            SPLY_UPRC = B.SPLY_UPRC,
            SPLY_UPRC_USE_YN = B.SPLY_UPRC_USE_YN,
            PO_PROD_FG = B.PO_PROD_FG,
            PO_UNIT_FG = B.PO_UNIT_FG,
            PO_UNIT_QTY = B.PO_UNIT_QTY,
            PO_UNIT_ALLOW_FG = B.PO_UNIT_ALLOW_FG,
            PO_MIN_QTY = B.PO_MIN_QTY,
            SAFE_STOCK_QTY = B.SAFE_STOCK_QTY,
            STOCK_UNIT_FG = B.STOCK_UNIT_FG,
            USE_YN = B.USE_YN,
            REMARK = B.REMARK,
            MOD_DT = B.MOD_DT,
            MOD_ID = B.MOD_ID,
            DEPOSIT_CUP_FG = B.DEPOSIT_CUP_FG,
            POINT_USE_YN = B.POINT_USE_YN,
            DC_YN = B.DC_YN
        WHEN NOT MATCHED THEN
            INSERT (
                A.STORE_CD,
                A.PROD_CD,
                A.PROD_NM,
                A.HQ_BRAND_CD,
                A.PROD_CLASS_CD,
                A.CORNR_CD,
                A.ORGPLCE_CD,
                A.SDATTR_CLASS_CD,
                A.SDSEL_GRP_CD,
                A.POINT_SAVE_YN,
                A.PROD_DC_FG,
                A.VAT_FG,
                A.PROD_TIP_YN,
                A.PROD_PACK_AMT,
                A.PROD_DLVR_AMT,
                A.PROD_TYPE_FG,
                A.SALE_PROD_YN,
                A.STOCK_PROD_YN,
                A.SIDE_PROD_YN,
                A.SET_PROD_FG,
                A.PRC_CTRL_FG,
                A.COST_UPRC,
                A.LAST_COST_UPRC,
                A.SPLY_UPRC,
                A.SPLY_UPRC_USE_YN,
                A.PO_PROD_FG,
                A.PO_UNIT_FG,
                A.PO_UNIT_QTY,
                A.PO_UNIT_ALLOW_FG,
                A.PO_MIN_QTY,
                A.SAFE_STOCK_QTY,
                A.STOCK_UNIT_FG,
                A.USE_YN,
                A.REMARK,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID,
                A.REG_FG,
                A.MAP_PROD_CD,
                A.DEPOSIT_CUP_FG,
                A.POINT_USE_YN,
                A.DC_YN
            ) VALUES (
                B.STORE_CD,
                B.PROD_CD,
                B.PROD_NM,
                B.HQ_BRAND_CD,
                B.PROD_CLASS_CD,
                B.CORNR_CD,
                B.ORGPLCE_CD,
                B.SDATTR_CLASS_CD,
                B.SDSEL_GRP_CD,
                B.POINT_SAVE_YN,
                B.PROD_DC_FG,
                B.VAT_FG,
                B.PROD_TIP_YN,
                B.PROD_PACK_AMT,
                B.PROD_DLVR_AMT,
                B.PROD_TYPE_FG,
                B.SALE_PROD_YN,
                B.STOCK_PROD_YN,
                B.SIDE_PROD_YN,
                B.SET_PROD_FG,
                B.PRC_CTRL_FG,
                B.COST_UPRC,
                B.LAST_COST_UPRC,
                B.SPLY_UPRC,
                B.SPLY_UPRC_USE_YN,
                B.PO_PROD_FG,
                B.PO_UNIT_FG,
                B.PO_UNIT_QTY,
                B.PO_UNIT_ALLOW_FG,
                B.PO_MIN_QTY,
                B.SAFE_STOCK_QTY,
                B.STOCK_UNIT_FG,
                B.USE_YN,
                B.REMARK,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID,
                B.REG_FG,
                B.MAP_PROD_CD,
                B.DEPOSIT_CUP_FG,
                B.POINT_USE_YN,
                B.DC_YN
            )
    </insert>

    <!-- 본사 상품등록시 선택한 사이드메뉴에 걸린 상품 바코드 매장에 저장 -->
    <!--
        TABLE    : TB_MS_PRODUCT_BARCD
        COMMENTS :
    -->
    <insert id="insertHqSdselProdStoreBarcdTotal" parameterType="prodVO" >
        /* USE : ProdMapper.insertHqSdselProdStoreBarcdTotal */
        MERGE INTO TB_MS_PRODUCT_BARCD A
        USING
        (
            SELECT
            tms.STORE_CD,
            thpb.PROD_CD,
            thpb.BARCD_CD,
            thpb.BARCD_NM,
            thpb.UNIT_QTY,
            #{regDt} AS REG_DT,
            #{regId} AS REG_ID,
            #{modDt} AS MOD_DT,
            #{modId} AS MOD_ID
            FROM
            (
                  SELECT *
                  FROM TB_HQ_PRODUCT_BARCD thpb
                  WHERE 1=1
                  AND thpb.HQ_OFFICE_CD = #{hqOfficeCd}
                  AND thpb.PROD_CD = #{prodCd}
                  AND thpb.BARCD_CD = #{barCd}
            ) thpb,
            TB_MS_STORE tms
            WHERE 1=1
            AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tms.HQ_OFFICE_CD = thpb.HQ_OFFICE_CD
        ) B
        ON  (
                A.STORE_CD = B.STORE_CD
                AND A.PROD_CD = B.PROD_CD
                AND A.BARCD_CD = B.BARCD_CD
            )
        WHEN MATCHED THEN
            UPDATE
            SET
            BARCD_NM = B.BARCD_NM,
            UNIT_QTY = B.UNIT_QTY,
            MOD_DT = B.MOD_DT,
            MOD_ID = B.MOD_ID
        WHEN NOT MATCHED THEN
            INSERT (
                A.STORE_CD,
                A.PROD_CD,
                A.BARCD_CD,
                A.BARCD_NM,
                A.UNIT_QTY,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID
            ) VALUES (
                B.STORE_CD,
                B.PROD_CD,
                B.BARCD_CD,
                B.BARCD_NM,
                B.UNIT_QTY,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID
            )
    </insert>

    <!-- 본사 상품등록시 선택한 사이드메뉴에 걸린 상품 분류 매장에 저장 -->
    <!--
        TABLE    : TB_MS_PRODUCT_CLASS
        COMMENTS :
    -->
    <insert id="insertHqSdselProdStoreClassTotal" parameterType="prodVO" >
        /* USE : ProdMapper.insertHqSdselProdStoreClassTotal */
        MERGE INTO TB_MS_PRODUCT_CLASS A
        USING
        (
            SELECT
            tms.STORE_CD,
            thpc.PROD_CLASS_CD,
            thpc.PROD_CLASS_NM,
            thpc.P_PROD_CLASS_CD,
            #{regDt} AS REG_DT,
            #{regId} AS REG_ID,
            #{modDt} AS MOD_DT,
            #{modId} AS MOD_ID,
            thpc.CLS_LEVEL_CD
            FROM
            (
                  SELECT *
                  FROM TB_HQ_PRODUCT_CLASS thpc
                  WHERE 1=1
                  AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                  AND thpc.PROD_CLASS_CD = #{prodClassCd}
            ) thpc,
            TB_MS_STORE tms
            WHERE 1=1
            AND tms.HQ_OFFICE_CD = #{hqOfficeCd}
            AND tms.HQ_OFFICE_CD = thpc.HQ_OFFICE_CD
        ) B
        ON  (
                A.STORE_CD = B.STORE_CD
                AND A.PROD_CLASS_CD = B.PROD_CLASS_CD
            )
        WHEN MATCHED THEN
            UPDATE
            SET
            PROD_CLASS_NM = B.PROD_CLASS_NM,
            MOD_DT = B.MOD_DT,
            MOD_ID = B.MOD_ID
        WHEN NOT MATCHED THEN
            INSERT (
                A.STORE_CD,
                A.PROD_CLASS_CD,
                A.PROD_CLASS_NM,
                A.P_PROD_CLASS_CD,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID,
                A.CLS_LEVEL_CD
            ) VALUES (
                B.STORE_CD,
                B.PROD_CLASS_CD,
                B.PROD_CLASS_NM,
                B.P_PROD_CLASS_CD,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID,
                B.CLS_LEVEL_CD
            )
    </insert>

    <!-- 본사 상품등록시 선택한 사이드메뉴에 걸린 상품 분류 매장에 저장 -->
    <!--
        TABLE    : TB_MS_PRODUCT_CLASS
        COMMENTS :
    -->
    <insert id="insertHqSdselProdStoreClass" parameterType="prodVO" >
        /* USE : ProdMapper.insertHqSdselProdStoreClass */
        MERGE INTO TB_MS_PRODUCT_CLASS A
        USING
        (
            SELECT
            #{storeCd} AS STORE_CD,
            PROD_CLASS_CD,
            PROD_CLASS_NM,
            P_PROD_CLASS_CD,
            #{regDt} AS REG_DT,
            #{regId} AS REG_ID,
            #{modDt} AS MOD_DT,
            #{modId} AS MOD_ID,
            CLS_LEVEL_CD
            FROM TB_HQ_PRODUCT_CLASS
            WHERE 1=1
            AND HQ_OFFICE_CD = #{hqOfficeCd}
            AND PROD_CLASS_CD = #{prodClassCd}
        ) B
        ON  (
                A.STORE_CD = B.STORE_CD
                AND A.PROD_CLASS_CD = B.PROD_CLASS_CD
            )
        WHEN MATCHED THEN
            UPDATE
            SET
            PROD_CLASS_NM = B.PROD_CLASS_NM,
            MOD_DT = B.MOD_DT,
            MOD_ID = B.MOD_ID
        WHEN NOT MATCHED THEN
            INSERT (
                A.STORE_CD,
                A.PROD_CLASS_CD,
                A.PROD_CLASS_NM,
                A.P_PROD_CLASS_CD,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID,
                A.CLS_LEVEL_CD
            ) VALUES (
                B.STORE_CD,
                B.PROD_CLASS_CD,
                B.PROD_CLASS_NM,
                B.P_PROD_CLASS_CD,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID,
                B.CLS_LEVEL_CD
            )
    </insert>

    <!-- 프린터 리스트 - 조회 -->
    <!--
        TABLE    : TB_HQ_VENDOR_PROD, TB_HQ_VENDOR, TB_MS_VENDOR_PROD, TB_MS_VENDOR
        COMMENTS : [본사]거래처별_취급상품, [본사]상품_거래처, [매장]거래처별_취급상품, [매장]상품_거래처
    -->
    <select id="getKitchenprintList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getKitchenprintList */
        SELECT  tms.STORE_CD,
                tms.STORE_NM,
                tmp.PRTER_NO,
                tmp.PRTER_NM
          FROM  TB_MS_STORE tms,
                TB_MS_PRINTER tmp
         WHERE  tms.HQ_OFFICE_CD = #{hqOfficeCd}
            <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD = #{storeCd}
           </if>
            AND tmp.STORE_CD = tms.STORE_CD
            AND tmp.STORE_CD = tms.STORE_CD
       ORDER BY tms.STORE_CD, tmp.PRTER_NO
    </select>

    <!-- 안연결된 프린터 연결 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_PRICE
        PARAM    : prodKitchenprintLinkVO
        COMMENTS : 상품의 연결된 프린터를 저장한다.
    -->
    <insert id="kitchenprintLink" parameterType="prodVO">
        INSERT INTO TB_MS_PRINTER_PROD
        (
            STORE_CD,
            PRTER_NO,
            PROD_CD,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES (
               #{storeCd},
               #{prterNo},
               #{prodCd},
               #{regDt},
               #{regId},
               #{modDt},
               #{modId}
           )
    </insert>

    <!-- 브랜드 리스트 조회(선택 콤보박스용) -->
    <!--
        TABLE    : TB_HQ_BRAND, TB_MS_BRAND
        PARAM    : prodVO
        COMMENTS : 상품등록시 선택할 브랜드 목록을 가져온다.
    -->
    <select id="getBrandList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getBrandList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                HQ_BRAND_CD AS VALUE,
                HQ_BRAND_NM AS NAME
                FROM TB_HQ_BRAND
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND USE_YN = 'Y'
                AND (
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                        OR
                        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                    )
                ORDER BY HQ_BRAND_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                MS_BRAND_CD AS VALUE,
                MS_BRAND_NM AS NAME
                FROM TB_MS_BRAND
                WHERE STORE_CD = #{storeCd}
                AND USE_YN = 'Y'
                ORDER BY MS_BRAND_CD
            </when>
        </choose>
    </select>

    <!-- 브랜드 리스트 조회(선택 콤보박스용, 선택한 상품에서 현재 사용중인 브랜드 + 사용여부 'Y'인 브랜드) -->
    <!--
        TABLE    : TB_HQ_BRAND, TB_MS_BRAND
        PARAM    : prodVO
        COMMENTS : 상품등록시 선택할 브랜드 목록을 가져온다.
    -->
    <select id="getBrandList2" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getBrandList2 */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT A.VALUE,
                        A.NAME
                  FROM (
                             SELECT thp.HQ_BRAND_CD AS VALUE,
                                     thb.HQ_BRAND_NM  AS NAME
                               FROM TB_HQ_PRODUCT thp,
                                     TB_HQ_BRAND thb
                              WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                                AND thp.PROD_CD = #{prodCd}
                                AND thb.HQ_OFFICE_CD (+)= thp.HQ_OFFICE_CD
                                AND thb.HQ_BRAND_CD (+)= thp.HQ_BRAND_CD
                              UNION
                             SELECT HQ_BRAND_CD AS VALUE,
                                     HQ_BRAND_NM AS NAME
                               FROM TB_HQ_BRAND
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                AND USE_YN = 'Y'
                        ) A
                  ORDER
                      BY A.VALUE
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT A.VALUE,
                        A.NAME
                  FROM (
                            SELECT tmp.HQ_BRAND_CD AS VALUE,
                                    tmb.MS_BRAND_NM  AS NAME
                              FROM TB_MS_PRODUCT tmp,
                                    TB_MS_BRAND tmb
                              WHERE tmp.STORE_CD = #{storeCd}
                                AND tmp.PROD_CD = #{prodCd}
                                AND tmb.STORE_CD (+)= tmp.STORE_CD
                                AND tmb.MS_BRAND_CD (+)= tmp.HQ_BRAND_CD
                             UNION
                            SELECT MS_BRAND_CD AS VALUE,
                                    MS_BRAND_NM AS NAME
                              FROM TB_MS_BRAND
                             WHERE STORE_CD = #{storeCd}
                               AND USE_YN = 'Y'
                        ) A
                ORDER
                   BY A.VALUE
            </when>
        </choose>
    </select>

    <!-- 세트구성상품 팝업 - 구성내역 리스트 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT, TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 세트구성상품 구성내역을 조회한다.
    -->
    <select id="getSetConfigProdList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSetConfigProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT thpup.UNIT_PROD_CD,
                        thpup.UNIT_PROD_QTY,
                        thpup.DISP_SEQ,
                        thp.PROD_NM,
                        thp.PO_UNIT_FG,
                        thp.COST_UPRC
                  FROM TB_HQ_PRODUCT_UNITST_PROD thpup,
                        TB_HQ_PRODUCT thp
                 WHERE thpup.HQ_OFFICE_CD = #{hqOfficeCd}
                   AND thpup.PROD_CD = #{prodCd}
                   AND thp.HQ_OFFICE_CD = thpup.HQ_OFFICE_CD
                   AND thp.PROD_CD = thpup.UNIT_PROD_CD
                 ORDER
                    BY thpup.DISP_SEQ
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT tmpup.UNIT_PROD_CD,
                        tmpup.UNIT_PROD_QTY,
                        tmpup.DISP_SEQ,
                        tmp.PROD_NM,
                        tmp.PO_UNIT_FG,
                        tmp.COST_UPRC
                  FROM TB_MS_PRODUCT_UNITST_PROD tmpup,
                        TB_MS_PRODUCT tmp
                 WHERE tmpup.STORE_CD = #{storeCd}
                   AND tmpup.PROD_CD = #{prodCd}
                   AND tmp.STORE_CD = tmpup.STORE_CD
                   AND tmp.PROD_CD = tmpup.UNIT_PROD_CD
                 ORDER
                    BY tmpup.DISP_SEQ
            </when>
        </choose>
    </select>

    <!-- 세트구성상품 팝업 - 상품 리스트 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT, TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 세트구성상품 구성내역으로 등록할 상품 리스트를 조회한다.
    -->
    <select id="getSrchSetConfigProdList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSrchSetConfigProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT thp.PROD_CD AS UNIT_PROD_CD,
                        thp.PROD_NM,
                        thp.PO_UNIT_FG
                  FROM TB_HQ_PRODUCT thp
                 WHERE thp.HQ_OFFICE_CD = #{hqOfficeCd}
                   AND thp.SET_PROD_FG IN ('1', '4')
                   AND thp.USE_YN = 'Y'
                   AND thp.SALE_PROD_YN = 'Y'
                   AND thp.PROD_CD != #{prodCd}
                   AND thp.PROD_CD NOT IN (SELECT UNIT_PROD_CD FROM TB_HQ_PRODUCT_UNITST_PROD WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND PROD_CD = #{prodCd})
                <if test='prodNm != null and prodNm != ""'>
                    AND thp.PROD_NM LIKE '%' || #{prodNm} ||'%'
                </if>
                 ORDER
                    BY thp.PROD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT tmp.PROD_CD AS UNIT_PROD_CD,
                        tmp.PROD_NM,
                        tmp.PO_UNIT_FG
                 FROM TB_MS_PRODUCT tmp
                WHERE tmp.STORE_CD = #{storeCd}
                  AND tmp.SET_PROD_FG IN ('1', '4')
                  AND tmp.USE_YN = 'Y'
                  AND tmp.SALE_PROD_YN = 'Y'
                  AND tmp.PROD_CD != #{prodCd}
                  AND tmp.PROD_CD NOT IN (SELECT UNIT_PROD_CD FROM TB_MS_PRODUCT_UNITST_PROD WHERE STORE_CD = #{storeCd} AND PROD_CD = #{prodCd})
                <if test='prodNm != null and prodNm != ""'>
                  AND tmp.PROD_NM LIKE '%' || #{prodNm} ||'%'
                </if>
                <if test='storeProdUseFg != null and storeProdUseFg == "1"'>
                  AND tmp.REG_FG = 'H'
                </if>
                ORDER
                   BY tmp.PROD_CD
            </when>
        </choose>
    </select>

    <!-- 세트구성상품 팝업 - 상품 새 표기순번 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 세트구성상품을 등록하기 위해 새 표기순번을 조회한다.
    -->
    <select id="getSetConfigProdDispSeq" parameterType="prodVO" resultType="String">
        /* ProdMapper.getSetConfigProdDispSeq */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT NVL(MAX(DISP_SEQ), 0) + 1
                  FROM TB_HQ_PRODUCT_UNITST_PROD
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT NVL(MAX(DISP_SEQ), 0) + 1
                  FROM TB_MS_PRODUCT_UNITST_PROD
                 WHERE STORE_CD = #{storeCd}
                  AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 세트구성상품 팝업 - 구성내역 상품등록 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 구성내역 상품을 등록한다.
    -->
    <insert id="insertSetConfigProd" parameterType="prodVO">
        /* ProdMapper.insertSetConfigProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                INSERT INTO TB_HQ_PRODUCT_UNITST_PROD
                            (
                            HQ_OFFICE_CD,
                            PROD_CD,
                            UNIT_PROD_CD,
                            SET_PROD_FG,
                            UNIT_PROD_QTY,
                            DISP_SEQ,
                            REG_DT,
                            REG_ID,
                            MOD_DT,
                            MOD_ID
                ) VALUES (
                            #{hqOfficeCd},
                            #{prodCd},
                            #{unitProdCd},
                            #{setProdFg},
                            #{unitProdQty},
                            #{dispSeq},
                            #{regDt},
                            #{regId},
                            #{modDt},
                            #{modId}
                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                INSERT INTO TB_MS_PRODUCT_UNITST_PROD
                            (
                            STORE_CD,
                            PROD_CD,
                            UNIT_PROD_CD,
                            SET_PROD_FG,
                            UNIT_PROD_QTY,
                            DISP_SEQ,
                            REG_DT,
                            REG_ID,
                            MOD_DT,
                            MOD_ID
                ) VALUES (
                            #{storeCd},
                            #{prodCd},
                            #{unitProdCd},
                            #{setProdFg},
                            #{unitProdQty},
                            #{dispSeq},
                            #{regDt},
                            #{regId},
                            #{modDt},
                            #{modId}
                )
            </when>
        </choose>
    </insert>

    <!-- 세트구성상품 팝업 - 구성내역 상품수정 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 구성내역 상품을 수정한다.
    -->
    <update id="updateSetConfigProd" parameterType="prodVO">
        /* ProdMapper.updateSetConfigProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT_UNITST_PROD
                   SET UNIT_PROD_QTY = #{unitProdQty},
                        DISP_SEQ = #{dispSeq},
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD = #{prodCd}
                   AND UNIT_PROD_CD = #{unitProdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT_UNITST_PROD
                    SET UNIT_PROD_QTY = #{unitProdQty},
                        DISP_SEQ = #{dispSeq},
                        MOD_DT = #{modDt},
                        MOD_ID = #{modId}
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
                   AND UNIT_PROD_CD = #{unitProdCd}
            </when>
        </choose>
    </update>

    <!-- 세트구성상품 팝업 - 구성내역 상품삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 구성내역 상품을 삭제한다.
    -->
    <delete id="deleteSetConfigProd" parameterType="prodVO">
        /* ProdMapper.deleteSetConfigProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                  FROM TB_HQ_PRODUCT_UNITST_PROD
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD = #{prodCd}
                   AND UNIT_PROD_CD = #{unitProdCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                  FROM TB_MS_PRODUCT_UNITST_PROD
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
                   AND UNIT_PROD_CD = #{unitProdCd}
            </when>
        </choose>
    </delete>

    <!-- 선택메뉴 조회 팝업 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 구성내역 상품을 삭제한다.
    -->
    <select id="getSearchSdselGrpList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSearchSdselGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT thpsg.SDSEL_GRP_CD,
                       thpsg.SDSEL_GRP_NM,
                       thpsg.SDSEL_TYPE_FG
                  FROM TB_HQ_PRODUCT_SDSEL_GROUP thpsg
                 WHERE thpsg.HQ_OFFICE_CD = #{hqOfficeCd}
                   AND thpsg.USE_YN = 'Y'
                <if test='sdselGrpCd != null and sdselGrpCd != ""'>
                   AND thpsg.SDSEL_GRP_CD LIKE '%' || #{sdselGrpCd} || '%'
                </if>
                <if test='sdselGrpNm != null and sdselGrpNm != ""'>
                   AND thpsg.SDSEL_GRP_NM LIKE '%' || #{sdselGrpNm} || '%'
                </if>
                ORDER BY SDSEL_GRP_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT tmpsg.SDSEL_GRP_CD,
                       tmpsg.SDSEL_GRP_NM,
                       tmpsg.SDSEL_TYPE_FG
                  FROM TB_MS_PRODUCT_SDSEL_GROUP tmpsg
                 WHERE tmpsg.STORE_CD = #{storeCd}
                   AND tmpsg.USE_YN = 'Y'
                <if test='sdselGrpNm != null and sdselGrpNm != ""'>
                    AND tmpsg.SDSEL_GRP_NM LIKE '%' || #{sdselGrpNm} || '%'
                </if>
                ORDER BY SDSEL_GRP_CD
            </when>
        </choose>
    </select>

    <!-- 발주 단위 구분 조회 -->
    <!--
        TABLE    : TB_HQ_NMCODE
        PARAM    : prodVO
        COMMENTS : 발주 단위 구분 조회한다.
    -->
    <select id="getPoUnitFgData" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getPoUnitFgData */
        SELECT  thn.NMCODE_CD AS value
        ,       thn.NMCODE_NM AS name
        FROM    TB_HQ_NMCODE thn
        WHERE   thn.HQ_OFFICE_CD  = #{hqOfficeCd}
        AND     thn.NMCODE_GRP_CD = #{nmcodeGrpCd}
        ORDER BY thn.NMCODE_CD
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사) 이벤트상품조건 -->
    <!--
        TABLE    : TB_HQ_EVENT_MSG_PROD
        PARAM    : prodVO
        COMMENTS : 본사) 이벤트상품조건 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getHqEventMsgProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getHqEventMsgProdCnt */
        SELECT COUNT(1)
        FROM TB_HQ_EVENT_MSG_PROD
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사) 사이드선택상품 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_PROD
        PARAM    : prodVO
        COMMENTS : 본사) 사이드선택상품 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getHqProductSdselProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getHqProductSdselProdCnt */
        SELECT COUNT(1)
        FROM TB_HQ_PRODUCT_SDSEL_PROD
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사) 세트구성상품 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 본사) 세트구성상품 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getHqProductUnitstProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getHqProductUnitstProdCnt */
        SELECT COUNT(1)
        FROM TB_HQ_PRODUCT_UNITST_PROD
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	UNIT_PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사) 프로모션 혜택품목 -->
    <!--
        TABLE    : TB_HQ_PROMO_BENE_PROD
        PARAM    : prodVO
        COMMENTS : 본사) 프로모션 혜택품목 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getHqPromoBeneProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getHqPromoBeneProdCnt */
        SELECT COUNT(1)
        FROM TB_HQ_PROMO_BENE_PROD
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사) 프로모션 적용상품 -->
    <!--
        TABLE    : TB_HQ_PROMO_CONDI_PROD
        PARAM    : prodVO
        COMMENTS : 본사) 프로모션 적용상품 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getHqPromoCondiProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getHqPromoCondiProdCnt */
        SELECT COUNT(1)
        FROM TB_HQ_PROMO_CONDI_PROD
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사) 메뉴그룹 상품설정 -->
    <!--
        TABLE    : TB_HQ_STORE_PROD_GROUP_DTL
        PARAM    : prodVO
        COMMENTS : 본사) 메뉴그룹 상품설정 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getHqStoreProdGroupDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getHqStoreProdGroupDtlCnt */
        SELECT COUNT(1)
        FROM TB_HQ_STORE_PROD_GROUP_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사수불) 실사재고 상세 -->
    <!--
        TABLE    : TB_ST_HQ_ACTUAL_INSPECTION_DTL
        PARAM    : prodVO
        COMMENTS : 본사수불) 실사재고 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStHqActualInspectionDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStHqActualInspectionDtlCnt */
        SELECT COUNT(1)
        FROM TB_ST_HQ_ACTUAL_INSPECTION_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사수불) 재고조정 상세 -->
    <!--
        TABLE    : TB_ST_HQ_ADJUST_DTL
        PARAM    : prodVO
        COMMENTS : 본사수불) 재고조정 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStHqAdjustDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStHqAdjustDtlCnt */
        SELECT COUNT(1)
        FROM TB_ST_HQ_ADJUST_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사수불) 재고폐기 상세 -->
    <!--
        TABLE    : TB_ST_HQ_DISUSE_DTL
        PARAM    : prodVO
        COMMENTS : 본사수불) 재고폐기 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStHqDisuseDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStHqDisuseDtlCnt */
        SELECT COUNT(1)
        FROM TB_ST_HQ_DISUSE_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사수불) 세트구성해체내역 -->
    <!--
        TABLE    : TB_ST_HQ_SETPROD_COMPOSITION
        PARAM    : prodVO
        COMMENTS : 본사수불) 세트구성해체내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStHqSetprodCompositionCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStHqSetprodCompositionCnt */
        SELECT COUNT(1)
        FROM TB_ST_HQ_SETPROD_COMPOSITION
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사수불) 세트구성해체내역 상세 -->
    <!--
        TABLE    : TB_ST_HQ_SETPROD_COMPOSITION_DTL
        PARAM    : prodVO
        COMMENTS : 본사수불) 세트구성해체내역 상세 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStHqSetprodCompositionDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStHqSetprodCompositionDtlCnt */
        SELECT COUNT(1)
        FROM TB_ST_HQ_SETPROD_COMPOSITION_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	COMPST_PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 본사수불) 현재고 -->
    <!--
        TABLE    : TB_ST_HQ_STOCK_CUR
        PARAM    : prodVO
        COMMENTS : 본사수불) 현재고 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStHqStockCurCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStHqStockCurCnt */
        SELECT COUNT(1)
        FROM TB_ST_HQ_STOCK_CUR
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 이동전표-본사간 이동내역 상세 -->
    <!--
        TABLE    : TB_PO_HQ_MOVE_DTL
        PARAM    : prodVO
        COMMENTS : 본사간 이동내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqMoveDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqMoveDtlCnt */
        SELECT COUNT(1)
        FROM TB_PO_HQ_MOVE_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 분배출고-매장별분배출고내역 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_DISTRIBUTE
        PARAM    : prodVO
        COMMENTS : 매장별분배출고 내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqDistributeCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqDistributeCnt */
        SELECT COUNT(1)
        FROM TB_PO_HQ_STORE_DISTRIBUTE
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 출고전표-매장출고내역 상세 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : prodVO
        COMMENTS : 매장 출고내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqOutstockDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqOutstockDtlCnt */
        SELECT COUNT(1)
        FROM TB_PO_HQ_STORE_OUTSTOCK_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 거래처-업체입고반출전표 상세 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_INSTOCK_DTL
        PARAM    : prodVO
        COMMENTS : 업체입고반출전표 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqVendrInstockDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqVendrInstockDtlCnt */
        SELECT COUNT(1)
        FROM TB_PO_HQ_VENDR_INSTOCK_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 거래처-업체발주전표 상세 -->
    <!--
        TABLE    : TB_PO_HQ_VENDR_ORDER_DTL
        PARAM    : prodVO
        COMMENTS : 업체발주전표 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqVendrOrderDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqVendrOrderDtlCnt */
        SELECT COUNT(1)
        FROM TB_PO_HQ_VENDR_ORDER_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 물량오류-매장입고오류내역 상세 -->
    <!--
        TABLE    : TB_PO_STORE_INSTOCK_ERROR_DTL
        PARAM    : prodVO
        COMMENTS : 매장입고오류내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoStoreInstockErrorDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoStoreInstockErrorDtlCnt */
        SELECT COUNT(1)
        FROM TB_PO_STORE_INSTOCK_ERROR_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 이동전표-매장간이동내역 상세 -->
    <!--
        TABLE    : TB_PO_STORE_MOVE_DTL
        PARAM    : prodVO
        COMMENTS : 매장간이동내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoStoreMoveDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoStoreMoveDtlCnt */
        SELECT COUNT(1)
        FROM TB_PO_STORE_MOVE_DTL
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND	PROD_CD = #{prodCd}
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장) 이벤트상품조건 -->
    <!--
        TABLE    : TB_MS_EVENT_MSG_PROD
        PARAM    : prodVO
        COMMENTS : 매장) 이벤트상품조건 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getMsEventMsgProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getMsEventMsgProdCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_MS_EVENT_MSG_PROD
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_MS_EVENT_MSG_PROD
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장) 세트구성상품 -->
    <!--
        TABLE    : TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 매장) 세트구성상품 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getMsProductUnitstProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getMsProductUnitstProdCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_MS_PRODUCT_UNITST_PROD
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	UNIT_PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_MS_PRODUCT_UNITST_PROD
                WHERE STORE_CD = #{storeCd}
                AND	UNIT_PROD_CD = #{prodCd}
            </when>
        </choose>

    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장) 프로모션 혜택품목 -->
    <!--
        TABLE    : TB_MS_PROMO_BENE_PROD
        PARAM    : prodVO
        COMMENTS : 매장) 프로모션 혜택품목 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getMsPromoBeneProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getMsPromoBeneProdCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_MS_PROMO_BENE_PROD
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_MS_PROMO_BENE_PROD
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장) 프로모션 적용상품 -->
    <!--
        TABLE    : TB_MS_PROMO_CONDI_PROD
        PARAM    : prodVO
        COMMENTS : 매장) 프로모션 적용상품 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getMsPromoCondiProdCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getMsPromoCondiProdCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_MS_PROMO_CONDI_PROD
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_MS_PROMO_CONDI_PROD
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장수불) 실사재고 상세 -->
    <!--
        TABLE    : TB_ST_STORE_ACTUAL_INSPECTION_DTL
        PARAM    : prodVO
        COMMENTS : 매장수불) 실사재고 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStStoreActualInspectionDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStStoreActualInspectionDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_ACTUAL_INSPECTION_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_ACTUAL_INSPECTION_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장수불) 재고조정 상세 -->
    <!--
        TABLE    : TB_ST_STORE_ADJUST_DTL
        PARAM    : prodVO
        COMMENTS : 매장수불) 재고조정 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStStoreAdjustDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStStoreAdjustDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_ADJUST_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_ADJUST_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장수불) 재고폐기 상세 -->
    <!--
        TABLE    : TB_ST_STORE_DISUSE_DTL
        PARAM    : prodVO
        COMMENTS : 매장수불) 재고폐기 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStStoreDisuseDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStStoreDisuseDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_DISUSE_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_DISUSE_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매장수불) 현재고 -->
    <!--
        TABLE    : TB_ST_STORE_STOCK_CUR
        PARAM    : prodVO
        COMMENTS : 매장수불) 현재고 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getStStoreStockCurCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getStStoreStockCurCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_STOCK_CUR
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_ST_STORE_STOCK_CUR
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 분배출고-매장별분배출고내역 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_DISTRIBUTE
        PARAM    : prodVO
        COMMENTS : 매장별 분배출고 내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqStoreDistributeCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqStoreDistributeCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_PO_HQ_STORE_DISTRIBUTE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND STORE_CD IN (
                                   SELECT STORE_CD
                                     FROM TB_MS_STORE
                                    WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_PO_HQ_STORE_DISTRIBUTE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 주문전표-본사주문내역 상세 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_ORDER_DTL
        PARAM    : prodVO
        COMMENTS : 본사 주문내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqStoreOrderDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqStoreOrderDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_PO_HQ_STORE_ORDER_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_PO_HQ_STORE_ORDER_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 출고전표-매장출고내역 상세 -->
    <!--
        TABLE    : TB_PO_HQ_STORE_OUTSTOCK_DTL
        PARAM    : prodVO
        COMMENTS : 매장 출고내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoHqStoreOutstockDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoHqStoreOutstockDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_PO_HQ_STORE_OUTSTOCK_DTL
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                 )
                AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_PO_HQ_STORE_OUTSTOCK_DTL
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 매대창고간이동내역 상세 -->
    <!--
        TABLE    : TB_PO_STORE_STAND_MOVE_DTL
        PARAM    : prodVO
        COMMENTS : 매대창고간이동내역 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoStoreStandMoveDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoStoreStandMoveDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_PO_STORE_STAND_MOVE_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_PO_STORE_STAND_MOVE_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 거래처-업체입고반출전표 상세 -->
    <!--
        TABLE    : TB_PO_STORE_VENDR_INSTOCK_DTL
        PARAM    : prodVO
        COMMENTS : 업체입고반출전표 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoStoreVendrInstockDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoStoreVendrInstockDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_PO_STORE_VENDR_INSTOCK_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_PO_STORE_VENDR_INSTOCK_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품삭제 전 데이터 확인 : 거래처-업체발주전표 상세 -->
    <!--
        TABLE    : TB_PO_STORE_VENDR_ORDER_DTL
        PARAM    : prodVO
        COMMENTS : 업체발주전표 중 삭제하려는 상품이 있는지 확인
    -->
    <select id="getPoStoreVendrOrderDtlCnt" parameterType="prodVO" resultType="int">
        /* ProdMapper.getPoStoreVendrOrderDtlCnt */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT COUNT(1)
                FROM TB_PO_STORE_VENDR_ORDER_DTL
                WHERE STORE_CD IN (
                                    SELECT STORE_CD
                                      FROM TB_MS_STORE
                                     WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                   )
                AND	PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT COUNT(1)
                FROM TB_PO_STORE_VENDR_ORDER_DTL
                WHERE STORE_CD = #{storeCd}
                AND	PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품추가정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_INFO, TB_MS_PRODUCT_INFO
        PARAM    : prodVO
        COMMENTS : 상품추가정보 영구삭제
    -->
    <delete id="deleteProdInfoProdInfo" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoProdInfo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              DELETE TB_HQ_PRODUCT_INFO
              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
              AND PROD_CD IN (
                                SELECT PROD_CD
                                FROM TB_TMP_DEL_PRODUCT
                                WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                              )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
              DELETE TB_MS_PRODUCT_INFO
              WHERE STORE_CD = #{storeCd}
              AND PROD_CD IN (
                                SELECT PROD_CD
                                FROM TB_TMP_DEL_PRODUCT
                                WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND STORE_CD = #{storeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                             )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크판매시간대정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_TIME, TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 키오스크판매시간대정보 영구삭제
    -->
    <delete id="deleteProdInfoSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoSaleTime */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              DELETE TB_HQ_PRODUCT_SALE_TIME
              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
              AND PROD_CD IN (
                                SELECT PROD_CD
                                FROM TB_TMP_DEL_PRODUCT
                                WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                              )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
              DELETE TB_MS_PRODUCT_SALE_TIME
              WHERE STORE_CD = #{storeCd}
              AND PROD_CD IN (
                                SELECT PROD_CD
                                FROM TB_TMP_DEL_PRODUCT
                                WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND STORE_CD = #{storeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                             )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 쿠폰적용상품 영구삭제 -->
    <!--
        TABLE    : TB_HQ_COUPON_PROD, TB_MS_COUPON_PROD
        PARAM    : prodVO
        COMMENTS : 쿠폰적용상품 영구삭제
    -->
    <delete id="deleteProdInfoCouponProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoCouponProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              DELETE TB_HQ_COUPON_PROD
              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
              AND PROD_CD IN (
                                SELECT PROD_CD
                                FROM TB_TMP_DEL_PRODUCT
                                WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                              )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
              DELETE TB_MS_COUPON_PROD
              WHERE STORE_CD = #{storeCd}
              AND PROD_CD IN (
                                SELECT PROD_CD
                                FROM TB_TMP_DEL_PRODUCT
                                WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND STORE_CD = #{storeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                             )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크 키맵설정 영구삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_KEY, TB_MS_KIOSK_KEY
        PARAM    : prodVO
        COMMENTS : 키오스크 키맵설정 영구삭제
    -->
    <delete id="deleteProdInfoKioskKey" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoKioskKey */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_KEY
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_KEY
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크 추천메뉴정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD, TB_MS_KIOSK_RECMD
        PARAM    : prodVO
        COMMENTS : 키오스크 추천메뉴정보 영구삭제
    -->
    <delete id="deleteProdInfoKioskRecmd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoKioskRecmd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_RECMD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_RECMD
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크 메뉴추천리스트 영구삭제 -->
    <!--
        TABLE    : TB_HQ_KIOSK_RECMD_PROD, TB_MS_KIOSK_RECMD_PROD
        PARAM    : prodVO
        COMMENTS : 키오스크 메뉴추천리스트 영구삭제
    -->
    <delete id="deleteProdInfoKioskRecmdProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoKioskRecmdProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_KIOSK_RECMD_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND RECMD_PROD_CD IN (
                                        SELECT PROD_CD
                                        FROM TB_TMP_DEL_PRODUCT
                                        WHERE SESSION_ID = #{sessionId}
                                        AND HQ_OFFICE_CD = #{hqOfficeCd}
                                        AND DEL_TYPE_FG = #{delTypeFg}
                                      )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_KIOSK_RECMD_PROD
                WHERE STORE_CD = #{storeCd}
                AND RECMD_PROD_CD IN (
                                        SELECT PROD_CD
                                        FROM TB_TMP_DEL_PRODUCT
                                        WHERE SESSION_ID = #{sessionId}
                                        AND HQ_OFFICE_CD = #{hqOfficeCd}
                                        AND STORE_CD = #{storeCd}
                                        AND DEL_TYPE_FG = #{delTypeFg}
                                      )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 재료/알러지-상품맵핑정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_ALGI_PROD, TB_MS_PRODUCT_ALGI_PROD
        PARAM    : prodVO
        COMMENTS : 재료/알러지-상품맵핑정보 영구삭제
    -->
    <delete id="deleteProdInfoAlgiProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoAlgiProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_ALGI_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_ALGI_PROD
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 상품 바코드 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_BARCD, TB_MS_PRODUCT_BARCD
        PARAM    : prodVO
        COMMENTS : 상품 바코드 영구삭제
    -->
    <delete id="deleteProdInfoBarcd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoBarcd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_BARCD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_BARCD
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 배달앱 상품명-맵핑정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_DLVR_PROD_NM, TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    : prodVO
        COMMENTS : 배달앱 상품명-맵핑정보 영구삭제
    -->
    <delete id="deleteProdInfoDlvrProdNm" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoDlvrProdNm */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_DLVR_PROD_NM
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_DLVR_PROD_NM
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 마스터-키오스크옵션상품 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_OPTION, TB_MS_PRODUCT_OPTION
        PARAM    : prodVO
        COMMENTS : 마스터-키오스크옵션상품 영구삭제
    -->
    <delete id="deleteProdInfoOption" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoOption */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_OPTION
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_OPTION
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 재료-상품맵핑정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_RECP_PROD, TB_MS_PRODUCT_RECP_PROD
        PARAM    : prodVO
        COMMENTS : 재료-상품맵핑정보 영구삭제
    -->
    <delete id="deleteProdInfoRecpProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoRecpProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_RECP_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_RECP_PROD
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 상품 판매금액 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_PRICE, TB_MS_PRODUCT_SALE_PRICE
        PARAM    : prodVO
        COMMENTS : 상품 판매금액 영구삭제
    -->
    <delete id="deleteProdInfoSalePrice" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoSalePrice */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_SALE_PRICE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_SALE_PRICE
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 거래처별_취급상품 영구삭제 -->
    <!--
        TABLE    : TB_HQ_VENDOR_PROD, TB_MS_VENDOR_PROD
        PARAM    : prodVO
        COMMENTS : 거래처별_취급상품 영구삭제
    -->
    <delete id="deleteProdInfoVendorProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoVendorProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_VENDOR_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_VENDOR_PROD
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 상품_세트구성_상품 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_UNITST_PROD, TB_MS_PRODUCT_UNITST_PROD
        PARAM    : prodVO
        COMMENTS : 상품_세트구성_상품 영구삭제
    -->
    <delete id="deleteProdInfoUnitstProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoUnitstProd */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_UNITST_PROD
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_UNITST_PROD
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                  SELECT PROD_CD
                                  FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                  AND HQ_OFFICE_CD = #{hqOfficeCd}
                                  AND STORE_CD = #{storeCd}
                                  AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 상품_판매터치키 영구삭제 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY, TB_MS_TOUCH_KEY
        PARAM    : prodVO
        COMMENTS : 상품_판매터치키 영구삭제
    -->
    <delete id="deleteProdInfoTouchKey" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoTouchKey */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_TOUCH_KEY
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                  )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_TOUCH_KEY
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND STORE_CD = #{storeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                  )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 본사) 상품별_취급매장 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_STORE
        PARAM    : prodVO
        COMMENTS : 본사) 상품별_취급매장 영구삭제
    -->
    <delete id="deleteProdInfoHqProductStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoHqProductStore */
        DELETE TB_HQ_PRODUCT_STORE
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND PROD_CD IN (
                          SELECT PROD_CD
                          FROM TB_TMP_DEL_PRODUCT
                          WHERE SESSION_ID = #{sessionId}
                          AND HQ_OFFICE_CD = #{hqOfficeCd}
                          AND DEL_TYPE_FG = #{delTypeFg}
                        )
    </delete>

    <!-- 상품 삭제 팝업 - 매장) 주방프린터_출력상품 영구삭제 -->
    <!--
        TABLE    : TB_MS_PRINTER_PROD
        PARAM    : prodVO
        COMMENTS : 매장) 주방프린터_출력상품 영구삭제
    -->
    <delete id="deleteProdInfoPrintProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoPrintProd */
        DELETE TB_MS_PRINTER_PROD
        WHERE STORE_CD = #{storeCd}
        AND PROD_CD IN (
                          SELECT PROD_CD
                          FROM TB_TMP_DEL_PRODUCT
                          WHERE SESSION_ID = #{sessionId}
                          AND HQ_OFFICE_CD = #{hqOfficeCd}
                          AND STORE_CD = #{storeCd}
                          AND DEL_TYPE_FG = #{delTypeFg}
                        )
    </delete>

    <!-- 상품 삭제 팝업 - 매장) 상품_사이드선택_상품 영구삭제 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_PROD
        PARAM    : prodVO
        COMMENTS : 매장) 상품_사이드선택_상품 영구삭제
    -->
    <delete id="deleteProdInfoSdselProd" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoSdselProd */
        DELETE TB_MS_PRODUCT_SDSEL_PROD
        WHERE STORE_CD = #{storeCd}
        AND PROD_CD IN (
                          SELECT PROD_CD
                          FROM TB_TMP_DEL_PRODUCT
                          WHERE SESSION_ID = #{sessionId}
                          AND HQ_OFFICE_CD = #{hqOfficeCd}
                          AND STORE_CD = #{storeCd}
                          AND DEL_TYPE_FG = #{delTypeFg}
                        )
    </delete>

    <!-- 상품 삭제 팝업 - 상품 이미지 영구삭제 관련, 기존 상품이미지 정보 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodVO
        COMMENTS : 상품 이미지 영구삭제 관련, 기존 상품이미지 정보 조회
    -->
    <select id="getProdImgInfo" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getProdImgInfo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT IMG_FG, IMG_FILE_NM
                FROM TB_HQ_PRODUCT_IMAGE
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT IMG_FG, IMG_FILE_NM
                FROM TB_MS_PRODUCT_IMAGE
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND STORE_CD = #{storeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                               )
            </when>
        </choose>
    </select>

    <!-- 상품 삭제 팝업 - 상품 이미지 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_IMAGE, TB_MS_PRODUCT_IMAGE
        PARAM    : prodVO
        COMMENTS : 상품 이미지 영구삭제
    -->
    <delete id="deleteProdInfoImage" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoImage */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT_IMAGE
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                   )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT_IMAGE
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD IN (
                                     SELECT PROD_CD
                                       FROM TB_TMP_DEL_PRODUCT
                                      WHERE SESSION_ID = #{sessionId}
                                        AND HQ_OFFICE_CD = #{hqOfficeCd}
                                        AND STORE_CD = #{storeCd}
                                        AND DEL_TYPE_FG = #{delTypeFg}
                                   )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 상품정보 영구삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품정보 영구삭제
    -->
    <delete id="deleteProdInfo" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfo */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE TB_HQ_PRODUCT
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                  )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE TB_MS_PRODUCT
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND STORE_CD = #{storeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                  )
            </when>
        </choose>
    </delete>

    <!-- 상품 삭제 팝업 - 상품추가정보 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_INFO, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품추가정보 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoProdInfoAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoProdInfoAllStore */
         DELETE TB_MS_PRODUCT_INFO
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 쿠폰적용상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_TIME, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 쿠폰적용상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoSaleTimeAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoSaleTimeAllStore */
         DELETE TB_MS_PRODUCT_SALE_TIME
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 쿠폰적용상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_COUPON_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 쿠폰적용상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoCouponProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoCouponProdAllStore */
         DELETE TB_MS_COUPON_PROD
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크 키맵설정 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_KIOSK_KEY, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 키오스크 키맵설정 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoKioskKeyAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoKioskKeyAllStore */
        DELETE TB_MS_KIOSK_KEY
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크 추천메뉴정보 영구삭제 (전매장)-->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 키오스크 추천메뉴정보 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoKioskRecmdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoKioskRecmdAllStore */
         DELETE TB_MS_KIOSK_RECMD
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 키오스크 메뉴추천리스트 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_KIOSK_RECMD_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 키오스크 메뉴추천리스트 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoKioskRecmdProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoKioskRecmdProdAllStore */
        DELETE TB_MS_KIOSK_RECMD_PROD
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND RECMD_PROD_CD IN (
                                  SELECT PROD_CD
                                   FROM TB_TMP_DEL_PRODUCT
                                  WHERE SESSION_ID = #{sessionId}
                                    AND HQ_OFFICE_CD = #{hqOfficeCd}
                                    AND DEL_TYPE_FG = #{delTypeFg}
                                 )
    </delete>

    <!-- 상품 삭제 팝업 - 재료/알러지-상품맵핑정보 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_ALGI_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 재료/알러지-상품맵핑정보 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoAlgiProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoAlgiProdAllStore */
        DELETE TB_MS_PRODUCT_ALGI_PROD
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품 바코드 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_BARCD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 바코드 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoBarcdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoBarcdAllStore */
        DELETE TB_MS_PRODUCT_BARCD
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 배달앱 상품명-맵핑정보 영구삭제 (전매장)-->
    <!--
        TABLE    : TB_MS_PRODUCT_DLVR_PROD_NM, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 배달앱 상품명-맵핑정보 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoDlvrProdNmAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoDlvrProdNmAllStore */
        DELETE TB_MS_PRODUCT_DLVR_PROD_NM
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 마스터-키오스크옵션상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_OPTION, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 마스터-키오스크옵션상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoOptionAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoOptionAllStore */
        DELETE TB_MS_PRODUCT_OPTION
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 재료-상품맵핑정보 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_RECP_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 재료-상품맵핑정보 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoRecpProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoRecpProdAllStore */
        DELETE TB_MS_PRODUCT_RECP_PROD
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품 판매금액 영구삭제 (전매장)  -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_PRICE, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 판매금액 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoSalePriceAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoSalePriceAllStore */
        DELETE TB_MS_PRODUCT_SALE_PRICE
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 거래처별_취급상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_VENDOR_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 거래처별_취급상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoVendorProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoVendorProdAllStore */
        DELETE TB_MS_VENDOR_PROD
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품_세트구성_상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_UNITST_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품_세트구성_상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoUnitstProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoUnitstProdAllStore */
        DELETE TB_MS_PRODUCT_UNITST_PROD
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품_판매터치키 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_TOUCH_KEY, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품_판매터치키 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoTouchKeyAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoTouchKeyAllStore */
        DELETE TB_MS_TOUCH_KEY
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 매장) 주방프린터_출력상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRINTER_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 매장) 주방프린터_출력상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoPrintProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoPrintProdAllStore */
        DELETE TB_MS_PRINTER_PROD
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 매장) 상품_사이드선택_상품 영구삭제 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_SDSEL_PROD, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 매장) 상품_사이드선택_상품 영구삭제 (전매장)
    -->
    <delete id="deleteProdInfoSdselProdAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoSdselProdAllStore */
        DELETE TB_MS_PRODUCT_SDSEL_PROD
        WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품 이미지 영구삭제 관련, 기존 상품이미지 정보 조회 (전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_IMAGE, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 이미지 영구삭제 관련, 기존 상품이미지 정보 조회 (전매장)
    -->
    <select id="getProdImgInfoAllStore" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getProdImgInfoAllStore */
         SELECT STORE_CD, IMG_FG, IMG_FILE_NM
           FROM TB_MS_PRODUCT_IMAGE
          WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                            )
            AND PROD_CD IN (
                             SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                           )
    </select>

    <!-- 상품 삭제 팝업 - 상품 이미지 영구삭제(전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT_IMAGE, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 이미지 영구삭제(전매장)
    -->
    <delete id="deleteProdInfoImageAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoImageAllStore */
        DELETE TB_MS_PRODUCT_IMAGE
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품정보 영구삭제(전매장) -->
    <!--
        TABLE    : TB_MS_PRODUCT, TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품정보 영구삭제(전매장)
    -->
    <delete id="deleteProdInfoAllStore" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdInfoAllStore */
        DELETE TB_MS_PRODUCT
         WHERE STORE_CD IN (
                              SELECT STORE_CD
                              FROM TB_MS_STORE
                              WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                           )
           AND PROD_CD IN (
                              SELECT PROD_CD
                               FROM TB_TMP_DEL_PRODUCT
                              WHERE SESSION_ID = #{sessionId}
                                AND HQ_OFFICE_CD = #{hqOfficeCd}
                                AND DEL_TYPE_FG = #{delTypeFg}
                          )
    </delete>

    <!-- 상품 삭제 팝업 - 상품 사용여부 '미사용' 으로 변경 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품의 사용여부를 '미사용'으로 변경
    -->
    <update id="updateProdUseYn" parameterType="prodVO">
        /* ProdMapper.updateProdUseYn */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                UPDATE TB_HQ_PRODUCT
                   SET USE_YN = 'N',
                       MOD_DT = #{modDt},
                       MOD_ID = #{modId}
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                   )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                UPDATE TB_MS_PRODUCT
                   SET USE_YN = 'N',
                       MOD_DT = #{modDt},
                       MOD_ID = #{modId}
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD IN (
                                    SELECT PROD_CD
                                      FROM TB_TMP_DEL_PRODUCT
                                     WHERE SESSION_ID = #{sessionId}
                                       AND HQ_OFFICE_CD = #{hqOfficeCd}
                                       AND STORE_CD = #{storeCd}
                                       AND DEL_TYPE_FG = #{delTypeFg}
                                   )
            </when>
        </choose>
    </update>

    <!-- 상품 삭제 팝업 - 본사에 속한 매장의 상품도 '미사용' 으로 변경 -->
    <!--
        TABLE    : TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 본사에 속한 매장의 상품도 '미사용' 으로 변경
    -->
    <update id="updateStoreProdUseYn" parameterType="prodVO">
        /* ProdMapper.updateStoreProdUseYn */
        UPDATE TB_MS_PRODUCT
        SET USE_YN = 'N',
            MOD_DT = #{modDt},
            MOD_ID = #{modId}
        WHERE STORE_CD IN (
                            SELECT STORE_CD
                            FROM TB_MS_STORE
                            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                          )
        AND PROD_CD IN (
                          SELECT PROD_CD
                          FROM TB_TMP_DEL_PRODUCT
                          WHERE SESSION_ID = #{sessionId}
                          AND HQ_OFFICE_CD = #{hqOfficeCd}
                          AND DEL_TYPE_FG = #{delTypeFg}
                        )
    </update>

    <!-- 상품 삭제 팝업 - [임시]삭제할 상품 임시테이블 등록 -->
    <!--
        TABLE    : TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : [임시]삭제할 상품 임시테이블 등록
    -->
    <insert id="insertTmpDelProduct" parameterType="prodVO">
        /* USE : ProdMapper.insertTmpDelProduct */
        INSERT INTO TB_TMP_DEL_PRODUCT
        (
            SESSION_ID,
            SEQ,
            HQ_OFFICE_CD,
            STORE_CD,
            DEL_TYPE_FG,
            PROD_CD,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        ) VALUES (
            #{sessionId},
            #{seq},
            #{hqOfficeCd},
            #{storeCd},
            #{delTypeFg},
            #{prodCd},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )

    </insert>

    <!-- 상품 삭제 팝업 - [임시]상품삭제 테이블 전체삭제 -->
    <!--
        TABLE    : TB_TMP_DEL_PRODUCT
        PARAM    : prodVO
        COMMENTS : [임시]상품삭제 테이블 전체삭제
    -->
    <delete id="deleteAllTmpDelProduct" parameterType="prodVO">
        /* ProdMapper.deleteAllTmpDelProduct */
        DELETE
        TB_TMP_DEL_PRODUCT
        WHERE 1=1
        AND SESSION_ID = #{sessionId}
        AND HQ_OFFICE_CD = #{hqOfficeCd}
        <if test='storeCd != null and storeCd != ""'>
            AND STORE_CD = #{storeCd}
        </if>
    </delete>

    <!-- 상품 삭제 팝업 - 상품 전체리스트 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 상품 전체리스트 조회
    -->
    <select id="getAllProdList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getAllProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                thp.HQ_OFFICE_CD,
                thp.PROD_CLASS_CD,
                thp.PROD_CD,
                thp.PROD_NM
                FROM TB_HQ_PRODUCT thp
                WHERE 1=1
                AND thp.HQ_OFFICE_CD = #{hqOfficeCd}
                AND thp.PROD_CD NOT IN ('0000000000000', '0A0000DLVFEE', '0ADLVFEE0000')
                AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                )
                ORDER BY thp.PROD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                tmp.STORE_CD,
                tmp.PROD_CLASS_CD,
                tmp.PROD_CD,
                tmp.PROD_NM,
                tmp.REG_FG
                FROM TB_MS_PRODUCT tmp
                WHERE 1=1
                AND tmp.STORE_CD = #{storeCd}
                AND tmp.PROD_CD NOT IN ('0000000000000', '0A0000DLVFEE', '0ADLVFEE0000')
                AND tmp.REG_FG ='S'
                AND (
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (tmp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
                OR
                ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
                )
                ORDER BY tmp.PROD_CD
            </when>
        </choose>
    </select>

    <!-- KIOSK 판매시간 시간설정 등록 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_TIME, TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 상품별 KIOSK 판매시간을 등록한다.
    -->
    <insert id="insertProdSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.insertProdSaleTime */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
              INSERT INTO TB_HQ_PRODUCT_SALE_TIME
              (   HQ_OFFICE_CD
                , PROD_CD
                , TIME_SEQ
                , INCLUDE_FG
                , S_SALE_TIME
                , E_SALE_TIME
                , REG_DT
                , REG_ID
                , MOD_DT
                , MOD_ID
              )
              VALUES
              (   #{hqOfficeCd}
                , #{prodCd}
                , #{timeSeq}
                , #{includeFg}
                , #{sSaleTime}
                , #{eSaleTime}
                , #{regDt}
                , #{regId}
                , #{modDt}
                , #{modId}
              )
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
              INSERT INTO TB_MS_PRODUCT_SALE_TIME
              (   STORE_CD
                , PROD_CD
                , TIME_SEQ
                , INCLUDE_FG
                , S_SALE_TIME
                , E_SALE_TIME
                , REG_DT
                , REG_ID
                , MOD_DT
                , MOD_ID
              )
              VALUES
              (   #{storeCd}
                , #{prodCd}
                , #{timeSeq}
                , #{includeFg}
                , #{sSaleTime}
                , #{eSaleTime}
                , #{regDt}
                , #{regId}
                , #{modDt}
                , #{modId}
              )
            </when>
        </choose>
    </insert>

    <!-- KIOSK 판매시간 시간설정 삭제 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_TIME, TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 상품별 KIOSK 판매시간을 삭제한다.
    -->
    <delete id="deleteProdSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdSaleTime */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                DELETE
                FROM  TB_HQ_PRODUCT_SALE_TIME
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                AND   PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                DELETE
                FROM TB_MS_PRODUCT_SALE_TIME
                WHERE STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </delete>

    <!-- KIOSK 판매시간 시간설정 조회 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_TIME, TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 상품별 KIOSK 판매시간을 조회한다.
    -->
    <select id="getProdSaleTime" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getProdSaleTime */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT  HQ_OFFICE_CD
                      , PROD_CD
                      , TIME_SEQ
                      , INCLUDE_FG
                      , S_SALE_TIME
                      , E_SALE_TIME
                 FROM TB_HQ_PRODUCT_SALE_TIME
                WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                  AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
               SELECT  STORE_CD
                     , PROD_CD
                     , TIME_SEQ
                     , INCLUDE_FG
                     , S_SALE_TIME
                     , E_SALE_TIME
                FROM TB_MS_PRODUCT_SALE_TIME
               WHERE STORE_CD = #{storeCd}
                 AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 본사상품 매장적용시, 기존 매장의 KIOSK 판매시간 시간설정 삭제 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 본사상품 매장적용시, 기존 매장의 KIOSK 판매시간 시간설정을 삭제한다.
    -->
    <delete id="deleteStoreProdSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.deleteStoreProdSaleTime */
        DELETE
          FROM TB_MS_PRODUCT_SALE_TIME
         WHERE STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd})
           AND PROD_CD = #{prodCd}
    </delete>

    <!-- 본사상품 매장적용시, 본사의 KIOSK 판매시간 시간설정 매장적용 -->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_PRODUCT_SALE_TIME, TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 본사상품 매장적용시, 본사의 KIOSK 판매시간 시간설정을 매장에 적용한다.
    -->
    <insert id="insertStoreProdSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.insertStoreProdSaleTime */
        INSERT INTO TB_MS_PRODUCT_SALE_TIME
        ( STORE_CD,
          PROD_CD,
          TIME_SEQ,
          INCLUDE_FG,
          S_SALE_TIME,
          E_SALE_TIME,
          REG_DT,
          REG_ID,
          MOD_DT,
          MOD_ID
        )
        SELECT A.STORE_CD,
               B.PROD_CD,
               B.TIME_SEQ,
               B.INCLUDE_FG,
               B.S_SALE_TIME,
               B.E_SALE_TIME,
               #{regDt},
               #{regId},
               #{modDt},
               #{modId}
        FROM TB_MS_STORE A,
             TB_HQ_PRODUCT_SALE_TIME B,
             TB_MS_PRODUCT C
        WHERE B.HQ_OFFICE_CD = #{hqOfficeCd}
        AND B.PROD_CD = #{prodCd}
        AND A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
        AND C.STORE_CD = A.STORE_CD
        AND C.PROD_CD = B.PROD_CD
    </insert>

    <!-- 해당 상품의 KIOSK 판매시간 사용여부 파악 -->
    <!--
        TABLE    : TB_HQ_PRODUCT
        PARAM    : prodVO
        COMMENTS : 해당 상품의 KIOSK 판매시간 사용여부를 파악한다.
    -->
    <select id="getProdSaleTimeFg" parameterType="prodVO" resultType="String">
        /* USE : ProdMapper.getProdSaleTimeFg */
        SELECT NVL(MAX(SALE_TIME_FG), 'N') AS SALE_TIME_FG
          FROM TB_HQ_PRODUCT
         WHERE HQ_OFFICE_CD = #{hqOfficeCd}
           AND PROD_CD = #{prodCd}
    </select>

    <!-- 상품 등록매장 적용시, 기존 매장의 KIOSK 판매시간 시간설정 삭제 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 상품 등록매장 적용시, 기존 매장의 KIOSK 판매시간 시간설정을 삭제한다.
    -->
    <delete id="deleteProdStoreProdSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.deleteProdStoreProdSaleTime */
        DELETE
        FROM TB_MS_PRODUCT_SALE_TIME
        WHERE STORE_CD = #{storeCd}
        AND PROD_CD = #{prodCd}
    </delete>

    <!-- 상품 등록매장 적용시, 본사의 KIOSK 판매시간 시간설정 매장적용 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SALE_TIME, TB_MS_PRODUCT_SALE_TIME
        PARAM    : prodVO
        COMMENTS : 상품 등록매장 적용시, 본사의 KIOSK 판매시간 시간설정을 매장적용한다.
    -->
    <insert id="insertProdStoreProdSaleTime" parameterType="prodVO">
        /* USE : ProdMapper.insertProdStoreProdSaleTime */
        INSERT INTO TB_MS_PRODUCT_SALE_TIME
        ( STORE_CD,
          PROD_CD,
          TIME_SEQ,
          INCLUDE_FG,
          S_SALE_TIME,
          E_SALE_TIME,
          REG_DT,
          REG_ID,
          MOD_DT,
          MOD_ID
        )
        SELECT #{storeCd},
               PROD_CD,
               TIME_SEQ,
               INCLUDE_FG,
               S_SALE_TIME,
               E_SALE_TIME,
               #{regDt},
               #{regId},
               #{modDt},
               #{modId}
        FROM TB_HQ_PRODUCT_SALE_TIME
        WHERE HQ_OFFICE_CD = #{hqOfficeCd}
        AND PROD_CD = #{prodCd}
    </insert>

    <!-- 상품정보 추가 테이블 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getProdInfoRowCount" parameterType="prodVO" resultType="String">
        /* ProdMapper.getProdInfoRowCount */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                COUNT(PROD_CD) AS ROW_COUNT
                FROM TB_HQ_PRODUCT_INFO
                WHERE 1=1
                AND HQ_OFFICE_CD = #{hqOfficeCd}
                AND PROD_CD = #{prodCd}
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                COUNT(PROD_CD) AS ROW_COUNT
                FROM TB_MS_PRODUCT_INFO
                WHERE 1=1
                AND STORE_CD = #{storeCd}
                AND PROD_CD = #{prodCd}
            </when>
        </choose>
    </select>

    <!-- 상품옵션그룹 조회 팝업 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_OPTION_GROUP, TB_MS_PRODUCT_OPTION_GROUP
        PARAM    : prodVO
        COMMENTS : 상품옵션그룹 리스트를 조회한다.
    -->
    <select id="getSearchOptionGrpList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSearchOptionGrpList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT OPTION_GRP_CD,
                       OPTION_GRP_NM
                  FROM TB_HQ_PRODUCT_OPTION_GROUP
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND USE_YN = 'Y'
                <if test='optionGrpNm != null and optionGrpNm != ""'>
                   AND OPTION_GRP_NM LIKE '%' || #{optionGrpNm} || '%'
                </if>
                   AND OPTION_GRP_CD NOT IN (
                                                SELECT OPTION_GRP_CD
                                                  FROM TB_HQ_PRODUCT_OPTION_VAL
                                                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                                                   AND OPT_PROD_CD = #{prodCd}
                                            )
                 ORDER
                    BY OPTION_GRP_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT OPTION_GRP_CD,
                       OPTION_GRP_NM,
                       REG_FG
                  FROM TB_MS_PRODUCT_OPTION_GROUP
                 WHERE STORE_CD = #{storeCd}
                   AND USE_YN = 'Y'
                <if test='optionGrpNm != null and optionGrpNm != ""'>
                    AND OPTION_GRP_NM LIKE '%' || #{optionGrpNm} || '%'
                </if>
                    AND OPTION_GRP_CD NOT IN (
                                                SELECT OPTION_GRP_CD
                                                  FROM TB_MS_PRODUCT_OPTION_VAL
                                                 WHERE STORE_CD = #{storeCd}
                                                   AND OPT_PROD_CD = #{prodCd}
                                             )
                  ORDER
                     BY OPTION_GRP_CD
            </when>
        </choose>
    </select>

    <!-- 상품옵션그룹 조회 팝업 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_OPTION_GROUP, TB_MS_PRODUCT_OPTION_GROUP
        PARAM    : prodVO
        COMMENTS : 상품옵션그룹 리스트를 조회한다.
    -->
    <select id="getSearchGroupProdList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSearchGroupProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	PROD_CD
                ,		PROD_NM
                FROM 	TB_HQ_PRODUCT thp
                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                <if test='searchProdCd != null and searchProdCd != ""'>
                    AND PROD_CD LIKE '%'||#{searchProdCd}||'%'
                </if>
                <if test='searchProdNm != null and searchProdNm != ""'>
                    AND PROD_NM LIKE '%'||#{searchProdNm}||'%'
                </if>
                AND 	SIDE_PROD_YN = #{sideProdYn}
                <if test='singleYn != null and singleYn != ""'>
                    <if test='singleYn != null and singleYn == "Y"'>
                    AND	 SDSEL_GRP_CD IN (
                    </if>
                    <if test='singleYn != null and singleYn == "N"'>
                        AND	 SDSEL_GRP_CD NOT IN (
                    </if>
                        SELECT  SDSEL_GRP_CD
                        FROM    TB_HQ_PRODUCT_SDSEL_PROD_V01 A
                        WHERE   A.HQ_OFFICE_CD  = thp.HQ_OFFICE_CD
                        AND     A.SDSEL_GRP_CD  = thp.SDSEL_GRP_CD
                        AND     A.PROD_CD       = #{prodCd}
                    )
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	PROD_CD
                ,		PROD_NM
                FROM 	TB_MS_PRODUCT tmp
                WHERE 	STORE_CD = #{storeCd}
                <if test='searchProdCd != null and searchProdCd != ""'>
                    AND PROD_CD LIKE '%'||#{searchProdCd}||'%'
                </if>
                <if test='searchProdNm != null and searchProdNm != ""'>
                    AND PROD_NM LIKE '%'||#{searchProdNm}||'%'
                </if>
                AND 	SIDE_PROD_YN = #{sideProdYn}
                <if test='singleYn != null and singleYn != ""'>
                    <if test='singleYn != null and singleYn == "Y"'>
                        AND	 SDSEL_GRP_CD IN (
                    </if>
                    <if test='singleYn != null and singleYn == "N"'>
                        AND	 SDSEL_GRP_CD NOT IN (
                    </if>
                    SELECT  SDSEL_GRP_CD
                    FROM    TB_MS_PRODUCT_SDSEL_PROD_V01 A
                    WHERE   A.STORE_CD  = tmp.STORE_CD
                    AND     A.SDSEL_GRP_CD  = tmp.SDSEL_GRP_CD
                    AND     A.PROD_CD       = #{prodCd}
                    )
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND tmp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND tmp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
            </when>
        </choose>
    </select>

    <!-- 보증금상품코드 조회 팝업 -->
    <!--
        TABLE    : TB_HQ_PRODUCT, TB_MS_PRODUCT
        PARAM    : prodVO
        COMMENTS : 보증금상품코드 리스트를 조회한다.
    -->
    <select id="getSearchDepositProdList" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getSearchDepositProdList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT 	PROD_CD
                ,		PROD_NM
                FROM 	TB_HQ_PRODUCT thp
                WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
                AND 	PROD_TYPE_FG = #{prodTypeFg}
                <if test='searchProdCd != null and searchProdCd != ""'>
                    AND PROD_CD LIKE '%'||#{searchProdCd}||'%'
                </if>
                <if test='searchProdNm != null and searchProdNm != ""'>
                    AND PROD_NM LIKE '%'||#{searchProdNm}||'%'
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND thp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND thp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT 	PROD_CD
                ,		PROD_NM
                FROM 	TB_MS_PRODUCT tmp
                WHERE 	STORE_CD = #{storeCd}
                AND 	PROD_TYPE_FG = #{prodTypeFg}
                <if test='searchProdCd != null and searchProdCd != ""'>
                    AND PROD_CD LIKE '%'||#{searchProdCd}||'%'
                </if>
                <if test='searchProdNm != null and searchProdNm != ""'>
                    AND PROD_NM LIKE '%'||#{searchProdNm}||'%'
                </if>
                <if test='prodHqBrandCd != null and prodHqBrandCd != ""'>
                    AND tmp.HQ_BRAND_CD = #{prodHqBrandCd} -- 선택한 상품브랜드가 있을 때
                </if>
                <if test='prodHqBrandCd == null or prodHqBrandCd == ""'>
                    <if test='userProdBrands != null and userProdBrands != ""'>
                        -- 선택한 상품브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                        AND tmp.HQ_BRAND_CD IN
                        <foreach collection="userProdBrandList" item="item" open=" (" separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                </if>
            </when>
        </choose>
    </select>

    <!-- 매장상품일괄등록 - 매장목록 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        PARAM    : prodVO
        COMMENTS : 매장상품일괄등록 - 매장목록을 조회한다.
    -->
    <select id="selectStoreList" parameterType="prodVO" resultType="DefaultMap">
    /* USE : ProdMapper.selectStoreList */
        <![CDATA[
        SELECT  tms.HQ_OFFICE_CD, tms.STORE_CD, tms.STORE_NM
        FROM    TB_MS_STORE tms
        ,       TB_MS_STORE_INFO tmsi
        WHERE   tms.HQ_OFFICE_CD =   #{hqOfficeCd}
        AND     tms.STORE_CD = tmsi.STORE_CD (+)
        ]]>
        <if test='orgnFg != null and orgnFg == "H"'>
            AND (
                    'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                OR   tms.STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                )
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
            AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
        </if>
        ORDER BY tms.STORE_CD
    </select>

    <!-- 상품정보 저장 전 체크 - 선택한 선택메뉴코드가 세트('C')이면서, 나(현재 선택한 상품)를 가진 세트가 있는지 확인 -->
    <!--
        TABLE    : TB_HQ_PRODUCT_SDSEL_GROUP, TB_MS_PRODUCT_SDSEL_GROUP, TB_HQ_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_PROD
        COMMENTS : 상품정보 저장 전 체크 - 선택한 선택메뉴코드가 세트('C')이면서, 나(현재 선택한 상품)를 가진 세트가 있는지 확인
    -->
    <select id="getSideMenuChk" parameterType="prodVO" resultType="String">
        /* ProdMapper.getSideMenuChk */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT FN_GET_SDSEL_GRP_CD_YN(#{hqOfficeCd}, #{sdselGrpCd}, #{prodCd})
                  FROM DUAL
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT FN_GET_SDSEL_GRP_CD_YN(#{storeCd}, #{sdselGrpCd}, #{prodCd})
                  FROM DUAL
            </when>
        </choose>
    </select>

    <!-- 기존 상품가격 조회 -->
    <!--
       TABLE    : TB_HQ_PRODUCT_SALE_PRICE, TB_MS_PRODUCT_SALE_PRICE
       COMMENTS : 기존 상품가격 조회
    -->
    <select id="getProdSalePrice" parameterType="prodVO" resultType="DefaultMap">
        /* ProdMapper.getProdSalePrice */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT HQ_OFFICE_CD,
                       PROD_CD,
                       MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                       MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                       MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                       MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                  FROM TB_HQ_PRODUCT_SALE_PRICE
                 WHERE HQ_OFFICE_CD = #{hqOfficeCd}
                   AND PROD_CD = #{prodCd}
                   <![CDATA[
                       AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                       AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                   ]]>
                   AND SALE_PRC_FG = '1'
                 GROUP
                    BY HQ_OFFICE_CD,
                       PROD_CD
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT STORE_CD,
                       PROD_CD,
                       MIN(SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS SALE_UPRC,
                       MIN(STIN_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS STIN_SALE_UPRC,
                       MIN(DLVR_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS DLVR_SALE_UPRC,
                       MIN(PACK_SALE_UPRC) KEEP( DENSE_RANK FIRST ORDER BY START_DATE DESC ) AS PACK_SALE_UPRC
                  FROM TB_MS_PRODUCT_SALE_PRICE
                 WHERE STORE_CD = #{storeCd}
                   AND PROD_CD = #{prodCd}
                   <![CDATA[
                       AND START_DATE <= TO_CHAR(SYSDATE, 'yyyyMMdd')
                       AND END_DATE >= TO_CHAR(SYSDATE, 'yyyyMMdd')
                   ]]>
                   AND SALE_PRC_FG = '1'
                 GROUP
                    BY STORE_CD,
                       PROD_CD
            </when>
        </choose>
    </select>

    <!-- 선택메뉴 조회 팝업 - 신규선택메뉴생성 팝업 오른쪽 상품리스트 그리드 조회 -->
    <!--
        TABLE    : TB_HQ_PRINTER_GROUP_PROD
        PARAM    : prodKitchenprintLinkVO
        COMMENTS : 선택메뉴 조회 팝업 - 신규선택메뉴생성 팝업 오른쪽 상품리스트 그리드 조회한다.
    -->
    <select id="getNewSdselProdList" parameterType="prodVO" resultType="DefaultMap">
        /* USE : ProdMapper.getNewSdselProdList */
        SELECT  (SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = thp.HQ_OFFICE_CD AND thb.HQ_BRAND_CD = thp.HQ_BRAND_CD) AS HQ_BRAND_CD
        ,       thp.PROD_CD
        ,       thp.PROD_NM
        ,       ( SELECT SF_GET_PROD_CLASSES('H', thp.HQ_OFFICE_CD, thp.PROD_CLASS_CD) FROM DUAL ) AS PROD_CLASS_NM
        FROM    TB_HQ_PRODUCT thp
        WHERE   thp.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     thp.PROD_CD NOT IN (SELECT PROD_CD FROM TB_HQ_PRODUCT_SDSEL_PROD thpsp WHERE thpsp.HQ_OFFICE_CD = thp.HQ_OFFICE_CD AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd} AND thpsp.USE_YN = 'Y')
        <if test="chkDt == false">
            <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
                <![CDATA[
                        AND thp.REG_DT BETWEEN #{startDate}||'000000' AND #{endDate}||'235959'
                        ]]>
            </if>
        </if>
        <if test="prodCd != null and prodCd != ''">
            AND thp.PROD_CD LIKE '%'||#{prodCd}||'%' --상품코드
        </if>
        <if test="prodNm != null and prodNm != ''">
            AND thp.PROD_NM LIKE '%'||#{prodNm}||'%' --상품명
        </if>
        <if test="prodClassCd != null and prodClassCd != ''">
            AND thp.PROD_CLASS_CD IN (
            SELECT PROD_CLASS_CD
            FROM TB_HQ_PRODUCT_CLASS
            WHERE HQ_OFFICE_CD = #{hqOfficeCd}
            START WITH PROD_CLASS_CD = #{prodClassCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
            CONNECT BY PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD AND HQ_OFFICE_CD = #{hqOfficeCd}
            ) --상품분류
        </if>
        <if test="barCd != null and barCd != ''">
            AND EXISTS (
            SELECT 1
            FROM TB_HQ_PRODUCT_BARCD
            WHERE HQ_OFFICE_CD = thp.HQ_OFFICE_CD
            AND PROD_CD = thp.PROD_CD
            AND BARCD_CD = #{barCd}
            ) --바코드
        </if>
        <if test="hqBrandCd != null and hqBrandCd != ''">
            AND thp.HQ_BRAND_CD = #{hqBrandCd} --브랜드코드
        </if>
        <if test="useYn != null and useYn != ''">
            AND thp.USE_YN = #{useYn} --사용여부
        </if>
        <if test="prodTypeFg != null and prodTypeFg != ''">
            AND thp.PROD_TYPE_FG = #{prodTypeFg} --상품유형
        </if>
        AND (
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) != 0) AND (thp.HQ_BRAND_CD IN (SELECT HQ_BRAND_CD FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId})) )
        OR
        ( ((SELECT COUNT(HQ_BRAND_CD) FROM TB_WB_USER_BRAND WHERE USER_ID = #{userId}) = 0) AND 1=1 )
        )
        ORDER
        BY thp.PROD_CD ASC
    </select>

    <insert id="insertSdselProdList" parameterType="sideMenuSelProdVO">
        /* USE : ProdMapper.insertSdselProdList */
        <selectKey keyProperty="dispSeq" resultType="int" order="BEFORE">
            SELECT 	NVL(MAX(DISP_SEQ+1), 1)
            FROM 	TB_HQ_PRODUCT_SDSEL_PROD thpsp
            WHERE 	HQ_OFFICE_CD = #{hqOfficeCd}
            AND 	SDSEL_CLASS_CD = #{sdselClassCd}
        </selectKey>
        MERGE INTO TB_HQ_PRODUCT_SDSEL_PROD thpsp
            USING DUAL
            ON (
                    thpsp.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND thpsp.SDSEL_CLASS_CD = #{sdselClassCd}
                    AND thpsp.PROD_CD = #{prodCd}
                )
            WHEN MATCHED THEN
                UPDATE
                    SET thpsp.USE_YN = 'Y'
                    ,   thpsp.DISP_SEQ = #{dispSeq}
                    ,   thpsp.MOD_DT = #{modDt}
                    ,   thpsp.MOD_ID = #{modId}
                    ,   thpsp.REG_STORE_FG = #{regStoreFg}
                    ,   thpsp.PRINT_YN = #{printYn}
            WHEN NOT MATCHED THEN
                INSERT
                    (
                     HQ_OFFICE_CD,
                     SDSEL_CLASS_CD,
                     PROD_CD,
                     ADD_PROD_UPRC,
                     ADD_PROD_QTY,
                     DISP_SEQ,
                     USE_YN,
                     REG_DT,
                     REG_ID,
                     MOD_DT,
                     MOD_ID,
                     FIX_PROD_FG,
                     REG_STORE_FG,
                     PRINT_YN
                    ) VALUES (
                                 #{hqOfficeCd},
                                 #{sdselClassCd},
                                 #{prodCd},
                                 #{addProdUprc},
                                 #{addProdQty},
                                 #{dispSeq},
                                 'Y',
                                 #{regDt},
                                 #{regId},
                                 #{modDt},
                                 #{modId},
                                 #{fixProdFg},
                                 #{regStoreFg},
                                 #{printYn}
                             )
    </insert>
</mapper>