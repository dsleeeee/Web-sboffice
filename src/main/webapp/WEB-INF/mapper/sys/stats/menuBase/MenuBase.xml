<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    MenuBase.xml
    메뉴기준 사용현황
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2020.05.22     최초작성
-->
<mapper namespace="kr.co.solbipos.sys.stats.menuBase.service.impl.MenuBaseMapper">

    <!-- 메뉴기준 사용현황 조회 -->
    <!--
        TABLE    : TB_WB_MENU_USE_HIST, TB_WB_RESRCE_INFO,
                   TB_HQ_EMPLOYEE, TB_HQ_OFFICE,
                   TB_MS_EMPLOYEE, TB_MS_STORE,
                   TB_CM_EMPLOYEE, TB_CM_AGENCY
        COMMENTS : 메뉴 사용 이력, 리소스 정보,
                   [본사]사원 정보, [본사]본사 정보,
                   [매장]사원 정보, [매장]매장 정보,
                   [공통]시스템/대리점 사원 정보, [공통]대리점 정보
    -->
    <select id="getMenuBaseList"  parameterType="MenuBaseVO" resultType="DefaultMap">
        /* MenuBaseMapper.getMenuBaseList */
        SELECT
        LEVEL1,
        LEVEL1_NM,
        <choose>
            <when test='level != null'>
                <!-- 중분류 -->
                <if test='level == "2"'>
                    <![CDATA[
                        LEVEL2,
                        LEVEL2_NM,
                    ]]>
                </if>
                <!-- 소분류 -->
                <if test='level == "3"'>
                    <![CDATA[
                        LEVEL2,
                        LEVEL2_NM,
                        LEVEL3,
                        LEVEL3_NM,
                    ]]>
                </if>
            </when>
        </choose>
        SUM(USE_CNT) AS USE_CNT
        FROM
        (
            SELECT
            REPLACE(SUBSTR(twri_P.PATH, 0, 7) ,'/','') AS LEVEL1,
            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 0, 7) ,'/',''))) AS LEVEL1_NM,
            <choose>
                <when test='level != null'>
                    <!-- 중분류 -->
                    <if test='level == "2"'>
                        <![CDATA[
                            REPLACE(SUBSTR(twri_P.PATH, 8, 7) ,'/','') AS LEVEL2,
                            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 8, 7) ,'/',''))) AS LEVEL2_NM,
                        ]]>
                    </if>
                    <!-- 소분류 -->
                    <if test='level == "3"'>
                        <![CDATA[
                            REPLACE(SUBSTR(twri_P.PATH, 8, 7) ,'/','') AS LEVEL2,
                            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 8, 7) ,'/',''))) AS LEVEL2_NM,
                            REPLACE(SUBSTR(twri_P.PATH, 15, 7) ,'/','') AS LEVEL3,
                            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 15, 7) ,'/',''))) AS LEVEL3_NM,
                        ]]>
                    </if>
                </when>
            </choose>
            COUNT(twmu.SEQ) AS USE_CNT
            FROM TB_WB_MENU_USE_HIST twmu,
            (
                SELECT
                RESRCE_CD,
                SYS_CONNECT_BY_PATH (RESRCE_CD, '/') PATH
                FROM TB_WB_RESRCE_INFO
                WHERE 1=1
                START WITH P_RESRCE = '000000'
                CONNECT BY P_RESRCE = PRIOR RESRCE_CD
            ) twri_P,
            (
                (
                    --본사
                    SELECT
                    A.USER_ID,
                    'H' AS ORGN_FG,
                    A.HQ_OFFICE_CD AS ORGN_CD,
                    B.HQ_OFFICE_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    A.HQ_OFFICE_CD,
                    B.HQ_OFFICE_NM,
                    A.HQ_OFFICE_CD AS ORGN_GRP_CD,
                    B.HQ_OFFICE_NM AS ORGN_GRP_NM,
                    '' AS P_AGENCY_CD
                    FROM
                    TB_HQ_EMPLOYEE A,
                    TB_HQ_OFFICE B
                    WHERE 1=1
                    AND A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                )
                UNION ALL
                (
                    --매장
                    SELECT
                    A.USER_ID,
                    'S' AS ORGN_FG,
                    A.STORE_CD AS ORGN_CD,
                    B.STORE_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    A.STORE_CD AS STORE_CD,
                    B.STORE_NM AS STORE_NM,
                    C.HQ_OFFICE_CD,
                    C.HQ_OFFICE_NM,
                    DECODE( C.HQ_OFFICE_CD, '00000', A.STORE_CD, C.HQ_OFFICE_CD ) AS ORGN_GRP_CD,
                    DECODE( C.HQ_OFFICE_CD, '00000', B.STORE_NM, C.HQ_OFFICE_NM ) AS ORGN_GRP_NM,
                    '' AS P_AGENCY_CD
                    FROM
                    TB_MS_EMPLOYEE A,
                    TB_MS_STORE B,
                    TB_HQ_OFFICE C
                    WHERE 1=1
                    AND A.STORE_CD = B.STORE_CD
                    AND B.HQ_OFFICE_CD = C.HQ_OFFICE_CD
                )
                UNION ALL
                (
                    --관리자,총판
                    SELECT
                    A.USER_ID,
                    DECODE( A.ADMIN_FG, 'A', 'M', 'A' ) AS ORGN_FG,
                    A.AGENCY_CD AS ORGN_CD,
                    B.AGENCY_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    '' AS HQ_OFFICE_CD,
                    '' AS HQ_OFFICE_NM,
                    A.AGENCY_CD AS ORGN_GRP_CD,
                    B.AGENCY_NM AS ORGN_GRP_NM,
                    B.P_AGENCY_CD AS P_AGENCY_CD
                    FROM
                    TB_CM_EMPLOYEE A,
                    TB_CM_AGENCY B
                    WHERE 1=1
                    AND A.AGENCY_CD = B.AGENCY_CD
                )
            ) tce
            WHERE 1=1
            AND twri_P.RESRCE_CD (+)= twmu.RESRCE_CD
            AND tce.USER_ID (+)= twmu.USER_ID
            AND twmu.USE_DATE BETWEEN #{startDate} AND #{endDate}
            --사용환경
            <if test='userId != null and userId != ""'>
                <![CDATA[
                    AND twmu.USER_ID LIKE '%'||#{userId}||'%'
                ]]>
            </if>
            <if test='userNm != null and userNm != ""'>
                <![CDATA[
                    AND tce.USER_NM LIKE '%'||#{userNm}||'%'
                ]]>
            </if>
            <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                <![CDATA[
                    AND tce.HQ_OFFICE_CD LIKE '%'||#{hqOfficeCd}||'%'
                ]]>
            </if>
            <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                <![CDATA[
                    AND tce.HQ_OFFICE_NM LIKE '%'||#{hqOfficeNm}||'%'
                ]]>
            </if>
            <if test='storeCd != null and storeCd != ""'>
                <![CDATA[
                    AND tce.STORE_CD LIKE '%'||#{storeCd}||'%'
                ]]>
            </if>
            <if test='storeNm != null and storeNm != ""'>
                <![CDATA[
                    AND tce.STORE_NM LIKE '%'||#{storeNm}||'%'
                ]]>
            </if>
            GROUP BY twri_P.PATH
        )
        WHERE 1=1
        <choose>
            <when test='resrceNm != null and resrceNm != ""'>
                <!-- 대분류 -->
                <if test='level == "1"'>
                    <![CDATA[
                        AND LEVEL1_NM LIKE '%'||#{resrceNm}||'%'
                    ]]>
                </if>
                <!-- 중분류 -->
                <if test='level == "2"'>
                    <![CDATA[
                        AND LEVEL1_NM LIKE '%'||#{resrceNm}||'%'
                        OR LEVEL2_NM LIKE '%'||#{resrceNm}||'%'
                    ]]>
                </if>
                <!-- 소분류 -->
                <if test='level == "3"'>
                    <![CDATA[
                        AND LEVEL1_NM LIKE '%'||#{resrceNm}||'%'
                        OR LEVEL2_NM LIKE '%'||#{resrceNm}||'%'
                        OR LEVEL3_NM LIKE '%'||#{resrceNm}||'%'
                    ]]>
                </if>
            </when>
        </choose>
        <choose>
            <when test='level != null and level != ""'>
                <!-- 대분류 -->
                <if test='level == "1"'>
                    <![CDATA[
                        GROUP BY LEVEL1, LEVEL1_NM
                        ORDER BY LEVEL1
                    ]]>
                </if>
                <!-- 중분류 -->
                <if test='level == "2"'>
                    <![CDATA[
                        GROUP BY LEVEL1, LEVEL1_NM, LEVEL2, LEVEL2_NM
                        ORDER BY LEVEL1, LEVEL2
                    ]]>
                </if>
                <!-- 소분류 -->
                <if test='level == "3"'>
                    <![CDATA[
                        GROUP BY LEVEL1, LEVEL1_NM, LEVEL2, LEVEL2_NM, LEVEL3, LEVEL3_NM
                        ORDER BY LEVEL1, LEVEL2, LEVEL3
                    ]]>
                </if>
            </when>
        </choose>
    </select>

    <!-- 메뉴기준 사용현황 상세조회 -->
    <!--
        TABLE    : TB_WB_MENU_USE_HIST, TB_WB_RESRCE_INFO,
                   TB_HQ_EMPLOYEE, TB_HQ_OFFICE,
                   TB_MS_EMPLOYEE, TB_MS_STORE,
                   TB_CM_EMPLOYEE, TB_CM_AGENCY
        COMMENTS : 메뉴 사용 이력, 리소스 정보,
                   [본사]사원 정보, [본사]본사 정보,
                   [매장]사원 정보, [매장]매장 정보,
                   [공통]시스템/대리점 사원 정보, [공통]대리점 정보
    -->
    <select id="getMenuBaseDetailList"  parameterType="MenuBaseVO" resultType="DefaultMap">
        /* MenuBaseMapper.getMenuBaseDetailList */
        SELECT
        LEVEL1,
        LEVEL1_NM,
        <choose>
            <when test='level != null'>
                <!-- 중분류 -->
                <if test='level == "2"'>
                    <![CDATA[
                        LEVEL2,
                        LEVEL2_NM,
                    ]]>
                </if>
                <!-- 소분류 -->
                <if test='level == "3"'>
                    <![CDATA[
                        LEVEL2,
                        LEVEL2_NM,
                        LEVEL3,
                        LEVEL3_NM,
                    ]]>
                </if>
            </when>
        </choose>
        HQ_OFFICE_CD,
        HQ_OFFICE_NM,
        STORE_CD,
        STORE_NM,
        ORGN_FG,
        USER_ID,
        USER_NM,
        SUM(USE_CNT) AS USE_CNT
        FROM
        (
            SELECT
            REPLACE(SUBSTR(twri_P.PATH, 0, 7) ,'/','') AS LEVEL1,
            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 0, 7) ,'/',''))) AS LEVEL1_NM,
            REPLACE(SUBSTR(twri_P.PATH, 8, 7) ,'/','') AS LEVEL2,
            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 8, 7) ,'/',''))) AS LEVEL2_NM,
            REPLACE(SUBSTR(twri_P.PATH, 15, 7) ,'/','') AS LEVEL3,
            (SELECT RESRCE_NM FROM TB_WB_RESRCE_INFO WHERE RESRCE_CD=(REPLACE(SUBSTR(twri_P.PATH, 15, 7) ,'/',''))) AS LEVEL3_NM,
            tce.HQ_OFFICE_CD,
            tce.HQ_OFFICE_NM,
            tce.STORE_CD,
            tce.STORE_NM,
            (CASE WHEN tce.ORGN_FG = 'H' THEN '본사'
                  WHEN tce.ORGN_FG = 'S' THEN '매장'
                  WHEN tce.ORGN_FG = 'M' THEN '관리자'
                  WHEN tce.ORGN_FG = 'A' THEN '총판'
                  ELSE null END
            ) AS ORGN_FG,
            twmu.USER_ID,
            tce.USER_NM,
            COUNT(twmu.SEQ) AS USE_CNT
            FROM TB_WB_MENU_USE_HIST twmu,
            (
                SELECT
                RESRCE_CD,
                SYS_CONNECT_BY_PATH (RESRCE_CD, '/') PATH
                FROM TB_WB_RESRCE_INFO
                WHERE 1=1
                START WITH P_RESRCE = '000000'
                CONNECT BY P_RESRCE = PRIOR RESRCE_CD
            ) twri_P,
            (
                (
                    --본사
                    SELECT
                    A.USER_ID,
                    'H' AS ORGN_FG,
                    A.HQ_OFFICE_CD AS ORGN_CD,
                    B.HQ_OFFICE_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    A.HQ_OFFICE_CD,
                    B.HQ_OFFICE_NM,
                    A.HQ_OFFICE_CD AS ORGN_GRP_CD,
                    B.HQ_OFFICE_NM AS ORGN_GRP_NM,
                    '' AS P_AGENCY_CD
                    FROM
                    TB_HQ_EMPLOYEE A,
                    TB_HQ_OFFICE B
                    WHERE 1=1
                    AND A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                )
                UNION ALL
                (
                    --매장
                    SELECT
                    A.USER_ID,
                    'S' AS ORGN_FG,
                    A.STORE_CD AS ORGN_CD,
                    B.STORE_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    A.STORE_CD AS STORE_CD,
                    B.STORE_NM AS STORE_NM,
                    C.HQ_OFFICE_CD,
                    C.HQ_OFFICE_NM,
                    DECODE( C.HQ_OFFICE_CD, '00000', A.STORE_CD, C.HQ_OFFICE_CD ) AS ORGN_GRP_CD,
                    DECODE( C.HQ_OFFICE_CD, '00000', B.STORE_NM, C.HQ_OFFICE_NM ) AS ORGN_GRP_NM,
                    '' AS P_AGENCY_CD
                    FROM
                    TB_MS_EMPLOYEE A,
                    TB_MS_STORE B,
                    TB_HQ_OFFICE C
                    WHERE 1=1
                    AND A.STORE_CD = B.STORE_CD
                    AND B.HQ_OFFICE_CD = C.HQ_OFFICE_CD
                )
                UNION ALL
                (
                    --관리자,총판
                    SELECT
                    A.USER_ID,
                    DECODE( A.ADMIN_FG, 'A', 'M', 'A' ) AS ORGN_FG,
                    A.AGENCY_CD AS ORGN_CD,
                    B.AGENCY_NM AS ORGN_NM,
                    A.EMP_NM AS USER_NM,
                    A.EMP_NO,
                    '' AS STORE_CD,
                    '' AS STORE_NM,
                    '' AS HQ_OFFICE_CD,
                    '' AS HQ_OFFICE_NM,
                    A.AGENCY_CD AS ORGN_GRP_CD,
                    B.AGENCY_NM AS ORGN_GRP_NM,
                    B.P_AGENCY_CD AS P_AGENCY_CD
                    FROM
                    TB_CM_EMPLOYEE A,
                    TB_CM_AGENCY B
                    WHERE 1=1
                    AND A.AGENCY_CD = B.AGENCY_CD
                )
            ) tce
            WHERE 1=1
            AND twri_P.RESRCE_CD (+)= twmu.RESRCE_CD
            AND tce.USER_ID (+)= twmu.USER_ID
            AND twmu.USE_DATE BETWEEN #{startDate} AND #{endDate}
            --사용환경
            <if test='userId != null and userId != ""'>
                <![CDATA[
                    AND twmu.USER_ID LIKE '%'||#{userId}||'%'
                ]]>
            </if>
            <if test='userNm != null and userNm != ""'>
                <![CDATA[
                    AND tce.USER_NM LIKE '%'||#{userNm}||'%'
                ]]>
            </if>
            <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                <![CDATA[
                    AND tce.HQ_OFFICE_CD LIKE '%'||#{hqOfficeCd}||'%'
                ]]>
            </if>
            <if test='hqOfficeNm != null and hqOfficeNm != ""'>
                <![CDATA[
                    AND tce.HQ_OFFICE_NM LIKE '%'||#{hqOfficeNm}||'%'
                ]]>
            </if>
            <if test='storeCd != null and storeCd != ""'>
                <![CDATA[
                    AND tce.STORE_CD LIKE '%'||#{storeCd}||'%'
                ]]>
            </if>
            <if test='storeNm != null and storeNm != ""'>
                <![CDATA[
                    AND tce.STORE_NM LIKE '%'||#{storeNm}||'%'
                ]]>
            </if>
            GROUP BY twri_P.PATH, tce.HQ_OFFICE_CD, tce.HQ_OFFICE_NM, tce.STORE_CD, tce.STORE_NM, tce.ORGN_FG, twmu.USER_ID, tce.USER_NM
            ORDER BY tce.HQ_OFFICE_CD, tce.STORE_CD, twmu.USER_ID
        )
        WHERE 1=1
        <if test='resrceCd != null and resrceCd != ""'>
            <![CDATA[
                AND LEVEL${level} = #{resrceCd}
            ]]>
        </if>
        <choose>
            <when test='resrceNm != null and resrceNm != ""'>
                <!-- 대분류 -->
                <if test='level == "1"'>
                    <![CDATA[
                       AND LEVEL1_NM LIKE '%'||#{resrceNm}||'%'
                    ]]>
                </if>
                <!-- 중분류 -->
                <if test='level == "2"'>
                    <![CDATA[
                        AND LEVEL1_NM LIKE '%'||#{resrceNm}||'%'
                        OR LEVEL2_NM LIKE '%'||#{resrceNm}||'%'
                    ]]>
                </if>
                <!-- 소분류 -->
                <if test='level == "3"'>
                    <![CDATA[
                        AND LEVEL1_NM LIKE '%'||#{resrceNm}||'%'
                        OR LEVEL2_NM LIKE '%'||#{resrceNm}||'%'
                        OR LEVEL3_NM LIKE '%'||#{resrceNm}||'%'
                    ]]>
                </if>
            </when>
        </choose>
        <choose>
            <when test='level != null and level != ""'>
                <!-- 대분류 -->
                <if test='level == "1"'>
                    <![CDATA[
                       GROUP BY HQ_OFFICE_CD, HQ_OFFICE_NM, STORE_CD, STORE_NM, ORGN_FG, USER_ID, USER_NM, LEVEL1, LEVEL1_NM
                    ]]>
                </if>
                <!-- 중분류 -->
                <if test='level == "2"'>
                    <![CDATA[
                        GROUP BY HQ_OFFICE_CD, HQ_OFFICE_NM, STORE_CD, STORE_NM, ORGN_FG, USER_ID, USER_NM, LEVEL1, LEVEL1_NM, LEVEL2, LEVEL2_NM
                    ]]>
                </if>
                <!-- 소분류 -->
                <if test='level == "3"'>
                    <![CDATA[
                        GROUP BY HQ_OFFICE_CD, HQ_OFFICE_NM, STORE_CD, STORE_NM, ORGN_FG, USER_ID, USER_NM, LEVEL1, LEVEL1_NM, LEVEL2, LEVEL2_NM, LEVEL3, LEVEL3_NM
                    ]]>
                </if>
            </when>
        </choose>
        ORDER BY HQ_OFFICE_CD, STORE_CD, ORGN_FG
    </select>

</mapper>