<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.status.prod.day.service.impl.ProdDayMapper">
    <!-- 상품별매출 - 일자별 리스트 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_DTL, TB_MS_TABLE, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD
        PARAM    : todayBillSaleDtlVO
        COMMENTS : 영수증별매출상세현황 - 영수증별매출상세 리스트를 조회한다.
    -->
    <select id="getProdDayList" parameterType="prodDayVO" resultType="DefaultMap">
        /* USE : ProdDayMapper.getProdDayList */
                <include refid="CmmSQL.PagingTemplateHeader"/>
 		SELECT  A.LV1_CD
				,A.LV1_NM
                ,A.LV2_CD
                ,A.LV2_NM
<!--                 ,A.LV2_NM_FULL -->
                ,A.LV3_CD
                ,A.LV3_NM
<!--                 ,A.LV3_NM_FULL -->
                ,C.PROD_CD
                ,B.PROD_NM
                ,TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD'), 'YYYY-MM-DD')  AS SALE_DATE
                ,SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
                ,SUM(C.TOT_SALE_AMT)     AS TOT_SALE_AMT
                ,SUM(C.TOT_DC_AMT)       AS TOT_DC_AMT
                ,SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
        <include refid="CmmSQL.PagingTemplateCount"/>
		<choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (
                         <![CDATA[
						SELECT  A.HQ_OFFICE_CD
						,       A.PROD_CLASS_CD
						,		NULL	LV1_CD
						,		NULL	LV2_CD
						,		NULL	LV3_CD
						,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
						                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
						             	)  AS  LV1_NM
						,       DECODE	(A.LV ,1  ,NULL
						                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
						              	)  AS  LV2_NM
						,       DECODE	(A.LV ,1  ,NULL
						                    ,2  ,NULL
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
						             	)  AS  LV3_NM
						FROM    (
						        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
						        FROM    (
						                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
						                    FROM    TB_HQ_PRODUCT_CLASS
						                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
						                )
						        START WITH  P_PROD_CLASS_CD ='00000'  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
						        CONNECT BY
						        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
						        )   A
			    		]]>
                     )                   A,
                     TB_HQ_PRODUCT       B,
                     TB_SL_DAILY_PROD    C
             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
             AND	 B.HQ_OFFICE_CD  = C.HQ_OFFICE_CD
             AND     B.PROD_CD       = C.PROD_CD
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
			<if test='storeCd != null and storeCd != ""'>
			   AND C.STORE_CD IN
				     	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
								#{item}
						</foreach>
			</if>
			<if test='startDate != null and startDate != ""'>
			   AND C.SALE_DATE >= #{startDate}
			</if>
			<if test='endDate != null and endDate != ""'>
			   AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
			</if>
			<if test='prodDayCd != null and prodDayCd != ""'>
	           AND B.PROD_CLASS_CD	IN (
	                                          SELECT
	                                              PROD_CLASS_CD
	                                          FROM
	                                              TB_HQ_PRODUCT_CLASS
	                                          WHERE
	                                              HQ_OFFICE_CD = #{hqOfficeCd}
	                                          START WITH
	                                              PROD_CLASS_CD = #{prodDayCd} AND HQ_OFFICE_CD = #{hqOfficeCd}
	                                          CONNECT BY
	                                              PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD   AND HQ_OFFICE_CD = #{hqOfficeCd}
	                                        )
	        </if>
	        <if test='prodCd != null and prodCd != ""'>
	           AND C.PROD_CD	= #{prodCd}
	        </if>
	    	<if test='prodNm != null and prodNm != ""'>
	           AND B.PROD_NM	LIKE '%'||#{prodNm}||'%'
	        </if>
	         </when>
	         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
	             FROM    (
	                         <![CDATA[
		        				SELECT  A.STORE_CD
								,       A.PROD_CLASS_CD
								,		NULL	LV1_CD
								,		NULL	LV2_CD
								,		NULL	LV3_CD
								,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
								                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
								,       DECODE(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
								              )  AS  LV2_NM
								,       DECODE(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
								FROM    (
								        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
								        FROM    (
								                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
								                    FROM    TB_MS_PRODUCT_CLASS
								                    WHERE   STORE_CD    =  #{storeCd}
								                )
								        START WITH  P_PROD_CLASS_CD ='00000' AND         STORE_CD    =  #{storeCd}
								        CONNECT BY
								        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD  AND         STORE_CD    =  #{storeCd}
								        )   A
		        				]]>
	                     )                   A,
	                     TB_MS_PRODUCT       B,
	                     TB_SL_DAILY_PROD    C
	             WHERE   B.STORE_CD      = #{storeCd}
	             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
	             AND     B.PROD_CD       = C.PROD_CD
	             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
	             AND     C.STORE_CD      = #{storeCd}
				<if test='startDate != null and startDate != ""'>
				   AND C.SALE_DATE >= #{startDate}
				</if>
				<if test='endDate != null and endDate != ""'>
				   AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
				</if>
		        <if test='prodDayCd != null and prodDayCd != ""'>
	                AND     B.PROD_CLASS_CD IN  (
	                                                SELECT              PROD_CLASS_CD
	                                                FROM                TB_MS_PRODUCT_CLASS
	                                                WHERE               STORE_CD        = #{storeCd}
	                                                START WITH          PROD_CLASS_CD   = #{prodDayCd} AND                 STORE_CD        = #{storeCd}
	                                                CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD   AND                 STORE_CD        = #{storeCd}
	                                            )
	            </if>
			    <if test='prodCd != null and prodCd != ""'>
		           AND C.PROD_CD	= #{prodCd}
		        </if>
		    	<if test='prodNm != null and prodNm != ""'>
		           AND B.PROD_NM	LIKE '%'||#{prodNm}||'%'
		        </if>
	         </when>
	      </choose>
	    GROUP BY    A.LV1_CD,
	                A.LV2_CD,
	                A.LV2_NM,
	                A.LV3_CD,
	                A.LV3_NM,
	                A.LV1_NM,
<!-- 	                A.LV2_NM_FULL, -->
<!-- 	                A.LV3_NM_FULL, -->
	                C.PROD_CD,
	                B.PROD_NM,
	                C.SALE_DATE
	    ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD, C.SALE_DATE DESC
    	<include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

<!-- 상품별매출 - 일자별 리스트 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_DTL, TB_MS_TABLE, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD
        PARAM    : todayBillSaleDtlVO
        COMMENTS : 영수증별매출상세현황 - 영수증별매출상세 리스트를 조회한다.
    -->
    <select id="getProdDayExcelList" parameterType="prodDayVO" resultType="DefaultMap">
        /* USE : ProdDayMapper.getProdDayExcelList */
 		SELECT  A.LV1_CD
				,A.LV1_NM
                ,A.LV2_CD
                ,A.LV2_NM
<!--                 ,A.LV2_NM_FULL -->
                ,A.LV3_CD
                ,A.LV3_NM
<!--                 ,A.LV3_NM_FULL -->
                ,C.PROD_CD
                ,B.PROD_NM
                ,TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD'), 'YYYY-MM-DD')  AS SALE_DATE
                ,SUM(C.TOT_SALE_QTY)     AS TOT_SALE_QTY
                ,SUM(C.TOT_SALE_AMT)     AS TOT_SALE_AMT
                ,SUM(C.TOT_DC_AMT)       AS TOT_DC_AMT
                ,SUM(C.REAL_SALE_AMT)    AS REAL_SALE_AMT
        <include refid="CmmSQL.PagingTemplateCount"/>
		<choose>
         <when test='orgnFg != null and orgnFg == "H"'>    <!-- 본사 -->
             FROM    (
                         <![CDATA[
						SELECT  A.HQ_OFFICE_CD
						,       A.PROD_CLASS_CD
						,		NULL	LV1_CD
						,		NULL	LV2_CD
						,		NULL	LV3_CD
						,       DECODE	(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
						                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2)
						             	)  AS  LV1_NM
						,       DECODE	(A.LV ,1  ,NULL
						                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
						              	)  AS  LV2_NM
						,       DECODE	(A.LV ,1  ,NULL
						                    ,2  ,NULL
						                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1)
						             	)  AS  LV3_NM
						FROM    (
						        SELECT  LEVEL LV,  HQ_OFFICE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
						        FROM    (
						                    SELECT  HQ_OFFICE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
						                    FROM    TB_HQ_PRODUCT_CLASS
						                    WHERE   HQ_OFFICE_CD    =   #{hqOfficeCd}
						                )
						        START WITH  P_PROD_CLASS_CD ='00000'  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
						        CONNECT BY
						        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD  AND         HQ_OFFICE_CD    =   #{hqOfficeCd}
						        )   A

			    		]]>
                     )                   A,
                     TB_HQ_PRODUCT       B,
                     TB_SL_DAILY_PROD    C
             WHERE   B.HQ_OFFICE_CD   = #{hqOfficeCd}
             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
             AND	 B.HQ_OFFICE_CD  = C.HQ_OFFICE_CD
             AND     B.PROD_CD       = C.PROD_CD
             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
			<if test='storeCd != null and storeCd != ""'>
			   AND C.STORE_CD IN
				     	<foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
								#{item}
						</foreach>
			</if>
			<if test='startDate != null and startDate != ""'>
			   AND C.SALE_DATE >= #{startDate}
			</if>
			<if test='endDate != null and endDate != ""'>
			   AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
			</if>
			<if test='prodDayCd != null and prodDayCd != ""'>
	           AND B.PROD_CLASS_CD	IN (
	                                          SELECT
	                                              PROD_CLASS_CD
	                                          FROM
	                                              TB_HQ_PRODUCT_CLASS
	                                          WHERE
	                                              HQ_OFFICE_CD = #{hqOfficeCd}
	                                          START WITH
	                                              PROD_CLASS_CD = #{prodDayCd}     AND HQ_OFFICE_CD = #{hqOfficeCd}
	                                          CONNECT BY
	                                              PRIOR PROD_CLASS_CD = P_PROD_CLASS_CD  AND HQ_OFFICE_CD = #{hqOfficeCd}
	                                        )
	        </if>
	        <if test='prodCd != null and prodCd != ""'>
	           AND C.PROD_CD	= #{prodCd}
	        </if>
	    	<if test='prodNm != null and prodNm != ""'>
	           AND B.PROD_NM	LIKE '%'||#{prodNm}||'%'
	        </if>
	         </when>
	         <when test='orgnFg != null and orgnFg == "S"'>    <!-- 가맹점 -->
	             FROM    (
	                         <![CDATA[
		        				SELECT  A.STORE_CD
								,       A.PROD_CLASS_CD
								,		NULL	LV1_CD
								,		NULL	LV2_CD
								,		NULL	LV3_CD
								,       DECODE(A.LV ,1  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,LENGTH(A.AC))
								                    ,    SUBSTR(A.AC,INSTR(A.AC,'^',1,1)+1,INSTR(A.AC,'^',2,1)-2))  AS  LV1_NM
								,       DECODE(A.LV ,1  ,NULL
								                    ,2  ,SUBSTR(A.AC,INSTR(A.AC,'^',2,1)+1,LENGTH(A.AC))
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,2)+1,(INSTR(A.AC,'^',1,3)-1)-INSTR(A.AC,'^',1,2))
								              )  AS  LV2_NM
								,       DECODE(A.LV ,1  ,NULL
								                    ,2  ,NULL
								                    ,3  ,SUBSTR(A.AC,INSTR(A.AC,'^',1,3)+1))  AS  LV3_NM
								FROM    (
								        SELECT  LEVEL LV,  STORE_CD,    PROD_CLASS_CD,   SYS_CONNECT_BY_PATH(PROD_CLASS_NM, '^')  AS AC
								        FROM    (
								                    SELECT  STORE_CD,   PROD_CLASS_CD, PROD_CLASS_NM, P_PROD_CLASS_CD
								                    FROM    TB_MS_PRODUCT_CLASS
								                    WHERE   STORE_CD    =  #{storeCd}
								                )
								        START WITH  P_PROD_CLASS_CD ='00000' AND         STORE_CD    =  #{storeCd}
								        CONNECT BY
								        PRIOR       PROD_CLASS_CD   =   P_PROD_CLASS_CD   AND         STORE_CD    =  #{storeCd}
								        )   A
		        				]]>
	                     )                   A,
	                     TB_MS_PRODUCT       B,
	                     TB_SL_DAILY_PROD    C
	             WHERE   B.STORE_CD      = #{storeCd}
	             AND     B.PROD_CLASS_CD = A.PROD_CLASS_CD(+)
	             AND     B.PROD_CD       = C.PROD_CD
	             AND     C.HQ_OFFICE_CD  = #{hqOfficeCd}
	             AND     C.STORE_CD      = #{storeCd}
				<if test='startDate != null and startDate != ""'>
				   AND C.SALE_DATE >= #{startDate}
				</if>
				<if test='endDate != null and endDate != ""'>
				   AND C.SALE_DATE <![CDATA[<= ]]> #{endDate}
				</if>
		        <if test='prodDayCd != null and prodDayCd != ""'>
	                AND     B.PROD_CLASS_CD IN  (
	                                                SELECT              PROD_CLASS_CD
	                                                FROM                TB_MS_PRODUCT_CLASS
	                                                WHERE               STORE_CD        = #{storeCd}
	                                                START WITH          PROD_CLASS_CD   = #{prodDayCd}  AND                 STORE_CD        = #{storeCd}
	                                                CONNECT BY PRIOR    PROD_CLASS_CD   = P_PROD_CLASS_CD AND                 STORE_CD        = #{storeCd}
	                                            )
	            </if>
			    <if test='prodCd != null and prodCd != ""'>
		           AND C.PROD_CD	= #{prodCd}
		        </if>
		    	<if test='prodNm != null and prodNm != ""'>
		           AND B.PROD_NM	LIKE '%'||#{prodNm}||'%'
		        </if>
	         </when>
	      </choose>
	    GROUP BY    A.LV1_CD,
	                A.LV2_CD,
	                A.LV2_NM,
	                A.LV3_CD,
	                A.LV3_NM,
	                A.LV1_NM,
<!-- 	                A.LV2_NM_FULL, -->
<!-- 	                A.LV3_NM_FULL, -->
	                C.PROD_CD,
	                B.PROD_NM,
	                C.SALE_DATE
	    ORDER BY LV1_CD, LV2_CD, LV3_CD, PROD_CD, C.SALE_DATE DESC
    </select>

</mapper>
