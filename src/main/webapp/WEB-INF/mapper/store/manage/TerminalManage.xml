<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    TerminalManage.xml
    매장터미널관리 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김지은     2018.10.07      최초작성
-->
<mapper namespace="kr.co.solbipos.store.manage.terminalManage.service.impl.TerminalManageMapper">



    <!-- 벤더 목록 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE
        PARAM    : storeManageVO
        COMMENTS : 벤더 목록을 조회한다.
    -->
    <select id="getVendorList" resultType="DefaultMap">
        /* USE : TerminalManageMapper.getVendorList */
        SELECT VAN_FG,
               VAN_CD AS VALUE,
               VAN_NM AS NAME
          FROM TB_CM_VAN_CMPNY
         ORDER BY VAN_FG, VAN_CD
    </select>


    <!-- 매장목록 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE
        PARAM    : storeManageVO
        COMMENTS : 매장목록을 조회한다.
    -->
    <select id="getStoreList" parameterType="DefaultMap" resultType="DefaultMap">
        /* USE : TerminalManageMapper.getStoreList */
        <!--<include refid="CmmSQL.PagingTemplateHeader"/>-->
        SELECT '[' || tho.HQ_OFFICE_CD || '] ' || tho.HQ_OFFICE_NM AS HQ_OFFICE_CD_NM,
               tho.HQ_OFFICE_CD,
               tho.HQ_OFFICE_NM,
               tms.STORE_CD,
               tms.STORE_NM,
               NVL(tms.CLS_FG, tho.CLS_FG) AS CLS_FG,
               NVL(tms.SYS_STAT_FG,  tho.SYS_STAT_FG) AS SYS_STAT_FG,
               tho.SYS_STAT_FG AS HQ_SYS_STAT_FG,
               tms.SYS_OPEN_DATE,
               TO_CHAR(TO_DATE(tms.SYS_OPEN_DATE, 'YYYYMMDD') , 'YYYY/MM/DD')
        <!--<include refid="CmmSQL.PagingTemplateCount"/>-->
        FROM TB_HQ_OFFICE tho,
             TB_MS_STORE tms
        WHERE tms.HQ_OFFICE_CD (+)= tho.HQ_OFFICE_CD
          AND tms.STORE_CD IS NOT NULL
        <if test='orgnFg != null and orgnFg == "A"'>
            AND tms.AGENCY_CD = #{agencyCd}
        </if>
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
          AND tho.HQ_OFFICE_CD LIKE '%'||#{hqOfficeCd}||'%'
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
          AND tho.HQ_OFFICE_NM LIKE '%'||#{hqOfficeNm}||'%'
        </if>
        <if test='storeCd != null and storeCd != ""'>
          AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
          AND tms.STORE_NM LIKE '%'||#{storeNm}||'%'
        </if>
        <if test='clsFg != null and clsFg.toString() != ""'>
          AND tms.CLS_FG = #{clsFg}
        </if>
        <if test='sysStatFg != null and sysStatFg.toString() != ""'>
          AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        ORDER BY tho.HQ_OFFICE_CD, tms.STORE_CD, tms.SYS_OPEN_DATE ASC
        <!--<include refid="CmmSQL.PagingTemplateBottom"/>-->
    </select>

    <!-- 매장 환경변수 값 조회 -->
    <!--
        TABLE    : TB_MS_STORE_ENVST
        COMMENTS : 매장 환경변수 테이블에 등록된 값을 조회한다.
    -->
    <select id="getTerminalEnv" parameterType="storeEnvVO" resultType="String">
        /* TerminalManageMapper.getTerminalEnv */
        SELECT NVL(ENVST_VAL, '0') AS ENVST_VAL
          FROM TB_MS_STORE_ENVST
         WHERE STORE_CD = #{storeCd}
           AND ENVST_CD = #{envstCd}
           AND USE_YN = 'Y'
    </select>


    <!-- 매장 포스목록 조회 -->
    <!--
        TABLE    : TB_MS_POS
        COMMENTS : 매장에 등록된 포스를 조회한다.
    -->
    <select id="getPosList" parameterType="storePosVO" resultType="DefaultMap">
        /* TerminalManageMapper.getPosList */
        SELECT POS_NO AS VALUE,
               POS_NM AS NAME
          FROM TB_MS_POS
         WHERE STORE_CD = #{storeCd}
           AND USE_YN = 'Y'
      ORDER BY POS_NO
    </select>


    <!-- 매장 코너 목록 조회 -->
    <!--
        TABLE    : TB_MS_CORNER
        COMMENTS : 매장에 등록된 코너를 조회한다.
    -->
    <select id="getCornerList" parameterType="storeCornerVO" resultType="DefaultMap">
        /* TerminalManageMapper.getCornerList */
        SELECT CORNR_CD AS VALUE,
               CORNR_NM AS NAME
          FROM TB_MS_CORNER
         WHERE STORE_CD = #{storeCd}
           AND USE_YN = 'Y'
      ORDER BY CORNR_CD
    </select>

    <!-- 매장 터미널 목록 조회 -->
    <!--
        TABLE    : TB_MS_POS_TERMNL
        COMMENTS : 매장에 등록된 포스 터미널을 조회한다.
    -->
    <select id="getPosTerminalList" parameterType="storeTerminalVO" resultType="DefaultMap">
        /* TerminalManageMapper.getPosTerminalList */
        SELECT tmpt.STORE_CD,
               tmpt.POS_NO,
               tmpt.VENDOR_FG,
               (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '078' AND NMCODE_CD = tmpt.VENDOR_FG ) AS VENDOR_FG_NM,
               tmpt.VENDOR_CD,
               tmpt.VENDOR_NM,
               tmpt.VENDOR_TERMNL_NO,
               tmpt.VENDOR_SER_NO
          FROM TB_MS_POS_TERMNL tmpt
         WHERE tmpt.STORE_CD = #{storeCd}
           AND tmpt.POS_NO = #{posNo}
    </select>

    <!-- 코너 터미널 목록 조회 -->
    <!--
        TABLE    : TB_MS_CORNER_TERMNL
        COMMENTS : 매장에 등록된 포스 터미널을 조회한다.
    -->
    <select id="getCornerTerminalList" parameterType="storeTerminalVO" resultType="DefaultMap">
        /* TerminalManageMapper.getCornerTerminalList */
        SELECT tmct.STORE_CD,
               tmct.CORNR_CD,
               tmct.VENDOR_FG,
               (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '078' AND NMCODE_CD = tmct.VENDOR_FG ) AS VENDOR_FG_NM,
               tmct.VENDOR_CD,
               tmct.VENDOR_NM,
               tmct.VENDOR_TERMNL_NO,
               tmct.VENDOR_SER_NO
          FROM TB_MS_CORNER_TERMNL tmct
         WHERE tmct.STORE_CD = #{storeCd}
           AND tmct.CORNR_CD = #{cornrCd}
    </select>

    <!-- 매장 환경변수 값 변경 -->
    <!--
        TABLE    : TB_MS_STORE_ENVST
        COMMENTS : 매장의 환경변수 값을 수정한다.
    -->
    <update id="updateTerminalEnvst" parameterType="storeEnvVO">
        /* TerminalManageMapper.updateTerminalEnvst */
        MERGE INTO TB_MS_STORE_ENVST tmse
        USING DUAL
           ON (
                   tmse.STORE_CD = #{storeCd}
               AND tmse.ENVST_CD = #{envstCd}
          )
          WHEN MATCHED THEN
               UPDATE
                  SET ENVST_VAL = #{envstVal},
                      MOD_DT = #{modDt},
                      MOD_ID = #{modId}
          WHEN NOT MATCHED THEN
               INSERT
               (
                   STORE_CD,
                   ENVST_CD,
                   ENVST_VAL,
                   DIRCT_IN_YN,
                   USE_YN,
                   REG_DT,
                   REG_ID,
                   MOD_DT,
                   MOD_ID
               ) VALUES (
                   #{storeCd},
                   #{envstCd},
                   #{envstVal},
                   'N',
                   'Y',
                   #{regDt},
                   #{regId},
                   #{modDt},
                   #{modId}
               )
    </update>

    <!-- 포스 터미널 정보 등록 -->
    <!--
        TABLE    : TB_MS_POS_TERMNL
        COMMENTS : 포스의 터미널 정보를 등록한다.
    -->
    <insert id="insertPosTerminalInfo" parameterType="storeTerminalVO">
        /* TerminalManageMapper.insertPosTerminalInfo */
        INSERT INTO TB_MS_POS_TERMNL
        (   STORE_CD,
            POS_NO,
            VENDOR_FG,
            VENDOR_CD,
            VENDOR_NM,
            VENDOR_TERMNL_NO,
            VENDOR_SER_NO,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{storeCd},
            #{posNo},
            #{vendorFg},
            (SELECT VAN_CD FROM TB_CM_VAN_CMPNY WHERE VAN_FG = #{vendorFg} AND VAN_NM = #{vendorNm}),
            #{vendorNm},
            #{vendorTermnlNo},
            #{vendorSerNo},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 포스 터미널 정보 수정 -->
    <!--
        TABLE    : TB_MS_POS_TERMNL
        COMMENTS : 포스 터미널의 정보를 수정한다.
    -->
    <update id="updatePosTerminalInfo" parameterType="storeTerminalVO">
        /* TerminalManageMapper.updatePosTerminalInfo */
        UPDATE TB_MS_POS_TERMNL
           SET VENDOR_CD = (SELECT VAN_CD FROM TB_CM_VAN_CMPNY WHERE VAN_FG = #{vendorFg} AND VAN_NM = #{vendorNm}),
               VENDOR_NM =  #{vendorNm},
               VENDOR_TERMNL_NO = #{vendorTermnlNo},
               VENDOR_SER_NO = #{vendorSerNo},
               MOD_DT = #{modDt},
               MOD_ID = #{modId}
         WHERE STORE_CD = #{storeCd}
           AND POS_NO = #{posNo}
           AND VENDOR_FG = #{vendorFg}
           AND VENDOR_CD = #{vendorCd}
    </update>

    <!-- 포스 터미널 정보 삭제 -->
    <!--
        TABLE    : TB_MS_POS_TERMNL
        COMMENTS : 포스 터미널의 정보를 삭제한다.
    -->
    <delete id="deletePosTerminalInfo" parameterType="storeTerminalVO">
        /* TerminalManageMapper.deletePosTerminalInfo */
        DELETE
        FROM TB_MS_POS_TERMNL
        WHERE STORE_CD = #{storeCd}
        AND POS_NO = #{posNo}
        AND VENDOR_FG = #{vendorFg}
        AND VENDOR_CD = #{vendorCd}
    </delete>

    <!-- 코너 터미널 정보 등록 -->
    <!--
        TABLE    : TB_MS_CORNER_TERMNL
        COMMENTS : 코너 터미널 정보를 등록한다.
    -->
    <insert id="insertCornerTerminalInfo" parameterType="storeTerminalVO">
        /* TerminalManageMapper.insertCornerTerminalInfo */
        INSERT INTO TB_MS_CORNER_TERMNL
        (   STORE_CD,
            CORNR_CD,
            VENDOR_FG,
            VENDOR_CD,
            VENDOR_NM,
            VENDOR_TERMNL_NO,
            VENDOR_SER_NO,
            REG_DT,
            REG_ID,
            MOD_DT,
            MOD_ID
        )
        VALUES
        (
            #{storeCd},
            #{cornrCd},
            #{vendorFg},
            (SELECT VAN_CD FROM TB_CM_VAN_CMPNY WHERE VAN_FG = #{vendorFg} AND VAN_NM = #{vendorNm}),
            #{vendorNm},
            #{vendorTermnlNo},
            #{vendorSerNo},
            #{regDt},
            #{regId},
            #{modDt},
            #{modId}
        )
    </insert>

    <!-- 코너 터미널 정보 수정 -->
    <!--
        TABLE    : TB_MS_CORNER_TERMNL
        COMMENTS : 코너 터미널의 정보를 수정한다.
    -->
    <update id="updateCornerTerminalInfo" parameterType="storeTerminalVO">
        /* TerminalManageMapper.updateCornerTerminalInfo */
        UPDATE TB_MS_CORNER_TERMNL
           SET VENDOR_CD = (SELECT VAN_CD FROM TB_CM_VAN_CMPNY WHERE VAN_FG = #{vendorFg} AND VAN_NM = #{vendorNm}),
               VENDOR_NM =  #{vendorNm},
               VENDOR_TERMNL_NO = #{vendorTermnlNo},
               VENDOR_SER_NO = #{vendorSerNo},
               MOD_DT = #{modDt},
               MOD_ID = #{modId}
         WHERE STORE_CD = #{storeCd}
           AND CORNR_CD = #{cornrCd}
           AND VENDOR_FG = #{vendorFg}
           AND VENDOR_CD = #{vendorCd}
    </update>

    <!-- 코너 터미널 정보 삭제 -->
    <!--
        TABLE    : TB_MS_CORNER_TERMNL
        COMMENTS : 코너 터미널의 정보를 삭제한다.
    -->
    <delete id="deleteCornerTerminalInfo" parameterType="storeTerminalVO">
        /* TerminalManageMapper.deleteCornerTerminalInfo */
        DELETE
        FROM TB_MS_CORNER_TERMNL
        WHERE STORE_CD = #{storeCd}
        AND CORNR_CD = #{cornrCd}
        AND VENDOR_FG = #{vendorFg}
        AND VENDOR_CD = #{vendorCd}
    </delete>

    <!-- 코너 저장 -->
    <!--
        TABLE    : TB_MS_CORNER
        PARAM    : storeCornerVO
        COMMENTS : 매장의 코너를 등록한다.
    -->
    <insert id="insertCorner" parameterType="storeCornerVO" >
        /* USE : TerminalManageMapper.insertCorner */
        INSERT INTO TB_MS_CORNER
        (      STORE_CD,
               CORNR_CD,
               CORNR_NM,
               OWNER_NM,
               BIZ_NO,
               TEL_NO,
               VAN_CD,
               VAN_TERMNL_NO,
               VAN_SER_NO,
               USE_YN,
               REG_DT,
               REG_ID,
               MOD_DT,
               MOD_ID
        )
        VALUES
        (
              #{storeCd},
              (SELECT LPAD(TO_CHAR(NVL(MAX(TO_NUMBER(CORNR_CD)),0) + 1), 2, '0') AS MAX FROM TB_MS_CORNER WHERE STORE_CD = #{storeCd}),
              #{cornrNm},
              #{ownerNm},
              #{bizNo},
              #{telNo},
              #{vanCd},
              #{vanTermnlNo},
              #{vanSerNo},
              #{useYn},
              #{regDt},
              #{regId},
              #{modDt},
              #{modId}
        )
    </insert>

    <!-- 매장터미널관리 조회 -->
    <!--
        TABLE    : TB_HQ_OFFICE, TB_HQ_OFFICE
        COMMENTS :
    -->
    <select id="getTerminalManageList"  parameterType="storeTerminalVO" resultType="DefaultMap">
        /* TerminalManageMapper.getTerminalManageList */
        SELECT
        tho.HQ_OFFICE_CD,
        tho.HQ_OFFICE_NM,
        tms.STORE_CD,
        tms.STORE_NM,
        tho.CLS_FG,
        tms.SYS_STAT_FG
        FROM TB_HQ_OFFICE tho,
        TB_MS_STORE tms,
        TB_CM_AGENCY tca
        WHERE 1=1
        AND tms.STORE_CD IS NOT NULL
        AND tca.AGENCY_CD = tms.AGENCY_CD
        <if test='orgnFg != null and orgnFg == "A"'>
            AND (tca.AGENCY_CD = #{agencyCd} OR tca.P_AGENCY_CD = #{agencyCd})
        </if>
        <if test="hqOfficeCd != null and hqOfficeCd != ''">
            AND tho.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
        </if>
        <if test="hqOfficeNm != null and hqOfficeNm != ''">
            AND tho.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
        </if>
        <if test="storeCd != null and storeCd != ''">
            AND tms.STORE_CD LIKE '%'|| #{storeCd} ||'%'
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%'|| #{storeNm} ||'%'
        </if>
        <if test='clsFg != null and clsFg != ""'>
            AND tho.CLS_FG = #{clsFg}
        </if>
        <if test='sysStatFg != null and sysStatFg != ""'>
            AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        AND tho.HQ_OFFICE_CD (+)= tms.HQ_OFFICE_CD
        ORDER BY tho.HQ_OFFICE_CD, tms.STORE_CD
    </select>

</mapper>
