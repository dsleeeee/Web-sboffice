<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    View.xml
    매장정보 조회 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김영근     2018.08.13      최초작성
-->
<mapper namespace="kr.co.solbipos.base.store.view.service.impl.ViewMapper">

    <!-- 매장정보조회  -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : 매장정보조회한다.
    -->
    <select id="getViewList" parameterType="viewVO" resultType="DefaultMap">
        /* USE : ViewMapper.getViewList */
      <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT tms.STORE_CD,
               tms.STORE_NM,
               thb.HQ_BRAND_NM,
               tms.CLS_FG,
               tms.BIZ_NO ,
               tms.OWNER_NM,
               tms.TEL_NO,
               tms.POST_NO || ') ' || tms.ADDR || tms.ADDR_DTL  AS ADDRESS,
               tmp.POS_VER_NO,
               tms.SYS_STAT_FG,
               TO_CHAR(TO_DATE(tms.SYS_OPEN_DATE, 'yyyyMMdd'), 'YYYY/MM/DD') AS SYS_OPEN_DATE,
               TO_CHAR(TO_DATE(tms.SYS_CLOSURE_DATE, 'yyyyMMdd'), 'YYYY/MM/DD') AS SYS_CLOSURE_DATE,
               tme.USER_ID AS MS_USER_ID,
               tms.ADDR,
               tms.LATITUDE,
               tms.LONGITUDE
      <include refid="CmmSQL.PagingTemplateCount"/>
          FROM TB_MS_STORE tms,
               TB_MS_POS tmp,
               TB_MS_EMPLOYEE tme,
               TB_HQ_BRAND thb
         WHERE tms.HQ_OFFICE_CD =  #{hqOfficeCd}
           AND tms.HQ_OFFICE_CD = thb.HQ_OFFICE_CD
           AND tms.HQ_BRAND_CD = thb.HQ_BRAND_CD
           AND tmp.STORE_CD (+)= tms.STORE_CD
           AND tmp.POS_NO (+)= '01' -- 기본포스(포스 최신버전 가져오기 위함)
           AND tmp.USE_YN (+)= 'Y'
           AND tme.STORE_CD (+)= tms.STORE_CD
           AND tme.EMP_NO (+)= '0000'
        <if test='storeCd != null and storeCd != ""'>
           AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
           AND tms.STORE_NM  LIKE '%'||#{storeNm}||'%'
        </if>
        <if test='clsFg != null and clsFg != ""'>
           AND tms.CLS_FG = #{clsFg}
        </if>
        <if test='sysStatFg != null and sysStatFg != ""'>
           AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
         ORDER BY tms.STORE_CD ASC
      <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매장정보 리스트 엑셀 조회(조회에서 페이징만 제거) -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : 매장정보조회한다.(엑셀용)
    -->
    <select id="getStoreListExcel" parameterType="viewVO" resultType="DefaultMap">
        /* USE : ViewMapper.getStoreListExcel */
        SELECT tms.STORE_CD,
        tms.STORE_NM,
        tms.CLS_FG,
        tms.BIZ_NO ,
        tms.OWNER_NM,
        tms.TEL_NO,
        tms.POST_NO || ') ' || tms.ADDR || tms.ADDR_DTL  AS ADDRESS,
        tmp.POS_VER_NO,
        tms.SYS_STAT_FG,
        TO_CHAR(TO_DATE(tms.SYS_OPEN_DATE, 'yyyyMMdd'), 'YYYY/MM/DD') AS SYS_OPEN_DATE,
        TO_CHAR(TO_DATE(tms.SYS_CLOSURE_DATE, 'yyyyMMdd'), 'YYYY/MM/DD') AS SYS_CLOSURE_DATE
        FROM TB_MS_STORE tms,
        TB_MS_POS tmp
        WHERE tms.HQ_OFFICE_CD =  #{hqOfficeCd}
        AND tmp.STORE_CD (+)= tms.STORE_CD
        AND tmp.POS_NO (+)= '01' -- 기본포스(포스 최신버전 가져오기 위함)
        AND tmp.USE_YN (+)= 'Y'
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM  LIKE '%'||#{storeNm}||'%'
        </if>
        <if test='clsFg != null and clsFg != ""'>
            AND tms.CLS_FG = #{clsFg}
        </if>
        <if test='sysStatFg != null and sysStatFg != ""'>
            AND tms.SYS_STAT_FG = #{sysStatFg}
        </if>
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 선택한 매장브랜드가 있을 때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 선택한 매장브랜드가 없을 때('전체' 일때), 사용자 관리브랜드에 속한 정보만 조회
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        ORDER BY tms.STORE_CD ASC
    </select>


    <!-- 매장정보상세조회  -->
    <!--
        TABLE    : TB_MS_STORE, TB_MS_STORE_ENVST
        COMMENTS : 매장정보상세조회한다.
    -->
    <select id="getViewDetail" parameterType="viewVO" resultType="DefaultMap">
        /* USE : ViewMapper.getViewDetail */
        SELECT  X.*,
                (SELECT TCED.ENVST_VAL_NM FROM TB_CM_ENVST_DTL TCED WHERE TCED.ENVST_CD = '1028' AND TCED.ENVST_VAL_CD = X.CORNER_USE_YN ) CORNER_USE_YN_NM,
                (SELECT TCED.ENVST_VAL_NM FROM TB_CM_ENVST_DTL TCED WHERE TCED.ENVST_CD = '0007' AND TCED.ENVST_VAL_CD = X.CASH_BILL_YN ) CASH_BILL_YN_NM
          FROM
          (
            SELECT  TMS.STORE_CD,
                    TMS.STORE_NM,
                    DECODE(TMS.HQ_OFFICE_CD, '00000', '단독', '가맹') AS STORE_TYPE_NM,
                    TMS.CLS_FG,
                    (SELECT TCN.NMCODE_NM FROM TB_CM_NMCODE TCN  WHERE TCN.NMCODE_GRP_CD='001' AND TCN.NMCODE_CD = TMS.CLS_FG) AS CLS_FG_NM,
                    TMS.SYS_STAT_FG,
                    (SELECT TCN.NMCODE_NM FROM TB_CM_NMCODE TCN  WHERE TCN.NMCODE_GRP_CD='005' AND TCN.NMCODE_CD = TMS.SYS_STAT_FG) AS SYS_STAT_FG_NM,
                    (SELECT COUNT(TMP.STORE_CD) FROM TB_MS_POS TMP WHERE TMP.STORE_CD = TMS.STORE_CD AND TMP.USE_YN = 'Y') AS POS_CNT,
                    TMS.SYS_OPEN_DATE,
                    TMS.SYS_CLOSURE_DATE,
                    TMS.BIZ_STORE_NM,
                    TMS.OWNER_NM,
                    TMS.BIZ_NO,
                    TMS.TEL_NO,
                    TMS.MP_NO,
                    TMS.FAX_NO,
                    TMS.EMAIL_ADDR,
                    TMS.HMPG_ADDR,
                    TMS.POST_NO || ') ' || TMS.ADDR || TMS.ADDR_DTL AS ADDRESS,
                    TMS.AREA_CD,
                    (SELECT TCN.NMCODE_NM FROM TB_CM_NMCODE TCN  WHERE TCN.NMCODE_GRP_CD='061' AND TCN.NMCODE_CD = TMS.AREA_CD) AS AREA_NM,
                    TMS.VAN_CD,
                    (SELECT TCVC.VAN_NM FROM TB_CM_VAN_CMPNY TCVC  WHERE TCVC.VAN_CD = TMS.VAN_CD AND TCVC.VAN_FG = '01') AS VAN_NM,
                    TMS.AGENCY_CD,
                    (SELECT AGENCY_NM FROM TB_CM_AGENCY TMA WHERE TMA.AGENCY_CD = TMS.AGENCY_CD) AGENCY_NM,
                    TMS.SYS_REMARK,
                    TMS.HD_REMARK,
                    TMS.REMARK,
                    NVL((SELECT TMSE.ENVST_VAL FROM TB_MS_STORE_ENVST TMSE WHERE TMSE.STORE_CD   = TMS.STORE_CD AND TMSE.ENVST_CD = '1028' ), 0 ) CORNER_USE_YN,
                    NVL((SELECT TMSE.ENVST_VAL FROM TB_MS_STORE_ENVST TMSE WHERE TMSE.STORE_CD   = TMS.STORE_CD AND TMSE.ENVST_CD = '0007' ), 0 ) CASH_BILL_YN
              FROM  TB_MS_STORE TMS
             WHERE  TMS.STORE_CD = #{storeCd}
           ) X
    </select>

    <!-- 매장의 코너 사용여부 조회 -->
    <!--
        TABLE    : TB_MS_STORE_ENVST
        COMMENTS : 매장의 코너 사용여부를 조회한다.
    -->
    <select id="getCornerUseYnVal" parameterType="storeEnvVO" resultType="String">
        /* ViewMapper.getTerminalEnv */
        SELECT NVL(ENVST_VAL, '0') AS ENVST_VAL
          FROM TB_MS_STORE_ENVST
         WHERE STORE_CD = #{storeCd}
           AND ENVST_CD = #{envstCd}
           AND USE_YN = 'Y'
    </select>

     <!-- 코너별 터미널 목록 조회 -->
    <select id="getCornerTerminalList" parameterType="DefaultMap" resultType="DefaultMap">
        /* USE : ViewMapper.getCornerTerminalList */
        <![CDATA[
        SELECT tmct.STORE_CD,
               tmct.CORNR_CD,
               tmct.VENDOR_FG,
               (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '078' AND NMCODE_CD = tmct.VENDOR_FG ) AS VENDOR_FG_NM,
               tmct.VENDOR_CD,
               tmct.VENDOR_NM,
               tmct.VENDOR_TERMNL_NO,
               tmct.VENDOR_SER_NO
          FROM TB_MS_CORNER_TERMNL tmct
         WHERE tmct.STORE_CD = #{storeCd}
         ORDER BY tmct.CORNR_CD, tmct.VENDOR_FG, tmct.VENDOR_CD
        ]]>
    </select>

    <!-- 포스별 터미널목록 조회 -->
    <select id="getPosTerminalList" parameterType="DefaultMap" resultType="DefaultMap">
        /* USE : ViewMapper.getPosTerminalList */
        <![CDATA[
         SELECT tmpt.STORE_CD,
                tmpt.POS_NO,
                tmpt.VENDOR_FG,
                (SELECT NMCODE_NM FROM TB_CM_NMCODE WHERE NMCODE_GRP_CD = '078' AND NMCODE_CD = tmpt.VENDOR_FG ) AS VENDOR_FG_NM,
                tmpt.VENDOR_CD,
                tmpt.VENDOR_NM,
                tmpt.VENDOR_TERMNL_NO,
                tmpt.VENDOR_SER_NO
           FROM TB_MS_POS_TERMNL tmpt
          WHERE tmpt.STORE_CD = #{storeCd}
          ORDER BY tmpt.POS_NO, tmpt.VENDOR_FG, tmpt.VENDOR_CD
        ]]>
    </select>

    <!-- 포스 목록 조회 -->
    <!--
        TABLE    : TB_MS_POS
        PARAM    : storePosEnvVO
        COMMENTS : 포스환경정보에서 보여줄 매장의 포스 목록을 조회한다.
    -->
    <select id="getPosList" parameterType="storePosEnvVO" resultType="DefaultMap">
          /* USE : ViewMapper.getPosList */
          <![CDATA[
          SELECT ROWNUM,
                 POS_NO,
                 '['||POS_NO||']'||DECODE(POS_NM, NULL, 'POS'||POS_NO, POS_NM) AS POS_CD_NM,
                 POS_NM
            FROM TB_MS_POS
           WHERE STORE_CD = #{storeCd}
          ]]>
    </select>


    <!-- 매장 공통코드 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_STORE_NMCODE
        PARAM    :
        COMMENTS : 매장의 공통코드를 복사한다.
    -->
    <select id="copyStoreNmcode" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
        /* USE : ViewMapper.copyStoreNmcode */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_STORE_NNCODE
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 매장 환경 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_STORE_ENVST
        PARAM    :
        COMMENTS : 매장환경을 복사한다.
    -->
    <select id="copyStoreEnv" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
        /* USE : ViewMapper.copyStoreEnv */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_STORE_ENVST
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{envstFg},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 포스 환경 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        PARAM    :
        COMMENTS : 매장환경을 복사한다.
    -->
    <select id="copyPosEnv" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
        /* USE : ViewMapper.copyPosEnv */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_POS_ENVST
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 메인포스가 아닌경우 4048 스마트오더 미사용 강제수정 -->
    <!--
        TABLE    : TB_MS_POS_ENVST
        PARAM    : storePosEnvVO
        COMMENTS : 메인포스가 아닌경우 4048 스마트오더 미사용 강제수정
    -->
    <update id="setEnv4048" parameterType="copyStoreEnvVO">
        /* USE : StoreManageMapper.setEnv4048 */
        UPDATE  TB_MS_POS_ENVST
        SET     ENVST_VAL = '0'
            ,   POS_FG  = 'W'
        WHERE   STORE_CD = #{targetStoreCd}
          AND     POS_NO IN (SELECT POS_NO FROM TB_MS_POS_ENVST WHERE STORE_CD = #{targetStoreCd} AND ENVST_CD = '4021' AND ENVST_VAL = '2')
          AND     ENVST_CD = '4048'
    </update>
    <!-- 매장 상품 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PRODUCT_CLASS, TB_MS_PRODUCT, TB_MS_PRODUCT_BARCD,
                   TB_MS_PRODUCT_SDATTR, TB_MS_PRODUCT_SDATTR_CLASS,
                   TB_MS_PRODUCT_SDSEL_PROD, TB_MS_PRODUCT_SDSEL_CLASS, TB_MS_PRODUCT_SDSEL_GROUP
        PARAM    :
        COMMENTS : 매장 상품과 상품 관련 테이블 정보를 복사한다.
    -->
    <select id="copyProduct" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
        /* USE : ViewMapper.copyProduct */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_PRODUCT
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 상품 판매가 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PRODUCT_SALE_PRICE , TB_MS_PRODUCT_SALE_HISTORY
        PARAM    :
        COMMENTS : 판매가 테이블 정보를 복사한다.
    -->
    <select id="copySalePrice" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
        /* USE : ViewMapper.copySalePrice */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_PRODUCT_SALE_PRICE
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>


    <!-- 포스 기능키 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_CM_POS_FNKEY_STORE , TB_MS_STORE_FNKEY, TB_MS_POS_FNKEY,
                   TB_WB_STORE_CONFG_XML, TB_WB_POS_CONFG_XML (6020, 6021)
        PARAM    :
        COMMENTS : 매장 포스기능키와 관련 정보를 복사한다.
    -->
    <select id="copyPosFnKey" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyPosFnKey */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_POS_FNKEY
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 포스기능키 XML 조회 -->
    <!--
        TABLE    : TB_WB_POS_CONFG_XML
        PARAM    : DefaultMap
        COMMENTS : 포스기능키 구성 XML 정보를 조회한다.
    -->
    <select id="getFuncKeyXml" parameterType="DefaultMap" resultType="java.lang.String">
        /* USE : PosFuncMapper.getFuncKeyXml */
        SELECT
            XML
        FROM
            TB_WB_POS_CONFG_XML twpcx
        WHERE
            twpcx.STORE_CD = #{storeCd}
            AND twpcx.POS_NO = #{posNo}
            AND twpcx.CONFG_FG = #{confgFg}
            AND twpcx.USE_YN = 'Y'
    </select>

    <!-- 포스 기능키 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_CM_POS_FNKEY_STORE , TB_MS_STORE_FNKEY, TB_MS_POS_FNKEY,
                   TB_WB_STORE_CONFG_XML, TB_WB_POS_CONFG_XML (6020, 6021)
        PARAM    :
        COMMENTS : 매장 포스기능키와 관련 정보를 복사한다.
    -->
    <select id="copyPosFnKeyXML" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyPosFnKey */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_POS_FNKEY_XML
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{confgFg},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 판매터치키 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_TOUCH_KEY, TB_MS_TOUCH_KEY_CLASS
                   TB_WB_STORE_CONFG_XML, TB_WB_POS_CONFG_XML (6020, 6021)
        PARAM    :
        COMMENTS : 매장 판매터치키와 관련 정보를 복사한다.
    -->
    <select id="copyTouchKey" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyTouchKey */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_TOUCH_KEY
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 판매터치키 XML 조회 -->
    <!--
        TABLE    : TB_WB_STORE_CONFG_XML
        PARAM    : DefaultMap
        COMMENTS : 판매터치키 구성 XML 정보를 조회한다.
    -->
    <select id="getTouchKeyXml" parameterType="DefaultMap" resultType="java.lang.String">
        /* USE : PosFuncMapper.getTouchKeyXml */
        SELECT
            XML
          FROM
            TB_WB_STORE_CONFG_XML twscx
         WHERE
            twscx.STORE_CD = #{storeCd}
            AND twscx.CONFG_FG = #{confgFg}
            AND twscx.USE_YN = 'Y'
    </select>

    <!-- 판매터치키 XML 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_TOUCH_KEY, TB_MS_TOUCH_KEY_CLASS
                   TB_WB_STORE_CONFG_XML, TB_WB_POS_CONFG_XML (6020, 6021)
        PARAM    :
        COMMENTS : 매장 판매터치키와 관련 정보를 복사한다.
    -->
    <select id="copyTouchKeyXML" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyTouchKeyXML */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_TOUCH_KEY_XML
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{confgFg},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 쿠폰분류 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PAY_METHOD_CLASS (3)
        PARAM    :
        COMMENTS : 매장 쿠폰분류를 복사한다.
    -->
    <select id="copyCouponClass" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyCouponClass */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_COUPON_CLASS
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 상품권 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PAY_METHOD_CLASS (1), TB_MS_GIFT
        PARAM    :
        COMMENTS : 매장 상품권과 관련 정보를 복사한다.
    -->
    <select id="copyGift" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyGift */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_GIFT
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 입금/출금계정 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_ACCOUNT
        PARAM    :
        COMMENTS : 금전처리의 입금/출금계정 관련 정보를 복사한다.
    -->
    <select id="copyAccount" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyAccount */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_ACCOUNT
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 원산지 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PRODUCT_RECP_ORIGIN
        PARAM    :
        COMMENTS : 원산지 관련 정보를 복사한다.
    -->
    <select id="copyRecpOrigin" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyRecpOrigin */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_PRODUCT_RECP_ORIGIN
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 식품 알레르기 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PRODUCT_ALGI_INFO
        PARAM    :
        COMMENTS : 식품 알레르기 관련 정보를 복사한다.
    -->
    <select id="copyFoodAllergy" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyFoodAllergy */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_PRODUCT_ALGI_INFO
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 배달상품명칭매핑 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_PRODUCT_DLVR_PROD_NM
        PARAM    :
        COMMENTS : 배달상품명칭매핑 관련 정보를 복사한다.
    -->
    <select id="copyDlvrProd" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyDlvrProd */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_PRODUCT_DLVR_PROD
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{regId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 매장환경 복사를 위한 정보 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getStoreEnvInfoList" parameterType="copyStoreEnvVO" resultType="DefaultMap">
        /* ViewMapper.getStoreEnvInfoList */
        SELECT
        tcn.NMCODE_CD,
        tcn.NMCODE_NM
        FROM TB_CM_NMCODE tcn
        WHERE 1=1
        AND tcn.NMCODE_GRP_CD = '101'
        AND tcn.NMCODE_ITEM_1 = 'Y'
    </select>

    <!-- 매장 리스트 조회 -->
    <!--
        TABLE    : TB_MS_STORE
        PARAM    : viewVO
        COMMENTS : 매장 리스트 조회
    -->
    <select id="getStoreList" parameterType="viewVO" resultType="DefaultMap">
        /* ViewMapper.getStoreList */
        SELECT (SELECT HQ_BRAND_NM FROM TB_HQ_BRAND thb WHERE thb.HQ_OFFICE_CD = tms.HQ_OFFICE_CD AND thb.HQ_BRAND_CD = tms.HQ_BRAND_CD) AS BRAND,
               tms.STORE_CD,
               tms.STORE_NM
          FROM TB_MS_STORE tms,
               TB_MS_STORE_INFO tmsi
         WHERE tms.HQ_OFFICE_CD = #{hqOfficeCd}
           AND tms.STORE_CD = tmsi.STORE_CD (+)
        <if test='storeCd != null and storeCd != ""'>
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            AND tms.STORE_NM  LIKE '%'||#{storeNm}||'%'
        </if>
        <if test='originalStoreCd != null and originalStoreCd != ""'>
            AND tms.STORE_CD != #{originalStoreCd}
        </if>
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 매장브랜드 선택일때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 매장브랜드 전체일때
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
            AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
        </if>
        <if test='momsStoreFg02 != null and momsStoreFg02 != ""'>
            AND tmsi.MOMS_STORE_FG_02 = #{momsStoreFg02}
        </if>
        <if test='momsStoreFg03 != null and momsStoreFg03 != ""'>
            AND tmsi.MOMS_STORE_FG_03 = #{momsStoreFg03}
        </if>
        <if test='momsStoreFg04 != null and momsStoreFg04 != ""'>
            AND tmsi.MOMS_STORE_FG_04 = #{momsStoreFg04}
        </if>
        <if test='momsStoreFg05 != null and momsStoreFg05 != ""'>
            AND tmsi.MOMS_STORE_FG_05 = #{momsStoreFg05}
        </if>
         ORDER
            BY tms.STORE_CD
    </select>

    <!-- 매장 판매터치키 콤보박스 데이터 조회 -->
    <!--
        TABLE    : TB_MS_TOUCH_KEY_CLASS
        PARAM    : viewVO
        COMMENTS : 매장 판매터치키 콤보박스 데이터를 조회한다.
    -->
    <select id="getStoreTouchKeyGrpCombo" parameterType="viewVO" resultType="DefaultMap">
        /* ViewMapper.getStoreTouchKeyGrpCombo */
        SELECT  DISTINCT tmtkc.TUKEY_GRP_CD AS VALUE,
                NVL2(tmtkg.TUKEY_GRP_NM, '[' || tmtkc.TUKEY_GRP_CD || ']' || tmtkg.TUKEY_GRP_NM,  '[' || tmtkc.TUKEY_GRP_CD || ']') AS NAME
        FROM 	TB_MS_TOUCH_KEY_CLASS tmtkc
        ,		TB_MS_TOUCH_KEY_GROUP tmtkg
        WHERE   tmtkc.STORE_CD = #{storeCd}
        AND		tmtkc.STORE_CD = tmtkg.STORE_CD(+)
        AND		tmtkc.TUKEY_GRP_CD = tmtkg.TUKEY_GRP_CD(+)
        ORDER BY tmtkc.TUKEY_GRP_CD
    </select>

    <!-- 판매터치키 선택그룹 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_TOUCH_KEY, TB_MS_TOUCH_KEY_CLASS
                   TB_WB_STORE_CONFG_XML, TB_WB_POS_CONFG_XML (6020, 6021)
        PARAM    :
        COMMENTS : 매장 판매터치키 선택그룹 정보를 복사한다.
    -->
    <select id="copyTouchKeyGrp" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyTouchKeyGrp */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_TOUCH_KEY_GRP
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{tukeyGrpCd},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 판매터치키 선택그룹 XML 복사 프로시져 호출 -->
    <!--
        TABLE    : TB_MS_TOUCH_KEY, TB_MS_TOUCH_KEY_CLASS
                   TB_WB_STORE_CONFG_XML, TB_WB_POS_CONFG_XML (6020, 6021)
        PARAM    :
        COMMENTS : 매장 판매터치키 선택그룹 XML 정보를 복사한다.
    -->
    <select id="copyTouchKeyGrpXML" statementType="CALLABLE" parameterType="copyStoreEnvVO" resultType="String">
          /* USE : ViewMapper.copyTouchKeyGrpXML */
        {
            CALL PKG_MS_STORE_COPY.SP_MS_TOUCH_KEY_GRP_XML
            (
                #{hqOfficeCd},
                #{originalStoreCd},
                #{targetStoreCd},
                #{tukeyGrpCd},
                #{confgFg},
                #{regDt},
                #{regId},
                #{modDt},
                #{modId},
                #{result, mode=OUT, jdbcType=VARCHAR}
            )
        }
    </select>

    <!-- 터치키 그룹명 복사 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY_GROUP, TB_MS_TOUCH_KEY_GROUP
        PARAM    : touchKeyVO
        COMMENTS : 터치키 그룹명 복사
    -->
    <insert id="copyTouchKeyGrpNm" parameterType="copyStoreEnvVO">
        /* USE : ViewMapper.copyTouchKeyGrpNm */
        INSERT INTO TB_MS_TOUCH_KEY_GROUP
        (
            STORE_CD
        ,   TUKEY_GRP_CD
        ,   TUKEY_GRP_NM
        ,   REG_DT
        ,   REG_ID
        ,   MOD_DT
        ,   MOD_ID
        )
        SELECT  #{targetStoreCd}
        ,       TUKEY_GRP_CD
        ,		TUKEY_GRP_NM
        ,       #{regDt}
        ,       #{regId}
        ,       #{modDt}
        ,       #{modId}
        FROM    TB_MS_TOUCH_KEY_GROUP
        WHERE   STORE_CD = #{originalStoreCd}
        <if test="tukeyGrpCd != null and tukeyGrpCd != ''">
        AND     TUKEY_GRP_CD = #{tukeyGrpCd}
        </if>
    </insert>

    <!-- 판매터치키 그룹 삭제 -->
    <!--
        TABLE    : TB_HQ_TOUCH_KEY_CLASS, TB_MS_TOUCH_KEY_CLASS
        PARAM    : touchKeyClassVO
        COMMENTS : 판매터치키 그룹 정보를 삭제한다.
    -->
    <delete id="deleteTouchKeyGrpNm" parameterType="copyStoreEnvVO">
        /* USE : TouchkeyMapper.deleteTouchKeyGrpNm */
            DELETE
            FROM
            TB_MS_TOUCH_KEY_GROUP
            WHERE
            STORE_CD = #{targetStoreCd}
            <if test="tukeyGrpCd != null and tukeyGrpCd != ''">
                AND TUKEY_GRP_CD = #{tukeyGrpCd}
            </if>
    </delete>
</mapper>