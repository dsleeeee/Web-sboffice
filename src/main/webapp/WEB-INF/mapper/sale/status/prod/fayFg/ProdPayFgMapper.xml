<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    ProdPayFgMapper.xml
    상품별 > 결제수단별 탭
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김진       2020.02.06     최초작성
    2       김설아     2021.01.04
-->
<mapper namespace="kr.co.solbipos.sale.status.prod.payFg.service.impl.ProdPayFgMapper">

	<!-- 상품별매출 - 결제수단 컬럼 리스트 조회 -->
	<!--
        TABLE    : TB_CM_NMCODE
        PARAM    : prodPayFgVO
        COMMENTS : 일자별 - 결제수단 컬럼 리스트를 조회한다.
    -->
	<select id="getPayColList" parameterType="prodPayFgVO" resultType="DefaultMap">
		/* USE : ProdPayFgMapper.getPayColList */
        <![CDATA[
        SELECT  tcn.NMCODE_CD AS PAY_CD, tcn.NMCODE_NM AS PAY_NM, tcn.NMCODE_ITEM_1 AS PAY_METHOD
        FROM    TB_CM_NMCODE tcn
        WHERE   tcn.NMCODE_GRP_CD   =   '024'
        AND     tcn.NMCODE_CD       NOT IN ('05', '12') /* 쿠폰은 결제수단이 아닌 할인내역으로 들어가므로 하드코딩으로 결제수단에 나오지 않도록 함. */
        ORDER
        BY      tcn.NMCODE_CD
        ]]>
	</select>

	<!-- 결제수단별탭 - 조회 -->
    <!--
        TABLE    :
        PARAM    : prodPayFgVO
        COMMENTS : MAX(BARCD_CD) : 매장별로 바코드가 다를 경우 N개의 줄로 보여서 MAX처리
                    AND STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = {hqOfficeCd}) : 재개발필요(김중선, HQ_OFFICE_CD INDEX, 쿼리튜닝)
    -->
    <select id="getProdPayFgList" parameterType="prodPayFgVO" resultType="DefaultMap">
        /* USE : ProdPayFgMapper.getProdPayFgList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  PATH_NM,
                tsdp.PROD_CD,
                PROD_NM,
                BARCD_CD,
                SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
                SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(TOT_GA_AMT) AS TOT_GA_AMT,
                SUM(TOT_VAT_AMT) AS TOT_VAT_AMT,
                SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
                SUM(TOT_ETC_AMT) AS TOT_ETC_AMT,
                <foreach collection="arrPayCol" item="item" separator="+">
                    NVL(SUM(PAY${item}), 0)
                </foreach> AS TOT_PAY_AMT,
                <foreach collection="arrPayCol" item="item" separator=",">
                    NVL(SUM(PAY${item}), 0) AS PAY${item}
                </foreach>
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM    (
                SELECT 	PATH_NM,
                        PROD_CD,
                        PROD_NM,
                        MAX(BARCD_CD) AS BARCD_CD,
                        SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
                        SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                        SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                        SUM(TOT_GA_AMT) AS TOT_GA_AMT,
                        SUM(TOT_VAT_AMT) AS TOT_VAT_AMT,
                        SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
                        SUM(TOT_ETC_AMT) AS TOT_ETC_AMT
                FROM (
                        SELECT  FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM, --NM_STR
                                tsdp.PROD_CD,
                                tmp.PROD_NM,
                                MAX(tmpb.BARCD_CD) AS BARCD_CD,
                                SUM(tsdp.TOT_SALE_QTY) AS TOT_SALE_QTY,
                                SUM(tsdp.TOT_SALE_AMT) AS TOT_SALE_AMT,
                                SUM(tsdp.TOT_DC_AMT) AS TOT_DC_AMT,
                                SUM(tsdp.REAL_SALE_AMT) AS REAL_SALE_AMT,
                                SUM(tsdp.REAL_SALE_AMT - tsdp.TOT_VAT_AMT) AS TOT_GA_AMT,
                                SUM(tsdp.TOT_VAT_AMT) AS TOT_VAT_AMT,
                                SUM(tsdp.TOT_TIP_AMT) AS TOT_TIP_AMT,
                                SUM(tsdp.TOT_ETC_AMT) AS TOT_ETC_AMT
                        FROM    TB_SL_DAILY_PROD tsdp,
                                TB_MS_PRODUCT tmp,
                                TB_MS_PRODUCT_BARCD tmpb
                        WHERE   tsdp.HQ_OFFICE_CD = #{hqOfficeCd}
                        <if test='storeCd != null and storeCd != ""'>
                            AND tsdp.STORE_CD IN
                            <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                                #{item}
                            </foreach>
                        </if>
                        AND     tsdp.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                        <if test="prodCd != null and prodCd != ''">
                            AND tsdp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                        </if>
                        <if test="prodNm != null and prodNm != ''">
                            AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                        </if>
                        AND     tmp.STORE_CD = tsdp.STORE_CD
                        AND     tmp.PROD_CD = tsdp.PROD_CD
                        AND     tmpb.STORE_CD (+)= tmp.STORE_CD
                        AND     tmpb.PROD_CD (+)= tmp.PROD_CD
                        GROUP BY tsdp.PROD_CD, tmp.PROD_NM,tmp.STORE_CD, tmp.PROD_CLASS_CD
                    )
                    GROUP BY PATH_NM, PROD_CD, PROD_NM
                ) tsdp,
                (
                SELECT  PROD_CD,
                        <foreach collection="arrPayCol" item="item" separator=",">
                            SUM(PAY${item}) AS PAY${item}
                        </foreach>
                FROM
                (
                    SELECT  PROD_CD,
                            PAY_AMT,
                            PAY_CD
                    FROM    TB_SL_DAILY_PROD_PAY
                    WHERE   STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd})
                    <if test='storeCd != null and storeCd != ""'>
                        AND STORE_CD IN
                        <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                    AND     SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    <if test="prodCd != null and prodCd != ''">
                        AND PROD_CD LIKE '%'|| #{prodCd} ||'%'
                    </if>
                    )
                    PIVOT
                    (
                        SUM(PAY_AMT)
                        FOR PAY_CD
                        IN (${pivotPayCol})
                    )
                    GROUP BY PROD_CD
                ) tsdpp
        WHERE tsdpp.PROD_CD = tsdp.PROD_CD
        GROUP BY tsdp.PROD_CD, PROD_NM, BARCD_CD, PATH_NM
        ORDER BY tsdp.PROD_CD
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

	<!-- 결제수단별탭 - 엑셀 조회 -->
	<!--
        TABLE    :
        PARAM    : prodPayFgVO
        COMMENTS :
    -->
    <select id="getProdPayFgExcelList" parameterType="prodPayFgVO" resultType="DefaultMap">
        /* USE : ProdPayFgMapper.getProdPayFgExcelList */
        SELECT  PATH_NM,
                tsdp.PROD_CD,
                PROD_NM,
                BARCD_CD,
                SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
                SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                SUM(TOT_GA_AMT) AS TOT_GA_AMT,
                SUM(TOT_VAT_AMT) AS TOT_VAT_AMT,
                SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
                SUM(TOT_ETC_AMT) AS TOT_ETC_AMT,
                <foreach collection="arrPayCol" item="item" separator="+">
                    NVL(SUM(PAY${item}), 0)
                </foreach> AS TOT_PAY_AMT,
                <foreach collection="arrPayCol" item="item" separator=",">
                    NVL(SUM(PAY${item}), 0) AS PAY${item}
                </foreach>
        FROM    (
                SELECT 	PATH_NM,
                        PROD_CD,
                        PROD_NM,
                        MAX(BARCD_CD) AS BARCD_CD,
                        SUM(TOT_SALE_QTY) AS TOT_SALE_QTY,
                        SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                        SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                        SUM(TOT_GA_AMT) AS TOT_GA_AMT,
                        SUM(TOT_VAT_AMT) AS TOT_VAT_AMT,
                        SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
                        SUM(TOT_ETC_AMT) AS TOT_ETC_AMT
                FROM    (
                        SELECT  FN_GET_PROD_CLASS_CD_NM_STR(tmp.STORE_CD, tmp.PROD_CLASS_CD, 'NM_STR') AS PATH_NM, --NM_STR
                                tsdp.PROD_CD,
                                tmp.PROD_NM,
                                MAX(tmpb.BARCD_CD) AS BARCD_CD,
                                SUM(tsdp.TOT_SALE_QTY) AS TOT_SALE_QTY,
                                SUM(tsdp.TOT_SALE_AMT) AS TOT_SALE_AMT,
                                SUM(tsdp.TOT_DC_AMT) AS TOT_DC_AMT,
                                SUM(tsdp.REAL_SALE_AMT) AS REAL_SALE_AMT,
                                SUM(tsdp.REAL_SALE_AMT - tsdp.TOT_VAT_AMT) AS TOT_GA_AMT,
                                SUM(tsdp.TOT_VAT_AMT) AS TOT_VAT_AMT,
                                SUM(tsdp.TOT_TIP_AMT) AS TOT_TIP_AMT,
                                SUM(tsdp.TOT_ETC_AMT) AS TOT_ETC_AMT
                        FROM    TB_SL_DAILY_PROD tsdp,
                                TB_MS_PRODUCT tmp,
                                TB_MS_PRODUCT_BARCD tmpb
                        WHERE   tsdp.HQ_OFFICE_CD = #{hqOfficeCd}
                        <if test='storeCd != null and storeCd != ""'>
                            AND tsdp.STORE_CD IN
                            <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                                #{item}
                            </foreach>
                        </if>
                        AND     tsdp.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                        <if test="prodCd != null and prodCd != ''">
                            AND tsdp.PROD_CD LIKE '%'|| #{prodCd} ||'%'
                        </if>
                        <if test="prodNm != null and prodNm != ''">
                            AND tmp.PROD_NM LIKE '%'|| #{prodNm} ||'%'
                        </if>
                        AND     tmp.STORE_CD = tsdp.STORE_CD
                        AND     tmp.PROD_CD = tsdp.PROD_CD
                        AND     tmpb.STORE_CD (+)= tmp.STORE_CD
                        AND     tmpb.PROD_CD (+)= tmp.PROD_CD
                        GROUP BY tsdp.PROD_CD, tmp.PROD_NM,tmp.STORE_CD, tmp.PROD_CLASS_CD
                        )
                GROUP BY PATH_NM, PROD_CD, PROD_NM
                ) tsdp,
                (
                SELECT  PROD_CD,
                <foreach collection="arrPayCol" item="item" separator=",">
                    SUM(PAY${item}) AS PAY${item}
                </foreach>
                FROM
                (
                SELECT  PROD_CD,
                        PAY_AMT,
                        PAY_CD
                FROM    TB_SL_DAILY_PROD_PAY
                WHERE   STORE_CD IN (SELECT STORE_CD FROM TB_MS_STORE WHERE HQ_OFFICE_CD = #{hqOfficeCd})
                <if test='storeCd != null and storeCd != ""'>
                    AND STORE_CD IN
                    <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
                AND     SALE_DATE BETWEEN #{startDate} AND #{endDate}
                <if test="prodCd != null and prodCd != ''">
                    AND PROD_CD LIKE '%'|| #{prodCd} ||'%'
                </if>
                )
                PIVOT
                (
                    SUM(PAY_AMT)
                    FOR PAY_CD
                    IN (${pivotPayCol})
                )
                GROUP BY PROD_CD
                ) tsdpp
        WHERE   tsdpp.PROD_CD = tsdp.PROD_CD
        GROUP BY tsdp.PROD_CD, PROD_NM, BARCD_CD, PATH_NM
        ORDER BY tsdp.PROD_CD
    </select>

</mapper>
