<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.kds.anals.chart.service.impl.KdsMapper">
    <select id="getKdsServiceTime" parameterType="KdsVO" resultType="DefaultMap">
        /* KdsDayMapper.getKdsServiceTime */
        Select A.STORE_CD -- 매장코드
        ,B.STORE_NM -- 매장명
        ,A.SALE_DATE -- 영업일자
        <if test='makeDate == 0'>
            ,SUM(CASE WHEN MAKE_TIME_OPT1 &lt; 60 THEN 1 ELSE 0 END ) OPT1_COOK_1 /* 제조시간 조건 OPTION1 : 1분 미만 */
            ,SUM(CASE WHEN MAKE_TIME_OPT1 >= 60 AND MAKE_TIME_OPT1 &lt; 180 THEN 1 ELSE 0 END ) OPT1_COOK_3 /* 제조시간 조건 OPTION1 : 1분이상 3분 미만 */
            ,SUM(CASE WHEN MAKE_TIME_OPT1 >= 180 AND MAKE_TIME_OPT1 &lt; 300 THEN 1 ELSE 0 END ) OPT1_COOK_5 /* 제조시간 조건 OPTION1 : 3분이상 5분 미만 */
            ,SUM(CASE WHEN MAKE_TIME_OPT1 >= 300 AND MAKE_TIME_OPT1 &lt; 420 THEN 1 ELSE 0 END ) OPT1_COOK_7 /* 제조시간 조건 OPTION1 : 5분이상 7분 미만 */
            ,SUM(CASE WHEN MAKE_TIME_OPT1 >= 420 AND MAKE_TIME_OPT1 &lt; 600 THEN 1 ELSE 0 END ) OPT1_COOK_10 /* 제조시간 조건 OPTION1 : 7분이상10분 미만 */
            ,SUM(CASE WHEN MAKE_TIME_OPT1 >= 600 THEN 1 ELSE 0 END ) OPT1_COOK_OVER_10 /* 제조시간 조건 OPTION1 : 10분이상 */
        </if>
        <if test='makeDate == 1'>
            ,SUM(CASE WHEN MAKE_TIME_OPT2 &lt; 60 THEN 1 ELSE 0 END ) OPT2_COOK_1
            ,SUM(CASE WHEN MAKE_TIME_OPT2 >= 60 AND MAKE_TIME_OPT2 &lt; 180 THEN 1 ELSE 0 END ) OPT1_COOK_3
            ,SUM(CASE WHEN MAKE_TIME_OPT2 >= 180 AND MAKE_TIME_OPT2 &lt; 300 THEN 1 ELSE 0 END ) OPT1_COOK_5
            ,SUM(CASE WHEN MAKE_TIME_OPT2 >= 300 AND MAKE_TIME_OPT2 &lt; 420 THEN 1 ELSE 0 END ) OPT1_COOK_7
            ,SUM(CASE WHEN MAKE_TIME_OPT2 >= 420 AND MAKE_TIME_OPT2 &lt; 600 THEN 1 ELSE 0 END ) OPT1_COOK_10
            ,SUM(CASE WHEN MAKE_TIME_OPT2 >= 600 THEN 1 ELSE 0 END ) OPT2_COOK_OVER_10
        </if>
        <if test='picDate == 0'>
            ,SUM(CASE WHEN PICKUP_TIME_OPT1 &lt; 60 THEN 1 ELSE 0 END ) OPT2_PICKUP_1
            ,SUM(CASE WHEN PICKUP_TIME_OPT1 >= 60 AND PICKUP_TIME_OPT1 &lt; 180 THEN 1 ELSE 0 END ) OPT2_PICKUP_3
            ,SUM(CASE WHEN PICKUP_TIME_OPT1 >= 180 AND PICKUP_TIME_OPT1 &lt; 300 THEN 1 ELSE 0 END ) OPT2_PICKUP_5
            ,SUM(CASE WHEN PICKUP_TIME_OPT1 >= 300 AND PICKUP_TIME_OPT1 &lt; 420 THEN 1 ELSE 0 END ) OPT2_PICKUP_7
            ,SUM(CASE WHEN PICKUP_TIME_OPT1 >= 420 AND PICKUP_TIME_OPT1 &lt;600 THEN 1 ELSE 0 END ) OPT2_PICKUP_10
            ,SUM(CASE WHEN PICKUP_TIME_OPT1 >= 600 THEN 1 ELSE 0 END ) OPT2_PICKUP_OVER_10
        </if>
        <if test='picDate == 1'>
            ,SUM(CASE WHEN PICKUP_TIME_OPT2 &lt; 60 THEN 1 ELSE 0 END ) OPT2_PICKUP_1
            ,SUM(CASE WHEN PICKUP_TIME_OPT2 >= 60 AND PICKUP_TIME_OPT2 &lt; 180 THEN 1 ELSE 0 END ) OPT2_PICKUP_3
            ,SUM(CASE WHEN PICKUP_TIME_OPT2 >= 180 AND PICKUP_TIME_OPT2 &lt; 300 THEN 1 ELSE 0 END ) OPT2_PICKUP_5
            ,SUM(CASE WHEN PICKUP_TIME_OPT2 >= 300 AND PICKUP_TIME_OPT2 &lt; 420 THEN 1 ELSE 0 END ) OPT2_PICKUP_7
            ,SUM(CASE WHEN PICKUP_TIME_OPT2 >= 420 AND PICKUP_TIME_OPT2 &lt; 600 THEN 1 ELSE 0 END ) OPT2_PICKUP_10
            ,SUM(CASE WHEN PICKUP_TIME_OPT2 >= 600 THEN 1 ELSE 0 END ) OPT2_PICKUP_OVER_10
        </if>
        ,COUNT(*) AS TOTAL_COUNT
        FROM
        ( SELECT STORE_CD , SALE_DATE
        , COOK_END_DT - ORDER_END_DT
        , ROUND(((TO_DATE(COOK_END_DT, 'YYYYMMDDHH24MISS')-TO_DATE(COOK_START_DT, 'YYYYMMDDHH24MISS'))*24*60*60),3) AS MAKE_TIME_OPT1 /* 제조시간 OPTION1 : 최초조리 ~ 최종조리 */
        , ROUND(((TO_DATE(COOK_END_DT, 'YYYYMMDDHH24MISS')-TO_DATE(ORDER_END_DT, 'YYYYMMDDHH24MISS'))*24*60*60),3) AS MAKE_TIME_OPT2 /* 제조시간 OPTION2 : 최종주문 ~ 최종조리 */
        , ROUND(((TO_DATE(PICKUP_END_DT, 'YYYYMMDDHH24MISS')-TO_DATE(ORDER_START_DT, 'YYYYMMDDHH24MISS'))*24*60*60),3) AS PICKUP_TIME_OPT1 /* 픽업시간 : 최초주문 ~ 최종픽업 */
        , ROUND(((TO_DATE(PICKUP_END_DT, 'YYYYMMDDHH24MISS')-TO_DATE(COOK_END_DT, 'YYYYMMDDHH24MISS'))*24*60*60),3) AS PICKUP_TIME_OPT2 /* 픽업시간 : 최종조리 ~ 최종핍업 */
        FROM TB_OD_ORDER_HDR_KDS ) A , TB_MS_STORE B
        WHERE A.STORE_CD = B.STORE_CD
        AND A.STORE_CD = #{storeCd}
        AND A.SALE_DATE BETWEEN #{kdsDayStartDate} AND #{kdsDayEndDate}
        GROUP BY A.STORE_CD , B.STORE_NM, A.SALE_DATE
        ORDER BY A.SALE_DATE
    </select>
</mapper>
