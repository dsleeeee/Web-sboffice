<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    StoreBatchChange.xml
    매장정보일괄변경
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       권지현     2023.01.17      최초작성
-->
<mapper namespace="kr.co.solbipos.store.storeMoms.storeBatchChange.service.impl.StoreBatchChangeMapper">

    <!-- 매장목록 조회 -->
    <!--
        TABLE    : TB_HQ_BRANCH_MOMS, TB_MS_STORE
        PARAM    : storeBatchChangeVO
        COMMENTS : 매장목록을 조회한다.
    -->
    <select id="getStoreList" parameterType="storeBatchChangeVO" resultType="DefaultMap">
    /* USE : StoreBatchChangeMapper.getStoreList  */
    <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT  tms.STORE_CD
        ,		tms.STORE_NM
        ,		tms.OWNER_NM
        ,		tms.HQ_BRAND_CD
        ,		tms.BIZ_NO
        ,		tms.BRANCH_CD
        ,		tmsi.MOMS_TEAM
        ,		tmsi.MOMS_AC_SHOP
        ,		tmsi.MOMS_AREA_FG
        ,		tmsi.MOMS_COMMERCIAL
        ,		tmsi.MOMS_SHOP_TYPE
        ,		tmsi.MOMS_STORE_MANAGE_TYPE
        ,		tmsi.MOMS_STORE_FG_01
    <include refid="CmmSQL.PagingTemplateCount"/>
        FROM    TB_MS_STORE tms
        ,       TB_MS_STORE_INFO tmsi
        WHERE   tms.HQ_OFFICE_CD = #{hqOfficeCd}
        AND     tms.STORE_CD = tmsi.STORE_CD (+)
        <if test="storeCd != null and storeCd != ''">
            AND tms.STORE_CD LIKE '%'||#{storeCd}||'%' --매장코드
        </if>
        <if test="storeNm != null and storeNm != ''">
            AND tms.STORE_NM LIKE '%'||#{storeNm}||'%' --매장명
        </if>
        <if test='storeHqBrandCd != null and storeHqBrandCd != ""'>
            AND tms.HQ_BRAND_CD = #{storeHqBrandCd} -- 매장브랜드 선택일때
        </if>
        <if test='storeHqBrandCd == null or storeHqBrandCd == ""'>
            <if test='userBrands != null and userBrands != ""'>
                -- 매장브랜드 전체일때
                AND tms.HQ_BRAND_CD IN
                <foreach collection="userBrandList" item="item" open=" (" separator="," close=")" >
                    #{item}
                </foreach>
            </if>
        </if>
        <if test='momsTeam != null and momsTeam != ""'>
            AND tmsi.MOMS_TEAM = #{momsTeam}
        </if>
        <if test='momsAcShop != null and momsAcShop != ""'>
            AND tmsi.MOMS_AC_SHOP = #{momsAcShop}
        </if>
        <if test='momsAreaFg != null and momsAreaFg != ""'>
            AND tmsi.MOMS_AREA_FG = #{momsAreaFg}
        </if>
        <if test='momsCommercial != null and momsCommercial != ""'>
            AND tmsi.MOMS_COMMERCIAL = #{momsCommercial}
        </if>
        <if test='momsShopType != null and momsShopType != ""'>
            AND tmsi.MOMS_SHOP_TYPE = #{momsShopType}
        </if>
        <if test='momsStoreManageType != null and momsStoreManageType != ""'>
            AND tmsi.MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType}
        </if>
        <if test='branchCd != null and branchCd != ""'>
            AND tms.BRANCH_CD = #{branchCd}
        </if>
        <if test='momsStoreFg01 != null and momsStoreFg01 != ""'>
            AND tmsi.MOMS_STORE_FG_01 = #{momsStoreFg01}
        </if>
        ORDER
        BY tms.STORE_CD
    <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>

    <!-- 매장정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS :
    -->
    <update id="getStoreBatchChangeSave" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getStoreBatchChangeSave */
        UPDATE  TB_MS_STORE
        SET     BRANCH_CD = #{branchCd},
                MOD_DT = #{modDt},
                MOD_ID = #{modId}
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     STORE_CD = #{storeCd}
    </update>

    <!-- 매장정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE_INFO
        COMMENTS :
    -->
    <update id="getStoreInfoBatchChangeSave" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getStoreInfoBatchChangeSave */
        MERGE INTO  TB_MS_STORE_INFO A
            USING   DUAL
            ON (    A.STORE_CD = #{storeCd})
            WHEN MATCHED THEN
            UPDATE
            SET     MOMS_TEAM = #{momsTeam},
                    MOMS_AC_SHOP = #{momsAcShop},
                    MOMS_AREA_FG = #{momsAreaFg},
                    MOMS_COMMERCIAL = #{momsCommercial},
                    MOMS_SHOP_TYPE = #{momsShopType},
                    MOMS_STORE_MANAGE_TYPE = #{momsStoreManageType},
                    MOD_DT = #{modDt},
                    MOD_ID = #{modId},
                    MOMS_STORE_FG_01 = #{momsStoreFg01}
            WHEN NOT MATCHED THEN
                INSERT (
                    STORE_CD,
                    MOMS_TEAM,
                    MOMS_AC_SHOP,
                    MOMS_AREA_FG,
                    MOMS_COMMERCIAL,
                    MOMS_SHOP_TYPE,
                    MOMS_STORE_MANAGE_TYPE,
                    REG_DT,
                    REG_ID,
                    MOD_DT,
                    MOD_ID,
                    MOMS_STORE_FG_01
                ) VALUES (
                    #{storeCd},
                    #{momsTeam},
                    #{momsAcShop},
                    #{momsAreaFg},
                    #{momsCommercial},
                    #{momsShopType},
                    #{momsStoreManageType},
                    #{regDt},
                    #{regId},
                    #{modDt},
                    #{modId},
                    #{momsStoreFg01}
                )
    </update>

    <!-- 검증결과 전체 삭제 -->
    <!--
        TABLE    : TB_TMP_EXCEL_STORE_INFO
        COMMENTS : [임시]매장엑셀업로드
    -->
    <delete id="getStoreExcelUploadCheckDeleteAll" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getStoreExcelUploadCheckDeleteAll */
        DELETE  TB_TMP_EXCEL_STORE_INFO
        WHERE   SESSION_ID = #{sessionId}
        AND     HQ_OFFICE_CD = #{hqOfficeCd}
    </delete>

    <!-- 매장코드 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS : 유요한 매장코드인지 체크
    -->
    <select id="getStoreCdChk"  parameterType="ProdExcelUploadVO" resultType="Integer">
        /* StoreBatchChangeMapper.getStoreCdChk */
        SELECT  COUNT(*)
        FROM    TB_MS_STORE
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     STORE_CD = #{storeCd}
    </select>

    <!-- 그룹코드 -->
    <!--
        TABLE    : TB_HQ_BRANCH_MOMS
        COMMENTS : 유효한 그룹코드인지 체크
    -->
    <select id="getBranchCdChk"  parameterType="ProdExcelUploadVO" resultType="String">
        /* StoreBatchChangeMapper.getBranchCdChk */
        SELECT  BRANCH_CD
        FROM    TB_HQ_BRANCH_MOMS
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     BRANCH_NM = #{branchCd}
    </select>

    <!-- 본사공통코드 -->
    <!--
        TABLE    : TB_HQ_NMCODE
        COMMENTS : 유효한 본사공통코드인지 체크
    -->
    <select id="getHqNmcodeChk"  parameterType="ProdExcelUploadVO" resultType="String">
        /* StoreBatchChangeMapper.getHqNmcodeChk */
        SELECT  NMCODE_CD
        FROM    TB_HQ_NMCODE
        WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
        AND     NMCODE_GRP_CD = #{nmcodeGrpCd}
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "151"'>
            AND     NMCODE_NM = #{momsTeam}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "152"'>
            AND     NMCODE_NM = #{momsAcShop}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "153"'>
            AND     NMCODE_NM = #{momsAreaFg}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "154"'>
            AND     NMCODE_NM = #{momsCommercial}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "155"'>
            AND     NMCODE_NM = #{momsShopType}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "156"'>
            AND     NMCODE_NM = #{momsStoreManageType}
        </if>
        <if test='nmcodeGrpCd != null and nmcodeGrpCd == "167"'>
            AND     NMCODE_NM = #{momsStoreFg01}
        </if>
    </select>

    <!-- 검증결과 저장 -->
    <!--
        TABLE    : TB_TMP_EXCEL_STORE_INFO
        COMMENTS : [임시]매장엑셀업로드
    -->
    <insert id="getStoreExcelUploadCheckSave" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getStoreExcelUploadCheckSave */
        INSERT INTO TB_TMP_EXCEL_STORE_INFO
        (
            SESSION_ID,
            SEQ,
            HQ_OFFICE_CD,
            STORE_CD,
            BRANCH_CD,
            MOMS_TEAM,
            MOMS_AC_SHOP,
            MOMS_AREA_FG,
            MOMS_COMMERCIAL,
            MOMS_SHOP_TYPE,
            MOMS_STORE_MANAGE_TYPE,
            RESULT,
            MOMS_STORE_FG_01
        ) VALUES (
            #{sessionId},
            #{seq},
            #{hqOfficeCd},
            #{storeCd},
            #{branchCd},
            #{momsTeam},
            #{momsAcShop},
            #{momsAreaFg},
            #{momsCommercial},
            #{momsShopType},
            #{momsStoreManageType},
            #{result},
            #{momsStoreFg01}
         )
    </insert>

    <!-- 검증결과 조회 -->
    <!--
        TABLE    : TB_TMP_EXCEL_STORE_INFO
        PARAM    : storeBatchChangeVO
        COMMENTS : 엑셀업로드 검증결과를 조회한다.
    -->
    <select id="getStoreExcelUploadCheckList" parameterType="storeBatchChangeVO" resultType="DefaultMap">
        /* USE : StoreBatchChangeMapper.getStoreExcelUploadCheckList  */
        SELECT
        A.SESSION_ID,
        A.SEQ,
        A.HQ_OFFICE_CD,
        A.STORE_CD,
        B.STORE_NM,
        A.BRANCH_CD,
        A.MOMS_TEAM,
        A.MOMS_AC_SHOP,
        A.MOMS_AREA_FG,
        A.MOMS_COMMERCIAL,
        A.MOMS_SHOP_TYPE,
        A.MOMS_STORE_MANAGE_TYPE,
        A.RESULT,
        A.MOMS_STORE_FG_01
        FROM TB_TMP_EXCEL_STORE_INFO A,
        TB_MS_STORE B
        WHERE 1=1
        AND A.SESSION_ID = #{sessionId}
        AND A.HQ_OFFICE_CD = #{hqOfficeCd}
        AND B.HQ_OFFICE_CD (+)= A.HQ_OFFICE_CD
        AND B.STORE_CD (+)= A.STORE_CD
        ORDER BY A.SEQ
    </select>

    <!-- 업로드 매장정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE
        COMMENTS :
    -->
    <update id="getStoreBatchChangeUploadSave" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getStoreBatchChangeUploadSave */
        MERGE INTO TB_MS_STORE A
        USING
        (
            SELECT
            C.STORE_CD,
            (SELECT BRANCH_CD FROM TB_HQ_BRANCH_MOMS WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND BRANCH_NM = C.BRANCH_CD) AS BRANCH_CD
            FROM TB_TMP_EXCEL_STORE_INFO C
            WHERE C.SESSION_ID = #{sessionId}
            AND C.HQ_OFFICE_CD = #{hqOfficeCd}
        ) B
        ON (A.STORE_CD = B.STORE_CD)
        WHEN MATCHED THEN
            UPDATE
            SET
            A.BRANCH_CD = B.BRANCH_CD,
            MOD_DT = #{modDt},
            MOD_ID = #{modId}
    </update>

    <!-- 업로드 매장정보 저장 -->
    <!--
        TABLE    : TB_MS_STORE_INFO
        COMMENTS :
    -->
    <update id="getSimpleStoreInfoSave" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getSimpleStoreInfoSave */
        MERGE INTO TB_MS_STORE_INFO A
        USING (
                SELECT
                C.STORE_CD,
                (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '151' AND NMCODE_NM = C.MOMS_TEAM) AS MOMS_TEAM,
                (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '152' AND NMCODE_NM = C.MOMS_AC_SHOP) AS MOMS_AC_SHOP,
                (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '153' AND NMCODE_NM = C.MOMS_AREA_FG) AS MOMS_AREA_FG,
                (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '154' AND NMCODE_NM = C.MOMS_COMMERCIAL) AS MOMS_COMMERCIAL,
                (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '155' AND NMCODE_NM = C.MOMS_SHOP_TYPE) AS MOMS_SHOP_TYPE,
                (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '156' AND NMCODE_NM = C.MOMS_STORE_MANAGE_TYPE) AS MOMS_STORE_MANAGE_TYPE,
                #{regDt} AS REG_DT,
                #{regId} AS REG_ID,
                #{modDt} AS MOD_DT,
                #{modId} AS MOD_ID,
               (SELECT NMCODE_CD FROM TB_HQ_NMCODE WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND NMCODE_GRP_CD = '167' AND NMCODE_NM = C.MOMS_STORE_FG_01) AS MOMS_STORE_FG_01
                FROM TB_TMP_EXCEL_STORE_INFO C
                WHERE 1=1
                AND C.SESSION_ID = #{sessionId}
                AND C.HQ_OFFICE_CD = #{hqOfficeCd}
            ) B
        ON (
                A.STORE_CD = B.STORE_CD
            )
        WHEN MATCHED THEN
            UPDATE
            SET
            A.MOMS_TEAM = B.MOMS_TEAM,
            A.MOMS_AC_SHOP = B.MOMS_AC_SHOP,
            A.MOMS_AREA_FG = B.MOMS_AREA_FG,
            A.MOMS_COMMERCIAL = B.MOMS_COMMERCIAL,
            A.MOMS_SHOP_TYPE = B.MOMS_SHOP_TYPE,
            A.MOMS_STORE_MANAGE_TYPE = B.MOMS_STORE_MANAGE_TYPE,
            A.MOD_DT = B.MOD_DT,
            A.MOD_ID = B.MOD_ID,
            A.MOMS_STORE_FG_01 = B.MOMS_STORE_FG_01
         WHEN NOT MATCHED THEN
            INSERT
            (
                A.STORE_CD,
                A.MOMS_TEAM,
                A.MOMS_AC_SHOP,
                A.MOMS_AREA_FG,
                A.MOMS_COMMERCIAL,
                A.MOMS_SHOP_TYPE,
                A.MOMS_STORE_MANAGE_TYPE,
                A.REG_DT,
                A.REG_ID,
                A.MOD_DT,
                A.MOD_ID,
                A.MOMS_STORE_FG_01
            ) VALUES (
                B.STORE_CD,
                B.MOMS_TEAM,
                B.MOMS_AC_SHOP,
                B.MOMS_AREA_FG,
                B.MOMS_COMMERCIAL,
                B.MOMS_SHOP_TYPE,
                B.MOMS_STORE_MANAGE_TYPE,
                B.REG_DT,
                B.REG_ID,
                B.MOD_DT,
                B.MOD_ID,
                B.MOMS_STORE_FG_01
            )
    </update>

    <!-- 검증결과 삭제 -->
    <!--
        TABLE    : TB_TMP_EXCEL_STORE_INFO
        COMMENTS : [임시]매장엑셀업로드
    -->
    <delete id="getStoreExcelUploadCheckDelete" parameterType="storeBatchChangeVO">
        /* StoreBatchChangeMapper.getStoreExcelUploadCheckDelete */
        DELETE  TB_TMP_EXCEL_STORE_INFO
        WHERE   SESSION_ID = #{sessionId}
        AND     HQ_OFFICE_CD = #{hqOfficeCd}
        AND     STORE_CD = #{storeCd}
    </delete>

</mapper>