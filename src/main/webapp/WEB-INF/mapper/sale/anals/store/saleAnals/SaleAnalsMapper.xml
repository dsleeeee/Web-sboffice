<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.sale.anals.store.saleAnals.service.impl.SaleAnalsMapper">

    <!-- 일별 - 일별 리스트 조회 -->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_HDR_PAY, TB_SL_SALE_HDR_DC
        PARAM    : saleAnalsVO
        COMMENTS : 일별 - 일별 리스트를 조회한다.
    -->
    <select id="getDayList" parameterType="saleAnalsVO" resultType="DefaultMap">
        /* USE : DayMapper.getDayList */
        SELECT  TO_CHAR(TO_DATE(tsshp.SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SALE_DATE
        ,       TO_CHAR(TO_DATE(tsshp.SALE_DATE, 'YYYYMMDD'), 'DY') AS YOIL
        ,       tsshp.STORE_CD
        ,       (SELECT STORE_NM FROM TB_MS_STORE tms WHERE tms.STORE_CD = tsshp.STORE_CD) AS STORE_NM
        ,       tsshp.TOT_SALE_AMT
        ,       tsshp.TOT_DC_AMT
        ,       tsshp.REAL_SALE_AMT
        ,       tsshp.GA_AMT
        ,       tsshp.VAT_AMT
        ,       tsshp.TOT_TIP_AMT
        ,       tsshp.TOT_ETC_AMT
        ,       tsshp.CUP_AMT
        ,       tsshp.BILL_CNT
        ,       tsshp.BILL_UPRC
        ,       tssddp.GEN_REAL_SALE_AMT
        ,       DECODE(tsshp.REAL_SALE_AMT, 0, 0, (tssddp.GEN_REAL_SALE_AMT / tsshp.REAL_SALE_AMT)*100) AS GEN_REAL_SALE_RATE
        ,       tssddp.DLVR_REAL_SALE_AMT
        ,       DECODE(tsshp.REAL_SALE_AMT, 0, 0, (tssddp.DLVR_REAL_SALE_AMT / tsshp.REAL_SALE_AMT)*100) AS DLVR_REAL_SALE_RATE
        ,       tssddp.PACK_REAL_SALE_AMT
        ,       DECODE(tsshp.REAL_SALE_AMT, 0, 0, (tssddp.PACK_REAL_SALE_AMT / tsshp.REAL_SALE_AMT)*100) AS PACK_REAL_SALE_RATE
        ,       <foreach collection="arrPayCol" item="item" separator="+">
                    NVL(tsshp.PAY${item}, 0)
                </foreach> +  NVL(tsshp.PAY02, 0) +  NVL(tsshp.PAY021, 0) AS TOT_PAY_AMT
        ,       <foreach collection="arrPayCol" item="item" separator=",">
                    tsshp.PAY${item} AS PAY${item}
                </foreach>
        ,       tsshp.PAY02 AS PAY02 -- 현금
        ,       tsshp.PAY021 AS PAY021 -- 현금영수증
        FROM    (
                    SELECT  SALE_DATE
                    ,       STORE_CD
                    ,       SUM(TOT_SALE_AMT) AS TOT_SALE_AMT
                    ,       SUM(TOT_DC_AMT) AS TOT_DC_AMT
                    ,       SUM(REAL_SALE_AMT) AS REAL_SALE_AMT
                    ,       SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT
                    ,       SUM(VAT_AMT) AS VAT_AMT
                    ,       SUM(TOT_TIP_AMT) AS TOT_TIP_AMT
                    ,       SUM(TOT_ETC_AMT) AS TOT_ETC_AMT
                    ,       SUM(CUP_AMT) AS CUP_AMT
                    ,       SUM(REAL_SALE_CNT) AS BILL_CNT
                    ,       DECODE(SUM(REAL_SALE_CNT), 0, 0, ROUND(SUM(REAL_SALE_AMT) / SUM(REAL_SALE_CNT))) AS BILL_UPRC
                    ,       <foreach collection="arrPayCol" item="item" separator=",">
                                SUM(PAY_AMT_${item}) AS PAY${item}
                            </foreach>,
                            SUM(NON_CASH_AMT) AS PAY02,
                            SUM(APPR_CASH_AMT) AS PAY021
                    FROM    TB_SL_DAILY_TOTAL tsdt
                    WHERE   tsdt.HQ_OFFICE_CD  = #{hqOfficeCd}
                    <if test='arrStoreCd != null and arrStoreCd != ""'>
                        AND tsdt.STORE_CD IN
                        <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                            OR  tsdt.STORE_CD IN (SELECT STORE_CD FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                            )
                    </if>
                    AND     tsdt.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    GROUP BY SALE_DATE, STORE_CD
                ) tsshp
        ,       (   SELECT	tssd.SALE_DATE
                    ,       tssd.STORE_CD
                    , SUM(CASE WHEN tssd.DLVR_PACK_FG = '1' THEN tssd.REAL_SALE_AMT ELSE 0 END) AS GEN_REAL_SALE_AMT
                    , SUM(CASE WHEN tssd.DLVR_PACK_FG = '2' THEN tssd.REAL_SALE_AMT ELSE 0 END) AS DLVR_REAL_SALE_AMT
                    , SUM(CASE WHEN tssd.DLVR_PACK_FG = '3' THEN tssd.REAL_SALE_AMT ELSE 0 END) AS PACK_REAL_SALE_AMT
                    FROM	TB_SL_DAILY_DTL_DLVR tssd
                    WHERE	tssd.HQ_OFFICE_CD	=	#{hqOfficeCd}
                    <if test='arrStoreCd != null and arrStoreCd != ""'>
                        AND tssd.STORE_CD IN
                        <foreach collection="arrStoreCd" item="item" open="(" close=")" separator=",">
                            #{item}
                        </foreach>
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                                'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                            OR  tssd.STORE_CD IN (SELECT STORE_CD FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                            )
                    </if>
                    AND     tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      tssd.SALE_DATE, tssd.STORE_CD
                ) tssddp
        WHERE   tssddp.SALE_DATE (+) = tsshp.SALE_DATE
        AND     tssddp.STORE_CD (+) = tsshp.STORE_CD
        ORDER
        BY      tsshp.SALE_DATE, tsshp.STORE_CD
    </select>


    <!-- 월별탭 - 월별조회-->
    <!--
        TABLE    : TB_SL_SALE_HDR, TB_SL_SALE_HDR_PAY, TB_SL_SALE_DTL
        COMMENTS : [매출]헤더 와 [매출]헤더_결제, [매출]상세
    -->
    <select id="getMonthList"  parameterType="MonthVO" resultType="DefaultMap">
        /* SaleAnalsMapper.getMonthList */
        SELECT  TO_CHAR(TO_DATE(tsdt.SALE_YM, 'yyyymm'), 'yyyy-mm') YEAR_MONTH,
                tsdt.SALE_CNT,
                tsdt.STORE_CD,
                (SELECT STORE_NM FROM TB_MS_STORE tms WHERE tms.STORE_CD = tsdt.STORE_CD) AS STORE_NM,
                tsdt.TOT_SALE_AMT,
                tsdt.TOT_DC_AMT,
                tsdt.REAL_SALE_AMT,
                tsdt.BILL_CNT,
                tsdt.BILL_UPRC,
                tsdt.GA_AMT,
                tsdt.VAT_AMT,
                tsdt.TOT_TIP_AMT,
                tsdt.TOT_ETC_AMT,
                tsdt.CUP_AMT,
        <foreach collection="arrPayCol" item="item" separator=",">
                tsdt.PAY_AMT_${item} AS PAY${item}
        </foreach> ,
                tsdt.TOT_PAY_AMT,
                tsddd.GEN_REAL_SALE_AMT,
                DECODE(tsdt.REAL_SALE_AMT, 0, 0, (tsddd.GEN_REAL_SALE_AMT / tsdt.REAL_SALE_AMT)*100) AS GEN_REAL_SALE_RATE,
                tsddd.DLVR_REAL_SALE_AMT,
                DECODE(tsdt.REAL_SALE_AMT, 0, 0, (tsddd.DLVR_REAL_SALE_AMT / tsdt.REAL_SALE_AMT)*100) AS DLVR_REAL_SALE_RATE,
                tsddd.PACK_REAL_SALE_AMT,
                DECODE(tsdt.REAL_SALE_AMT, 0, 0, (tsddd.PACK_REAL_SALE_AMT / tsdt.REAL_SALE_AMT)*100) AS PACK_REAL_SALE_RATE
        FROM    (
                SELECT  SUBSTR(SALE_DATE,0,6) AS SALE_YM,
                        COUNT(DISTINCT SALE_DATE) AS SALE_CNT,
                        STORE_CD,
                        SUM(TOT_SALE_AMT) AS TOT_SALE_AMT,
                        SUM(TOT_DC_AMT) AS TOT_DC_AMT,
                        SUM(REAL_SALE_AMT) AS REAL_SALE_AMT,
                        SUM(REAL_SALE_CNT) AS BILL_CNT,
                        DECODE(NVL(SUM(REAL_SALE_CNT), 0), 0, 0, (ROUND(SUM(REAL_SALE_AMT) / SUM(REAL_SALE_CNT)))) AS BILL_UPRC,
                        SUM(REAL_SALE_AMT) - SUM(VAT_AMT) AS GA_AMT,
                        SUM(VAT_AMT) AS VAT_AMT,
                        SUM(TOT_TIP_AMT) AS TOT_TIP_AMT,
                        SUM(TOT_ETC_AMT) AS TOT_ETC_AMT,
                        SUM(CUP_AMT) AS CUP_AMT,
                <foreach collection="arrPayCol" item="item" separator="+">
                    <if test="item != '02' and item != '021'">
                        SUM(NVL(PAY_AMT_${item}, 0))
                    </if>
                </foreach> +  SUM(NVL(NON_CASH_AMT, 0)) +  SUM(NVL(APPR_CASH_AMT, 0)) AS TOT_PAY_AMT,
                <foreach collection="arrPayCol" item="item" separator=",">
                    <if test="item != '02' and item != '021'">
                        SUM(NVL(PAY_AMT_${item}, 0)) AS PAY_AMT_${item}
                    </if>
                </foreach>,
                        SUM(NVL(NON_CASH_AMT, 0)) AS PAY_AMT_02,
                        SUM(NVL(APPR_CASH_AMT, 0)) AS PAY_AMT_021
                FROM    TB_SL_DAILY_TOTAL
                WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}||'31'
                <if test='storeCds != null and storeCds != ""'>
                    AND STORE_CD IN
                    <foreach collection="storeCdList" item="item" open="("  separator="," close=")" >
                        #{item}
                    </foreach>
                </if>
                <if test='orgnFg != null and orgnFg == "H"'>
                    AND (
                    'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                    OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                    )
                </if>
                GROUP BY    SUBSTR(SALE_DATE,0,6), STORE_CD
                ) tsdt,
                (
                    SELECT 	SUBSTR(SALE_DATE,0,6) AS SALE_YM,
                            STORE_CD,
                            SUM(CASE WHEN DLVR_PACK_FG = '1' THEN REAL_SALE_AMT ELSE 0 END) AS GEN_REAL_SALE_AMT,
                            SUM(CASE WHEN DLVR_PACK_FG = '2' THEN REAL_SALE_AMT ELSE 0 END) AS DLVR_REAL_SALE_AMT,
                            SUM(CASE WHEN DLVR_PACK_FG = '3' THEN REAL_SALE_AMT ELSE 0 END) AS PACK_REAL_SALE_AMT
                    FROM 	TB_SL_DAILY_DTL_DLVR
                    WHERE   HQ_OFFICE_CD = #{hqOfficeCd}
                    AND     SALE_DATE BETWEEN #{startMonth}||'01' AND #{endMonth}||'31'
                    <if test='storeCds != null and storeCds != ""'>
                        AND STORE_CD IN
                        <foreach collection="storeCdList" item="item" open="("  separator="," close=")" >
                            #{item}
                        </foreach>
                    </if>
                    <if test='orgnFg != null and orgnFg == "H"'>
                        AND (
                        'N' = (SELECT NVL(MAX(ENVST_VAL), 'N') FROM TB_HQ_ENVST WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND ENVST_CD = '0001')
                        OR   STORE_CD IN (SELECT STORE_CD  FROM TB_HQ_EMPLOYEE_STORE_V08 WHERE HQ_OFFICE_CD = #{hqOfficeCd} AND EMP_NO = #{empNo})
                        )
                    </if>
                    GROUP BY    SUBSTR(SALE_DATE,0,6), STORE_CD
                ) tsddd
        WHERE   tsdt.SALE_YM = tsddd.SALE_YM (+)  -- TB_SL_DAILY_PROD_DLVR 테이블이 생기기 전 매출이 없는 경우 나오지 않음
        AND     tsdt.STORE_CD = tsddd.STORE_CD (+)
        ORDER
        BY      tsdt.SALE_YM, tsdt.STORE_CD
    </select>

</mapper>