<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    SaleAnalysisByProduct.xml
    상품별 매출분석 sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김유승     2025.09.30
-->
<mapper namespace="kr.co.solbipos.kookmin.saleAnalysis.saleAnalysisByProduct.service.impl.SaleAnalysisByProductMapper">

    <!-- 상품별 매출분석 조회 -->
    <!--
        TABLE    :
        COMMENTS : 상품별 매출분석을 조회한다.
    -->
    <select id="getSaleAnalysisByProductList" parameterType="SaleAnalysisByProductVO" resultType="DefaultMap">
        /* SaleAnalysisByProductMapper.getSaleAnalysisByProductList */
        SELECT 	A.STORE_CD
        ,		B.STORE_NM
        ,		A.PROD_CD
        ,		C.PROD_NM
        ,		D.SH_B_PUBLISH_NM
        ,		D.SH_B_AUTHOR1
        ,		E.PROD_CLASS_CD
        ,		E.PROD_CLASS_NM     AS M_CLS_N_PUB_NM
        ,		F.PROD_CLASS_CD
        ,		F.PROD_CLASS_NM     AS S_CLS_N_AUTHOR
        ,		G.VENDR_CD          AS ACQUIRE_CD
        ,		H.VENDR_NM          AS ACQUIRE_NM
        ,		CASE
                    WHEN SUM(A.TOT_SALE_QTY) IS NULL OR SUM(A.TOT_SALE_QTY) = 0 THEN 0
                    ELSE ROUND(NVL(SUM(A.TOT_SALE_AMT), 0) / SUM(A.TOT_SALE_QTY),0)
                END AS SALE_AMT
        ,		SUM(A.TOT_SALE_QTY)     AS TOT_SALE_QTY
        ,		SUM(A.TOT_SALE_AMT)     AS TOT_SALE_AMT
        ,		SUM(A.TOT_DC_AMT)       AS TOT_DC_AMT
        ,		SUM(A.REAL_SALE_AMT)    AS REAL_SALE_AMT
        FROM 	TB_SL_DAILY_PROD A
        ,		TB_MS_STORE B
        ,		TB_MS_PRODUCT C
        ,		TB_MS_PRODUCT_INFO D
        ,		TB_HQ_PRODUCT_CLASS E
        ,		TB_HQ_PRODUCT_CLASS F
        ,		TB_HQ_VENDOR_PROD G
        ,		TB_HQ_VENDOR H
        WHERE 	B.STORE_CD 			= A.STORE_CD
        AND 	C.STORE_CD 			= A.STORE_CD
        AND 	C.PROD_CD 			= A.PROD_CD
        AND 	D.STORE_CD 		(+)	= A.STORE_CD
        AND 	D.PROD_CD 		(+)	= A.PROD_CD
        AND		A.HQ_OFFICE_CD 		= #{hqOfficeCd}
        AND		E.HQ_OFFICE_CD 		= A.HQ_OFFICE_CD
        AND 	E.PROD_CLASS_CD 	= C.PROD_CLASS_CD
        AND		F.HQ_OFFICE_CD 	(+)	= E.HQ_OFFICE_CD
        AND 	F.PROD_CLASS_CD (+)	= E.P_PROD_CLASS_CD
        AND		G.HQ_OFFICE_CD 	(+)	= A.HQ_OFFICE_CD
        AND 	G.HQ_BRAND_CD 	(+)	= A.HQ_BRAND_CD
        AND		G.PROD_CD 		(+)	= A.PROD_CD
        AND		H.HQ_OFFICE_CD 	(+)	= A.HQ_OFFICE_CD
        AND 	H.HQ_BRAND_CD 	(+)	= A.HQ_BRAND_CD
        AND		H.VENDR_CD 		(+)	= G.VENDR_CD
--         AND		H.VENDOR_FG 	(+) = '1'       -- 매입거래처(매입처 처리 방법 확인 후 수정)
        AND     A.SALE_DATE     BETWEEN #{startDate} AND #{endDate}
        <if test='storeCdQuery != null and storeCdQuery != ""'>
            AND A.STORE_CD IN (${storeCdQuery})
        </if>
        <if test="acquireCd != null and acquireCd != ''">
            AND G.VENDR_CD LIKE '%' || #{acquireCd} || '%'
        </if>
        <if test="acquireNm != null and acquireNm != ''">
            AND H.VENDR_NM LIKE '%' || #{acquireNm} || '%'
        </if>
        <if test="prodCd != null and prodCd != ''">
            AND A.PROD_CD LIKE '%' || #{prodCd} || '%'
        </if>
        <if test="prodNm != null and prodNm != ''">
            AND C.PROD_NM LIKE '%' || #{prodNm} || '%'
        </if>
        GROUP
        BY		A.STORE_CD
        ,		B.STORE_NM
        ,		A.PROD_CD
        ,		C.PROD_NM
        ,		D.SH_B_PUBLISH_NM
        ,		D.SH_B_AUTHOR1
        ,		E.PROD_CLASS_CD
        ,		E.PROD_CLASS_NM
        ,		F.PROD_CLASS_CD
        ,		F.PROD_CLASS_NM
        ,		G.VENDR_CD
        ,		H.VENDR_NM
        ORDER
        BY     	A.STORE_CD
        ,       A.PROD_CD
        ,		G.VENDR_CD
    </select>
</mapper>
