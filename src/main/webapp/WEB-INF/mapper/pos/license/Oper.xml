<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    Oper.xml
    운영현황
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김설아     2019.10.28     최초작성
-->
<mapper namespace="kr.co.solbipos.pos.license.oper.service.impl.OperMapper">

    <!-- 매출매장현황탭 - 러닝매장현황조회-->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE, TB_MS_POS, TB_CM_INSTLL, TB_SL_SALE_HDR
        COMMENTS : [매장]매장 정보 와 [본사]본사 정보, [매장]포스 정보, 설치의뢰, [매출]헤더
    -->
    <select id="getRunSaleStoreList"  parameterType="OperVO" resultType="DefaultMap">
        /* OperMapper.getRunSaleStoreList */
        SELECT  A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG, B.OWNER_NM, B.BIZ_NO
        ,       C.NMCODE_NM SYS_STAT_NM
        ,       TO_CHAR(TO_DATE(B.SYS_OPEN_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SYS_OPEN_DATE
        ,       TO_CHAR(TO_DATE(SUBSTR(B.REG_DT, 1, 8), 'yyyymmdd'), 'yyyy-mm-dd') AS REG_DATE
        ,       B.AGENCY_CD
        ,       D.AGENCY_NM
        ,       B.VAN_CD
        ,       E.VAN_NM
        ,		Q.ENVST_VAL_NM AS PROG_FG
        ,       O.POS_CNT
        ,       G.BILL_CNT
        ,       G.SALE_CNT
        ,       G.RTN_SALE_CNT
        ,       G.REAL_SALE_CNT
        ,       G.TOT_GUEST_CNT
        ,       G.TOT_DLVR_CNT
        ,       G.TOT_RESVE_CNT
        ,       G.TOT_REFUND_CNT
        ,       G.MIN_SALE_YM
        ,       G.MAX_SALE_YM
        ,       CASE WHEN G.MIN_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MIN_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MIN_SALE_DATE
        ,       CASE WHEN G.MAX_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MAX_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MAX_SALE_DATE
        ,       H.P_BILL_CNT
        ,       H.P_SALE_CNT
        ,       H.P_RTN_SALE_CNT
        ,       H.P_REAL_SALE_CNT
        ,       I.P_CARD_CNT
        ,       J.P_CASH_CNT
        ,       J.P_CASH_APPR_CNT
        ,       K.VENDOR_TERMNL_NO
        ,       DECODE(L.SOLBI_STORE_CD, NULL, '신규', '전환') AS SHOP_MIG_FG
        ,       (SELECT AGENCY_NM FROM TB_CM_AGENCY WHERE AGENCY_CD = (SELECT DECODE(P_AGENCY_CD, '00000', AGENCY_CD, P_AGENCY_CD) FROM TB_CM_AGENCY WHERE AGENCY_CD = B.AGENCY_CD)) AS DIST
        ,       F.POS_VER_NO
        ,       CASE WHEN M.LAST_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(M.LAST_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS LAST_SALE_DATE
        ,       CASE WHEN N.INST_INS_DT IS NOT NULL THEN TO_CHAR(TO_DATE(SUBSTR(N.INST_INS_DT,0,8), 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS INST_INS_DT
        FROM    TB_HQ_OFFICE A
        ,       TB_MS_STORE B
        ,       TB_CM_NMCODE C
        ,       TB_CM_AGENCY D
        ,       TB_CM_VAN_CMPNY E
        ,       (
                    SELECT  STORE_CD
                    ,       COUNT(POS_NO) AS POS_CNT
                    ,       MAX(POS_VER_NO) AS POS_VER_NO
                    FROM    TB_MS_POS
                    WHERE   USE_YN  =   'Y'
                    GROUP
                    BY      STORE_CD
                ) F
        ,       (
                    SELECT  A.STORE_CD              STORE_CD
                    ,       A.BILL_CNT              BILL_CNT
                    ,       A.SALE_CNT              SALE_CNT
                    ,       A.RTN_SALE_CNT          RTN_SALE_CNT
                    ,       A.REAL_SALE_CNT         REAL_SALE_CNT
                    ,       A.TOT_GUEST_CNT         TOT_GUEST_CNT
                    ,       A.TOT_DLVR_CNT          TOT_DLVR_CNT
                    ,       A.TOT_RESVE_CNT         TOT_RESVE_CNT
                    ,       A.TOT_REFUND_CNT        TOT_REFUND_CNT
                    ,       A.MIN_SALE_YM           MIN_SALE_YM
                    ,       A.MAX_SALE_YM           MAX_SALE_YM
                    ,       MIN(B.SALE_DATE)        MIN_SALE_DATE
                    ,       MAX(C.SALE_DATE)        MAX_SALE_DATE
                    FROM    (
                                SELECT  A.STORE_CD
                                ,       SUM(NVL(A.BILL_CNT      , 0))   BILL_CNT
                                ,       SUM(NVL(A.SALE_CNT      , 0))   SALE_CNT
                                ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   RTN_SALE_CNT
                                ,       SUM(NVL(A.REAL_SALE_CNT , 0))   REAL_SALE_CNT
                                ,       SUM(NVL(A.TOT_GUEST_CNT , 0))   TOT_GUEST_CNT
                                ,       SUM(NVL(A.TOT_DLVR_CNT  , 0))   TOT_DLVR_CNT
                                ,       SUM(NVL(A.TOT_RESVE_CNT , 0))   TOT_RESVE_CNT
                                ,       SUM(NVL(A.TOT_REFUND_CNT, 0))   TOT_REFUND_CNT
                                ,       MIN(A.SALE_YM)                  MIN_SALE_YM
                                ,       MAX(A.SALE_YM)                  MAX_SALE_YM
                                FROM    TB_SL_MONTHLY_TOTAL A
                                GROUP
                                BY      A.STORE_CD
                            ) A
                    ,       TB_SL_DAILY_TOTAL B
                    ,       TB_SL_DAILY_TOTAL C
                    WHERE   B.STORE_CD  (+) =   A.STORE_CD
                    AND     B.SALE_DATE (+) LIKE    A.MIN_SALE_YM||'%'
                    AND     C.STORE_CD  (+) =   A.STORE_CD
                    AND     C.SALE_DATE (+) LIKE    A.MAX_SALE_YM||'%'
                    GROUP
                    BY      A.STORE_CD
                    ,       A.BILL_CNT
                    ,       A.SALE_CNT
                    ,       A.RTN_SALE_CNT
                    ,       A.REAL_SALE_CNT
                    ,       A.TOT_GUEST_CNT
                    ,       A.TOT_DLVR_CNT
                    ,       A.TOT_RESVE_CNT
                    ,       A.TOT_REFUND_CNT
                    ,       A.MIN_SALE_YM
                    ,       A.MAX_SALE_YM
                ) G
        ,       (
                    SELECT  A.STORE_CD
                    ,       SUM(NVL(A.BILL_CNT      , 0))   P_BILL_CNT
                    ,       SUM(NVL(A.SALE_CNT      , 0))   P_SALE_CNT
                    ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   P_RTN_SALE_CNT
                    ,       SUM(NVL(A.REAL_SALE_CNT , 0))   P_REAL_SALE_CNT
                    FROM    TB_SL_DAILY_TOTAL A
                    WHERE   A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      A.STORE_CD
                ) H
        ,       (
                    SELECT  HQ_OFFICE_CD
                    ,       STORE_CD
                    ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CARD_CNT
                    FROM    TB_SL_SALE_PAY_CARD
                    WHERE   SALE_DATE   BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      HQ_OFFICE_CD
                    ,       STORE_CD
                ) I
        ,       (
                    SELECT  HQ_OFFICE_CD
                    ,       STORE_CD
                    ,       COUNT(STORE_CD) AS CASH_CNT
                    ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CASH_CNT
                    ,       SUM(CASE WHEN APPR_DT IS NOT NULL THEN DECODE(SALE_YN, 'Y', 1, 'N', -1, 0) ELSE 0 END) AS P_CASH_APPR_CNT
                    FROM    TB_SL_SALE_PAY_CASH
                    WHERE   SALE_DATE   BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      HQ_OFFICE_CD
                    ,       STORE_CD
                ) J
        ,       (
                    SELECT  A.STORE_CD
                    ,       REGEXP_REPLACE(LISTAGG(A.VENDOR_TERMNL_NO, ',') WITHIN GROUP(ORDER BY A.VENDOR_TERMNL_NO), '([^,]+)(,\1)*(,|$)', '\1\3') VENDOR_TERMNL_NO
                    FROM    TB_MS_POS_TERMNL A
                    ,       TB_MS_POS B
                    WHERE   A.VENDOR_FG =   '01'
                    AND     B.STORE_CD  =   A.STORE_CD
                    AND     B.POS_NO    =   A.POS_NO
                    AND     B.USE_YN    =   'Y'
                    GROUP
                    BY      A.STORE_CD
                ) K
        ,       TB_MIG_DATA_MAPPING L
        ,       (
                    SELECT  A.STORE_CD
                    ,       MAX(A.LAST_SALE_DATE) LAST_SALE_DATE
                    FROM    TB_ST_STORE_STOCK_CUR A
                    GROUP
                    BY      A.STORE_CD
                ) M
        ,       (
                    SELECT  A.STORE_CD
                    ,       MIN(A.INST_INS_DT) INST_INS_DT
                    FROM    TB_CM_INSTLL A
                    GROUP
                    BY      A.STORE_CD
                ) N
        ,       (
                    SELECT  A.STORE_CD
                    ,       COUNT(DISTINCT A.POS_NO)          POS_CNT
                    FROM    TB_CM_INSTLL A
                    ,       TB_MS_POS B
                    <![CDATA[
                    WHERE   A.INST_FG <>  '0'
                    ]]>
                    AND     B.STORE_CD  =  A.STORE_CD
                    AND     B.POS_NO    =  A.POS_NO
                    AND     B.USE_YN    =   'Y'
                    GROUP
                    BY      A.STORE_CD
                ) O
        ,		(
                    SELECT 	A.STORE_CD
                    ,		A.ENVST_VAL
                    FROM	TB_MS_STORE_ENVST A
                    WHERE 	ENVST_CD = '1014'
                )P
        ,		(
                    SELECT 	A.ENVST_VAL_CD
                    ,		A.ENVST_VAL_NM
                    FROM 	TB_CM_ENVST_DTL A
                    WHERE 	A.ENVST_CD = '1014'
                )Q
        WHERE   1 = 1
        AND     B.HQ_OFFICE_CD      =   A.HQ_OFFICE_CD
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
            ]]>
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
            ]]>
        </if>
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                 AND B.STORE_CD LIKE '%'|| #{storeCd} ||'%'
            ]]>
        </if>
        <if test='storeNm != null and storeNm != ""'>
            <![CDATA[
                 AND B.STORE_NM LIKE '%'|| #{storeNm} ||'%'
            ]]>
        </if>
        <if test='manageVanCd != null and manageVanCd != ""'>
            <![CDATA[
                 AND B.VAN_CD = #{manageVanCd}
            ]]>
        </if>
        <if test='bizNo != null and bizNo != ""'>
            <![CDATA[
                 AND B.BIZ_NO = #{bizNo}
            ]]>
        </if>
        <if test='srchShopMigFg != null and srchShopMigFg != ""'>
            <![CDATA[
                 AND DECODE(L.SOLBI_STORE_CD, NULL, '0', '1') = #{srchShopMigFg}
            ]]>
        </if>
        <choose>
            <!-- 시스템 -->
            <when test='orgnFg != null and orgnFg == "MASTER"'>
                <if test='srchAgencyCd != null and srchAgencyCd != ""'>
                    <![CDATA[
                         AND B.AGENCY_CD = #{srchAgencyCd}
                    ]]>
                </if>
            </when>
            <!-- 총판 -->
            <when test='orgnFg != null and orgnFg == "AGENCY"'>
                <![CDATA[
                    AND B.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
                ]]>
            </when>
        </choose>
        AND     C.NMCODE_GRP_CD     (+) =   '005'
        AND     C.NMCODE_CD         (+) =   B.SYS_STAT_FG
        AND     D.AGENCY_CD         (+) =   B.AGENCY_CD
        AND     E.VAN_FG            (+) =   '01'
        AND     E.VAN_CD            (+) =   B.VAN_CD
        AND     F.STORE_CD          (+) =   B.STORE_CD
        AND     G.STORE_CD          (+) =   B.STORE_CD
        AND     H.STORE_CD              =   B.STORE_CD
        AND     I.STORE_CD          (+) =   B.STORE_CD
        AND     J.STORE_CD          (+) =   B.STORE_CD
        AND     K.STORE_CD          (+) =   B.STORE_CD
        AND     L.SOLBI_STORE_CD    (+) =   B.STORE_CD
        AND     M.STORE_CD          (+) =   B.STORE_CD
        AND     N.STORE_CD          (+) =   B.STORE_CD
        AND     O.STORE_CD          (+) =   B.STORE_CD
        AND     P.STORE_CD          (+) =   B.STORE_CD
        AND     Q.ENVST_VAL_CD      (+) =   P.ENVST_VAL
        ORDER
        BY      A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG
    </select>

    <!-- 매출매장현황탭 - 매출매장현황조회-->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE, TB_MS_POS, TB_CM_INSTLL, TB_SL_SALE_HDR
        COMMENTS : [매장]매장 정보 와 [본사]본사 정보, [매장]포스 정보, 설치의뢰, [매출]헤더
    -->
    <select id="getSaleStoreList"  parameterType="OperVO" resultType="DefaultMap">
        /* OperMapper.getSaleStoreList */
        SELECT  A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG, B.OWNER_NM, B.BIZ_NO
        ,       C.NMCODE_NM SYS_STAT_NM
        ,       TO_CHAR(TO_DATE(B.SYS_OPEN_DATE, 'yyyymmdd'), 'yyyy-mm-dd') AS SYS_OPEN_DATE
        ,       TO_CHAR(TO_DATE(SUBSTR(B.REG_DT, 1, 8), 'yyyymmdd'), 'yyyy-mm-dd') AS REG_DATE
        ,       B.AGENCY_CD
        ,       D.AGENCY_NM
        ,       B.VAN_CD
        ,       E.VAN_NM
        ,		Q.ENVST_VAL_NM AS PROG_FG
        ,       F.POS_CNT
        ,       F.POS_ENVST_4019_1
        ,       F.POS_ENVST_4019_2
        ,       F.POS_ENVST_4019_3
        ,       F.POS_ENVST_4019_4
        ,       F.POS_ENVST_4019_5
        ,       F.POS_ENVST_4019_6
        ,       F.POS_ENVST_4019_7
        ,       G.BILL_CNT
        ,       G.SALE_CNT
        ,       G.RTN_SALE_CNT
        ,       G.REAL_SALE_CNT
        ,       G.TOT_GUEST_CNT
        ,       G.TOT_DLVR_CNT
        ,       G.TOT_RESVE_CNT
        ,       G.TOT_REFUND_CNT
        ,       G.MIN_SALE_YM
        ,       G.MAX_SALE_YM
        ,       CASE WHEN G.MIN_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MIN_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MIN_SALE_DATE
        ,       CASE WHEN G.MAX_SALE_DATE IS NOT NULL THEN TO_CHAR(TO_DATE(G.MAX_SALE_DATE, 'yyyymmdd'), 'yyyy-mm-dd') ELSE '' END AS MAX_SALE_DATE
        ,       H.P_BILL_CNT
        ,       H.P_SALE_CNT
        ,       H.P_RTN_SALE_CNT
        ,       H.P_REAL_SALE_CNT
        ,       I.P_CARD_CNT
        ,       J.P_CASH_CNT
        ,       J.P_CASH_APPR_CNT
        ,       K.VENDOR_TERMNL_NO
        ,       DECODE(L.SOLBI_STORE_CD, NULL, '신규', '전환') AS SHOP_MIG_FG
        FROM    TB_HQ_OFFICE A
        ,       TB_MS_STORE B
        ,       TB_CM_NMCODE C
        ,       TB_CM_AGENCY D
        ,       TB_CM_VAN_CMPNY E
        ,       (
                    SELECT  A.STORE_CD
                    ,       COUNT(A.POS_NO) AS POS_CNT
                    ,       REGEXP_REPLACE(LISTAGG(' ('||A.POS_NO||')'||' '||C.ENVST_VAL_NM, ',') WITHIN GROUP(ORDER BY A.POS_NO), '([^,]+)(,\1)*(,|$)', '\1\3') AS POS_FG -- POS_ENVST_4019
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 1, 1, 0))) AS POS_ENVST_4019_1
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 2, 1, 0))) AS POS_ENVST_4019_2
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 3, 1, 0))) AS POS_ENVST_4019_3
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 4, 1, 0))) AS POS_ENVST_4019_4
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 5, 1, 0))) AS POS_ENVST_4019_5
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 6, 1, 0))) AS POS_ENVST_4019_6
                    ,       SF_ZERO_TO_NULL(SUM(DECODE(B.ENVST_VAL, 7, 1, 0))) AS POS_ENVST_4019_7
                    FROM    TB_MS_POS A
                    ,       TB_MS_POS_ENVST B
                    ,       TB_CM_ENVST_DTL C
                    WHERE   A.USE_YN            =   'Y'
                    AND     B.STORE_CD      (+) =   A.STORE_CD
                    AND     B.POS_NO        (+) =   A.POS_NO
                    AND     B.ENVST_CD      (+) =   '4019'
                    AND     C.ENVST_CD      (+) =   '4019'
                    AND     C.ENVST_VAL_CD  (+) =   B.ENVST_VAL
                    GROUP
                    BY      A.STORE_CD
                ) F
        ,       (
                    SELECT  A.STORE_CD              STORE_CD
                    ,       A.BILL_CNT              BILL_CNT
                    ,       A.SALE_CNT              SALE_CNT
                    ,       A.RTN_SALE_CNT          RTN_SALE_CNT
                    ,       A.REAL_SALE_CNT         REAL_SALE_CNT
                    ,       A.TOT_GUEST_CNT         TOT_GUEST_CNT
                    ,       A.TOT_DLVR_CNT          TOT_DLVR_CNT
                    ,       A.TOT_RESVE_CNT         TOT_RESVE_CNT
                    ,       A.TOT_REFUND_CNT        TOT_REFUND_CNT
                    ,       A.MIN_SALE_YM           MIN_SALE_YM
                    ,       A.MAX_SALE_YM           MAX_SALE_YM
                    ,       MIN(B.SALE_DATE)        MIN_SALE_DATE
                    ,       MAX(C.SALE_DATE)        MAX_SALE_DATE
                    FROM    (
                                SELECT  A.STORE_CD
                                ,       SUM(NVL(A.BILL_CNT      , 0))   BILL_CNT
                                ,       SUM(NVL(A.SALE_CNT      , 0))   SALE_CNT
                                ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   RTN_SALE_CNT
                                ,       SUM(NVL(A.REAL_SALE_CNT , 0))   REAL_SALE_CNT
                                ,       SUM(NVL(A.TOT_GUEST_CNT , 0))   TOT_GUEST_CNT
                                ,       SUM(NVL(A.TOT_DLVR_CNT  , 0))   TOT_DLVR_CNT
                                ,       SUM(NVL(A.TOT_RESVE_CNT , 0))   TOT_RESVE_CNT
                                ,       SUM(NVL(A.TOT_REFUND_CNT, 0))   TOT_REFUND_CNT
                                ,       MIN(A.SALE_YM)                  MIN_SALE_YM
                                ,       MAX(A.SALE_YM)                  MAX_SALE_YM
                                FROM    TB_SL_MONTHLY_TOTAL A
                                GROUP
                                BY      A.STORE_CD
                            ) A
                    ,       TB_SL_DAILY_TOTAL B
                    ,       TB_SL_DAILY_TOTAL C
                    WHERE   B.STORE_CD  (+) =   A.STORE_CD
                    AND     B.SALE_DATE (+) LIKE    A.MIN_SALE_YM||'%'
                    AND     C.STORE_CD  (+) =   A.STORE_CD
                    AND     C.SALE_DATE (+) LIKE    A.MAX_SALE_YM||'%'
                    GROUP
                    BY      A.STORE_CD
                    ,       A.BILL_CNT
                    ,       A.SALE_CNT
                    ,       A.RTN_SALE_CNT
                    ,       A.REAL_SALE_CNT
                    ,       A.TOT_GUEST_CNT
                    ,       A.TOT_DLVR_CNT
                    ,       A.TOT_RESVE_CNT
                    ,       A.TOT_REFUND_CNT
                    ,       A.MIN_SALE_YM
                    ,       A.MAX_SALE_YM
                ) G
        ,       (
                    SELECT  A.STORE_CD
                    ,       SUM(NVL(A.BILL_CNT      , 0))   P_BILL_CNT
                    ,       SUM(NVL(A.SALE_CNT      , 0))   P_SALE_CNT
                    ,       SUM(NVL(A.RTN_SALE_CNT  , 0))   P_RTN_SALE_CNT
                    ,       SUM(NVL(A.REAL_SALE_CNT , 0))   P_REAL_SALE_CNT
                    FROM    TB_SL_DAILY_TOTAL A
                    WHERE   A.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      A.STORE_CD
                ) H
        ,       (
                    SELECT  HQ_OFFICE_CD
                    ,       STORE_CD
                    ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CARD_CNT
                    FROM    TB_SL_SALE_PAY_CARD
                    WHERE   SALE_DATE   BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      HQ_OFFICE_CD
                    ,       STORE_CD
                ) I
        ,       (
                    SELECT  HQ_OFFICE_CD
                    ,       STORE_CD
                    ,       COUNT(STORE_CD) AS CASH_CNT
                    ,       SUM(DECODE(SALE_YN, 'Y', 1, 'N', -1, 0)) AS P_CASH_CNT
                    ,       SUM(CASE WHEN APPR_DT IS NOT NULL THEN DECODE(SALE_YN, 'Y', 1, 'N', -1, 0) ELSE 0 END) AS P_CASH_APPR_CNT
                    FROM    TB_SL_SALE_PAY_CASH
                    WHERE   SALE_DATE   BETWEEN #{startDate} AND #{endDate}
                    GROUP
                    BY      HQ_OFFICE_CD
                    ,       STORE_CD
                ) J
        ,       (
                    SELECT  A.STORE_CD
                    ,       REGEXP_REPLACE(LISTAGG(A.VENDOR_TERMNL_NO, ',') WITHIN GROUP(ORDER BY A.VENDOR_TERMNL_NO), '([^,]+)(,\1)*(,|$)', '\1\3') VENDOR_TERMNL_NO
                    FROM    TB_MS_POS_TERMNL A
                    ,       TB_MS_POS B
                    WHERE   A.VENDOR_FG =   '01'
                    AND     B.STORE_CD  =   A.STORE_CD
                    AND     B.POS_NO    =   A.POS_NO
                    AND     B.USE_YN    =   'Y'
                    GROUP
                    BY      A.STORE_CD
                ) K
        ,       TB_MIG_DATA_MAPPING L
        ,		(
                    SELECT 	A.STORE_CD
                    ,		A.ENVST_VAL
                    FROM	TB_MS_STORE_ENVST A
                    WHERE 	ENVST_CD = '1014'

                )P
        ,		(
                    SELECT 	A.ENVST_VAL_CD
                    ,		A.ENVST_VAL_NM
                    FROM 	TB_CM_ENVST_DTL A
                    WHERE 	A.ENVST_CD = '1014'
                )Q
        WHERE   1 = 1
        AND     B.HQ_OFFICE_CD      =   A.HQ_OFFICE_CD
        <if test='hqOfficeCd != null and hqOfficeCd != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_CD LIKE '%'|| #{hqOfficeCd} ||'%'
            ]]>
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            <![CDATA[
                 AND A.HQ_OFFICE_NM LIKE '%'|| #{hqOfficeNm} ||'%'
            ]]>
        </if>
        <if test='storeCd != null and storeCd != ""'>
            <![CDATA[
                 AND B.STORE_CD LIKE '%'|| #{storeCd} ||'%'
            ]]>
        </if>
        <if test='storeNm != null and storeNm != ""'>
            <![CDATA[
                 AND B.STORE_NM LIKE '%'|| #{storeNm} ||'%'
            ]]>
        </if>
        <if test='manageVanCd != null and manageVanCd != ""'>
            <![CDATA[
                 AND B.VAN_CD = #{manageVanCd}
            ]]>
        </if>
        <if test='bizNo != null and bizNo != ""'>
            <![CDATA[
                 AND B.BIZ_NO = #{bizNo}
            ]]>
        </if>
        <if test='srchShopMigFg != null and srchShopMigFg != ""'>
            <![CDATA[
                 AND DECODE(L.SOLBI_STORE_CD, NULL, '0', '1') = #{srchShopMigFg}
            ]]>
        </if>
        <choose>
            <!-- 시스템 -->
            <when test='orgnFg != null and orgnFg == "MASTER"'>
                <if test='srchAgencyCd != null and srchAgencyCd != ""'>
                    <![CDATA[
                         AND B.AGENCY_CD = #{srchAgencyCd}
                    ]]>
                </if>
            </when>
            <!-- 총판 -->
            <when test='orgnFg != null and orgnFg == "AGENCY"'>
                <![CDATA[
                    AND B.AGENCY_CD IN (SELECT AGENCY_CD FROM TB_CM_AGENCY WHERE AGENCY_CD = #{agencyCd} OR P_AGENCY_CD = #{agencyCd})
                ]]>
            </when>
        </choose>
        AND     C.NMCODE_GRP_CD (+) =   '005'
        AND     C.NMCODE_CD     (+) =   B.SYS_STAT_FG
        AND     D.AGENCY_CD     (+) =   B.AGENCY_CD
        AND     E.VAN_FG        (+) =   '01'
        AND     E.VAN_CD        (+) =   B.VAN_CD
        AND     F.STORE_CD      (+) =   B.STORE_CD
        AND     G.STORE_CD      (+) =   B.STORE_CD
        AND     H.STORE_CD      (+) =   B.STORE_CD
        AND     I.STORE_CD      (+) =   B.STORE_CD
        AND     J.STORE_CD      (+) =   B.STORE_CD
        AND     K.STORE_CD      (+) =   B.STORE_CD
        AND     L.SOLBI_STORE_CD    (+) =   B.STORE_CD
        AND     P.STORE_CD          (+) =   B.STORE_CD
        AND     Q.ENVST_VAL_CD      (+) =   P.ENVST_VAL
        ORDER
        BY      A.HQ_OFFICE_CD, A.HQ_OFFICE_NM
        ,       B.STORE_CD, B.STORE_NM, B.SYS_STAT_FG
    </select>

    <!-- 대리점인증현황탭 - 대리점인증현황조회-->
    <!--
        TABLE    : TB_CM_AGENCY, TB_CM_INSTLL
        COMMENTS : [공통]대리점 정보 와 설치의뢰
    -->
    <select id="getAgencyAuthList"  parameterType="OperVO" resultType="DefaultMap">
        /* OperMapper.getAgencyAuthList */
        SELECT
        tca.AGENCY_CD,
        tca.AGENCY_NM,
        <choose>
            <!-- 시스템 -->
            <when test='orgnFg != null and orgnFg == "MASTER"'>
                (CASE WHEN tca.P_AGENCY_CD = '00000' THEN '총판' WHEN tca.P_AGENCY_CD != '00000' THEN '대리점' ELSE '' END) AS AGENCY_FG,
            </when>
            <!-- 총판 -->
            <when test='orgnFg != null and orgnFg == "AGENCY"'>
                (CASE WHEN tca.AGENCY_CD = #{orgnCd} THEN '자사' WHEN tca.P_AGENCY_CD = #{orgnCd} THEN '대리점' ELSE '' END) AS AGENCY_FG,
            </when>
        </choose>
        tca.OWNER_NM,
        0 AS BUY_CNT,
        0 AS SALE_CNT,
        NVL(tci.INST_CNT,0) AS INST_CNT,
        0 AS REST_CNT,
        tca.USE_YN,
        TO_CHAR(TO_DATE(tca.REG_DT, 'YYYYMMDDHH24MISS'), 'yyyy-mm-dd') AS REG_DT,
        tca.REG_ID
        FROM TB_CM_AGENCY tca,
        (
            SELECT
            tci.AGENCY_CD,
            COUNT(tci.STORE_CD) AS INST_CNT
            FROM TB_CM_INSTLL tci,
            TB_MS_STORE tms
            WHERE 1=1
            AND tci.SEQ_NO = '1'
            AND tci.INST_FG = '1'
            AND tms.STORE_CD (+)= tci.STORE_CD
            AND tms.AGENCY_CD (+)= tci.AGENCY_CD
            <if test='manageVanCd != null and manageVanCd != ""'>
                <![CDATA[
                     AND tms.VAN_CD = #{manageVanCd}
                ]]>
            </if>
            GROUP BY tci.AGENCY_CD
        ) tci
        WHERE 1=1
        AND tca.AGENCY_CD != '00000'
        AND tca.REG_DT BETWEEN #{startDate} AND #{endDate}
        <choose>
            <!-- 총판 -->
            <when test='orgnFg != null and orgnFg == "AGENCY"'>
                <![CDATA[
                    AND (tca.AGENCY_CD = #{orgnCd} OR tca.P_AGENCY_CD = #{orgnCd})
                ]]>
            </when>
        </choose>
        <if test='srchAgencyCd != null and srchAgencyCd != ""'>
            <![CDATA[
            AND tca.AGENCY_CD LIKE '%'|| #{srchAgencyCd} ||'%'
            ]]>
        </if>
        <if test='srchAgencyNm != null and srchAgencyNm != ""'>
            <![CDATA[
            AND tca.AGENCY_NM LIKE '%'|| #{srchAgencyNm} ||'%'
            ]]>
        </if>
        <if test='agencyFg != null and agencyFg != ""'>
            <if test='agencyFg == "1"'>
                <![CDATA[
                    AND tca.AGENCY_CD = #{orgnCd}
                ]]>
            </if>
            <if test='agencyFg == "2"'>
                <![CDATA[
                    AND tca.P_AGENCY_CD = #{orgnCd}
                ]]>
            </if>
        </if>
        AND tci.AGENCY_CD (+)= tca.AGENCY_CD
        ORDER BY tca.AGENCY_CD
    </select>

</mapper>