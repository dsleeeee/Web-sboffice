<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.solbipos.membr.anals.incln.service.impl.InclnMapper">

    <!-- 회원 구매성향 분석 조회 -->
    <!--
        TABLE    :
        COMMENTS :
    -->
    <select id="getInclnList" parameterType="inclnVO" resultType="DefaultMap">
        /* InclnMapper.getInclnList */
        <choose>
            <!-- 본사 -->
            <when test='orgnFg != null and orgnFg == "H"'>
                SELECT
                Level1,
                FN_GET_PROD_CLASS_CD_NM_STR(#{hqOfficeCd}, Level1, 'NM') AS Level1_NM,
                Level2,
                FN_GET_PROD_CLASS_CD_NM_STR(#{hqOfficeCd}, Level2, 'NM') AS Level2_NM,
                Level3,
                FN_GET_PROD_CLASS_CD_NM_STR(#{hqOfficeCd}, Level3, 'NM') AS Level3_NM,
                <!-- 금액 -->
                <if test='option == ("AMT")'>
                    <![CDATA[
                        SUM(SUM_SALE_AMT) AS SUM_SALE,
                        SUM( CASE WHEN GENDR_FG = 'F' THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_GENDR_F",
                        SUM( CASE WHEN GENDR_FG = 'M' THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_GENDR_M",
                        SUM( CASE WHEN GENDR_FG = 'N' THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_GENDR_Non",
                        SUM( CASE WHEN AGE < 20 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE10",
                        SUM( CASE WHEN AGE >= 20 AND AGE < 30 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE20",
                        SUM( CASE WHEN AGE >= 30 AND AGE < 40 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE30",
                        SUM( CASE WHEN AGE >= 40 AND AGE < 50 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE40",
                        SUM( CASE WHEN AGE >= 50 AND AGE < 60 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE50",
                        SUM( CASE WHEN AGE >= 60 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE60"
                    ]]>
                </if>
                <!-- 수량 -->
                <if test='option == "QTY"'>
                    <![CDATA[
                        SUM(SUM_SALE_QTY) AS SUM_SALE,
                        SUM( CASE WHEN GENDR_FG = 'F' THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_GENDR_F",
                        SUM( CASE WHEN GENDR_FG = 'M' THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_GENDR_M",
                        SUM( CASE WHEN GENDR_FG = 'N' THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_GENDR_Non",
                        SUM( CASE WHEN AGE < 20 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE10",
                        SUM( CASE WHEN AGE >= 20 AND AGE < 30 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE20",
                        SUM( CASE WHEN AGE >= 30 AND AGE < 40 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE30",
                        SUM( CASE WHEN AGE >= 40 AND AGE < 50 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE40",
                        SUM( CASE WHEN AGE >= 50 AND AGE < 60 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE50",
                        SUM( CASE WHEN AGE >= 60 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE60"
                    ]]>
                </if>
                FROM
                (
                    SELECT
                    REPLACE(SUBSTR(thpc_p.PATH, 0, 6) ,'▶','') AS Level1,
                    REPLACE(SUBSTR(thpc_p.PATH, 7, 6) ,'▶','') AS Level2,
                    REPLACE(SUBSTR(thpc_p.PATH, 13, 6) ,'▶','') AS Level3,
                    thpc_p.PROD_CLASS_CD,
                    thpc_p.PATH,
                    tmm.GENDR_FG,
                    TO_CHAR( SYSDATE, 'yyyy' ) - SUBSTR( tmm.BIRTHDAY, 0, 4 ) AS AGE,
                    SUM(tssd.SALE_QTY) AS SUM_SALE_QTY,
                    SUM(tssd.SALE_AMT) AS SUM_SALE_AMT
                    FROM TB_MB_MEMBER tmm,
                    TB_SL_SALE_DTL tssd,
                    TB_HQ_PRODUCT thp,
                    (
                        SELECT
                        thpc.HQ_OFFICE_CD,
                        thpc.PROD_CLASS_CD,
                        SYS_CONNECT_BY_PATH (thpc.PROD_CLASS_CD,'▶') PATH
                        FROM TB_HQ_PRODUCT_CLASS thpc
                        WHERE 1=1
                        AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                        START WITH thpc.P_PROD_CLASS_CD = '00000' AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                        CONNECT BY thpc.P_PROD_CLASS_CD = PRIOR thpc.PROD_CLASS_CD AND thpc.HQ_OFFICE_CD = #{hqOfficeCd}
                    ) thpc_p
                    WHERE 1=1
                    AND tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
                    AND tssd.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    AND tssd.MEMBR_NO IS NOT NULL
                    AND thp.HQ_OFFICE_CD = tssd.HQ_OFFICE_CD
                    AND thp.PROD_CD = tssd.PROD_CD
                    AND thpc_p.HQ_OFFICE_CD = thp.HQ_OFFICE_CD
                    AND thpc_p.PROD_CLASS_CD = thp.PROD_CLASS_CD
                    GROUP BY thpc_p.PROD_CLASS_CD, thpc_p.PATH, tmm.GENDR_FG, TO_CHAR( SYSDATE, 'yyyy' ) - SUBSTR( tmm.BIRTHDAY, 0, 4 )
                )
                GROUP BY Level1, Level2, Level3
            </when>
            <!-- 매장 -->
            <when test='orgnFg != null and orgnFg == "S"'>
                SELECT
                Level1,
                FN_GET_PROD_CLASS_CD_NM_STR(#{storeCd}, Level1, 'NM') AS Level1_NM,
                Level2,
                FN_GET_PROD_CLASS_CD_NM_STR(#{storeCd}, Level2, 'NM') AS Level2_NM,
                Level3,
                FN_GET_PROD_CLASS_CD_NM_STR(#{storeCd}, Level3, 'NM') AS Level3_NM,
                <!-- 금액 -->
                <if test='option == ("AMT")'>
                    <![CDATA[
                        SUM(SUM_SALE_AMT) AS SUM_SALE,
                        SUM( CASE WHEN GENDR_FG = 'F' THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_GENDR_F",
                        SUM( CASE WHEN GENDR_FG = 'M' THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_GENDR_M",
                        SUM( CASE WHEN GENDR_FG = 'N' THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_GENDR_Non",
                        SUM( CASE WHEN AGE < 20 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE10",
                        SUM( CASE WHEN AGE >= 20 AND AGE < 30 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE20",
                        SUM( CASE WHEN AGE >= 30 AND AGE < 40 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE30",
                        SUM( CASE WHEN AGE >= 40 AND AGE < 50 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE40",
                        SUM( CASE WHEN AGE >= 50 AND AGE < 60 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE50",
                        SUM( CASE WHEN AGE >= 60 THEN SUM_SALE_AMT ELSE 0 END ) AS "SUM_AGE60"
                    ]]>
                </if>
                <!-- 수량 -->
                <if test='option == "QTY"'>
                    <![CDATA[
                        SUM(SUM_SALE_QTY) AS SUM_SALE,
                        SUM( CASE WHEN GENDR_FG = 'F' THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_GENDR_F",
                        SUM( CASE WHEN GENDR_FG = 'M' THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_GENDR_M",
                        SUM( CASE WHEN GENDR_FG = 'N' THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_GENDR_Non",
                        SUM( CASE WHEN AGE < 20 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE10",
                        SUM( CASE WHEN AGE >= 20 AND AGE < 30 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE20",
                        SUM( CASE WHEN AGE >= 30 AND AGE < 40 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE30",
                        SUM( CASE WHEN AGE >= 40 AND AGE < 50 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE40",
                        SUM( CASE WHEN AGE >= 50 AND AGE < 60 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE50",
                        SUM( CASE WHEN AGE >= 60 THEN SUM_SALE_QTY ELSE 0 END ) AS "SUM_AGE60"
                    ]]>
                </if>
                FROM
                (
                    SELECT
                    REPLACE(SUBSTR(tmpc_p.PATH, 0, 6) ,'▶','') AS Level1,
                    REPLACE(SUBSTR(tmpc_p.PATH, 7, 6) ,'▶','') AS Level2,
                    REPLACE(SUBSTR(tmpc_p.PATH, 13, 6) ,'▶','') AS Level3,
                    tmpc_p.PROD_CLASS_CD,
                    tmpc_p.PATH,
                    tmm.GENDR_FG,
                    TO_CHAR( SYSDATE, 'yyyy' ) - SUBSTR( tmm.BIRTHDAY, 0, 4 ) AS AGE,
                    SUM(tssd.SALE_QTY) AS SUM_SALE_QTY,
                    SUM(tssd.SALE_AMT) AS SUM_SALE_AMT
                    FROM TB_MB_MEMBER tmm,
                    TB_SL_SALE_DTL tssd,
                    TB_MS_PRODUCT tmp,
                    (
                        SELECT
                        tmpc.STORE_CD,
                        tmpc.PROD_CLASS_CD,
                        SYS_CONNECT_BY_PATH (tmpc.PROD_CLASS_CD, '▶') PATH
                        FROM (SELECT * FROM TB_MS_PRODUCT_CLASS WHERE STORE_CD = #{storeCd}) tmpc
                        WHERE 1=1
                        START WITH tmpc.P_PROD_CLASS_CD = '00000' AND tmpc.STORE_CD = #{storeCd}
                        CONNECT BY tmpc.P_PROD_CLASS_CD = PRIOR tmpc.PROD_CLASS_CD AND tmpc.STORE_CD = #{storeCd}
                    ) tmpc_p
                    WHERE 1=1
                    AND tmm.MEMBR_ORGN_CD = #{membrOrgnCd}
                    AND tssd.HQ_OFFICE_CD = #{hqOfficeCd}
                    AND tssd.STORE_CD = #{storeCd}
                    AND tssd.SALE_DATE BETWEEN #{startDate} AND #{endDate}
                    AND tssd.MEMBR_NO IS NOT NULL
                    AND tmp.STORE_CD = tssd.STORE_CD
                    AND tmp.PROD_CD = tssd.PROD_CD
                    AND tmpc_p.STORE_CD = tmp.STORE_CD
                    AND tmpc_p.PROD_CLASS_CD = tmp.PROD_CLASS_CD
                    GROUP BY tmpc_p.PROD_CLASS_CD, tmpc_p.PATH, tmm.GENDR_FG, TO_CHAR( SYSDATE, 'yyyy' ) - SUBSTR( tmm.BIRTHDAY, 0, 4 )
                )
                GROUP BY Level1, Level2, Level3
            </when>
        </choose>
    </select>

</mapper>