<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    VirtualLoginById.xml
    가상로그인(아이디별) sql
    ======================================================
    No  ||  수정자 ||  수정일자    ||  수정내역
    ======================================================
    1       김유승     2025.02.07      최초작성
-->
<mapper namespace="kr.co.solbipos.store.manage.virtualLoginById.service.impl.VirtualLoginByIdMapper">

    <!-- 가상로그인 대상 목록 조회 -->
    <!--
        TABLE    : TB_MS_STORE, TB_HQ_OFFICE, TB_CM_AGENCY, TB_MS_EMPLOYEE, TB_CM_NMCODE
        PARAM    : virtualLoginVO
        COMMENTS : 가상로그인 대상 목록을 조회한다.
    -->
    <select id="getVirtualLoginByIdList" parameterType="virtualLoginByIdVO" resultType="DefaultMap">
        /* USE : VirtualLoginByIdMapper.getVirtualLoginByIdList */
        <include refid="CmmSQL.PagingTemplateHeader"/>
        SELECT 	A.HQ_OFFICE_CD
        ,		A.HQ_OFFICE_NM
        ,		A.STORE_CD
        ,		A.STORE_NM
        ,		A.USER_ID
        ,       A.EMP_NM        AS USER_NM
        ,		C.NMCODE_NM     AS CLS_FG_NM
        ,		D.NMCODE_NM     AS SYS_STAT_FG_NM
        ,		A.OWNER_NM
        ,		A.TEL_NO
        ,		A.MP_NO
        ,		B.AGENCY_NM
        ,		TO_CHAR(TO_DATE(A.SYS_OPEN_DATE, 'YYYYMMDD') , 'YYYY/MM/DD') AS SYS_OPEN_DATE
        ,	    TO_CHAR(TO_DATE(A.SYS_CLOSURE_DATE, 'YYYYMMDD') , 'YYYY/MM/DD') AS SYS_CLOSURE_DATE
        ,       DECODE((
                            SELECT 	COUNT(E.NMCODE_GRP_CD)
                            -		COUNT(F.NMCODE_GRP_CD)
                            FROM 	TB_CM_NMCODE E
                            LEFT JOIN TB_CM_NMCODE F
                            ON 		F.NMCODE_GRP_CD = '179'
                            AND 	F.NMCODE_NM     = #{systemId}
                            WHERE 	E.NMCODE_GRP_CD = '178'
                            AND 	E.NMCODE_NM     = A.STORE_CD
                        ),0, 'Y','N') AS STORE_MOD_YN
        <include refid="CmmSQL.PagingTemplateCount"/>
        FROM 	(
                    SELECT 	A.HQ_OFFICE_CD
                    ,		B.HQ_OFFICE_NM
                    ,       ''				AS BRAND_CD
                    ,       ''				AS BRANCH_CD
                    ,		''				AS STORE_CD
                    ,		''				AS STORE_NM
                    ,       B.CLS_FG
                    ,       B.SYS_STAT_FG
                    ,		B.OWNER_NM
                    ,		A.USER_ID
                    ,       A.EMP_NM
                    ,       A.EMP_NO
                    ,		B.TEL_NO
                    ,		A.MP_NO
                    ,       B.AGENCY_CD
                    ,       B.SYS_OPEN_DATE
                    ,       B.SYS_CLOSURE_DATE
                    FROM 	TB_HQ_EMPLOYEE A
                    ,		TB_HQ_OFFICE B
                    WHERE 	A.HQ_OFFICE_CD = B.HQ_OFFICE_CD
                    UNION
                    SELECT 	E.HQ_OFFICE_CD
                    ,		E.HQ_OFFICE_NM
                    ,       D.HQ_BRAND_CD
                    ,       D.BRANCH_CD
                    ,		C.STORE_CD
                    ,		D.STORE_NM
                    ,       D.CLS_FG
                    ,       D.SYS_STAT_FG
                    ,		D.OWNER_NM
                    ,		C.USER_ID
                    ,       C.EMP_NM
                    ,       C.EMP_NO
                    ,		D.TEL_NO
                    ,		C.MP_NO
                    ,       D.AGENCY_CD
                    ,       D.SYS_OPEN_DATE
                    ,       D.SYS_CLOSURE_DATE
                    FROM 	TB_MS_EMPLOYEE C
                    ,		TB_MS_STORE D
                    ,		TB_HQ_OFFICE E
                    WHERE 	C.STORE_CD = D.STORE_CD
                    AND 	E.HQ_OFFICE_CD = D.HQ_OFFICE_CD
                ) A
        ,		TB_CM_AGENCY B
        ,		TB_CM_NMCODE C
        ,		TB_CM_NMCODE D
        WHERE 	A.AGENCY_CD     = B.AGENCY_CD
        AND     A.USER_ID       IS NOT NULL
        AND 	C.NMCODE_CD     = A.CLS_FG
        AND 	C.NMCODE_GRP_CD = '001'
        AND 	D.NMCODE_CD     = A.SYS_STAT_FG
        AND 	D.NMCODE_GRP_CD = '005'
        <if test='orgnFg != null and orgnFg != "H"'>
            <if test='hqOfficeCd != null and hqOfficeCd != ""'>
                <![CDATA[
                AND UPPER(A.HQ_OFFICE_CD) LIKE '%' || UPPER(#{hqOfficeCd}) || '%'
                ]]>
            </if>
        </if>
        <if test='hqOfficeNm != null and hqOfficeNm != ""'>
            <![CDATA[
            AND A.HQ_OFFICE_NM LIKE '%' ||#{hqOfficeNm} || '%'
            ]]>
        </if>
        <if test='storeCd != null and storeCd != ""'>
            AND UPPER(A.STORE_CD) LIKE '%' || UPPER(#{storeCd}) || '%'
        </if>
        <if test='storeNm != null and storeNm != ""'>
            <![CDATA[
            AND A.STORE_NM LIKE '%' ||#{storeNm} || '%'
            ]]>
        </if>
        <if test='userId != null and userId != ""'>
            <![CDATA[
            AND A.USER_ID LIKE '%' ||#{userId} || '%'
            ]]>
        </if>
        <if test='userNm != null and userNm != ""'>
            <![CDATA[
            AND A.EMP_NM LIKE '%' ||#{userNm} || '%'
            ]]>
        </if>
        <if test='clsFg != null and clsFg != ""'>
            AND A.CLS_FG = #{clsFg}
        </if>
        <if test='sysStatFg != null and sysStatFg != ""'>
            AND A.SYS_STAT_FG = #{sysStatFg}
        </if>
        ORDER
        BY 		A.HQ_OFFICE_CD
        ,       A.STORE_CD NULLS FIRST
        , 		A.STORE_CD
        ,		B.AGENCY_CD
        ,       A.EMP_NO
        <include refid="CmmSQL.PagingTemplateBottom"/>
    </select>
</mapper>